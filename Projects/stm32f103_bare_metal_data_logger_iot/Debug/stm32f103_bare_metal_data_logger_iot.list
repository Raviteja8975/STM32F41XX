
stm32f103_bare_metal_data_logger_iot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006bc0  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000bfc  08006cf0  08006cf0  00016cf0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080078ec  080078ec  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  080078ec  080078ec  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080078ec  080078ec  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080078ec  080078ec  000178ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080078f0  080078f0  000178f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  080078f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000006b8  200001d4  08007ac8  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000088c  08007ac8  0002088c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009ba7  00000000  00000000  000201fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d0a  00000000  00000000  00029da4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005c8  00000000  00000000  0002bab0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004f0  00000000  00000000  0002c078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001338d  00000000  00000000  0002c568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000637c  00000000  00000000  0003f8f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005bc1a  00000000  00000000  00045c71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000a188b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002a80  00000000  00000000  000a18e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001d4 	.word	0x200001d4
 800014c:	00000000 	.word	0x00000000
 8000150:	08006cd8 	.word	0x08006cd8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001d8 	.word	0x200001d8
 800016c:	08006cd8 	.word	0x08006cd8

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_d2lz>:
 8000b88:	b538      	push	{r3, r4, r5, lr}
 8000b8a:	460c      	mov	r4, r1
 8000b8c:	4605      	mov	r5, r0
 8000b8e:	4621      	mov	r1, r4
 8000b90:	4628      	mov	r0, r5
 8000b92:	2200      	movs	r2, #0
 8000b94:	2300      	movs	r3, #0
 8000b96:	f7ff ff21 	bl	80009dc <__aeabi_dcmplt>
 8000b9a:	b928      	cbnz	r0, 8000ba8 <__aeabi_d2lz+0x20>
 8000b9c:	4628      	mov	r0, r5
 8000b9e:	4621      	mov	r1, r4
 8000ba0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ba4:	f000 b80a 	b.w	8000bbc <__aeabi_d2ulz>
 8000ba8:	4628      	mov	r0, r5
 8000baa:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000bae:	f000 f805 	bl	8000bbc <__aeabi_d2ulz>
 8000bb2:	4240      	negs	r0, r0
 8000bb4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000bb8:	bd38      	pop	{r3, r4, r5, pc}
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2ulz>:
 8000bbc:	b5d0      	push	{r4, r6, r7, lr}
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	4b0b      	ldr	r3, [pc, #44]	; (8000bf0 <__aeabi_d2ulz+0x34>)
 8000bc2:	4606      	mov	r6, r0
 8000bc4:	460f      	mov	r7, r1
 8000bc6:	f7ff fc97 	bl	80004f8 <__aeabi_dmul>
 8000bca:	f7ff ff6d 	bl	8000aa8 <__aeabi_d2uiz>
 8000bce:	4604      	mov	r4, r0
 8000bd0:	f7ff fc18 	bl	8000404 <__aeabi_ui2d>
 8000bd4:	2200      	movs	r2, #0
 8000bd6:	4b07      	ldr	r3, [pc, #28]	; (8000bf4 <__aeabi_d2ulz+0x38>)
 8000bd8:	f7ff fc8e 	bl	80004f8 <__aeabi_dmul>
 8000bdc:	4602      	mov	r2, r0
 8000bde:	460b      	mov	r3, r1
 8000be0:	4630      	mov	r0, r6
 8000be2:	4639      	mov	r1, r7
 8000be4:	f7ff fad0 	bl	8000188 <__aeabi_dsub>
 8000be8:	f7ff ff5e 	bl	8000aa8 <__aeabi_d2uiz>
 8000bec:	4621      	mov	r1, r4
 8000bee:	bdd0      	pop	{r4, r6, r7, pc}
 8000bf0:	3df00000 	.word	0x3df00000
 8000bf4:	41f00000 	.word	0x41f00000

08000bf8 <__NVIC_GetActive>:
  \return             0  Interrupt status is not active.
  \return             1  Interrupt status is active.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
{
 8000bf8:	b480      	push	{r7}
 8000bfa:	b083      	sub	sp, #12
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	4603      	mov	r3, r0
 8000c00:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	db0e      	blt.n	8000c28 <__NVIC_GetActive+0x30>
  {
    return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
 8000c0a:	4a0a      	ldr	r2, [pc, #40]	; (8000c34 <__NVIC_GetActive+0x3c>)
 8000c0c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c10:	095b      	lsrs	r3, r3, #5
 8000c12:	3380      	adds	r3, #128	; 0x80
 8000c14:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000c18:	79fb      	ldrb	r3, [r7, #7]
 8000c1a:	f003 031f 	and.w	r3, r3, #31
 8000c1e:	fa22 f303 	lsr.w	r3, r2, r3
 8000c22:	f003 0301 	and.w	r3, r3, #1
 8000c26:	e000      	b.n	8000c2a <__NVIC_GetActive+0x32>
  }
  else
  {
    return(0U);
 8000c28:	2300      	movs	r3, #0
  }
}
 8000c2a:	4618      	mov	r0, r3
 8000c2c:	370c      	adds	r7, #12
 8000c2e:	46bd      	mov	sp, r7
 8000c30:	bc80      	pop	{r7}
 8000c32:	4770      	bx	lr
 8000c34:	e000e100 	.word	0xe000e100

08000c38 <USART2_IRQHandler>:
	_Bool gb_RX_Buffer_Overflow_UART2; // This flag is set on USART Receiver // buffer overflow
	char gb_rx_byte;
	char gb_RX_DATA_UART2[gb_RX_BUFFER_SIZE_UART2];

void USART2_IRQHandler(void)
{
 8000c38:	b580      	push	{r7, lr}
 8000c3a:	af00      	add	r7, sp, #0
	//  GB_UART_TxChar2('k');
	  if((__NVIC_GetActive(USART2_IRQn)) == 1)
 8000c3c:	2026      	movs	r0, #38	; 0x26
 8000c3e:	f7ff ffdb 	bl	8000bf8 <__NVIC_GetActive>
 8000c42:	4603      	mov	r3, r0
 8000c44:	2b01      	cmp	r3, #1
 8000c46:	d121      	bne.n	8000c8c <USART2_IRQHandler+0x54>
    //check if we are here because of RXNE interrupt
         if (USART2->SR & USART_SR_RXNE) //if RX is not empty
 8000c48:	4b11      	ldr	r3, [pc, #68]	; (8000c90 <USART2_IRQHandler+0x58>)
 8000c4a:	681b      	ldr	r3, [r3, #0]
 8000c4c:	f003 0320 	and.w	r3, r3, #32
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	d01b      	beq.n	8000c8c <USART2_IRQHandler+0x54>
                {
                      gb_rx_byte = USART2->DR; //fetch the data received
 8000c54:	4b0e      	ldr	r3, [pc, #56]	; (8000c90 <USART2_IRQHandler+0x58>)
 8000c56:	685b      	ldr	r3, [r3, #4]
 8000c58:	b2da      	uxtb	r2, r3
 8000c5a:	4b0e      	ldr	r3, [pc, #56]	; (8000c94 <USART2_IRQHandler+0x5c>)
 8000c5c:	701a      	strb	r2, [r3, #0]
                      gb_Rx_Buffer_UART2[gb_RX_Wr_Index_UART2]= gb_rx_byte;   /* put received char in buffer */
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	; (8000c98 <USART2_IRQHandler+0x60>)
 8000c60:	781b      	ldrb	r3, [r3, #0]
 8000c62:	461a      	mov	r2, r3
 8000c64:	4b0b      	ldr	r3, [pc, #44]	; (8000c94 <USART2_IRQHandler+0x5c>)
 8000c66:	7819      	ldrb	r1, [r3, #0]
 8000c68:	4b0c      	ldr	r3, [pc, #48]	; (8000c9c <USART2_IRQHandler+0x64>)
 8000c6a:	5499      	strb	r1, [r3, r2]
  		              if(++gb_RX_Wr_Index_UART2 > gb_RX_BUFFER_SIZE_UART2)
 8000c6c:	4b0a      	ldr	r3, [pc, #40]	; (8000c98 <USART2_IRQHandler+0x60>)
 8000c6e:	781b      	ldrb	r3, [r3, #0]
 8000c70:	3301      	adds	r3, #1
 8000c72:	b2da      	uxtb	r2, r3
 8000c74:	4b08      	ldr	r3, [pc, #32]	; (8000c98 <USART2_IRQHandler+0x60>)
 8000c76:	701a      	strb	r2, [r3, #0]
  		              gb_RX_Wr_Index_UART2 = 0;
  		              if(++gb_RX_Counter_UART2 > gb_RX_BUFFER_SIZE_UART2) /* keep a character count */
 8000c78:	4b09      	ldr	r3, [pc, #36]	; (8000ca0 <USART2_IRQHandler+0x68>)
 8000c7a:	781b      	ldrb	r3, [r3, #0]
 8000c7c:	3301      	adds	r3, #1
 8000c7e:	b2da      	uxtb	r2, r3
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <USART2_IRQHandler+0x68>)
 8000c82:	701a      	strb	r2, [r3, #0]
  		                   {
  			                    /* overflow check.. */
  			                    gb_RX_Counter_UART2 = gb_RX_BUFFER_SIZE_UART2; /* if too many chars came */
  			                  //  gb_RX_Buffer_Overflow_UART2 = 1;            /* in before they could be used */
  			                }                                          /* that could cause an error!! */
  			          gb_RX_No_of_byte_UART2=gb_RX_Counter_UART2 ;
 8000c84:	4b06      	ldr	r3, [pc, #24]	; (8000ca0 <USART2_IRQHandler+0x68>)
 8000c86:	781a      	ldrb	r2, [r3, #0]
 8000c88:	4b06      	ldr	r3, [pc, #24]	; (8000ca4 <USART2_IRQHandler+0x6c>)
 8000c8a:	701a      	strb	r2, [r3, #0]

  			          //printf("%d",gb_rx_byte);

                 }

}
 8000c8c:	bf00      	nop
 8000c8e:	bd80      	pop	{r7, pc}
 8000c90:	40004400 	.word	0x40004400
 8000c94:	2000080f 	.word	0x2000080f
 8000c98:	200001f0 	.word	0x200001f0
 8000c9c:	20000710 	.word	0x20000710
 8000ca0:	200001f2 	.word	0x200001f2
 8000ca4:	200001f3 	.word	0x200001f3

08000ca8 <GB_getchar_UART2>:


/***********Niche Ring Buffer Functions *****/
/****reading from Interrupted Ring Buffer*/
char  GB_getchar_UART2()             // <--->   Serial.read()
{
 8000ca8:	b480      	push	{r7}
 8000caa:	b083      	sub	sp, #12
 8000cac:	af00      	add	r7, sp, #0
	char gb_c;
	gb_c = gb_Rx_Buffer_UART2[gb_RX_Rd_Index_UART2]; /* get one from the buffer..*/
 8000cae:	4b0e      	ldr	r3, [pc, #56]	; (8000ce8 <GB_getchar_UART2+0x40>)
 8000cb0:	781b      	ldrb	r3, [r3, #0]
 8000cb2:	461a      	mov	r2, r3
 8000cb4:	4b0d      	ldr	r3, [pc, #52]	; (8000cec <GB_getchar_UART2+0x44>)
 8000cb6:	5c9b      	ldrb	r3, [r3, r2]
 8000cb8:	71fb      	strb	r3, [r7, #7]
	if(++gb_RX_Rd_Index_UART2 > gb_RX_BUFFER_SIZE_UART2) /* wrap the pointer */
 8000cba:	4b0b      	ldr	r3, [pc, #44]	; (8000ce8 <GB_getchar_UART2+0x40>)
 8000cbc:	781b      	ldrb	r3, [r3, #0]
 8000cbe:	3301      	adds	r3, #1
 8000cc0:	b2da      	uxtb	r2, r3
 8000cc2:	4b09      	ldr	r3, [pc, #36]	; (8000ce8 <GB_getchar_UART2+0x40>)
 8000cc4:	701a      	strb	r2, [r3, #0]
	gb_RX_Rd_Index_UART2 = 0;
	if(gb_RX_Counter_UART2)
 8000cc6:	4b0a      	ldr	r3, [pc, #40]	; (8000cf0 <GB_getchar_UART2+0x48>)
 8000cc8:	781b      	ldrb	r3, [r3, #0]
 8000cca:	2b00      	cmp	r3, #0
 8000ccc:	d005      	beq.n	8000cda <GB_getchar_UART2+0x32>
	gb_RX_Counter_UART2--; /* keep a count (buffer size) */
 8000cce:	4b08      	ldr	r3, [pc, #32]	; (8000cf0 <GB_getchar_UART2+0x48>)
 8000cd0:	781b      	ldrb	r3, [r3, #0]
 8000cd2:	3b01      	subs	r3, #1
 8000cd4:	b2da      	uxtb	r2, r3
 8000cd6:	4b06      	ldr	r3, [pc, #24]	; (8000cf0 <GB_getchar_UART2+0x48>)
 8000cd8:	701a      	strb	r2, [r3, #0]
	//GB_UART_TxChar1(gb_c);
	return gb_c ;//return char *
 8000cda:	79fb      	ldrb	r3, [r7, #7]
	//printString0("n \n ");
}
 8000cdc:	4618      	mov	r0, r3
 8000cde:	370c      	adds	r7, #12
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bc80      	pop	{r7}
 8000ce4:	4770      	bx	lr
 8000ce6:	bf00      	nop
 8000ce8:	200001f1 	.word	0x200001f1
 8000cec:	20000710 	.word	0x20000710
 8000cf0:	200001f2 	.word	0x200001f2

08000cf4 <GB_search_buffer>:

}


char* GB_search_buffer(const char* gb_search)
{
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	b084      	sub	sp, #16
 8000cf8:	af00      	add	r7, sp, #0
 8000cfa:	6078      	str	r0, [r7, #4]
	char* gb_p;
	int gb_bufferlen = strlen((const char * )gb_RX_DATA_UART2);
 8000cfc:	4808      	ldr	r0, [pc, #32]	; (8000d20 <GB_search_buffer+0x2c>)
 8000cfe:	f7ff fa37 	bl	8000170 <strlen>
 8000d02:	4603      	mov	r3, r0
 8000d04:	60bb      	str	r3, [r7, #8]
	if(gb_bufferlen < gb_RX_BUFFER_SIZE_UART2)
 8000d06:	68bb      	ldr	r3, [r7, #8]
 8000d08:	2bfe      	cmp	r3, #254	; 0xfe
 8000d0a:	dc04      	bgt.n	8000d16 <GB_search_buffer+0x22>
	gb_p= strstr ((const char *)gb_RX_DATA_UART2,gb_search);
 8000d0c:	6879      	ldr	r1, [r7, #4]
 8000d0e:	4804      	ldr	r0, [pc, #16]	; (8000d20 <GB_search_buffer+0x2c>)
 8000d10:	f002 fa68 	bl	80031e4 <strstr>
 8000d14:	60f8      	str	r0, [r7, #12]
	//printString0(p);
	return (gb_p);
 8000d16:	68fb      	ldr	r3, [r7, #12]
}
 8000d18:	4618      	mov	r0, r3
 8000d1a:	3710      	adds	r7, #16
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	bd80      	pop	{r7, pc}
 8000d20:	20000610 	.word	0x20000610

08000d24 <GB_send_command>:
void GB_send_command(const char * gb_command)
{
 8000d24:	b580      	push	{r7, lr}
 8000d26:	b082      	sub	sp, #8
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	6078      	str	r0, [r7, #4]
	GB_printString2(gb_command);
 8000d2c:	6878      	ldr	r0, [r7, #4]
 8000d2e:	f000 fc79 	bl	8001624 <GB_printString2>

}
 8000d32:	bf00      	nop
 8000d34:	3708      	adds	r7, #8
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bd80      	pop	{r7, pc}
	...

08000d3c <GB_RFR_UART2>:

int GB_RFR_UART2(const char * gb_rsp,unsigned int gb_timeout)
{
 8000d3c:	b590      	push	{r4, r7, lr}
 8000d3e:	b085      	sub	sp, #20
 8000d40:	af00      	add	r7, sp, #0
 8000d42:	6078      	str	r0, [r7, #4]
 8000d44:	6039      	str	r1, [r7, #0]
	unsigned long gb_timeIn = GB_millis();	// Timestamp coming into function
 8000d46:	f000 facf 	bl	80012e8 <GB_millis>
 8000d4a:	60b8      	str	r0, [r7, #8]
	uint8_t gb_received = 0;
 8000d4c:	2300      	movs	r3, #0
 8000d4e:	73fb      	strb	r3, [r7, #15]
	memset(gb_RX_DATA_UART2, '\0',gb_RX_BUFFER_SIZE_UART2);
 8000d50:	22ff      	movs	r2, #255	; 0xff
 8000d52:	2100      	movs	r1, #0
 8000d54:	4815      	ldr	r0, [pc, #84]	; (8000dac <GB_RFR_UART2+0x70>)
 8000d56:	f001 fb87 	bl	8002468 <memset>
	//printString0(" Number of characters received : ");
	//decimel0(RX_No_of_byte_UART1);
	//printString0("\n");

	while (GB_millis() - gb_timeIn < gb_timeout) // While we haven't timed out
 8000d5a:	e015      	b.n	8000d88 <GB_RFR_UART2+0x4c>
	{
		//printString0("k\n");
		if(gb_RX_Counter_UART2)
 8000d5c:	4b14      	ldr	r3, [pc, #80]	; (8000db0 <GB_RFR_UART2+0x74>)
 8000d5e:	781b      	ldrb	r3, [r3, #0]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d011      	beq.n	8000d88 <GB_RFR_UART2+0x4c>
		{
			gb_RX_DATA_UART2[gb_received]= GB_getchar_UART2();
 8000d64:	7bfc      	ldrb	r4, [r7, #15]
 8000d66:	f7ff ff9f 	bl	8000ca8 <GB_getchar_UART2>
 8000d6a:	4603      	mov	r3, r0
 8000d6c:	461a      	mov	r2, r3
 8000d6e:	4b0f      	ldr	r3, [pc, #60]	; (8000dac <GB_RFR_UART2+0x70>)
 8000d70:	551a      	strb	r2, [r3, r4]
			//decimel0(received);
			//printString0(" ");
			//UART_TxChar0(RX_DATA_UART1[received]);
			//printString0("\n");
			gb_received++;
 8000d72:	7bfb      	ldrb	r3, [r7, #15]
 8000d74:	3301      	adds	r3, #1
 8000d76:	73fb      	strb	r3, [r7, #15]
			if(GB_search_buffer(gb_rsp)) return 1;
 8000d78:	6878      	ldr	r0, [r7, #4]
 8000d7a:	f7ff ffbb 	bl	8000cf4 <GB_search_buffer>
 8000d7e:	4603      	mov	r3, r0
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d001      	beq.n	8000d88 <GB_RFR_UART2+0x4c>
 8000d84:	2301      	movs	r3, #1
 8000d86:	e00d      	b.n	8000da4 <GB_RFR_UART2+0x68>
	while (GB_millis() - gb_timeIn < gb_timeout) // While we haven't timed out
 8000d88:	f000 faae 	bl	80012e8 <GB_millis>
 8000d8c:	4602      	mov	r2, r0
 8000d8e:	68bb      	ldr	r3, [r7, #8]
 8000d90:	1ad3      	subs	r3, r2, r3
 8000d92:	683a      	ldr	r2, [r7, #0]
 8000d94:	429a      	cmp	r2, r3
 8000d96:	d8e1      	bhi.n	8000d5c <GB_RFR_UART2+0x20>

		}
	}

	//printString0(RX_DATA_UART1);
	if (gb_received > 0) // If we received any characters
 8000d98:	7bfb      	ldrb	r3, [r7, #15]
 8000d9a:	2b00      	cmp	r3, #0
 8000d9c:	d001      	beq.n	8000da2 <GB_RFR_UART2+0x66>
	return 0; // Return unkown response error code
 8000d9e:	2300      	movs	r3, #0
 8000da0:	e000      	b.n	8000da4 <GB_RFR_UART2+0x68>
	else // If we haven't received any characters
	return 2; // Return the timeout error code
 8000da2:	2302      	movs	r3, #2

}
 8000da4:	4618      	mov	r0, r3
 8000da6:	3714      	adds	r7, #20
 8000da8:	46bd      	mov	sp, r7
 8000daa:	bd90      	pop	{r4, r7, pc}
 8000dac:	20000610 	.word	0x20000610
 8000db0:	200001f2 	.word	0x200001f2

08000db4 <GB_esp8266_getmode>:
//Command ESP initialise functions in both client and webserver

int gb_CWMODE=0;

void GB_esp8266_getmode()
{
 8000db4:	b580      	push	{r7, lr}
 8000db6:	b084      	sub	sp, #16
 8000db8:	af00      	add	r7, sp, #0
	GB_send_command("AT+CWMODE?\r\n");
 8000dba:	481a      	ldr	r0, [pc, #104]	; (8000e24 <GB_esp8266_getmode+0x70>)
 8000dbc:	f7ff ffb2 	bl	8000d24 <GB_send_command>
	int gb_rsp = GB_RFR_UART2("OK", 1000);
 8000dc0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000dc4:	4818      	ldr	r0, [pc, #96]	; (8000e28 <GB_esp8266_getmode+0x74>)
 8000dc6:	f7ff ffb9 	bl	8000d3c <GB_RFR_UART2>
 8000dca:	60f8      	str	r0, [r7, #12]
	//printString0(RX_DATA_UART1);
	if(gb_rsp==1)
 8000dcc:	68fb      	ldr	r3, [r7, #12]
 8000dce:	2b01      	cmp	r3, #1
 8000dd0:	d123      	bne.n	8000e1a <GB_esp8266_getmode+0x66>
	{
		//printString0(RX_DATA_UART1);
		//printString0("command is successfully send\n");
		char * gb_p = strchr(gb_RX_DATA_UART2, ':');
 8000dd2:	213a      	movs	r1, #58	; 0x3a
 8000dd4:	4815      	ldr	r0, [pc, #84]	; (8000e2c <GB_esp8266_getmode+0x78>)
 8000dd6:	f002 f9e5 	bl	80031a4 <strchr>
 8000dda:	60b8      	str	r0, [r7, #8]
		if(gb_p!=NULL)
 8000ddc:	68bb      	ldr	r3, [r7, #8]
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d01b      	beq.n	8000e1a <GB_esp8266_getmode+0x66>
		{
			char gb_mode = *(gb_p+1);
 8000de2:	68bb      	ldr	r3, [r7, #8]
 8000de4:	785b      	ldrb	r3, [r3, #1]
 8000de6:	71fb      	strb	r3, [r7, #7]
			gb_CWMODE= gb_mode-48;
 8000de8:	79fb      	ldrb	r3, [r7, #7]
 8000dea:	3b30      	subs	r3, #48	; 0x30
 8000dec:	4a10      	ldr	r2, [pc, #64]	; (8000e30 <GB_esp8266_getmode+0x7c>)
 8000dee:	6013      	str	r3, [r2, #0]
			if(gb_CWMODE==1) GB_printString1("Station mode selected\n");
 8000df0:	4b0f      	ldr	r3, [pc, #60]	; (8000e30 <GB_esp8266_getmode+0x7c>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	2b01      	cmp	r3, #1
 8000df6:	d102      	bne.n	8000dfe <GB_esp8266_getmode+0x4a>
 8000df8:	480e      	ldr	r0, [pc, #56]	; (8000e34 <GB_esp8266_getmode+0x80>)
 8000dfa:	f000 fb0b 	bl	8001414 <GB_printString1>
			if(gb_CWMODE==2) GB_printString1("SoftAP mode selected\n");
 8000dfe:	4b0c      	ldr	r3, [pc, #48]	; (8000e30 <GB_esp8266_getmode+0x7c>)
 8000e00:	681b      	ldr	r3, [r3, #0]
 8000e02:	2b02      	cmp	r3, #2
 8000e04:	d102      	bne.n	8000e0c <GB_esp8266_getmode+0x58>
 8000e06:	480c      	ldr	r0, [pc, #48]	; (8000e38 <GB_esp8266_getmode+0x84>)
 8000e08:	f000 fb04 	bl	8001414 <GB_printString1>
			if(gb_CWMODE==3) GB_printString1("SoftAP+Station mode selected\n");
 8000e0c:	4b08      	ldr	r3, [pc, #32]	; (8000e30 <GB_esp8266_getmode+0x7c>)
 8000e0e:	681b      	ldr	r3, [r3, #0]
 8000e10:	2b03      	cmp	r3, #3
 8000e12:	d102      	bne.n	8000e1a <GB_esp8266_getmode+0x66>
 8000e14:	4809      	ldr	r0, [pc, #36]	; (8000e3c <GB_esp8266_getmode+0x88>)
 8000e16:	f000 fafd 	bl	8001414 <GB_printString1>
	{
		//printString0("Error in receiving command (check the command) or timeout has happened\n");
		//esp8266_rst();
		//GB_printString1(gb_RX_DATA_UART2);
	}
}
 8000e1a:	bf00      	nop
 8000e1c:	3710      	adds	r7, #16
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}
 8000e22:	bf00      	nop
 8000e24:	08006d18 	.word	0x08006d18
 8000e28:	08006d28 	.word	0x08006d28
 8000e2c:	20000610 	.word	0x20000610
 8000e30:	200001f4 	.word	0x200001f4
 8000e34:	08006d2c 	.word	0x08006d2c
 8000e38:	08006d44 	.word	0x08006d44
 8000e3c:	08006d5c 	.word	0x08006d5c

08000e40 <GB_esp8266_connectiontype>:
void GB_esp8266_connectiontype()
{
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b084      	sub	sp, #16
 8000e44:	af00      	add	r7, sp, #0
	GB_send_command("AT+CIPMUX?\r\n");
 8000e46:	4817      	ldr	r0, [pc, #92]	; (8000ea4 <GB_esp8266_connectiontype+0x64>)
 8000e48:	f7ff ff6c 	bl	8000d24 <GB_send_command>
	int gb_rsp = GB_RFR_UART2("OK", 1000);
 8000e4c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000e50:	4815      	ldr	r0, [pc, #84]	; (8000ea8 <GB_esp8266_connectiontype+0x68>)
 8000e52:	f7ff ff73 	bl	8000d3c <GB_RFR_UART2>
 8000e56:	60f8      	str	r0, [r7, #12]
	if(gb_rsp==1)
 8000e58:	68fb      	ldr	r3, [r7, #12]
 8000e5a:	2b01      	cmp	r3, #1
 8000e5c:	d11a      	bne.n	8000e94 <GB_esp8266_connectiontype+0x54>
	{
		// printString0("command is successfully send\n");
		char * gb_p = strchr(gb_RX_DATA_UART2, ':');
 8000e5e:	213a      	movs	r1, #58	; 0x3a
 8000e60:	4812      	ldr	r0, [pc, #72]	; (8000eac <GB_esp8266_connectiontype+0x6c>)
 8000e62:	f002 f99f 	bl	80031a4 <strchr>
 8000e66:	60b8      	str	r0, [r7, #8]
		if(gb_p!=NULL)
 8000e68:	68bb      	ldr	r3, [r7, #8]
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d015      	beq.n	8000e9a <GB_esp8266_connectiontype+0x5a>
		{
			char gb_mode = *(gb_p+1);
 8000e6e:	68bb      	ldr	r3, [r7, #8]
 8000e70:	785b      	ldrb	r3, [r3, #1]
 8000e72:	71fb      	strb	r3, [r7, #7]
			int gb_num = gb_mode-48;
 8000e74:	79fb      	ldrb	r3, [r7, #7]
 8000e76:	3b30      	subs	r3, #48	; 0x30
 8000e78:	603b      	str	r3, [r7, #0]
			if(gb_num==0) GB_printString1("Single connection - configured as client\n");
 8000e7a:	683b      	ldr	r3, [r7, #0]
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d102      	bne.n	8000e86 <GB_esp8266_connectiontype+0x46>
 8000e80:	480b      	ldr	r0, [pc, #44]	; (8000eb0 <GB_esp8266_connectiontype+0x70>)
 8000e82:	f000 fac7 	bl	8001414 <GB_printString1>
			if(gb_num==1) GB_printString1("multiple connection - configured as server\n");
 8000e86:	683b      	ldr	r3, [r7, #0]
 8000e88:	2b01      	cmp	r3, #1
 8000e8a:	d106      	bne.n	8000e9a <GB_esp8266_connectiontype+0x5a>
 8000e8c:	4809      	ldr	r0, [pc, #36]	; (8000eb4 <GB_esp8266_connectiontype+0x74>)
 8000e8e:	f000 fac1 	bl	8001414 <GB_printString1>
	else
	{
		// printString0("Error in receiving response (check the command) or timeout has happened\n");
		GB_printString1(gb_RX_DATA_UART2);
	}
}
 8000e92:	e002      	b.n	8000e9a <GB_esp8266_connectiontype+0x5a>
		GB_printString1(gb_RX_DATA_UART2);
 8000e94:	4805      	ldr	r0, [pc, #20]	; (8000eac <GB_esp8266_connectiontype+0x6c>)
 8000e96:	f000 fabd 	bl	8001414 <GB_printString1>
}
 8000e9a:	bf00      	nop
 8000e9c:	3710      	adds	r7, #16
 8000e9e:	46bd      	mov	sp, r7
 8000ea0:	bd80      	pop	{r7, pc}
 8000ea2:	bf00      	nop
 8000ea4:	08006d7c 	.word	0x08006d7c
 8000ea8:	08006d28 	.word	0x08006d28
 8000eac:	20000610 	.word	0x20000610
 8000eb0:	08006d8c 	.word	0x08006d8c
 8000eb4:	08006db8 	.word	0x08006db8

08000eb8 <GB_esp8266_getAP>:
void GB_esp8266_getAP()
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	b088      	sub	sp, #32
 8000ebc:	af00      	add	r7, sp, #0
	char gb_ssid[20];
	GB_send_command("AT+CWJAP?\r\n");
 8000ebe:	4820      	ldr	r0, [pc, #128]	; (8000f40 <GB_esp8266_getAP+0x88>)
 8000ec0:	f7ff ff30 	bl	8000d24 <GB_send_command>
	int gb_rsp = GB_RFR_UART2("OK", 1000);
 8000ec4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000ec8:	481e      	ldr	r0, [pc, #120]	; (8000f44 <GB_esp8266_getAP+0x8c>)
 8000eca:	f7ff ff37 	bl	8000d3c <GB_RFR_UART2>
 8000ece:	61f8      	str	r0, [r7, #28]
	if(gb_rsp==1)
 8000ed0:	69fb      	ldr	r3, [r7, #28]
 8000ed2:	2b01      	cmp	r3, #1
 8000ed4:	d12d      	bne.n	8000f32 <GB_esp8266_getAP+0x7a>
	{

		if (strstr(gb_RX_DATA_UART2, "No AP") != NULL)   GB_printString1("No AP is connected\n");
 8000ed6:	491c      	ldr	r1, [pc, #112]	; (8000f48 <GB_esp8266_getAP+0x90>)
 8000ed8:	481c      	ldr	r0, [pc, #112]	; (8000f4c <GB_esp8266_getAP+0x94>)
 8000eda:	f002 f983 	bl	80031e4 <strstr>
 8000ede:	4603      	mov	r3, r0
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d002      	beq.n	8000eea <GB_esp8266_getAP+0x32>
 8000ee4:	481a      	ldr	r0, [pc, #104]	; (8000f50 <GB_esp8266_getAP+0x98>)
 8000ee6:	f000 fa95 	bl	8001414 <GB_printString1>
		char * gb_p = strstr(gb_RX_DATA_UART2,"+CWJAP:");
 8000eea:	491a      	ldr	r1, [pc, #104]	; (8000f54 <GB_esp8266_getAP+0x9c>)
 8000eec:	4817      	ldr	r0, [pc, #92]	; (8000f4c <GB_esp8266_getAP+0x94>)
 8000eee:	f002 f979 	bl	80031e4 <strstr>
 8000ef2:	61b8      	str	r0, [r7, #24]
		if(gb_p!=NULL)
 8000ef4:	69bb      	ldr	r3, [r7, #24]
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d01e      	beq.n	8000f38 <GB_esp8266_getAP+0x80>
		{
			gb_p +=  strlen("+CWJAP") +2;
 8000efa:	69bb      	ldr	r3, [r7, #24]
 8000efc:	3308      	adds	r3, #8
 8000efe:	61bb      	str	r3, [r7, #24]
			char * gb_q=strchr(gb_p,'"');
 8000f00:	2122      	movs	r1, #34	; 0x22
 8000f02:	69b8      	ldr	r0, [r7, #24]
 8000f04:	f002 f94e 	bl	80031a4 <strchr>
 8000f08:	6178      	str	r0, [r7, #20]
			strncpy(gb_ssid,gb_p,gb_q-gb_p);
 8000f0a:	697a      	ldr	r2, [r7, #20]
 8000f0c:	69bb      	ldr	r3, [r7, #24]
 8000f0e:	1ad3      	subs	r3, r2, r3
 8000f10:	461a      	mov	r2, r3
 8000f12:	463b      	mov	r3, r7
 8000f14:	69b9      	ldr	r1, [r7, #24]
 8000f16:	4618      	mov	r0, r3
 8000f18:	f002 f951 	bl	80031be <strncpy>
			GB_printString1("Connected to Wifi:");
 8000f1c:	480e      	ldr	r0, [pc, #56]	; (8000f58 <GB_esp8266_getAP+0xa0>)
 8000f1e:	f000 fa79 	bl	8001414 <GB_printString1>
			GB_printString1(gb_ssid);
 8000f22:	463b      	mov	r3, r7
 8000f24:	4618      	mov	r0, r3
 8000f26:	f000 fa75 	bl	8001414 <GB_printString1>
			GB_printString1("\n");
 8000f2a:	480c      	ldr	r0, [pc, #48]	; (8000f5c <GB_esp8266_getAP+0xa4>)
 8000f2c:	f000 fa72 	bl	8001414 <GB_printString1>
	{
		//printString0("Error in receiving response (check the command ) or timeout has happened\n");
		GB_printString1(gb_RX_DATA_UART2);
	}

}
 8000f30:	e002      	b.n	8000f38 <GB_esp8266_getAP+0x80>
		GB_printString1(gb_RX_DATA_UART2);
 8000f32:	4806      	ldr	r0, [pc, #24]	; (8000f4c <GB_esp8266_getAP+0x94>)
 8000f34:	f000 fa6e 	bl	8001414 <GB_printString1>
}
 8000f38:	bf00      	nop
 8000f3a:	3720      	adds	r7, #32
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bd80      	pop	{r7, pc}
 8000f40:	08006de4 	.word	0x08006de4
 8000f44:	08006d28 	.word	0x08006d28
 8000f48:	08006df0 	.word	0x08006df0
 8000f4c:	20000610 	.word	0x20000610
 8000f50:	08006df8 	.word	0x08006df8
 8000f54:	08006e0c 	.word	0x08006e0c
 8000f58:	08006e14 	.word	0x08006e14
 8000f5c:	08006d14 	.word	0x08006d14

08000f60 <GB_esp8266_setAP>:
void GB_esp8266_setAP(const char * gb_ssid, const char * gb_pass)
{
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b090      	sub	sp, #64	; 0x40
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	6078      	str	r0, [r7, #4]
 8000f68:	6039      	str	r1, [r7, #0]
	char gb_setAP[40];
	sprintf(gb_setAP,"AT+CWJAP=\"%s\",\"%s\"\r\n",gb_ssid,gb_pass);
 8000f6a:	f107 0008 	add.w	r0, r7, #8
 8000f6e:	683b      	ldr	r3, [r7, #0]
 8000f70:	687a      	ldr	r2, [r7, #4]
 8000f72:	4929      	ldr	r1, [pc, #164]	; (8001018 <GB_esp8266_setAP+0xb8>)
 8000f74:	f002 f8f6 	bl	8003164 <siprintf>


	GB_send_command(gb_setAP);
 8000f78:	f107 0308 	add.w	r3, r7, #8
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	f7ff fed1 	bl	8000d24 <GB_send_command>
	int gb_rsp = GB_RFR_UART2("OK",16000);
 8000f82:	f44f 517a 	mov.w	r1, #16000	; 0x3e80
 8000f86:	4825      	ldr	r0, [pc, #148]	; (800101c <GB_esp8266_setAP+0xbc>)
 8000f88:	f7ff fed8 	bl	8000d3c <GB_RFR_UART2>
 8000f8c:	63f8      	str	r0, [r7, #60]	; 0x3c


	if(gb_rsp==1)
 8000f8e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000f90:	2b01      	cmp	r3, #1
 8000f92:	d109      	bne.n	8000fa8 <GB_esp8266_setAP+0x48>
	{

		GB_printString1("WiFi is  connected to :");
 8000f94:	4822      	ldr	r0, [pc, #136]	; (8001020 <GB_esp8266_setAP+0xc0>)
 8000f96:	f000 fa3d 	bl	8001414 <GB_printString1>
		GB_printString1(gb_ssid);
 8000f9a:	6878      	ldr	r0, [r7, #4]
 8000f9c:	f000 fa3a 	bl	8001414 <GB_printString1>
		GB_printString1("\n");
 8000fa0:	4820      	ldr	r0, [pc, #128]	; (8001024 <GB_esp8266_setAP+0xc4>)
 8000fa2:	f000 fa37 	bl	8001414 <GB_printString1>
			if(gb_num==2) GB_printString1("Wrong password \n");
			if(gb_num==3) GB_printString1("cannot find the target AP\n");
			if(gb_num==4) GB_printString1("connection failed \n");
		}
	}
}
 8000fa6:	e033      	b.n	8001010 <GB_esp8266_setAP+0xb0>
		GB_printString1("Error in connecting to :");
 8000fa8:	481f      	ldr	r0, [pc, #124]	; (8001028 <GB_esp8266_setAP+0xc8>)
 8000faa:	f000 fa33 	bl	8001414 <GB_printString1>
		GB_printString1(gb_ssid);
 8000fae:	6878      	ldr	r0, [r7, #4]
 8000fb0:	f000 fa30 	bl	8001414 <GB_printString1>
		GB_printString1("\n");
 8000fb4:	481b      	ldr	r0, [pc, #108]	; (8001024 <GB_esp8266_setAP+0xc4>)
 8000fb6:	f000 fa2d 	bl	8001414 <GB_printString1>
		char * gb_p = strstr(gb_RX_DATA_UART2,"+CWJAP:");
 8000fba:	491c      	ldr	r1, [pc, #112]	; (800102c <GB_esp8266_setAP+0xcc>)
 8000fbc:	481c      	ldr	r0, [pc, #112]	; (8001030 <GB_esp8266_setAP+0xd0>)
 8000fbe:	f002 f911 	bl	80031e4 <strstr>
 8000fc2:	63b8      	str	r0, [r7, #56]	; 0x38
		if(gb_p!=NULL)
 8000fc4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	d022      	beq.n	8001010 <GB_esp8266_setAP+0xb0>
			gb_p+= strlen("+CWJAP:");
 8000fca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000fcc:	3307      	adds	r3, #7
 8000fce:	63bb      	str	r3, [r7, #56]	; 0x38
			char gb_error_code = *gb_p;
 8000fd0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000fd2:	781b      	ldrb	r3, [r3, #0]
 8000fd4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
			int gb_num = gb_error_code-48;
 8000fd8:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8000fdc:	3b30      	subs	r3, #48	; 0x30
 8000fde:	633b      	str	r3, [r7, #48]	; 0x30
			if(gb_num==1) GB_printString1("Connection timeout \n");
 8000fe0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000fe2:	2b01      	cmp	r3, #1
 8000fe4:	d102      	bne.n	8000fec <GB_esp8266_setAP+0x8c>
 8000fe6:	4813      	ldr	r0, [pc, #76]	; (8001034 <GB_esp8266_setAP+0xd4>)
 8000fe8:	f000 fa14 	bl	8001414 <GB_printString1>
			if(gb_num==2) GB_printString1("Wrong password \n");
 8000fec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000fee:	2b02      	cmp	r3, #2
 8000ff0:	d102      	bne.n	8000ff8 <GB_esp8266_setAP+0x98>
 8000ff2:	4811      	ldr	r0, [pc, #68]	; (8001038 <GB_esp8266_setAP+0xd8>)
 8000ff4:	f000 fa0e 	bl	8001414 <GB_printString1>
			if(gb_num==3) GB_printString1("cannot find the target AP\n");
 8000ff8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000ffa:	2b03      	cmp	r3, #3
 8000ffc:	d102      	bne.n	8001004 <GB_esp8266_setAP+0xa4>
 8000ffe:	480f      	ldr	r0, [pc, #60]	; (800103c <GB_esp8266_setAP+0xdc>)
 8001000:	f000 fa08 	bl	8001414 <GB_printString1>
			if(gb_num==4) GB_printString1("connection failed \n");
 8001004:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001006:	2b04      	cmp	r3, #4
 8001008:	d102      	bne.n	8001010 <GB_esp8266_setAP+0xb0>
 800100a:	480d      	ldr	r0, [pc, #52]	; (8001040 <GB_esp8266_setAP+0xe0>)
 800100c:	f000 fa02 	bl	8001414 <GB_printString1>
}
 8001010:	bf00      	nop
 8001012:	3740      	adds	r7, #64	; 0x40
 8001014:	46bd      	mov	sp, r7
 8001016:	bd80      	pop	{r7, pc}
 8001018:	08006e28 	.word	0x08006e28
 800101c:	08006d28 	.word	0x08006d28
 8001020:	08006e40 	.word	0x08006e40
 8001024:	08006d14 	.word	0x08006d14
 8001028:	08006e58 	.word	0x08006e58
 800102c:	08006e0c 	.word	0x08006e0c
 8001030:	20000610 	.word	0x20000610
 8001034:	08006e74 	.word	0x08006e74
 8001038:	08006e8c 	.word	0x08006e8c
 800103c:	08006ea0 	.word	0x08006ea0
 8001040:	08006ebc 	.word	0x08006ebc

08001044 <GB_esp8266_initialise_client>:
	int gb_rsp = GB_RFR_UART2("OK",4000);
	if(gb_rsp==1) GB_printString1(gb_RX_DATA_UART2);
}

void GB_esp8266_initialise_client()
	{
 8001044:	b580      	push	{r7, lr}
 8001046:	af00      	add	r7, sp, #0

		GB_esp8266_getmode();
 8001048:	f7ff feb4 	bl	8000db4 <GB_esp8266_getmode>
		GB_esp8266_connectiontype();
 800104c:	f7ff fef8 	bl	8000e40 <GB_esp8266_connectiontype>
		GB_esp8266_setAP("JioFiber 2.4ghz","Mansi5481");
 8001050:	4905      	ldr	r1, [pc, #20]	; (8001068 <GB_esp8266_initialise_client+0x24>)
 8001052:	4806      	ldr	r0, [pc, #24]	; (800106c <GB_esp8266_initialise_client+0x28>)
 8001054:	f7ff ff84 	bl	8000f60 <GB_esp8266_setAP>
		GB_esp8266_getAP();
 8001058:	f7ff ff2e 	bl	8000eb8 <GB_esp8266_getAP>

		GB_printString1("\nSETAP Command\n");
 800105c:	4804      	ldr	r0, [pc, #16]	; (8001070 <GB_esp8266_initialise_client+0x2c>)
 800105e:	f000 f9d9 	bl	8001414 <GB_printString1>
		// esp8266_setAP("KG","12345678");
		//esp8266_disconnect();
		//esp8266_listAP();
		//esp8266_IPadress();
		//esp8266_rst();
	}
 8001062:	bf00      	nop
 8001064:	bd80      	pop	{r7, pc}
 8001066:	bf00      	nop
 8001068:	08007064 	.word	0x08007064
 800106c:	08007070 	.word	0x08007070
 8001070:	08007080 	.word	0x08007080

08001074 <GB_esp8266_connectTCPserver>:
//		//esp8266_rst();
//	}

		//AT+CIPSTART
		void GB_esp8266_connectTCPserver(const char * gb_url,int gb_port)
		{
 8001074:	b580      	push	{r7, lr}
 8001076:	b09c      	sub	sp, #112	; 0x70
 8001078:	af00      	add	r7, sp, #0
 800107a:	6078      	str	r0, [r7, #4]
 800107c:	6039      	str	r1, [r7, #0]
			char gb_buff[100];
			sprintf(gb_buff,"AT+CIPSTART=\"TCP\",\"%s\",%u\r\n",gb_url,gb_port);
 800107e:	f107 0008 	add.w	r0, r7, #8
 8001082:	683b      	ldr	r3, [r7, #0]
 8001084:	687a      	ldr	r2, [r7, #4]
 8001086:	490f      	ldr	r1, [pc, #60]	; (80010c4 <GB_esp8266_connectTCPserver+0x50>)
 8001088:	f002 f86c 	bl	8003164 <siprintf>
			GB_send_command(gb_buff);
 800108c:	f107 0308 	add.w	r3, r7, #8
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff fe47 	bl	8000d24 <GB_send_command>
			int gb_rsp = GB_RFR_UART2("OK", 2000);
 8001096:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800109a:	480b      	ldr	r0, [pc, #44]	; (80010c8 <GB_esp8266_connectTCPserver+0x54>)
 800109c:	f7ff fe4e 	bl	8000d3c <GB_RFR_UART2>
 80010a0:	66f8      	str	r0, [r7, #108]	; 0x6c
			if(gb_rsp==1) GB_printString1("\n Successfully connected to server \n");
 80010a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80010a4:	2b01      	cmp	r3, #1
 80010a6:	d102      	bne.n	80010ae <GB_esp8266_connectTCPserver+0x3a>
 80010a8:	4808      	ldr	r0, [pc, #32]	; (80010cc <GB_esp8266_connectTCPserver+0x58>)
 80010aa:	f000 f9b3 	bl	8001414 <GB_printString1>
			if(gb_rsp==0) GB_printString1("\n Already connected to server \n");
 80010ae:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d102      	bne.n	80010ba <GB_esp8266_connectTCPserver+0x46>
 80010b4:	4806      	ldr	r0, [pc, #24]	; (80010d0 <GB_esp8266_connectTCPserver+0x5c>)
 80010b6:	f000 f9ad 	bl	8001414 <GB_printString1>
		}
 80010ba:	bf00      	nop
 80010bc:	3770      	adds	r7, #112	; 0x70
 80010be:	46bd      	mov	sp, r7
 80010c0:	bd80      	pop	{r7, pc}
 80010c2:	bf00      	nop
 80010c4:	08007090 	.word	0x08007090
 80010c8:	080070ac 	.word	0x080070ac
 80010cc:	080070b0 	.word	0x080070b0
 80010d0:	080070d8 	.word	0x080070d8

080010d4 <GB_esp8266_commandfloat>:
			GB_printString1(gb_get_command);
			GB_printString1("\n");
			return (char * )gb_get_command;
		}
		const char * GB_esp8266_commandfloat(const char * gb_urlpath, float gb_val)
			{
 80010d4:	b580      	push	{r7, lr}
 80010d6:	b084      	sub	sp, #16
 80010d8:	af02      	add	r7, sp, #8
 80010da:	6078      	str	r0, [r7, #4]
 80010dc:	6039      	str	r1, [r7, #0]
				//char get_command[100];
				memset(gb_get_command, '\0',sizeof(gb_get_command));
 80010de:	2264      	movs	r2, #100	; 0x64
 80010e0:	2100      	movs	r1, #0
 80010e2:	480d      	ldr	r0, [pc, #52]	; (8001118 <GB_esp8266_commandfloat+0x44>)
 80010e4:	f001 f9c0 	bl	8002468 <memset>
				sprintf(gb_get_command,"GET %s=%.2f\r\n",gb_urlpath,gb_val);
 80010e8:	6838      	ldr	r0, [r7, #0]
 80010ea:	f7ff f9ad 	bl	8000448 <__aeabi_f2d>
 80010ee:	4602      	mov	r2, r0
 80010f0:	460b      	mov	r3, r1
 80010f2:	e9cd 2300 	strd	r2, r3, [sp]
 80010f6:	687a      	ldr	r2, [r7, #4]
 80010f8:	4908      	ldr	r1, [pc, #32]	; (800111c <GB_esp8266_commandfloat+0x48>)
 80010fa:	4807      	ldr	r0, [pc, #28]	; (8001118 <GB_esp8266_commandfloat+0x44>)
 80010fc:	f002 f832 	bl	8003164 <siprintf>
				GB_printString1(gb_get_command);
 8001100:	4805      	ldr	r0, [pc, #20]	; (8001118 <GB_esp8266_commandfloat+0x44>)
 8001102:	f000 f987 	bl	8001414 <GB_printString1>
				GB_printString1("\n");
 8001106:	4806      	ldr	r0, [pc, #24]	; (8001120 <GB_esp8266_commandfloat+0x4c>)
 8001108:	f000 f984 	bl	8001414 <GB_printString1>
				return (char * )gb_get_command;
 800110c:	4b02      	ldr	r3, [pc, #8]	; (8001118 <GB_esp8266_commandfloat+0x44>)
			}
 800110e:	4618      	mov	r0, r3
 8001110:	3708      	adds	r7, #8
 8001112:	46bd      	mov	sp, r7
 8001114:	bd80      	pop	{r7, pc}
 8001116:	bf00      	nop
 8001118:	20000810 	.word	0x20000810
 800111c:	08007114 	.word	0x08007114
 8001120:	08007110 	.word	0x08007110

08001124 <GB_esp8266_cipsendfloat>:
			GB_printString1( gb_RX_DATA_UART2);

		}

		void GB_esp8266_cipsendfloat(float  gb_val, const char *  gb_urlpath)
		{
 8001124:	b580      	push	{r7, lr}
 8001126:	b088      	sub	sp, #32
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	6039      	str	r1, [r7, #0]

			char  gb_send[15];
			int  gb_get_command_length = strlen(GB_esp8266_commandfloat( gb_urlpath,gb_val));
 800112e:	6879      	ldr	r1, [r7, #4]
 8001130:	6838      	ldr	r0, [r7, #0]
 8001132:	f7ff ffcf 	bl	80010d4 <GB_esp8266_commandfloat>
 8001136:	4603      	mov	r3, r0
 8001138:	4618      	mov	r0, r3
 800113a:	f7ff f819 	bl	8000170 <strlen>
 800113e:	4603      	mov	r3, r0
 8001140:	61fb      	str	r3, [r7, #28]
			//decimel0(strlen(esp8266_command(urlpath,senseval)));
			//printString0("\n");
			//printString0(esp8266_command(urlpath));
			//printString0("\n");
			sprintf(gb_send,"AT+CIPSEND=%u\r\n",gb_get_command_length);
 8001142:	f107 030c 	add.w	r3, r7, #12
 8001146:	69fa      	ldr	r2, [r7, #28]
 8001148:	4907      	ldr	r1, [pc, #28]	; (8001168 <GB_esp8266_cipsendfloat+0x44>)
 800114a:	4618      	mov	r0, r3
 800114c:	f002 f80a 	bl	8003164 <siprintf>
			GB_send_command(gb_send);
 8001150:	f107 030c 	add.w	r3, r7, #12
 8001154:	4618      	mov	r0, r3
 8001156:	f7ff fde5 	bl	8000d24 <GB_send_command>
			//printString0(send);
		//	int gb_rsp = GB_RFR_UART2(">",2000);
			//if (rsp==1) printString0(RX_DATA_UART1);
			GB_printString1(gb_RX_DATA_UART2);
 800115a:	4804      	ldr	r0, [pc, #16]	; (800116c <GB_esp8266_cipsendfloat+0x48>)
 800115c:	f000 f95a 	bl	8001414 <GB_printString1>

		}
 8001160:	bf00      	nop
 8001162:	3720      	adds	r7, #32
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	08007130 	.word	0x08007130
 800116c:	20000610 	.word	0x20000610

08001170 <GB_esp8266_tcpgetcommandfloat>:
			GB_printString1("\n");
			delay_ms(100);
			GB_printString1(gb_RX_DATA_UART2);
		}//GET COMMAND
		void GB_esp8266_tcpgetcommandfloat(const char * gb_urlpath, float gb_val)   //when field has to be updated like updating the sendor value.
				{    char gb_buff[100];
 8001170:	b580      	push	{r7, lr}
 8001172:	b09e      	sub	sp, #120	; 0x78
 8001174:	af02      	add	r7, sp, #8
 8001176:	6078      	str	r0, [r7, #4]
 8001178:	6039      	str	r1, [r7, #0]
					memset(gb_buff, '\0',sizeof(gb_buff));
 800117a:	f107 030c 	add.w	r3, r7, #12
 800117e:	2264      	movs	r2, #100	; 0x64
 8001180:	2100      	movs	r1, #0
 8001182:	4618      	mov	r0, r3
 8001184:	f001 f970 	bl	8002468 <memset>
					sprintf(gb_buff,"GET %s=%.2f\r\n",gb_urlpath,gb_val);
 8001188:	6838      	ldr	r0, [r7, #0]
 800118a:	f7ff f95d 	bl	8000448 <__aeabi_f2d>
 800118e:	4602      	mov	r2, r0
 8001190:	460b      	mov	r3, r1
 8001192:	f107 000c 	add.w	r0, r7, #12
 8001196:	e9cd 2300 	strd	r2, r3, [sp]
 800119a:	687a      	ldr	r2, [r7, #4]
 800119c:	490f      	ldr	r1, [pc, #60]	; (80011dc <GB_esp8266_tcpgetcommandfloat+0x6c>)
 800119e:	f001 ffe1 	bl	8003164 <siprintf>
					GB_printString1(gb_buff);
 80011a2:	f107 030c 	add.w	r3, r7, #12
 80011a6:	4618      	mov	r0, r3
 80011a8:	f000 f934 	bl	8001414 <GB_printString1>
					GB_send_command(gb_buff);
 80011ac:	f107 030c 	add.w	r3, r7, #12
 80011b0:	4618      	mov	r0, r3
 80011b2:	f7ff fdb7 	bl	8000d24 <GB_send_command>
					GB_RFR_UART2("CLOSE", 2000);
 80011b6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80011ba:	4809      	ldr	r0, [pc, #36]	; (80011e0 <GB_esp8266_tcpgetcommandfloat+0x70>)
 80011bc:	f7ff fdbe 	bl	8000d3c <GB_RFR_UART2>
					GB_printString1("\n");
 80011c0:	4808      	ldr	r0, [pc, #32]	; (80011e4 <GB_esp8266_tcpgetcommandfloat+0x74>)
 80011c2:	f000 f927 	bl	8001414 <GB_printString1>
					delay_ms(100);
 80011c6:	2064      	movs	r0, #100	; 0x64
 80011c8:	f000 ff28 	bl	800201c <delay_ms>
					GB_printString1(gb_RX_DATA_UART2);
 80011cc:	4806      	ldr	r0, [pc, #24]	; (80011e8 <GB_esp8266_tcpgetcommandfloat+0x78>)
 80011ce:	f000 f921 	bl	8001414 <GB_printString1>
				}
 80011d2:	bf00      	nop
 80011d4:	3770      	adds	r7, #112	; 0x70
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bd80      	pop	{r7, pc}
 80011da:	bf00      	nop
 80011dc:	08007114 	.word	0x08007114
 80011e0:	08007140 	.word	0x08007140
 80011e4:	08007110 	.word	0x08007110
 80011e8:	20000610 	.word	0x20000610

080011ec <__NVIC_SetPriorityGrouping>:
{
 80011ec:	b480      	push	{r7}
 80011ee:	b085      	sub	sp, #20
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	f003 0307 	and.w	r3, r3, #7
 80011fa:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80011fc:	4b0c      	ldr	r3, [pc, #48]	; (8001230 <__NVIC_SetPriorityGrouping+0x44>)
 80011fe:	68db      	ldr	r3, [r3, #12]
 8001200:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001202:	68ba      	ldr	r2, [r7, #8]
 8001204:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001208:	4013      	ands	r3, r2
 800120a:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 800120c:	68fb      	ldr	r3, [r7, #12]
 800120e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001210:	68bb      	ldr	r3, [r7, #8]
 8001212:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001214:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001218:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800121c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800121e:	4a04      	ldr	r2, [pc, #16]	; (8001230 <__NVIC_SetPriorityGrouping+0x44>)
 8001220:	68bb      	ldr	r3, [r7, #8]
 8001222:	60d3      	str	r3, [r2, #12]
}
 8001224:	bf00      	nop
 8001226:	3714      	adds	r7, #20
 8001228:	46bd      	mov	sp, r7
 800122a:	bc80      	pop	{r7}
 800122c:	4770      	bx	lr
 800122e:	bf00      	nop
 8001230:	e000ed00 	.word	0xe000ed00

08001234 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001234:	b480      	push	{r7}
 8001236:	b083      	sub	sp, #12
 8001238:	af00      	add	r7, sp, #0
 800123a:	4603      	mov	r3, r0
 800123c:	6039      	str	r1, [r7, #0]
 800123e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001240:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001244:	2b00      	cmp	r3, #0
 8001246:	db0a      	blt.n	800125e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001248:	683b      	ldr	r3, [r7, #0]
 800124a:	b2da      	uxtb	r2, r3
 800124c:	490c      	ldr	r1, [pc, #48]	; (8001280 <__NVIC_SetPriority+0x4c>)
 800124e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001252:	0112      	lsls	r2, r2, #4
 8001254:	b2d2      	uxtb	r2, r2
 8001256:	440b      	add	r3, r1
 8001258:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800125c:	e00a      	b.n	8001274 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800125e:	683b      	ldr	r3, [r7, #0]
 8001260:	b2da      	uxtb	r2, r3
 8001262:	4908      	ldr	r1, [pc, #32]	; (8001284 <__NVIC_SetPriority+0x50>)
 8001264:	79fb      	ldrb	r3, [r7, #7]
 8001266:	f003 030f 	and.w	r3, r3, #15
 800126a:	3b04      	subs	r3, #4
 800126c:	0112      	lsls	r2, r2, #4
 800126e:	b2d2      	uxtb	r2, r2
 8001270:	440b      	add	r3, r1
 8001272:	761a      	strb	r2, [r3, #24]
}
 8001274:	bf00      	nop
 8001276:	370c      	adds	r7, #12
 8001278:	46bd      	mov	sp, r7
 800127a:	bc80      	pop	{r7}
 800127c:	4770      	bx	lr
 800127e:	bf00      	nop
 8001280:	e000e100 	.word	0xe000e100
 8001284:	e000ed00 	.word	0xe000ed00

08001288 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001288:	b580      	push	{r7, lr}
 800128a:	b082      	sub	sp, #8
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	3b01      	subs	r3, #1
 8001294:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001298:	d301      	bcc.n	800129e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800129a:	2301      	movs	r3, #1
 800129c:	e00f      	b.n	80012be <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800129e:	4a0a      	ldr	r2, [pc, #40]	; (80012c8 <SysTick_Config+0x40>)
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	3b01      	subs	r3, #1
 80012a4:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80012a6:	210f      	movs	r1, #15
 80012a8:	f04f 30ff 	mov.w	r0, #4294967295
 80012ac:	f7ff ffc2 	bl	8001234 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80012b0:	4b05      	ldr	r3, [pc, #20]	; (80012c8 <SysTick_Config+0x40>)
 80012b2:	2200      	movs	r2, #0
 80012b4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80012b6:	4b04      	ldr	r3, [pc, #16]	; (80012c8 <SysTick_Config+0x40>)
 80012b8:	2207      	movs	r2, #7
 80012ba:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80012bc:	2300      	movs	r3, #0
}
 80012be:	4618      	mov	r0, r3
 80012c0:	3708      	adds	r7, #8
 80012c2:	46bd      	mov	sp, r7
 80012c4:	bd80      	pop	{r7, pc}
 80012c6:	bf00      	nop
 80012c8:	e000e010 	.word	0xe000e010

080012cc <SysTick_Handler>:
//variable for millis counter
volatile uint32_t GB_counter;


void SysTick_Handler(void)
{
 80012cc:	b480      	push	{r7}
 80012ce:	af00      	add	r7, sp, #0
	//GB_printString1("gup\n");
  GB_counter++;    // equivalent to HAL_IncTick(void)
 80012d0:	4b04      	ldr	r3, [pc, #16]	; (80012e4 <SysTick_Handler+0x18>)
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	3301      	adds	r3, #1
 80012d6:	4a03      	ldr	r2, [pc, #12]	; (80012e4 <SysTick_Handler+0x18>)
 80012d8:	6013      	str	r3, [r2, #0]
}
 80012da:	bf00      	nop
 80012dc:	46bd      	mov	sp, r7
 80012de:	bc80      	pop	{r7}
 80012e0:	4770      	bx	lr
 80012e2:	bf00      	nop
 80012e4:	20000874 	.word	0x20000874

080012e8 <GB_millis>:


//equivalent to  HAL_GetTick(void)
uint32_t GB_millis()
{
 80012e8:	b480      	push	{r7}
 80012ea:	af00      	add	r7, sp, #0
	//GB_printString1("kun\n");
  return GB_counter;
 80012ec:	4b02      	ldr	r3, [pc, #8]	; (80012f8 <GB_millis+0x10>)
 80012ee:	681b      	ldr	r3, [r3, #0]
}
 80012f0:	4618      	mov	r0, r3
 80012f2:	46bd      	mov	sp, r7
 80012f4:	bc80      	pop	{r7}
 80012f6:	4770      	bx	lr
 80012f8:	20000874 	.word	0x20000874

080012fc <systick_millis>:

void systick_millis(uint32_t clk_val)
{
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b082      	sub	sp, #8
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
	FLASH->ACR |= FLASH_ACR_PRFTBE|FLASH_ACR_LATENCY_1;
 8001304:	4b0a      	ldr	r3, [pc, #40]	; (8001330 <systick_millis+0x34>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	4a09      	ldr	r2, [pc, #36]	; (8001330 <systick_millis+0x34>)
 800130a:	f043 0312 	orr.w	r3, r3, #18
 800130e:	6013      	str	r3, [r2, #0]
	NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001310:	2003      	movs	r0, #3
 8001312:	f7ff ff6b 	bl	80011ec <__NVIC_SetPriorityGrouping>
	SysTick_Config(clk_val);
 8001316:	6878      	ldr	r0, [r7, #4]
 8001318:	f7ff ffb6 	bl	8001288 <SysTick_Config>
	NVIC_SetPriority(SysTick_IRQn,0);
 800131c:	2100      	movs	r1, #0
 800131e:	f04f 30ff 	mov.w	r0, #4294967295
 8001322:	f7ff ff87 	bl	8001234 <__NVIC_SetPriority>

}
 8001326:	bf00      	nop
 8001328:	3708      	adds	r7, #8
 800132a:	46bd      	mov	sp, r7
 800132c:	bd80      	pop	{r7, pc}
 800132e:	bf00      	nop
 8001330:	40022000 	.word	0x40022000

08001334 <GB_uart_pin_conf1>:
#include <string.h>
#include "stdio.h"
/**************STM32 UART1 ******************/
//PA10- RX, PA9-TX
void GB_uart_pin_conf1()
{
 8001334:	b480      	push	{r7}
 8001336:	af00      	add	r7, sp, #0
	// enable bus clock
	 RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001338:	4b10      	ldr	r3, [pc, #64]	; (800137c <GB_uart_pin_conf1+0x48>)
 800133a:	699b      	ldr	r3, [r3, #24]
 800133c:	4a0f      	ldr	r2, [pc, #60]	; (800137c <GB_uart_pin_conf1+0x48>)
 800133e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001342:	6193      	str	r3, [r2, #24]
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001344:	4b0d      	ldr	r3, [pc, #52]	; (800137c <GB_uart_pin_conf1+0x48>)
 8001346:	699b      	ldr	r3, [r3, #24]
 8001348:	4a0c      	ldr	r2, [pc, #48]	; (800137c <GB_uart_pin_conf1+0x48>)
 800134a:	f043 0304 	orr.w	r3, r3, #4
 800134e:	6193      	str	r3, [r2, #24]

     //TX pin as alternate push pull
	 /* PA9 as output*/
	 GPIOA->CRH |= (GPIO_CRH_MODE9_1 | GPIO_CRH_MODE9_0);
 8001350:	4b0b      	ldr	r3, [pc, #44]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 8001352:	685b      	ldr	r3, [r3, #4]
 8001354:	4a0a      	ldr	r2, [pc, #40]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 8001356:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 800135a:	6053      	str	r3, [r2, #4]
	 GPIOA->CRH |= (GPIO_CRH_CNF9_1);
 800135c:	4b08      	ldr	r3, [pc, #32]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 800135e:	685b      	ldr	r3, [r3, #4]
 8001360:	4a07      	ldr	r2, [pc, #28]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 8001362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001366:	6053      	str	r3, [r2, #4]
	 GPIOA->CRH &= ~(GPIO_CRH_CNF9_0);
 8001368:	4b05      	ldr	r3, [pc, #20]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	4a04      	ldr	r2, [pc, #16]	; (8001380 <GB_uart_pin_conf1+0x4c>)
 800136e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001372:	6053      	str	r3, [r2, #4]
	 /*
	   * PIN PA10 is the RX pin and it has to be set to input &FLOATING
	   * this is the rest value of the pin so we dont do anything to it
	   *
	   * */
}
 8001374:	bf00      	nop
 8001376:	46bd      	mov	sp, r7
 8001378:	bc80      	pop	{r7}
 800137a:	4770      	bx	lr
 800137c:	40021000 	.word	0x40021000
 8001380:	40010800 	.word	0x40010800

08001384 <GB_uart_boud_rate1>:

void GB_uart_boud_rate1()
{
 8001384:	b480      	push	{r7}
 8001386:	af00      	add	r7, sp, #0
	//DIV_Fraction = 0.36*16 = 0d5.76 = 0d6 (Nearest Whole number) = 0x6
	//DIV_Mantissa = 0d17 = 0x11
	//USART2->BRR =  ( ( uartdiv / 16 ) << USART_BRR_DIV_Mantissa_Pos );
	//USART2->BRR =  ( ( uartdiv % 16 ) << USART_BRR_DIV_Fraction_Pos ) ;
    // USART1->BRR = 0x116;
	USART1->BRR = 0xd05;
 8001388:	4b03      	ldr	r3, [pc, #12]	; (8001398 <GB_uart_boud_rate1+0x14>)
 800138a:	f640 5205 	movw	r2, #3333	; 0xd05
 800138e:	609a      	str	r2, [r3, #8]

}
 8001390:	bf00      	nop
 8001392:	46bd      	mov	sp, r7
 8001394:	bc80      	pop	{r7}
 8001396:	4770      	bx	lr
 8001398:	40013800 	.word	0x40013800

0800139c <GB_uart_init1>:
void GB_uart_init1()
{
 800139c:	b580      	push	{r7, lr}
 800139e:	af00      	add	r7, sp, #0

	GB_uart_pin_conf1();
 80013a0:	f7ff ffc8 	bl	8001334 <GB_uart_pin_conf1>
	//Alternate pin register
	/* no remap rx tx pins, for UART at pa2(tx) and pa3(rx)*/
    USART1->CR1 = 0x0000;
 80013a4:	4b0f      	ldr	r3, [pc, #60]	; (80013e4 <GB_uart_init1+0x48>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	60da      	str	r2, [r3, #12]
	//enable UART and configure stop byte
	USART1->CR1 |= USART_CR1_UE;
 80013aa:	4b0e      	ldr	r3, [pc, #56]	; (80013e4 <GB_uart_init1+0x48>)
 80013ac:	68db      	ldr	r3, [r3, #12]
 80013ae:	4a0d      	ldr	r2, [pc, #52]	; (80013e4 <GB_uart_init1+0x48>)
 80013b0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80013b4:	60d3      	str	r3, [r2, #12]
	USART1->CR1 &= ~USART_CR1_M;
 80013b6:	4b0b      	ldr	r3, [pc, #44]	; (80013e4 <GB_uart_init1+0x48>)
 80013b8:	68db      	ldr	r3, [r3, #12]
 80013ba:	4a0a      	ldr	r2, [pc, #40]	; (80013e4 <GB_uart_init1+0x48>)
 80013bc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013c0:	60d3      	str	r3, [r2, #12]

	 //enable RXNE interrupts on USART SIDE
	//USART1->CR1 |= USART_CR1_RXNEIE;

	//enable transmitter
	USART1->CR1 |= USART_CR1_TE;
 80013c2:	4b08      	ldr	r3, [pc, #32]	; (80013e4 <GB_uart_init1+0x48>)
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	4a07      	ldr	r2, [pc, #28]	; (80013e4 <GB_uart_init1+0x48>)
 80013c8:	f043 0308 	orr.w	r3, r3, #8
 80013cc:	60d3      	str	r3, [r2, #12]
	//enable receiver
	USART1->CR1 |= USART_CR1_RE;
 80013ce:	4b05      	ldr	r3, [pc, #20]	; (80013e4 <GB_uart_init1+0x48>)
 80013d0:	68db      	ldr	r3, [r3, #12]
 80013d2:	4a04      	ldr	r2, [pc, #16]	; (80013e4 <GB_uart_init1+0x48>)
 80013d4:	f043 0304 	orr.w	r3, r3, #4
 80013d8:	60d3      	str	r3, [r2, #12]


    GB_uart_boud_rate1();
 80013da:	f7ff ffd3 	bl	8001384 <GB_uart_boud_rate1>


}
 80013de:	bf00      	nop
 80013e0:	bd80      	pop	{r7, pc}
 80013e2:	bf00      	nop
 80013e4:	40013800 	.word	0x40013800

080013e8 <GB_UART_TxChar1>:
void GB_UART_TxChar1(uint32_t gb_byte)
{
 80013e8:	b480      	push	{r7}
 80013ea:	b083      	sub	sp, #12
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
	while(!(USART1->SR & USART_SR_TXE));
 80013f0:	bf00      	nop
 80013f2:	4b07      	ldr	r3, [pc, #28]	; (8001410 <GB_UART_TxChar1+0x28>)
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d0f9      	beq.n	80013f2 <GB_UART_TxChar1+0xa>
	USART1->DR = gb_byte;
 80013fe:	4a04      	ldr	r2, [pc, #16]	; (8001410 <GB_UART_TxChar1+0x28>)
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	6053      	str	r3, [r2, #4]

}
 8001404:	bf00      	nop
 8001406:	370c      	adds	r7, #12
 8001408:	46bd      	mov	sp, r7
 800140a:	bc80      	pop	{r7}
 800140c:	4770      	bx	lr
 800140e:	bf00      	nop
 8001410:	40013800 	.word	0x40013800

08001414 <GB_printString1>:
{
	while(!(USART2->SR & USART_SR_RXNE));
	return USART2->DR;
}
void GB_printString1(const char *gb_myString)      /////to print any string
{
 8001414:	b580      	push	{r7, lr}
 8001416:	b082      	sub	sp, #8
 8001418:	af00      	add	r7, sp, #0
 800141a:	6078      	str	r0, [r7, #4]
	while (*gb_myString)
 800141c:	e006      	b.n	800142c <GB_printString1+0x18>
	GB_UART_TxChar1(*gb_myString++);
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	1c5a      	adds	r2, r3, #1
 8001422:	607a      	str	r2, [r7, #4]
 8001424:	781b      	ldrb	r3, [r3, #0]
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff ffde 	bl	80013e8 <GB_UART_TxChar1>
	while (*gb_myString)
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	781b      	ldrb	r3, [r3, #0]
 8001430:	2b00      	cmp	r3, #0
 8001432:	d1f4      	bne.n	800141e <GB_printString1+0xa>
	while(!(USART1->SR & USART_SR_TC));
 8001434:	bf00      	nop
 8001436:	4b05      	ldr	r3, [pc, #20]	; (800144c <GB_printString1+0x38>)
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800143e:	2b00      	cmp	r3, #0
 8001440:	d0f9      	beq.n	8001436 <GB_printString1+0x22>

}
 8001442:	bf00      	nop
 8001444:	bf00      	nop
 8001446:	3708      	adds	r7, #8
 8001448:	46bd      	mov	sp, r7
 800144a:	bd80      	pop	{r7, pc}
 800144c:	40013800 	.word	0x40013800

08001450 <GB_decimel1>:
			GB_UART_TxChar1('1');
		}
	}
}
void GB_decimel1(uint32_t gb_val)
{
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
	unsigned char gb_buf[5];
	int8_t gb_ptr;
	for(gb_ptr=0;gb_ptr<5;++gb_ptr)
 8001458:	2300      	movs	r3, #0
 800145a:	73fb      	strb	r3, [r7, #15]
 800145c:	e01d      	b.n	800149a <GB_decimel1+0x4a>
	{
		gb_buf[gb_ptr] = (gb_val % 10) + '0';
 800145e:	6879      	ldr	r1, [r7, #4]
 8001460:	4b27      	ldr	r3, [pc, #156]	; (8001500 <GB_decimel1+0xb0>)
 8001462:	fba3 2301 	umull	r2, r3, r3, r1
 8001466:	08da      	lsrs	r2, r3, #3
 8001468:	4613      	mov	r3, r2
 800146a:	009b      	lsls	r3, r3, #2
 800146c:	4413      	add	r3, r2
 800146e:	005b      	lsls	r3, r3, #1
 8001470:	1aca      	subs	r2, r1, r3
 8001472:	b2d2      	uxtb	r2, r2
 8001474:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001478:	3230      	adds	r2, #48	; 0x30
 800147a:	b2d2      	uxtb	r2, r2
 800147c:	f107 0110 	add.w	r1, r7, #16
 8001480:	440b      	add	r3, r1
 8001482:	f803 2c08 	strb.w	r2, [r3, #-8]
		gb_val /= 10;
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	4a1d      	ldr	r2, [pc, #116]	; (8001500 <GB_decimel1+0xb0>)
 800148a:	fba2 2303 	umull	r2, r3, r2, r3
 800148e:	08db      	lsrs	r3, r3, #3
 8001490:	607b      	str	r3, [r7, #4]
	for(gb_ptr=0;gb_ptr<5;++gb_ptr)
 8001492:	7bfb      	ldrb	r3, [r7, #15]
 8001494:	3301      	adds	r3, #1
 8001496:	b2db      	uxtb	r3, r3
 8001498:	73fb      	strb	r3, [r7, #15]
 800149a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800149e:	2b04      	cmp	r3, #4
 80014a0:	dddd      	ble.n	800145e <GB_decimel1+0xe>
	}
	for(gb_ptr=4;gb_ptr>0;--gb_ptr)
 80014a2:	2304      	movs	r3, #4
 80014a4:	73fb      	strb	r3, [r7, #15]
 80014a6:	e00c      	b.n	80014c2 <GB_decimel1+0x72>
	{
		if (gb_buf[gb_ptr] != '0')
 80014a8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014ac:	f107 0210 	add.w	r2, r7, #16
 80014b0:	4413      	add	r3, r2
 80014b2:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80014b6:	2b30      	cmp	r3, #48	; 0x30
 80014b8:	d108      	bne.n	80014cc <GB_decimel1+0x7c>
	for(gb_ptr=4;gb_ptr>0;--gb_ptr)
 80014ba:	7bfb      	ldrb	r3, [r7, #15]
 80014bc:	3b01      	subs	r3, #1
 80014be:	b2db      	uxtb	r3, r3
 80014c0:	73fb      	strb	r3, [r7, #15]
 80014c2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	dcee      	bgt.n	80014a8 <GB_decimel1+0x58>
 80014ca:	e00f      	b.n	80014ec <GB_decimel1+0x9c>
		break;
 80014cc:	bf00      	nop
	}
	for(;gb_ptr>=0;--gb_ptr)
 80014ce:	e00d      	b.n	80014ec <GB_decimel1+0x9c>
	{
		GB_UART_TxChar1(gb_buf[gb_ptr]);
 80014d0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014d4:	f107 0210 	add.w	r2, r7, #16
 80014d8:	4413      	add	r3, r2
 80014da:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80014de:	4618      	mov	r0, r3
 80014e0:	f7ff ff82 	bl	80013e8 <GB_UART_TxChar1>
	for(;gb_ptr>=0;--gb_ptr)
 80014e4:	7bfb      	ldrb	r3, [r7, #15]
 80014e6:	3b01      	subs	r3, #1
 80014e8:	b2db      	uxtb	r3, r3
 80014ea:	73fb      	strb	r3, [r7, #15]
 80014ec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	daed      	bge.n	80014d0 <GB_decimel1+0x80>
	}
}
 80014f4:	bf00      	nop
 80014f6:	bf00      	nop
 80014f8:	3710      	adds	r7, #16
 80014fa:	46bd      	mov	sp, r7
 80014fc:	bd80      	pop	{r7, pc}
 80014fe:	bf00      	nop
 8001500:	cccccccd 	.word	0xcccccccd

08001504 <GB_float_value1>:

	}
	while(!(USART1->SR & USART_SR_RXNE));
}
void GB_float_value1(float gb_value)
{
 8001504:	b580      	push	{r7, lr}
 8001506:	b086      	sub	sp, #24
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
	char gb_float_buff[10];
	sprintf(gb_float_buff,"%f",gb_value);
 800150c:	6878      	ldr	r0, [r7, #4]
 800150e:	f7fe ff9b 	bl	8000448 <__aeabi_f2d>
 8001512:	4602      	mov	r2, r0
 8001514:	460b      	mov	r3, r1
 8001516:	f107 000c 	add.w	r0, r7, #12
 800151a:	4906      	ldr	r1, [pc, #24]	; (8001534 <GB_float_value1+0x30>)
 800151c:	f001 fe22 	bl	8003164 <siprintf>
	GB_printString1(gb_float_buff);
 8001520:	f107 030c 	add.w	r3, r7, #12
 8001524:	4618      	mov	r0, r3
 8001526:	f7ff ff75 	bl	8001414 <GB_printString1>

}
 800152a:	bf00      	nop
 800152c:	3718      	adds	r7, #24
 800152e:	46bd      	mov	sp, r7
 8001530:	bd80      	pop	{r7, pc}
 8001532:	bf00      	nop
 8001534:	08007148 	.word	0x08007148

08001538 <GB_uart_pin_conf2>:


//************************STM32- UART2 functions*******************//
//PA3- RX, PA2-TX
void GB_uart_pin_conf2()
{
 8001538:	b480      	push	{r7}
 800153a:	af00      	add	r7, sp, #0
	// enable bus clock
	 RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 800153c:	4b10      	ldr	r3, [pc, #64]	; (8001580 <GB_uart_pin_conf2+0x48>)
 800153e:	69db      	ldr	r3, [r3, #28]
 8001540:	4a0f      	ldr	r2, [pc, #60]	; (8001580 <GB_uart_pin_conf2+0x48>)
 8001542:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001546:	61d3      	str	r3, [r2, #28]
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001548:	4b0d      	ldr	r3, [pc, #52]	; (8001580 <GB_uart_pin_conf2+0x48>)
 800154a:	699b      	ldr	r3, [r3, #24]
 800154c:	4a0c      	ldr	r2, [pc, #48]	; (8001580 <GB_uart_pin_conf2+0x48>)
 800154e:	f043 0304 	orr.w	r3, r3, #4
 8001552:	6193      	str	r3, [r2, #24]

     //TX pin as alternate push pull
	 /* PA2 as output*/
	 GPIOA->CRL |= (GPIO_CRL_MODE2_1 | GPIO_CRL_MODE2_0);
 8001554:	4b0b      	ldr	r3, [pc, #44]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 8001556:	681b      	ldr	r3, [r3, #0]
 8001558:	4a0a      	ldr	r2, [pc, #40]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 800155a:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800155e:	6013      	str	r3, [r2, #0]
	 GPIOA->CRL |= (GPIO_CRL_CNF2_1);
 8001560:	4b08      	ldr	r3, [pc, #32]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a07      	ldr	r2, [pc, #28]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 8001566:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800156a:	6013      	str	r3, [r2, #0]
	 GPIOA->CRL &= ~(GPIO_CRL_CNF2_0);
 800156c:	4b05      	ldr	r3, [pc, #20]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	4a04      	ldr	r2, [pc, #16]	; (8001584 <GB_uart_pin_conf2+0x4c>)
 8001572:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001576:	6013      	str	r3, [r2, #0]
	 /*
	   * PIN PA3 is the RX pin and it has to be set to input &FLOATING
	   * this is the rest value of the pin so we dont do anything to it
	   *
	   * */
}
 8001578:	bf00      	nop
 800157a:	46bd      	mov	sp, r7
 800157c:	bc80      	pop	{r7}
 800157e:	4770      	bx	lr
 8001580:	40021000 	.word	0x40021000
 8001584:	40010800 	.word	0x40010800

08001588 <GB_uart_boud_rate2>:

void GB_uart_boud_rate2()
{
 8001588:	b480      	push	{r7}
 800158a:	af00      	add	r7, sp, #0
	//usartdiv = 0d208.33
	//DIV_Fraction = 0.33*16 = 0d5.28 = 0d5(Nearest whole number) = 0x5
	//DIV_Mantissa = 0d208 = 0xd0
	//USART2->BRR =  ( ( uartdiv / 16 ) << USART_BRR_DIV_Mantissa_Pos );
	//USART2->BRR =  ( ( uartdiv % 16 ) << USART_BRR_DIV_Fraction_Pos ) ;
     USART2->BRR = 0x116;
 800158c:	4b03      	ldr	r3, [pc, #12]	; (800159c <GB_uart_boud_rate2+0x14>)
 800158e:	f44f 728b 	mov.w	r2, #278	; 0x116
 8001592:	609a      	str	r2, [r3, #8]
}
 8001594:	bf00      	nop
 8001596:	46bd      	mov	sp, r7
 8001598:	bc80      	pop	{r7}
 800159a:	4770      	bx	lr
 800159c:	40004400 	.word	0x40004400

080015a0 <GB_uart_init2>:
void GB_uart_init2()
{
 80015a0:	b580      	push	{r7, lr}
 80015a2:	af00      	add	r7, sp, #0

	GB_uart_pin_conf2();
 80015a4:	f7ff ffc8 	bl	8001538 <GB_uart_pin_conf2>
	//Alternate pin register
	/* no remap rx tx pins, for UART at pa2(tx) and pa3(rx)*/
    USART2->CR1 = 0x0000;
 80015a8:	4b12      	ldr	r3, [pc, #72]	; (80015f4 <GB_uart_init2+0x54>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	60da      	str	r2, [r3, #12]
	//enable UART and configure stop byte
	USART2->CR1 |= USART_CR1_UE;
 80015ae:	4b11      	ldr	r3, [pc, #68]	; (80015f4 <GB_uart_init2+0x54>)
 80015b0:	68db      	ldr	r3, [r3, #12]
 80015b2:	4a10      	ldr	r2, [pc, #64]	; (80015f4 <GB_uart_init2+0x54>)
 80015b4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80015b8:	60d3      	str	r3, [r2, #12]
	USART2->CR1 &= ~USART_CR1_M;
 80015ba:	4b0e      	ldr	r3, [pc, #56]	; (80015f4 <GB_uart_init2+0x54>)
 80015bc:	68db      	ldr	r3, [r3, #12]
 80015be:	4a0d      	ldr	r2, [pc, #52]	; (80015f4 <GB_uart_init2+0x54>)
 80015c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80015c4:	60d3      	str	r3, [r2, #12]

	 //enable RXNE interrupts on USART SIDE
	USART2->CR1 |= USART_CR1_RXNEIE;
 80015c6:	4b0b      	ldr	r3, [pc, #44]	; (80015f4 <GB_uart_init2+0x54>)
 80015c8:	68db      	ldr	r3, [r3, #12]
 80015ca:	4a0a      	ldr	r2, [pc, #40]	; (80015f4 <GB_uart_init2+0x54>)
 80015cc:	f043 0320 	orr.w	r3, r3, #32
 80015d0:	60d3      	str	r3, [r2, #12]

	//enable transmitter
	USART2->CR1 |= USART_CR1_TE;
 80015d2:	4b08      	ldr	r3, [pc, #32]	; (80015f4 <GB_uart_init2+0x54>)
 80015d4:	68db      	ldr	r3, [r3, #12]
 80015d6:	4a07      	ldr	r2, [pc, #28]	; (80015f4 <GB_uart_init2+0x54>)
 80015d8:	f043 0308 	orr.w	r3, r3, #8
 80015dc:	60d3      	str	r3, [r2, #12]
	//enable receiver
	USART2->CR1 |= USART_CR1_RE;
 80015de:	4b05      	ldr	r3, [pc, #20]	; (80015f4 <GB_uart_init2+0x54>)
 80015e0:	68db      	ldr	r3, [r3, #12]
 80015e2:	4a04      	ldr	r2, [pc, #16]	; (80015f4 <GB_uart_init2+0x54>)
 80015e4:	f043 0304 	orr.w	r3, r3, #4
 80015e8:	60d3      	str	r3, [r2, #12]


    GB_uart_boud_rate2();
 80015ea:	f7ff ffcd 	bl	8001588 <GB_uart_boud_rate2>


}
 80015ee:	bf00      	nop
 80015f0:	bd80      	pop	{r7, pc}
 80015f2:	bf00      	nop
 80015f4:	40004400 	.word	0x40004400

080015f8 <GB_UART_TxChar2>:
void GB_UART_TxChar2(uint32_t gb_byte)
{
 80015f8:	b480      	push	{r7}
 80015fa:	b083      	sub	sp, #12
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
	while(!(USART2->SR & USART_SR_TXE));
 8001600:	bf00      	nop
 8001602:	4b07      	ldr	r3, [pc, #28]	; (8001620 <GB_UART_TxChar2+0x28>)
 8001604:	681b      	ldr	r3, [r3, #0]
 8001606:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800160a:	2b00      	cmp	r3, #0
 800160c:	d0f9      	beq.n	8001602 <GB_UART_TxChar2+0xa>
	USART2->DR = gb_byte;
 800160e:	4a04      	ldr	r2, [pc, #16]	; (8001620 <GB_UART_TxChar2+0x28>)
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	6053      	str	r3, [r2, #4]

}
 8001614:	bf00      	nop
 8001616:	370c      	adds	r7, #12
 8001618:	46bd      	mov	sp, r7
 800161a:	bc80      	pop	{r7}
 800161c:	4770      	bx	lr
 800161e:	bf00      	nop
 8001620:	40004400 	.word	0x40004400

08001624 <GB_printString2>:

void GB_printString2(const char *gb_myString)      /////to print any string
{
 8001624:	b580      	push	{r7, lr}
 8001626:	b082      	sub	sp, #8
 8001628:	af00      	add	r7, sp, #0
 800162a:	6078      	str	r0, [r7, #4]
	while (*gb_myString)
 800162c:	e006      	b.n	800163c <GB_printString2+0x18>
	GB_UART_TxChar2(*gb_myString++);
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	1c5a      	adds	r2, r3, #1
 8001632:	607a      	str	r2, [r7, #4]
 8001634:	781b      	ldrb	r3, [r3, #0]
 8001636:	4618      	mov	r0, r3
 8001638:	f7ff ffde 	bl	80015f8 <GB_UART_TxChar2>
	while (*gb_myString)
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	781b      	ldrb	r3, [r3, #0]
 8001640:	2b00      	cmp	r3, #0
 8001642:	d1f4      	bne.n	800162e <GB_printString2+0xa>
	while(!(USART2->SR & USART_SR_TC));
 8001644:	bf00      	nop
 8001646:	4b05      	ldr	r3, [pc, #20]	; (800165c <GB_printString2+0x38>)
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800164e:	2b00      	cmp	r3, #0
 8001650:	d0f9      	beq.n	8001646 <GB_printString2+0x22>

}
 8001652:	bf00      	nop
 8001654:	bf00      	nop
 8001656:	3708      	adds	r7, #8
 8001658:	46bd      	mov	sp, r7
 800165a:	bd80      	pop	{r7, pc}
 800165c:	40004400 	.word	0x40004400

08001660 <Gpio_input_pushpull_conf_dht11pin>:



//USING GPIO  pb0  PIN
void Gpio_input_pushpull_conf_dht11pin()
{
 8001660:	b480      	push	{r7}
 8001662:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001664:	4b10      	ldr	r3, [pc, #64]	; (80016a8 <Gpio_input_pushpull_conf_dht11pin+0x48>)
 8001666:	699b      	ldr	r3, [r3, #24]
 8001668:	4a0f      	ldr	r2, [pc, #60]	; (80016a8 <Gpio_input_pushpull_conf_dht11pin+0x48>)
 800166a:	f043 0308 	orr.w	r3, r3, #8
 800166e:	6193      	str	r3, [r2, #24]
	 GPIOB->CRL &= ~(GPIO_CRL_MODE0 | GPIO_CRL_CNF0);
 8001670:	4b0e      	ldr	r3, [pc, #56]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	4a0d      	ldr	r2, [pc, #52]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 8001676:	f023 030f 	bic.w	r3, r3, #15
 800167a:	6013      	str	r3, [r2, #0]
	GPIOB->CRL &= ~(GPIO_CRL_MODE0_1 | GPIO_CRL_MODE0_0); // MODE IS SELECTED AS INPUT
 800167c:	4b0b      	ldr	r3, [pc, #44]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	4a0a      	ldr	r2, [pc, #40]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 8001682:	f023 0303 	bic.w	r3, r3, #3
 8001686:	6013      	str	r3, [r2, #0]

	GPIOB->CRL |= (GPIO_CRL_CNF0_1); // CONFIGURED AS INPUT PUSHPULL
 8001688:	4b08      	ldr	r3, [pc, #32]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	4a07      	ldr	r2, [pc, #28]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 800168e:	f043 0308 	orr.w	r3, r3, #8
 8001692:	6013      	str	r3, [r2, #0]
	GPIOB->CRL &= ~(GPIO_CRL_CNF0_0);
 8001694:	4b05      	ldr	r3, [pc, #20]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	4a04      	ldr	r2, [pc, #16]	; (80016ac <Gpio_input_pushpull_conf_dht11pin+0x4c>)
 800169a:	f023 0304 	bic.w	r3, r3, #4
 800169e:	6013      	str	r3, [r2, #0]
}
 80016a0:	bf00      	nop
 80016a2:	46bd      	mov	sp, r7
 80016a4:	bc80      	pop	{r7}
 80016a6:	4770      	bx	lr
 80016a8:	40021000 	.word	0x40021000
 80016ac:	40010c00 	.word	0x40010c00

080016b0 <Gpio_outout_pushpull_conf_dht11pin>:

void Gpio_outout_pushpull_conf_dht11pin()
{
 80016b0:	b480      	push	{r7}
 80016b2:	af00      	add	r7, sp, #0
	     RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 80016b4:	4b0d      	ldr	r3, [pc, #52]	; (80016ec <Gpio_outout_pushpull_conf_dht11pin+0x3c>)
 80016b6:	699b      	ldr	r3, [r3, #24]
 80016b8:	4a0c      	ldr	r2, [pc, #48]	; (80016ec <Gpio_outout_pushpull_conf_dht11pin+0x3c>)
 80016ba:	f043 0308 	orr.w	r3, r3, #8
 80016be:	6193      	str	r3, [r2, #24]
		 GPIOB->CRL &= ~(GPIO_CRL_MODE0 | GPIO_CRL_CNF0);
 80016c0:	4b0b      	ldr	r3, [pc, #44]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016c2:	681b      	ldr	r3, [r3, #0]
 80016c4:	4a0a      	ldr	r2, [pc, #40]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016c6:	f023 030f 	bic.w	r3, r3, #15
 80016ca:	6013      	str	r3, [r2, #0]

		 //CONFIGURE GPIO PIN MODE AS OUTPUT MAX SPEED 50MHZ
		 GPIOB->CRL |= ( GPIO_CRL_MODE0_1 | GPIO_CRL_MODE0_0);
 80016cc:	4b08      	ldr	r3, [pc, #32]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	4a07      	ldr	r2, [pc, #28]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016d2:	f043 0303 	orr.w	r3, r3, #3
 80016d6:	6013      	str	r3, [r2, #0]

		 //CONFIGURE GPIO OUTPUT MODE AS OUTPUT PUSH PULL
		 GPIOB->CRL |= ~(GPIO_CRL_CNF0_1 | GPIO_CRL_CNF0_0);
 80016d8:	4b05      	ldr	r3, [pc, #20]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	4a04      	ldr	r2, [pc, #16]	; (80016f0 <Gpio_outout_pushpull_conf_dht11pin+0x40>)
 80016de:	f063 030c 	orn	r3, r3, #12
 80016e2:	6013      	str	r3, [r2, #0]
}
 80016e4:	bf00      	nop
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bc80      	pop	{r7}
 80016ea:	4770      	bx	lr
 80016ec:	40021000 	.word	0x40021000
 80016f0:	40010c00 	.word	0x40010c00

080016f4 <timer3_init_dht11>:



void timer3_init_dht11()
	 {
 80016f4:	b480      	push	{r7}
 80016f6:	af00      	add	r7, sp, #0
	 // Start by making sure the timer's 'counter' is off
	 	TIM3->CR1 &= ~(TIM_CR1_CEN);
 80016f8:	4b1d      	ldr	r3, [pc, #116]	; (8001770 <timer3_init_dht11+0x7c>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	4a1c      	ldr	r2, [pc, #112]	; (8001770 <timer3_init_dht11+0x7c>)
 80016fe:	f023 0301 	bic.w	r3, r3, #1
 8001702:	6013      	str	r3, [r2, #0]
	 	TIM3->SR &= ~(TIM_SR_UIF);
 8001704:	4b1a      	ldr	r3, [pc, #104]	; (8001770 <timer3_init_dht11+0x7c>)
 8001706:	691b      	ldr	r3, [r3, #16]
 8001708:	4a19      	ldr	r2, [pc, #100]	; (8001770 <timer3_init_dht11+0x7c>)
 800170a:	f023 0301 	bic.w	r3, r3, #1
 800170e:	6113      	str	r3, [r2, #16]

	 	//RESET THE TIMER3 BUS
//	 	RCC->APB1RSTR |=  (RCC_APB1RSTR_TIM3RST);
//	 	RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM3RST);
	 	//Enable Timer3 peripheral clock
	    RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 8001710:	4b18      	ldr	r3, [pc, #96]	; (8001774 <timer3_init_dht11+0x80>)
 8001712:	69db      	ldr	r3, [r3, #28]
 8001714:	4a17      	ldr	r2, [pc, #92]	; (8001774 <timer3_init_dht11+0x80>)
 8001716:	f043 0302 	orr.w	r3, r3, #2
 800171a:	61d3      	str	r3, [r2, #28]
	    TIM3-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
 800171c:	4b14      	ldr	r3, [pc, #80]	; (8001770 <timer3_init_dht11+0x7c>)
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	4a13      	ldr	r2, [pc, #76]	; (8001770 <timer3_init_dht11+0x7c>)
 8001722:	f043 0302 	orr.w	r3, r3, #2
 8001726:	6013      	str	r3, [r2, #0]
	    TIM3-> PSC = 16; // TF = 2MHZ,TP = 5*10^-7, MAX DELAY = 32.76MS
 8001728:	4b11      	ldr	r3, [pc, #68]	; (8001770 <timer3_init_dht11+0x7c>)
 800172a:	2210      	movs	r2, #16
 800172c:	629a      	str	r2, [r3, #40]	; 0x28
	    //Timer Auto reload register value
	    TIM3->ARR = 0xffff;
 800172e:	4b10      	ldr	r3, [pc, #64]	; (8001770 <timer3_init_dht11+0x7c>)
 8001730:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001734:	62da      	str	r2, [r3, #44]	; 0x2c
	    TIM3-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 8001736:	4b0e      	ldr	r3, [pc, #56]	; (8001770 <timer3_init_dht11+0x7c>)
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	4a0d      	ldr	r2, [pc, #52]	; (8001770 <timer3_init_dht11+0x7c>)
 800173c:	f023 0302 	bic.w	r3, r3, #2
 8001740:	6013      	str	r3, [r2, #0]
	    //Enable the update generation for updating the shadow register with preload register contents with new values
	    TIM3->EGR |= TIM_EGR_UG;
 8001742:	4b0b      	ldr	r3, [pc, #44]	; (8001770 <timer3_init_dht11+0x7c>)
 8001744:	695b      	ldr	r3, [r3, #20]
 8001746:	4a0a      	ldr	r2, [pc, #40]	; (8001770 <timer3_init_dht11+0x7c>)
 8001748:	f043 0301 	orr.w	r3, r3, #1
 800174c:	6153      	str	r3, [r2, #20]
	    //Clear the UIF flag as that is set when UG bit is set in EGR to update the content of my register
	    TIM3->SR &= ~(TIM_SR_UIF);
 800174e:	4b08      	ldr	r3, [pc, #32]	; (8001770 <timer3_init_dht11+0x7c>)
 8001750:	691b      	ldr	r3, [r3, #16]
 8001752:	4a07      	ldr	r2, [pc, #28]	; (8001770 <timer3_init_dht11+0x7c>)
 8001754:	f023 0301 	bic.w	r3, r3, #1
 8001758:	6113      	str	r3, [r2, #16]

	    TIM3->CR1 |= TIM_CR1_CEN; // Counter Enable
 800175a:	4b05      	ldr	r3, [pc, #20]	; (8001770 <timer3_init_dht11+0x7c>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	4a04      	ldr	r2, [pc, #16]	; (8001770 <timer3_init_dht11+0x7c>)
 8001760:	f043 0301 	orr.w	r3, r3, #1
 8001764:	6013      	str	r3, [r2, #0]
	 }
 8001766:	bf00      	nop
 8001768:	46bd      	mov	sp, r7
 800176a:	bc80      	pop	{r7}
 800176c:	4770      	bx	lr
 800176e:	bf00      	nop
 8001770:	40000400 	.word	0x40000400
 8001774:	40021000 	.word	0x40021000

08001778 <GB_dht11_init>:


void GB_dht11_init()
{
 8001778:	b580      	push	{r7, lr}
 800177a:	af00      	add	r7, sp, #0
	timer3_init_dht11(); // initilse timer 3 at 2mhz for monitoring the time response for 1 -wire communication with dht11
 800177c:	f7ff ffba 	bl	80016f4 <timer3_init_dht11>
	Gpio_outout_pushpull_conf_dht11pin();  //Set pin as output so that start signal can be send
 8001780:	f7ff ff96 	bl	80016b0 <Gpio_outout_pushpull_conf_dht11pin>
	CLEAR_BIT(GPIOB->ODR, GPIO_ODR_ODR0);  // Low pulse is send as Start signal
 8001784:	4b10      	ldr	r3, [pc, #64]	; (80017c8 <GB_dht11_init+0x50>)
 8001786:	68db      	ldr	r3, [r3, #12]
 8001788:	4a0f      	ldr	r2, [pc, #60]	; (80017c8 <GB_dht11_init+0x50>)
 800178a:	f023 0301 	bic.w	r3, r3, #1
 800178e:	60d3      	str	r3, [r2, #12]
	TIM3->CNT=0; // initialise counter register
 8001790:	4b0e      	ldr	r3, [pc, #56]	; (80017cc <GB_dht11_init+0x54>)
 8001792:	2200      	movs	r2, #0
 8001794:	625a      	str	r2, [r3, #36]	; 0x24
	while(TIM3->CNT <=33999);  // Start signal of 18ms delay low signal is sent
 8001796:	bf00      	nop
 8001798:	4b0c      	ldr	r3, [pc, #48]	; (80017cc <GB_dht11_init+0x54>)
 800179a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800179c:	f248 42cf 	movw	r2, #33999	; 0x84cf
 80017a0:	4293      	cmp	r3, r2
 80017a2:	d9f9      	bls.n	8001798 <GB_dht11_init+0x20>
	SET_BIT(GPIOB->ODR, GPIO_ODR_ODR0);   //High pulse is set to receive response from sensor
 80017a4:	4b08      	ldr	r3, [pc, #32]	; (80017c8 <GB_dht11_init+0x50>)
 80017a6:	68db      	ldr	r3, [r3, #12]
 80017a8:	4a07      	ldr	r2, [pc, #28]	; (80017c8 <GB_dht11_init+0x50>)
 80017aa:	f043 0301 	orr.w	r3, r3, #1
 80017ae:	60d3      	str	r3, [r2, #12]
	TIM3->CNT=0; // initialise counter register
 80017b0:	4b06      	ldr	r3, [pc, #24]	; (80017cc <GB_dht11_init+0x54>)
 80017b2:	2200      	movs	r2, #0
 80017b4:	625a      	str	r2, [r3, #36]	; 0x24
	while(TIM3->CNT <=75);  //wait for 42us to receive response
 80017b6:	bf00      	nop
 80017b8:	4b04      	ldr	r3, [pc, #16]	; (80017cc <GB_dht11_init+0x54>)
 80017ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017bc:	2b4b      	cmp	r3, #75	; 0x4b
 80017be:	d9fb      	bls.n	80017b8 <GB_dht11_init+0x40>
	Gpio_input_pushpull_conf_dht11pin();
 80017c0:	f7ff ff4e 	bl	8001660 <Gpio_input_pushpull_conf_dht11pin>

}
 80017c4:	bf00      	nop
 80017c6:	bd80      	pop	{r7, pc}
 80017c8:	40010c00 	.word	0x40010c00
 80017cc:	40000400 	.word	0x40000400

080017d0 <GB_dht11_find_response>:
//Now we have to check response given by DHT11 pin ..
int GB_dht11_find_response()
{
 80017d0:	b480      	push	{r7}
 80017d2:	af00      	add	r7, sp, #0
	TIM3->CNT=0;
 80017d4:	4b12      	ldr	r3, [pc, #72]	; (8001820 <GB_dht11_find_response+0x50>)
 80017d6:	2200      	movs	r2, #0
 80017d8:	625a      	str	r2, [r3, #36]	; 0x24
	//sensor gives response of start signal by pulling the pin low/high for 54us
	while(!(READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))  //first response signal is low
 80017da:	e005      	b.n	80017e8 <GB_dht11_find_response+0x18>
	{
	if(TIM3->CNT >=179) // While sensor pull the pin low for 54us
 80017dc:	4b10      	ldr	r3, [pc, #64]	; (8001820 <GB_dht11_find_response+0x50>)
 80017de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017e0:	2bb2      	cmp	r3, #178	; 0xb2
 80017e2:	d901      	bls.n	80017e8 <GB_dht11_find_response+0x18>
	    {
		return RESPONSE_PULSE_LOW_54us_ERROR;
 80017e4:	2301      	movs	r3, #1
 80017e6:	e016      	b.n	8001816 <GB_dht11_find_response+0x46>
	while(!(READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))  //first response signal is low
 80017e8:	4b0e      	ldr	r3, [pc, #56]	; (8001824 <GB_dht11_find_response+0x54>)
 80017ea:	689b      	ldr	r3, [r3, #8]
 80017ec:	f003 0301 	and.w	r3, r3, #1
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d0f3      	beq.n	80017dc <GB_dht11_find_response+0xc>
	    }

	}

	TIM3->CNT=0; // initialise counter register
 80017f4:	4b0a      	ldr	r3, [pc, #40]	; (8001820 <GB_dht11_find_response+0x50>)
 80017f6:	2200      	movs	r2, #0
 80017f8:	625a      	str	r2, [r3, #36]	; 0x24
	while((READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))   //Second response signal is high
 80017fa:	e005      	b.n	8001808 <GB_dht11_find_response+0x38>
	{

	if(TIM3->CNT >=179)//  While sensor pull the pin HIGH for 85us
 80017fc:	4b08      	ldr	r3, [pc, #32]	; (8001820 <GB_dht11_find_response+0x50>)
 80017fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001800:	2bb2      	cmp	r3, #178	; 0xb2
 8001802:	d901      	bls.n	8001808 <GB_dht11_find_response+0x38>
	   {
	     return RESPONSE_PULSE_HIGH_85us_ERROR;
 8001804:	2302      	movs	r3, #2
 8001806:	e006      	b.n	8001816 <GB_dht11_find_response+0x46>
	while((READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))   //Second response signal is high
 8001808:	4b06      	ldr	r3, [pc, #24]	; (8001824 <GB_dht11_find_response+0x54>)
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	f003 0301 	and.w	r3, r3, #1
 8001810:	2b00      	cmp	r3, #0
 8001812:	d1f3      	bne.n	80017fc <GB_dht11_find_response+0x2c>
	    }


	}

	return RESPONSE_PULSE_RECEIVED;
 8001814:	2303      	movs	r3, #3
}
 8001816:	4618      	mov	r0, r3
 8001818:	46bd      	mov	sp, r7
 800181a:	bc80      	pop	{r7}
 800181c:	4770      	bx	lr
 800181e:	bf00      	nop
 8001820:	40000400 	.word	0x40000400
 8001824:	40010c00 	.word	0x40010c00

08001828 <GB_dht11_receivedht>:
8 bit parity bit
*/
uint8_t gb_data [5];
//int dht11_receivedht(uint8_t *x)
int GB_dht11_receivedht()
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b084      	sub	sp, #16
 800182c:	af00      	add	r7, sp, #0
	 uint8_t  gb_check;
	 volatile uint8_t gb_cnt = 0;
 800182e:	2300      	movs	r3, #0
 8001830:	71bb      	strb	r3, [r7, #6]

		for (int gb_z = 0; gb_z < 5; ++gb_z)
 8001832:	2300      	movs	r3, #0
 8001834:	60fb      	str	r3, [r7, #12]
 8001836:	e083      	b.n	8001940 <GB_dht11_receivedht+0x118>
		{
	        for(int gb_j = 7; gb_j >= 0; --gb_j)
 8001838:	2307      	movs	r3, #7
 800183a:	60bb      	str	r3, [r7, #8]
 800183c:	e07a      	b.n	8001934 <GB_dht11_receivedht+0x10c>
	        {

	             /* First there is always a 50µs low period */
	        	TIM3->CNT=0; // initialise counter register
 800183e:	4b4f      	ldr	r3, [pc, #316]	; (800197c <GB_dht11_receivedht+0x154>)
 8001840:	2200      	movs	r2, #0
 8001842:	625a      	str	r2, [r3, #36]	; 0x24
	        	while(!(READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))
 8001844:	e00a      	b.n	800185c <GB_dht11_receivedht+0x34>
	        	{
	        		if(TIM3->CNT >=107) ////Wait for 54us low pulse
 8001846:	4b4d      	ldr	r3, [pc, #308]	; (800197c <GB_dht11_receivedht+0x154>)
 8001848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800184a:	2b6a      	cmp	r3, #106	; 0x6a
 800184c:	d906      	bls.n	800185c <GB_dht11_receivedht+0x34>
	        		{
	        			GB_decimel1(TIM3->CNT);
 800184e:	4b4b      	ldr	r3, [pc, #300]	; (800197c <GB_dht11_receivedht+0x154>)
 8001850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001852:	4618      	mov	r0, r3
 8001854:	f7ff fdfc 	bl	8001450 <GB_decimel1>
	                    return DATA_BIT_BEFORE_LOW_PULSE_ERROR;
 8001858:	2305      	movs	r3, #5
 800185a:	e08b      	b.n	8001974 <GB_dht11_receivedht+0x14c>
	        	while(!(READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0))))
 800185c:	4b48      	ldr	r3, [pc, #288]	; (8001980 <GB_dht11_receivedht+0x158>)
 800185e:	689b      	ldr	r3, [r3, #8]
 8001860:	f003 0301 	and.w	r3, r3, #1
 8001864:	2b00      	cmp	r3, #0
 8001866:	d0ee      	beq.n	8001846 <GB_dht11_receivedht+0x1e>
	        		}
	        	}

	       	 /* Then the data signal is sent. 26 to 28µs (ideally)
	            indicate a low bit, and around 70µs a high bit */
	        	TIM3->CNT=0; // initialise counter register
 8001868:	4b44      	ldr	r3, [pc, #272]	; (800197c <GB_dht11_receivedht+0x154>)
 800186a:	2200      	movs	r2, #0
 800186c:	625a      	str	r2, [r3, #36]	; 0x24
	        	while((READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0)))) //if signal is HIGH
 800186e:	e00a      	b.n	8001886 <GB_dht11_receivedht+0x5e>
	        	{
	        		if(TIM3->CNT <= 149)  // data signal is high for max 80us (as for 0 it is 26-28us and for 1 it is 70us)
 8001870:	4b42      	ldr	r3, [pc, #264]	; (800197c <GB_dht11_receivedht+0x154>)
 8001872:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001874:	2b95      	cmp	r3, #149	; 0x95
 8001876:	d804      	bhi.n	8001882 <GB_dht11_receivedht+0x5a>
	        		{gb_cnt = TIM3->CNT;    // So for 149 , 80us is generated to waiting for maximum time.
 8001878:	4b40      	ldr	r3, [pc, #256]	; (800197c <GB_dht11_receivedht+0x154>)
 800187a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800187c:	b2db      	uxtb	r3, r3
 800187e:	71bb      	strb	r3, [r7, #6]
 8001880:	e001      	b.n	8001886 <GB_dht11_receivedht+0x5e>
	        		//GB_decimel1(TIM3->CNT);
	        		}
	        		else
	        			{//GB_decimel1(TIM3->CNT);
	        			return DATA_BIT_ERROR;}
 8001882:	2306      	movs	r3, #6
 8001884:	e076      	b.n	8001974 <GB_dht11_receivedht+0x14c>
	        	while((READ_BIT((GPIOB->IDR), (GPIO_IDR_IDR0)))) //if signal is HIGH
 8001886:	4b3e      	ldr	r3, [pc, #248]	; (8001980 <GB_dht11_receivedht+0x158>)
 8001888:	689b      	ldr	r3, [r3, #8]
 800188a:	f003 0301 	and.w	r3, r3, #1
 800188e:	2b00      	cmp	r3, #0
 8001890:	d1ee      	bne.n	8001870 <GB_dht11_receivedht+0x48>

	        	 /* Store the value now so that the whole checking doesn't
	        	             move the TCNT0 forward by too much to make the data look
	        	             bad */

	        	if ((gb_cnt >= 39) & (gb_cnt <= 69))          //20us to 35 us
 8001892:	79bb      	ldrb	r3, [r7, #6]
 8001894:	b2db      	uxtb	r3, r3
 8001896:	2b26      	cmp	r3, #38	; 0x26
 8001898:	bf8c      	ite	hi
 800189a:	2301      	movhi	r3, #1
 800189c:	2300      	movls	r3, #0
 800189e:	b2da      	uxtb	r2, r3
 80018a0:	79bb      	ldrb	r3, [r7, #6]
 80018a2:	b2db      	uxtb	r3, r3
 80018a4:	2b45      	cmp	r3, #69	; 0x45
 80018a6:	bf94      	ite	ls
 80018a8:	2301      	movls	r3, #1
 80018aa:	2300      	movhi	r3, #0
 80018ac:	b2db      	uxtb	r3, r3
 80018ae:	4013      	ands	r3, r2
 80018b0:	b2db      	uxtb	r3, r3
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d014      	beq.n	80018e0 <GB_dht11_receivedht+0xb8>
	        	{ CLEAR_BIT(gb_data[gb_z],(1<<gb_j)); //GB_decimel1(gb_cnt);//GB_printString1("\n");
 80018b6:	4a33      	ldr	r2, [pc, #204]	; (8001984 <GB_dht11_receivedht+0x15c>)
 80018b8:	68fb      	ldr	r3, [r7, #12]
 80018ba:	4413      	add	r3, r2
 80018bc:	781b      	ldrb	r3, [r3, #0]
 80018be:	b25a      	sxtb	r2, r3
 80018c0:	2101      	movs	r1, #1
 80018c2:	68bb      	ldr	r3, [r7, #8]
 80018c4:	fa01 f303 	lsl.w	r3, r1, r3
 80018c8:	b25b      	sxtb	r3, r3
 80018ca:	43db      	mvns	r3, r3
 80018cc:	b25b      	sxtb	r3, r3
 80018ce:	4013      	ands	r3, r2
 80018d0:	b25b      	sxtb	r3, r3
 80018d2:	b2d9      	uxtb	r1, r3
 80018d4:	4a2b      	ldr	r2, [pc, #172]	; (8001984 <GB_dht11_receivedht+0x15c>)
 80018d6:	68fb      	ldr	r3, [r7, #12]
 80018d8:	4413      	add	r3, r2
 80018da:	460a      	mov	r2, r1
 80018dc:	701a      	strb	r2, [r3, #0]
 80018de:	e026      	b.n	800192e <GB_dht11_receivedht+0x106>

	        	}

	        	else if ((gb_cnt >= 119) & (gb_cnt <= 149))     // 60us to 80us
 80018e0:	79bb      	ldrb	r3, [r7, #6]
 80018e2:	b2db      	uxtb	r3, r3
 80018e4:	2b76      	cmp	r3, #118	; 0x76
 80018e6:	bf8c      	ite	hi
 80018e8:	2301      	movhi	r3, #1
 80018ea:	2300      	movls	r3, #0
 80018ec:	b2da      	uxtb	r2, r3
 80018ee:	79bb      	ldrb	r3, [r7, #6]
 80018f0:	b2db      	uxtb	r3, r3
 80018f2:	2b95      	cmp	r3, #149	; 0x95
 80018f4:	bf94      	ite	ls
 80018f6:	2301      	movls	r3, #1
 80018f8:	2300      	movhi	r3, #0
 80018fa:	b2db      	uxtb	r3, r3
 80018fc:	4013      	ands	r3, r2
 80018fe:	b2db      	uxtb	r3, r3
 8001900:	2b00      	cmp	r3, #0
 8001902:	d012      	beq.n	800192a <GB_dht11_receivedht+0x102>
	        	{SET_BIT(gb_data[gb_z],(1<<gb_j));//GB_decimel1(gb_cnt);GB_printString1("\n");
 8001904:	4a1f      	ldr	r2, [pc, #124]	; (8001984 <GB_dht11_receivedht+0x15c>)
 8001906:	68fb      	ldr	r3, [r7, #12]
 8001908:	4413      	add	r3, r2
 800190a:	781b      	ldrb	r3, [r3, #0]
 800190c:	b25a      	sxtb	r2, r3
 800190e:	2101      	movs	r1, #1
 8001910:	68bb      	ldr	r3, [r7, #8]
 8001912:	fa01 f303 	lsl.w	r3, r1, r3
 8001916:	b25b      	sxtb	r3, r3
 8001918:	4313      	orrs	r3, r2
 800191a:	b25b      	sxtb	r3, r3
 800191c:	b2d9      	uxtb	r1, r3
 800191e:	4a19      	ldr	r2, [pc, #100]	; (8001984 <GB_dht11_receivedht+0x15c>)
 8001920:	68fb      	ldr	r3, [r7, #12]
 8001922:	4413      	add	r3, r2
 8001924:	460a      	mov	r2, r1
 8001926:	701a      	strb	r2, [r3, #0]
 8001928:	e001      	b.n	800192e <GB_dht11_receivedht+0x106>
	        	}

	        	else
	        	return DATA_BIT_OK;
 800192a:	2307      	movs	r3, #7
 800192c:	e022      	b.n	8001974 <GB_dht11_receivedht+0x14c>
	        for(int gb_j = 7; gb_j >= 0; --gb_j)
 800192e:	68bb      	ldr	r3, [r7, #8]
 8001930:	3b01      	subs	r3, #1
 8001932:	60bb      	str	r3, [r7, #8]
 8001934:	68bb      	ldr	r3, [r7, #8]
 8001936:	2b00      	cmp	r3, #0
 8001938:	da81      	bge.n	800183e <GB_dht11_receivedht+0x16>
		for (int gb_z = 0; gb_z < 5; ++gb_z)
 800193a:	68fb      	ldr	r3, [r7, #12]
 800193c:	3301      	adds	r3, #1
 800193e:	60fb      	str	r3, [r7, #12]
 8001940:	68fb      	ldr	r3, [r7, #12]
 8001942:	2b04      	cmp	r3, #4
 8001944:	f77f af78 	ble.w	8001838 <GB_dht11_receivedht+0x10>
	       }
      }
		gb_check = (gb_data[0] + gb_data[1] + gb_data[2] + gb_data[3]) & 0xFF;
 8001948:	4b0e      	ldr	r3, [pc, #56]	; (8001984 <GB_dht11_receivedht+0x15c>)
 800194a:	781a      	ldrb	r2, [r3, #0]
 800194c:	4b0d      	ldr	r3, [pc, #52]	; (8001984 <GB_dht11_receivedht+0x15c>)
 800194e:	785b      	ldrb	r3, [r3, #1]
 8001950:	4413      	add	r3, r2
 8001952:	b2da      	uxtb	r2, r3
 8001954:	4b0b      	ldr	r3, [pc, #44]	; (8001984 <GB_dht11_receivedht+0x15c>)
 8001956:	789b      	ldrb	r3, [r3, #2]
 8001958:	4413      	add	r3, r2
 800195a:	b2da      	uxtb	r2, r3
 800195c:	4b09      	ldr	r3, [pc, #36]	; (8001984 <GB_dht11_receivedht+0x15c>)
 800195e:	78db      	ldrb	r3, [r3, #3]
 8001960:	4413      	add	r3, r2
 8001962:	71fb      	strb	r3, [r7, #7]
		if (gb_check != gb_data[4]) return DATA_PULSE_CHECKSUM_ERROR;
 8001964:	4b07      	ldr	r3, [pc, #28]	; (8001984 <GB_dht11_receivedht+0x15c>)
 8001966:	791b      	ldrb	r3, [r3, #4]
 8001968:	79fa      	ldrb	r2, [r7, #7]
 800196a:	429a      	cmp	r2, r3
 800196c:	d001      	beq.n	8001972 <GB_dht11_receivedht+0x14a>
 800196e:	2309      	movs	r3, #9
 8001970:	e000      	b.n	8001974 <GB_dht11_receivedht+0x14c>
//			GB_decimel1(gb_data[w]);
//			GB_printString1("\n");
//		}

		//return 4;
		return DATA_PULSE_OK;
 8001972:	2310      	movs	r3, #16
}
 8001974:	4618      	mov	r0, r3
 8001976:	3710      	adds	r7, #16
 8001978:	46bd      	mov	sp, r7
 800197a:	bd80      	pop	{r7, pc}
 800197c:	40000400 	.word	0x40000400
 8001980:	40010c00 	.word	0x40010c00
 8001984:	20000878 	.word	0x20000878

08001988 <GB_dht11>:

void GB_dht11()
{
 8001988:	b580      	push	{r7, lr}
 800198a:	af00      	add	r7, sp, #0
	GB_dht11_init();
 800198c:	f7ff fef4 	bl	8001778 <GB_dht11_init>
	//GB_dht11_find_response();
	GB_decimel1(GB_dht11_find_response());
 8001990:	f7ff ff1e 	bl	80017d0 <GB_dht11_find_response>
 8001994:	4603      	mov	r3, r0
 8001996:	4618      	mov	r0, r3
 8001998:	f7ff fd5a 	bl	8001450 <GB_decimel1>
	GB_decimel1(GB_dht11_receivedht());
 800199c:	f7ff ff44 	bl	8001828 <GB_dht11_receivedht>
 80019a0:	4603      	mov	r3, r0
 80019a2:	4618      	mov	r0, r3
 80019a4:	f7ff fd54 	bl	8001450 <GB_decimel1>
	//GB_dht11_receivedht();

	GB_printString1("\n");
 80019a8:	4802      	ldr	r0, [pc, #8]	; (80019b4 <GB_dht11+0x2c>)
 80019aa:	f7ff fd33 	bl	8001414 <GB_printString1>

}
 80019ae:	bf00      	nop
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	0800714c 	.word	0x0800714c

080019b8 <GB_dht11_temp>:
	return (gb_data[0] + (0.1*gb_data[1]));

}

float GB_dht11_temp()
{
 80019b8:	b5b0      	push	{r4, r5, r7, lr}
 80019ba:	af00      	add	r7, sp, #0
	//return ('78.09');
	return (gb_data[2] + (0.100*gb_data[3]));
 80019bc:	4b12      	ldr	r3, [pc, #72]	; (8001a08 <GB_dht11_temp+0x50>)
 80019be:	789b      	ldrb	r3, [r3, #2]
 80019c0:	4618      	mov	r0, r3
 80019c2:	f7fe fd2f 	bl	8000424 <__aeabi_i2d>
 80019c6:	4604      	mov	r4, r0
 80019c8:	460d      	mov	r5, r1
 80019ca:	4b0f      	ldr	r3, [pc, #60]	; (8001a08 <GB_dht11_temp+0x50>)
 80019cc:	78db      	ldrb	r3, [r3, #3]
 80019ce:	4618      	mov	r0, r3
 80019d0:	f7fe fd28 	bl	8000424 <__aeabi_i2d>
 80019d4:	a30a      	add	r3, pc, #40	; (adr r3, 8001a00 <GB_dht11_temp+0x48>)
 80019d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019da:	f7fe fd8d 	bl	80004f8 <__aeabi_dmul>
 80019de:	4602      	mov	r2, r0
 80019e0:	460b      	mov	r3, r1
 80019e2:	4620      	mov	r0, r4
 80019e4:	4629      	mov	r1, r5
 80019e6:	f7fe fbd1 	bl	800018c <__adddf3>
 80019ea:	4602      	mov	r2, r0
 80019ec:	460b      	mov	r3, r1
 80019ee:	4610      	mov	r0, r2
 80019f0:	4619      	mov	r1, r3
 80019f2:	f7ff f879 	bl	8000ae8 <__aeabi_d2f>
 80019f6:	4603      	mov	r3, r0
}
 80019f8:	4618      	mov	r0, r3
 80019fa:	bdb0      	pop	{r4, r5, r7, pc}
 80019fc:	f3af 8000 	nop.w
 8001a00:	9999999a 	.word	0x9999999a
 8001a04:	3fb99999 	.word	0x3fb99999
 8001a08:	20000878 	.word	0x20000878

08001a0c <gb_i2c2_pin_config>:
#include <gb_i2c.h>
#include "stm32f1xx.h"
#include "stdio.h"
//PB10-SCL,PB11-SDA
void gb_i2c2_pin_config()
{
 8001a0c:	b480      	push	{r7}
 8001a0e:	af00      	add	r7, sp, #0


	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001a10:	4b13      	ldr	r3, [pc, #76]	; (8001a60 <gb_i2c2_pin_config+0x54>)
 8001a12:	699b      	ldr	r3, [r3, #24]
 8001a14:	4a12      	ldr	r2, [pc, #72]	; (8001a60 <gb_i2c2_pin_config+0x54>)
 8001a16:	f043 0308 	orr.w	r3, r3, #8
 8001a1a:	6193      	str	r3, [r2, #24]
	RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 8001a1c:	4b10      	ldr	r3, [pc, #64]	; (8001a60 <gb_i2c2_pin_config+0x54>)
 8001a1e:	69db      	ldr	r3, [r3, #28]
 8001a20:	4a0f      	ldr	r2, [pc, #60]	; (8001a60 <gb_i2c2_pin_config+0x54>)
 8001a22:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001a26:	61d3      	str	r3, [r2, #28]


	//PB10 SCL will be set as alternate function open drain
	GPIOB->CRH |= GPIO_CRH_MODE10_0 | GPIO_CRH_MODE10_1;      //Output Mode
 8001a28:	4b0e      	ldr	r3, [pc, #56]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a2a:	685b      	ldr	r3, [r3, #4]
 8001a2c:	4a0d      	ldr	r2, [pc, #52]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a2e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001a32:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |= GPIO_CRH_CNF10_1 | GPIO_CRH_CNF10_0;         //Alternate Function
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a36:	685b      	ldr	r3, [r3, #4]
 8001a38:	4a0a      	ldr	r2, [pc, #40]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a3a:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 8001a3e:	6053      	str	r3, [r2, #4]

 //PB11 SDA will be set as alternate function open drain
	GPIOB->CRH |= GPIO_CRH_MODE11_0 | GPIO_CRH_MODE11_1;     //Output Mode
 8001a40:	4b08      	ldr	r3, [pc, #32]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a42:	685b      	ldr	r3, [r3, #4]
 8001a44:	4a07      	ldr	r2, [pc, #28]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a46:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001a4a:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |= GPIO_CRH_CNF11_1 | GPIO_CRH_CNF11_0;         //Alternate Function
 8001a4c:	4b05      	ldr	r3, [pc, #20]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a4e:	685b      	ldr	r3, [r3, #4]
 8001a50:	4a04      	ldr	r2, [pc, #16]	; (8001a64 <gb_i2c2_pin_config+0x58>)
 8001a52:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001a56:	6053      	str	r3, [r2, #4]

}
 8001a58:	bf00      	nop
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bc80      	pop	{r7}
 8001a5e:	4770      	bx	lr
 8001a60:	40021000 	.word	0x40021000
 8001a64:	40010c00 	.word	0x40010c00

08001a68 <gb_i2c2_master_init>:
uint32_t gb_read_reg =0;
void gb_i2c2_master_init()
{
 8001a68:	b580      	push	{r7, lr}
 8001a6a:	af00      	add	r7, sp, #0
	gb_i2c2_pin_config();
 8001a6c:	f7ff ffce 	bl	8001a0c <gb_i2c2_pin_config>

	// configure i2c_cr2 register for peripheral input clock: FREQ[] bits //
I2C2->CR2 = 0x20; //we have to set FREQ according to the frequency of our core
 8001a70:	4b0c      	ldr	r3, [pc, #48]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a72:	2220      	movs	r2, #32
 8001a74:	605a      	str	r2, [r3, #4]
                  //that is 32MHZ in our case 0x20 = 32

//configure i2c_clock control register i2c_ccr
I2C2->CCR = 0x140;
 8001a76:	4b0b      	ldr	r3, [pc, #44]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a78:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001a7c:	61da      	str	r2, [r3, #28]

	//configure i2c_trise register(i2c_trise)
I2C2->TRISE = 0x21;
 8001a7e:	4b09      	ldr	r3, [pc, #36]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a80:	2221      	movs	r2, #33	; 0x21
 8001a82:	621a      	str	r2, [r3, #32]
	//program the i2c_cr1 register to enable the peripheral

	I2C2->CR1 |= I2C_CR1_PE;
 8001a84:	4b07      	ldr	r3, [pc, #28]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	4a06      	ldr	r2, [pc, #24]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a8a:	f043 0301 	orr.w	r3, r3, #1
 8001a8e:	6013      	str	r3, [r2, #0]

	if((I2C2->SR2 & I2C_SR2_BUSY) == 1)
 8001a90:	4b04      	ldr	r3, [pc, #16]	; (8001aa4 <gb_i2c2_master_init+0x3c>)
 8001a92:	699b      	ldr	r3, [r3, #24]
 8001a94:	f003 0302 	and.w	r3, r3, #2
 8001a98:	2b01      	cmp	r3, #1
 8001a9a:	d101      	bne.n	8001aa0 <gb_i2c2_master_init+0x38>
		gb_i2c2_master_stop_generation();
 8001a9c:	f000 f860 	bl	8001b60 <gb_i2c2_master_stop_generation>


}
 8001aa0:	bf00      	nop
 8001aa2:	bd80      	pop	{r7, pc}
 8001aa4:	40005800 	.word	0x40005800

08001aa8 <gb_i2c2_start_condition_w>:
//when system  generates start signal , interface automatically switches to master mode
//MSL bit will tell whether entered in master mode or not
//SB bit to be in while loop for successful transmission of start bit

void gb_i2c2_start_condition_w() //EV5
{
 8001aa8:	b480      	push	{r7}
 8001aaa:	af00      	add	r7, sp, #0
	//generate the start condition for starting the communication
		I2C2->CR1 |= I2C_CR1_START;
 8001aac:	4b0a      	ldr	r3, [pc, #40]	; (8001ad8 <gb_i2c2_start_condition_w+0x30>)
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	4a09      	ldr	r2, [pc, #36]	; (8001ad8 <gb_i2c2_start_condition_w+0x30>)
 8001ab2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001ab6:	6013      	str	r3, [r2, #0]
		while(!(I2C2->SR1 & I2C_SR1_SB));  // wait to get transfered to master mode
 8001ab8:	bf00      	nop
 8001aba:	4b07      	ldr	r3, [pc, #28]	; (8001ad8 <gb_i2c2_start_condition_w+0x30>)
 8001abc:	695b      	ldr	r3, [r3, #20]
 8001abe:	f003 0301 	and.w	r3, r3, #1
 8001ac2:	2b00      	cmp	r3, #0
 8001ac4:	d0f9      	beq.n	8001aba <gb_i2c2_start_condition_w+0x12>
		gb_read_reg = I2C2->SR1;
 8001ac6:	4b04      	ldr	r3, [pc, #16]	; (8001ad8 <gb_i2c2_start_condition_w+0x30>)
 8001ac8:	695b      	ldr	r3, [r3, #20]
 8001aca:	4a04      	ldr	r2, [pc, #16]	; (8001adc <gb_i2c2_start_condition_w+0x34>)
 8001acc:	6013      	str	r3, [r2, #0]
}
 8001ace:	bf00      	nop
 8001ad0:	46bd      	mov	sp, r7
 8001ad2:	bc80      	pop	{r7}
 8001ad4:	4770      	bx	lr
 8001ad6:	bf00      	nop
 8001ad8:	40005800 	.word	0x40005800
 8001adc:	200001f8 	.word	0x200001f8

08001ae0 <gb_i2c2_address_send_w>:
 * In 7-bit addressing mode,
– To enter Transmitter mode, a master sends the slave address with LSB reset.
– To enter Receiver mode, a master sends the slave address with LSB set.
 * */
void gb_i2c2_address_send_w(uint8_t gb_slave_address)//EV6
{
 8001ae0:	b480      	push	{r7}
 8001ae2:	b083      	sub	sp, #12
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	71fb      	strb	r3, [r7, #7]


	I2C2->DR = gb_slave_address;//Write slave address on I2C data bus
 8001aea:	4a0f      	ldr	r2, [pc, #60]	; (8001b28 <gb_i2c2_address_send_w+0x48>)
 8001aec:	79fb      	ldrb	r3, [r7, #7]
 8001aee:	6113      	str	r3, [r2, #16]
	while(!(I2C2->SR1 & I2C_SR1_TXE));
 8001af0:	bf00      	nop
 8001af2:	4b0d      	ldr	r3, [pc, #52]	; (8001b28 <gb_i2c2_address_send_w+0x48>)
 8001af4:	695b      	ldr	r3, [r3, #20]
 8001af6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d0f9      	beq.n	8001af2 <gb_i2c2_address_send_w+0x12>
	while(!(I2C2->SR1 & I2C_SR1_ADDR));  // Wait till address byte is being transmitted: ADDR bit set on succesful transmission of address
 8001afe:	bf00      	nop
 8001b00:	4b09      	ldr	r3, [pc, #36]	; (8001b28 <gb_i2c2_address_send_w+0x48>)
 8001b02:	695b      	ldr	r3, [r3, #20]
 8001b04:	f003 0302 	and.w	r3, r3, #2
 8001b08:	2b00      	cmp	r3, #0
 8001b0a:	d0f9      	beq.n	8001b00 <gb_i2c2_address_send_w+0x20>

	//Clearing the ADDR bit
	gb_read_reg = I2C2->SR1;
 8001b0c:	4b06      	ldr	r3, [pc, #24]	; (8001b28 <gb_i2c2_address_send_w+0x48>)
 8001b0e:	695b      	ldr	r3, [r3, #20]
 8001b10:	4a06      	ldr	r2, [pc, #24]	; (8001b2c <gb_i2c2_address_send_w+0x4c>)
 8001b12:	6013      	str	r3, [r2, #0]
	gb_read_reg = I2C2->SR2;
 8001b14:	4b04      	ldr	r3, [pc, #16]	; (8001b28 <gb_i2c2_address_send_w+0x48>)
 8001b16:	699b      	ldr	r3, [r3, #24]
 8001b18:	4a04      	ldr	r2, [pc, #16]	; (8001b2c <gb_i2c2_address_send_w+0x4c>)
 8001b1a:	6013      	str	r3, [r2, #0]

	//while(!(I2C2->SR1 & I2C_SR1_TXE)); //(EV8_1)wait for data register to get empty on transmission of data
}
 8001b1c:	bf00      	nop
 8001b1e:	370c      	adds	r7, #12
 8001b20:	46bd      	mov	sp, r7
 8001b22:	bc80      	pop	{r7}
 8001b24:	4770      	bx	lr
 8001b26:	bf00      	nop
 8001b28:	40005800 	.word	0x40005800
 8001b2c:	200001f8 	.word	0x200001f8

08001b30 <gb_i2c2_master_send_byte>:
void gb_i2c2_master_send_byte(uint8_t gb_data)//EV8
{
 8001b30:	b480      	push	{r7}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	4603      	mov	r3, r0
 8001b38:	71fb      	strb	r3, [r7, #7]
	I2C2->DR = gb_data; // send data byte on data register
 8001b3a:	4a08      	ldr	r2, [pc, #32]	; (8001b5c <gb_i2c2_master_send_byte+0x2c>)
 8001b3c:	79fb      	ldrb	r3, [r7, #7]
 8001b3e:	6113      	str	r3, [r2, #16]
	while(!(I2C2->SR1 & I2C_SR1_TXE));  //wait for data register to get empty on transmission of data
 8001b40:	bf00      	nop
 8001b42:	4b06      	ldr	r3, [pc, #24]	; (8001b5c <gb_i2c2_master_send_byte+0x2c>)
 8001b44:	695b      	ldr	r3, [r3, #20]
 8001b46:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d0f9      	beq.n	8001b42 <gb_i2c2_master_send_byte+0x12>
}
 8001b4e:	bf00      	nop
 8001b50:	bf00      	nop
 8001b52:	370c      	adds	r7, #12
 8001b54:	46bd      	mov	sp, r7
 8001b56:	bc80      	pop	{r7}
 8001b58:	4770      	bx	lr
 8001b5a:	bf00      	nop
 8001b5c:	40005800 	.word	0x40005800

08001b60 <gb_i2c2_master_stop_generation>:

	return data;
}

void gb_i2c2_master_stop_generation()
{
 8001b60:	b480      	push	{r7}
 8001b62:	af00      	add	r7, sp, #0
	I2C2->CR1 |= I2C_CR1_STOP;
 8001b64:	4b04      	ldr	r3, [pc, #16]	; (8001b78 <gb_i2c2_master_stop_generation+0x18>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	4a03      	ldr	r2, [pc, #12]	; (8001b78 <gb_i2c2_master_stop_generation+0x18>)
 8001b6a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001b6e:	6013      	str	r3, [r2, #0]

}
 8001b70:	bf00      	nop
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bc80      	pop	{r7}
 8001b76:	4770      	bx	lr
 8001b78:	40005800 	.word	0x40005800

08001b7c <MCO_pin_conf>:
 * 5) Enable the PLL source and wait for it to become stable
 * 6) Enable the Clock source and wait for it to be set
 */

void MCO_pin_conf()
{
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001b80:	4b0d      	ldr	r3, [pc, #52]	; (8001bb8 <MCO_pin_conf+0x3c>)
 8001b82:	699b      	ldr	r3, [r3, #24]
 8001b84:	4a0c      	ldr	r2, [pc, #48]	; (8001bb8 <MCO_pin_conf+0x3c>)
 8001b86:	f043 0304 	orr.w	r3, r3, #4
 8001b8a:	6193      	str	r3, [r2, #24]
				 GPIOA->CRH &= ~(GPIO_CRH_MODE8 | GPIO_CRH_CNF8);
 8001b8c:	4b0b      	ldr	r3, [pc, #44]	; (8001bbc <MCO_pin_conf+0x40>)
 8001b8e:	685b      	ldr	r3, [r3, #4]
 8001b90:	4a0a      	ldr	r2, [pc, #40]	; (8001bbc <MCO_pin_conf+0x40>)
 8001b92:	f023 030f 	bic.w	r3, r3, #15
 8001b96:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO PIN MODE AS OUTPUT MAX SPEED 50MHZ
				 GPIOA->CRH |= ( GPIO_CRH_MODE8_1 | GPIO_CRH_MODE8_0);
 8001b98:	4b08      	ldr	r3, [pc, #32]	; (8001bbc <MCO_pin_conf+0x40>)
 8001b9a:	685b      	ldr	r3, [r3, #4]
 8001b9c:	4a07      	ldr	r2, [pc, #28]	; (8001bbc <MCO_pin_conf+0x40>)
 8001b9e:	f043 0303 	orr.w	r3, r3, #3
 8001ba2:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO OUTPUT MODE AS alternate function push-pull
				 GPIOA->CRH |= ((GPIO_CRH_CNF8_1) | ~(GPIO_CRH_CNF8_0));
 8001ba4:	4b05      	ldr	r3, [pc, #20]	; (8001bbc <MCO_pin_conf+0x40>)
 8001ba6:	685b      	ldr	r3, [r3, #4]
 8001ba8:	4a04      	ldr	r2, [pc, #16]	; (8001bbc <MCO_pin_conf+0x40>)
 8001baa:	f063 0304 	orn	r3, r3, #4
 8001bae:	6053      	str	r3, [r2, #4]
}
 8001bb0:	bf00      	nop
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	bc80      	pop	{r7}
 8001bb6:	4770      	bx	lr
 8001bb8:	40021000 	.word	0x40021000
 8001bbc:	40010800 	.word	0x40010800

08001bc0 <system_clk>:

void system_clk()
{
 8001bc0:	b580      	push	{r7, lr}
 8001bc2:	af00      	add	r7, sp, #0
	//ENABLE HSE & WAIT FOR HSE TO BECOME READY
	RCC->CR |= RCC_CR_HSEON ;   // HSE IS 8MHZ
 8001bc4:	4b25      	ldr	r3, [pc, #148]	; (8001c5c <system_clk+0x9c>)
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	4a24      	ldr	r2, [pc, #144]	; (8001c5c <system_clk+0x9c>)
 8001bca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001bce:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY))
 8001bd0:	bf00      	nop
 8001bd2:	4b22      	ldr	r3, [pc, #136]	; (8001c5c <system_clk+0x9c>)
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d0f9      	beq.n	8001bd2 <system_clk+0x12>
		 ;
	//configure flash prefetch and the latency related
	FLASH->ACR |= FLASH_ACR_PRFTBE|FLASH_ACR_LATENCY_1;
 8001bde:	4b20      	ldr	r3, [pc, #128]	; (8001c60 <system_clk+0xa0>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	4a1f      	ldr	r2, [pc, #124]	; (8001c60 <system_clk+0xa0>)
 8001be4:	f043 0312 	orr.w	r3, r3, #18
 8001be8:	6013      	str	r3, [r2, #0]
	// CONFIGURE PLL AND Buses(AHB,APB1,APB2)
	//PLL SOURCE: HERE  HSE IS USED AS SOURCE
	RCC->CFGR |= RCC_CFGR_PLLSRC;
 8001bea:	4b1c      	ldr	r3, [pc, #112]	; (8001c5c <system_clk+0x9c>)
 8001bec:	685b      	ldr	r3, [r3, #4]
 8001bee:	4a1b      	ldr	r2, [pc, #108]	; (8001c5c <system_clk+0x9c>)
 8001bf0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001bf4:	6053      	str	r3, [r2, #4]
	//HSE DEVIDER FOR PLL(IF HSE IS USED AS SOURCE FOR PLL) : NOT DIVIDING CLOCK
	RCC->CFGR |= RCC_CFGR_PLLXTPRE_HSE ;  // SO INPUT TO PLL IS 8MHZ
 8001bf6:	4b19      	ldr	r3, [pc, #100]	; (8001c5c <system_clk+0x9c>)
 8001bf8:	4a18      	ldr	r2, [pc, #96]	; (8001c5c <system_clk+0x9c>)
 8001bfa:	685b      	ldr	r3, [r3, #4]
 8001bfc:	6053      	str	r3, [r2, #4]
	//PLL MULTIPLIER: HERE I AM MULTIPLYING HSE OUTPUT WITH 4
	RCC->CFGR |= RCC_CFGR_PLLMULL4; //SO OUTPUT FROM PLL IS 32MHZ
 8001bfe:	4b17      	ldr	r3, [pc, #92]	; (8001c5c <system_clk+0x9c>)
 8001c00:	685b      	ldr	r3, [r3, #4]
 8001c02:	4a16      	ldr	r2, [pc, #88]	; (8001c5c <system_clk+0x9c>)
 8001c04:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001c08:	6053      	str	r3, [r2, #4]
	//BUS CLOCK CONFIGURE(APB1,APB2,AHB): NOT DIVIDING
	RCC->CFGR |= (RCC_CFGR_PPRE1_DIV1 | RCC_CFGR_PPRE2_DIV1 | RCC_CFGR_HPRE_DIV1);  // all buses runs at 32MHZ
 8001c0a:	4b14      	ldr	r3, [pc, #80]	; (8001c5c <system_clk+0x9c>)
 8001c0c:	4a13      	ldr	r2, [pc, #76]	; (8001c5c <system_clk+0x9c>)
 8001c0e:	685b      	ldr	r3, [r3, #4]
 8001c10:	6053      	str	r3, [r2, #4]
	//ENABLE THE PLL
	RCC->CR |= RCC_CR_PLLON;
 8001c12:	4b12      	ldr	r3, [pc, #72]	; (8001c5c <system_clk+0x9c>)
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	4a11      	ldr	r2, [pc, #68]	; (8001c5c <system_clk+0x9c>)
 8001c18:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001c1c:	6013      	str	r3, [r2, #0]
	//WAIT FOR PLL TO SET
	while(!(RCC->CR & RCC_CR_PLLRDY))
 8001c1e:	bf00      	nop
 8001c20:	4b0e      	ldr	r3, [pc, #56]	; (8001c5c <system_clk+0x9c>)
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	d0f9      	beq.n	8001c20 <system_clk+0x60>
			;

	 //ENABLE SYSTEMCLK AND WAIT
	 RCC->CFGR |= RCC_CFGR_SW_PLL;
 8001c2c:	4b0b      	ldr	r3, [pc, #44]	; (8001c5c <system_clk+0x9c>)
 8001c2e:	685b      	ldr	r3, [r3, #4]
 8001c30:	4a0a      	ldr	r2, [pc, #40]	; (8001c5c <system_clk+0x9c>)
 8001c32:	f043 0302 	orr.w	r3, r3, #2
 8001c36:	6053      	str	r3, [r2, #4]
	 while(!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 8001c38:	bf00      	nop
 8001c3a:	4b08      	ldr	r3, [pc, #32]	; (8001c5c <system_clk+0x9c>)
 8001c3c:	685b      	ldr	r3, [r3, #4]
 8001c3e:	f003 0308 	and.w	r3, r3, #8
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d0f9      	beq.n	8001c3a <system_clk+0x7a>
	 		 ;

	 MCO_pin_conf();
 8001c46:	f7ff ff99 	bl	8001b7c <MCO_pin_conf>
	 //CLOCK OUTPUT ON MCO PIN
	 RCC->CFGR |= RCC_CFGR_MCO_SYSCLK;
 8001c4a:	4b04      	ldr	r3, [pc, #16]	; (8001c5c <system_clk+0x9c>)
 8001c4c:	685b      	ldr	r3, [r3, #4]
 8001c4e:	4a03      	ldr	r2, [pc, #12]	; (8001c5c <system_clk+0x9c>)
 8001c50:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001c54:	6053      	str	r3, [r2, #4]
}
 8001c56:	bf00      	nop
 8001c58:	bd80      	pop	{r7, pc}
 8001c5a:	bf00      	nop
 8001c5c:	40021000 	.word	0x40021000
 8001c60:	40022000 	.word	0x40022000

08001c64 <ssd1306_init>:

/* Private variable */
static GB_SSD1306_t GB_SSD1306;

void ssd1306_init()
{
 8001c64:	b580      	push	{r7, lr}
 8001c66:	af00      	add	r7, sp, #0

	gb_i2c2_master_init();
 8001c68:	f7ff fefe 	bl	8001a68 <gb_i2c2_master_init>
	ssd1306_sendcommand(GB_SSD1306_DISPLAY_OFF); //0xAE
 8001c6c:	20ae      	movs	r0, #174	; 0xae
 8001c6e:	f000 f855 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_DISPLAY_CLOCK_DIV); //0xD5
 8001c72:	20d5      	movs	r0, #213	; 0xd5
 8001c74:	f000 f852 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x80);// A[7:4] = 1000, A[3:0] = 0000(clock divide ratio = 1)
 8001c78:	2080      	movs	r0, #128	; 0x80
 8001c7a:	f000 f84f 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_MULTIPLEX_RATIO); //0xA8
 8001c7e:	20a8      	movs	r0, #168	; 0xa8
 8001c80:	f000 f84c 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x3F);
 8001c84:	203f      	movs	r0, #63	; 0x3f
 8001c86:	f000 f849 	bl	8001d1c <ssd1306_sendcommand>

	ssd1306_sendcommand(GB_SSD1306_DISPLAY_OFFSET); //0xD3
 8001c8a:	20d3      	movs	r0, #211	; 0xd3
 8001c8c:	f000 f846 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x00); //Display start line starts from COM0 only, that is from ROW0
 8001c90:	2000      	movs	r0, #0
 8001c92:	f000 f843 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x40 | 0x00); //Display Start line: starting address of display RAM, by selecting a value from 0 to 63.
 8001c96:	2040      	movs	r0, #64	; 0x40
 8001c98:	f000 f840 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_CHARGEUP);//0x8D We use internal charge pump
 8001c9c:	208d      	movs	r0, #141	; 0x8d
 8001c9e:	f000 f83d 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x14);
 8001ca2:	2014      	movs	r0, #20
 8001ca4:	f000 f83a 	bl	8001d1c <ssd1306_sendcommand>

	ssd1306_sendcommand(GB_SSD1306_SET_MEMORY_ADDRESSING_COMMAND); //0x20
 8001ca8:	2020      	movs	r0, #32
 8001caa:	f000 f837 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_HORIZONTAL_ADDRESSING); //0x00
 8001cae:	2000      	movs	r0, #0
 8001cb0:	f000 f834 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_SEGMENT_REMAPPING_COM127_SEG0); //0xA0
 8001cb4:	20a1      	movs	r0, #161	; 0xa1
 8001cb6:	f000 f831 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_COM_SCAN_DIRECTION_REMAPPED_MODE); //0xC8
 8001cba:	20c8      	movs	r0, #200	; 0xc8
 8001cbc:	f000 f82e 	bl	8001d1c <ssd1306_sendcommand>


	ssd1306_sendcommand(GB_SSD1306_COM_HARDWARE_CONFIG_COMMAND); //0xDA
 8001cc0:	20da      	movs	r0, #218	; 0xda
 8001cc2:	f000 f82b 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_COM_HARDWARE_CONFIG_ALTERNATE_DISABLE_REMAP);//0x02
 8001cc6:	2012      	movs	r0, #18
 8001cc8:	f000 f828 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_CONTRAST); //0x81
 8001ccc:	2081      	movs	r0, #129	; 0x81
 8001cce:	f000 f825 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0xCF);
 8001cd2:	20cf      	movs	r0, #207	; 0xcf
 8001cd4:	f000 f822 	bl	8001d1c <ssd1306_sendcommand>

	ssd1306_sendcommand(GB_SSD1306_PRECHARGE);//0xD9
 8001cd8:	20d9      	movs	r0, #217	; 0xd9
 8001cda:	f000 f81f 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0xF1);
 8001cde:	20f1      	movs	r0, #241	; 0xf1
 8001ce0:	f000 f81c 	bl	8001d1c <ssd1306_sendcommand>

	ssd1306_sendcommand(GB_SSD1306_VCOMH_SELECT_COMMAND);
 8001ce4:	20db      	movs	r0, #219	; 0xdb
 8001ce6:	f000 f819 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(0x40); // to be checked
 8001cea:	2040      	movs	r0, #64	; 0x40
 8001cec:	f000 f816 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_DISPLAY_RESUME);//0xA4
 8001cf0:	20a4      	movs	r0, #164	; 0xa4
 8001cf2:	f000 f813 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_NORMAL_DISPLAY); //0xA6
 8001cf6:	20a6      	movs	r0, #166	; 0xa6
 8001cf8:	f000 f810 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_DISPLAY_ON);
 8001cfc:	20af      	movs	r0, #175	; 0xaf
 8001cfe:	f000 f80d 	bl	8001d1c <ssd1306_sendcommand>
	gb_i2c2_master_stop_generation(); // STOP Condition is generated
	delay_ms(100);
	*/

	/* Set default values */
		GB_SSD1306.CurrentX = 0;
 8001d02:	4b05      	ldr	r3, [pc, #20]	; (8001d18 <ssd1306_init+0xb4>)
 8001d04:	2200      	movs	r2, #0
 8001d06:	801a      	strh	r2, [r3, #0]
		GB_SSD1306.CurrentY = 0;
 8001d08:	4b03      	ldr	r3, [pc, #12]	; (8001d18 <ssd1306_init+0xb4>)
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	805a      	strh	r2, [r3, #2]

	/* Initialized OK */
	GB_SSD1306.Initialized = 1;
 8001d0e:	4b02      	ldr	r3, [pc, #8]	; (8001d18 <ssd1306_init+0xb4>)
 8001d10:	2201      	movs	r2, #1
 8001d12:	715a      	strb	r2, [r3, #5]

}
 8001d14:	bf00      	nop
 8001d16:	bd80      	pop	{r7, pc}
 8001d18:	200005fc 	.word	0x200005fc

08001d1c <ssd1306_sendcommand>:

void ssd1306_sendcommand(uint8_t command)
{
 8001d1c:	b580      	push	{r7, lr}
 8001d1e:	b082      	sub	sp, #8
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	4603      	mov	r3, r0
 8001d24:	71fb      	strb	r3, [r7, #7]
	gb_i2c2_start_condition_w(); // Start Condition For Writing
 8001d26:	f7ff febf 	bl	8001aa8 <gb_i2c2_start_condition_w>
	gb_i2c2_address_send_w(SSD1306_WA); // INA219 I2C address is sent with Write bit
 8001d2a:	2078      	movs	r0, #120	; 0x78
 8001d2c:	f7ff fed8 	bl	8001ae0 <gb_i2c2_address_send_w>
	gb_i2c2_master_send_byte(GB_SSD1306_CONTROL_BYTE_FOR_COMMAND); //0x00
 8001d30:	2000      	movs	r0, #0
 8001d32:	f7ff fefd 	bl	8001b30 <gb_i2c2_master_send_byte>
	gb_i2c2_master_send_byte(command);
 8001d36:	79fb      	ldrb	r3, [r7, #7]
 8001d38:	4618      	mov	r0, r3
 8001d3a:	f7ff fef9 	bl	8001b30 <gb_i2c2_master_send_byte>
	gb_i2c2_master_stop_generation(); // STOP Condition is generated
 8001d3e:	f7ff ff0f 	bl	8001b60 <gb_i2c2_master_stop_generation>

}
 8001d42:	bf00      	nop
 8001d44:	3708      	adds	r7, #8
 8001d46:	46bd      	mov	sp, r7
 8001d48:	bd80      	pop	{r7, pc}
	...

08001d4c <ssd1306_update_data>:
	gb_i2c2_master_send_byte(data);
	gb_i2c2_master_stop_generation(); // STOP Condition is generated

}
void ssd1306_update_data()
{
 8001d4c:	b580      	push	{r7, lr}
 8001d4e:	b082      	sub	sp, #8
 8001d50:	af00      	add	r7, sp, #0
	ssd1306_sendcommand(GB_SSD1306_SET_COLUMN_ADDRESS_HV_ADDRESSING_MODE_COMMAND);
 8001d52:	2021      	movs	r0, #33	; 0x21
 8001d54:	f7ff ffe2 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_COLUMN_START_ADDRESS_HV_ADDRESSING_MODE);
 8001d58:	2000      	movs	r0, #0
 8001d5a:	f7ff ffdf 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_COLUMN_END_ADDRESS_HV_ADDRESSING_MODE);
 8001d5e:	207f      	movs	r0, #127	; 0x7f
 8001d60:	f7ff ffdc 	bl	8001d1c <ssd1306_sendcommand>

	ssd1306_sendcommand(GB_SSD1306_PAGE_ADDRESS_HV_ADDRESSING_MODE_COMMAND);
 8001d64:	2022      	movs	r0, #34	; 0x22
 8001d66:	f7ff ffd9 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_PAGE_START_ADDRESS_HV_ADDRESSING_MODE);
 8001d6a:	2000      	movs	r0, #0
 8001d6c:	f7ff ffd6 	bl	8001d1c <ssd1306_sendcommand>
	ssd1306_sendcommand(GB_SSD1306_PAGE_END_ADDRESS_HV_ADDRESSING_MODE);
 8001d70:	207d      	movs	r0, #125	; 0x7d
 8001d72:	f7ff ffd3 	bl	8001d1c <ssd1306_sendcommand>

	  for (uint8_t packet = 0; packet < GB_SSD1306_HEIGHT; packet++) {
 8001d76:	2300      	movs	r3, #0
 8001d78:	71fb      	strb	r3, [r7, #7]
 8001d7a:	e01c      	b.n	8001db6 <ssd1306_update_data+0x6a>
		  gb_i2c2_start_condition_w(); // Start Condition For Writing
 8001d7c:	f7ff fe94 	bl	8001aa8 <gb_i2c2_start_condition_w>
		  gb_i2c2_address_send_w(SSD1306_WA); // INA219 I2C address is sent with Write bit
 8001d80:	2078      	movs	r0, #120	; 0x78
 8001d82:	f7ff fead 	bl	8001ae0 <gb_i2c2_address_send_w>
		  gb_i2c2_master_send_byte(GB_SSD1306_CONTROL_BYTE_FOR_DATA);
 8001d86:	2040      	movs	r0, #64	; 0x40
 8001d88:	f7ff fed2 	bl	8001b30 <gb_i2c2_master_send_byte>
	        for (uint8_t packet_byte = 0; packet_byte < 16; ++packet_byte) {
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	71bb      	strb	r3, [r7, #6]
 8001d90:	e00b      	b.n	8001daa <ssd1306_update_data+0x5e>
	        	gb_i2c2_master_send_byte(GB_SSD1306_Buffer[packet*16+packet_byte]);
 8001d92:	79fb      	ldrb	r3, [r7, #7]
 8001d94:	011a      	lsls	r2, r3, #4
 8001d96:	79bb      	ldrb	r3, [r7, #6]
 8001d98:	4413      	add	r3, r2
 8001d9a:	4a0b      	ldr	r2, [pc, #44]	; (8001dc8 <ssd1306_update_data+0x7c>)
 8001d9c:	5cd3      	ldrb	r3, [r2, r3]
 8001d9e:	4618      	mov	r0, r3
 8001da0:	f7ff fec6 	bl	8001b30 <gb_i2c2_master_send_byte>
	        for (uint8_t packet_byte = 0; packet_byte < 16; ++packet_byte) {
 8001da4:	79bb      	ldrb	r3, [r7, #6]
 8001da6:	3301      	adds	r3, #1
 8001da8:	71bb      	strb	r3, [r7, #6]
 8001daa:	79bb      	ldrb	r3, [r7, #6]
 8001dac:	2b0f      	cmp	r3, #15
 8001dae:	d9f0      	bls.n	8001d92 <ssd1306_update_data+0x46>
	  for (uint8_t packet = 0; packet < GB_SSD1306_HEIGHT; packet++) {
 8001db0:	79fb      	ldrb	r3, [r7, #7]
 8001db2:	3301      	adds	r3, #1
 8001db4:	71fb      	strb	r3, [r7, #7]
 8001db6:	79fb      	ldrb	r3, [r7, #7]
 8001db8:	2b3f      	cmp	r3, #63	; 0x3f
 8001dba:	d9df      	bls.n	8001d7c <ssd1306_update_data+0x30>
	        }
	  }
	        gb_i2c2_master_stop_generation(); // STOP Condition is generated
 8001dbc:	f7ff fed0 	bl	8001b60 <gb_i2c2_master_stop_generation>
}
 8001dc0:	bf00      	nop
 8001dc2:	3708      	adds	r7, #8
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	bd80      	pop	{r7, pc}
 8001dc8:	200001fc 	.word	0x200001fc

08001dcc <ssd1306_GotoXY>:
/*
 * x is column[0-127]
 * y is row[0-63]
 */
void ssd1306_GotoXY( uint16_t x,uint16_t y)
{
 8001dcc:	b480      	push	{r7}
 8001dce:	b083      	sub	sp, #12
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	460a      	mov	r2, r1
 8001dd6:	80fb      	strh	r3, [r7, #6]
 8001dd8:	4613      	mov	r3, r2
 8001dda:	80bb      	strh	r3, [r7, #4]
	/* Set write pointers */
		GB_SSD1306.CurrentX = x;
 8001ddc:	4a05      	ldr	r2, [pc, #20]	; (8001df4 <ssd1306_GotoXY+0x28>)
 8001dde:	88fb      	ldrh	r3, [r7, #6]
 8001de0:	8013      	strh	r3, [r2, #0]
		GB_SSD1306.CurrentY = y;
 8001de2:	4a04      	ldr	r2, [pc, #16]	; (8001df4 <ssd1306_GotoXY+0x28>)
 8001de4:	88bb      	ldrh	r3, [r7, #4]
 8001de6:	8053      	strh	r3, [r2, #2]
}
 8001de8:	bf00      	nop
 8001dea:	370c      	adds	r7, #12
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bc80      	pop	{r7}
 8001df0:	4770      	bx	lr
 8001df2:	bf00      	nop
 8001df4:	200005fc 	.word	0x200005fc

08001df8 <ssd1306_clear>:
}
/*
 *  Fills entire LCD with desired color
 */
void ssd1306_clear(GB_SSD1306_COLOR_t color)
{
 8001df8:	b580      	push	{r7, lr}
 8001dfa:	b082      	sub	sp, #8
 8001dfc:	af00      	add	r7, sp, #0
 8001dfe:	4603      	mov	r3, r0
 8001e00:	71fb      	strb	r3, [r7, #7]
	memset(GB_SSD1306_Buffer, (color == GB_SSD1306_COLOR_BLACK) ? 0x00 : 0xFF, sizeof(GB_SSD1306_Buffer));
 8001e02:	79fb      	ldrb	r3, [r7, #7]
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d101      	bne.n	8001e0c <ssd1306_clear+0x14>
 8001e08:	2300      	movs	r3, #0
 8001e0a:	e000      	b.n	8001e0e <ssd1306_clear+0x16>
 8001e0c:	23ff      	movs	r3, #255	; 0xff
 8001e0e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e12:	4619      	mov	r1, r3
 8001e14:	4803      	ldr	r0, [pc, #12]	; (8001e24 <ssd1306_clear+0x2c>)
 8001e16:	f000 fb27 	bl	8002468 <memset>
}
 8001e1a:	bf00      	nop
 8001e1c:	3708      	adds	r7, #8
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	bd80      	pop	{r7, pc}
 8001e22:	bf00      	nop
 8001e24:	200001fc 	.word	0x200001fc

08001e28 <ssd1306_print_char>:
 * 5 is no of columns: font width // x is width : CurrentX :0-127
 * 8 is no of rows: font height   //y is height : CurrentY : 0-63
 *
 */
char ssd1306_print_char(char ch, GB_SSD1306_COLOR_t color)
{
 8001e28:	b480      	push	{r7}
 8001e2a:	b085      	sub	sp, #20
 8001e2c:	af00      	add	r7, sp, #0
 8001e2e:	4603      	mov	r3, r0
 8001e30:	460a      	mov	r2, r1
 8001e32:	71fb      	strb	r3, [r7, #7]
 8001e34:	4613      	mov	r3, r2
 8001e36:	71bb      	strb	r3, [r7, #6]

	uint32_t Font_byte_value;

	for (uint32_t i = 0; i < 5 ; i++) // Font Width
 8001e38:	2300      	movs	r3, #0
 8001e3a:	60fb      	str	r3, [r7, #12]
 8001e3c:	e034      	b.n	8001ea8 <ssd1306_print_char+0x80>
	{
			Font_byte_value = SSD1306_font5x8[(ch - 32)][i]; //mapping the vales of bits for rinting the character ch
 8001e3e:	79fb      	ldrb	r3, [r7, #7]
 8001e40:	f1a3 0220 	sub.w	r2, r3, #32
 8001e44:	491d      	ldr	r1, [pc, #116]	; (8001ebc <ssd1306_print_char+0x94>)
 8001e46:	4613      	mov	r3, r2
 8001e48:	009b      	lsls	r3, r3, #2
 8001e4a:	4413      	add	r3, r2
 8001e4c:	18ca      	adds	r2, r1, r3
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	4413      	add	r3, r2
 8001e52:	781b      	ldrb	r3, [r3, #0]
 8001e54:	60bb      	str	r3, [r7, #8]

			if (color == GB_SSD1306_COLOR_WHITE)
 8001e56:	79bb      	ldrb	r3, [r7, #6]
 8001e58:	2b01      	cmp	r3, #1
 8001e5a:	d10d      	bne.n	8001e78 <ssd1306_print_char+0x50>
			{
				GB_SSD1306_Buffer[GB_SSD1306.CurrentX + (GB_SSD1306.CurrentY / 8) * GB_SSD1306_WIDTH] = Font_byte_value;
 8001e5c:	4b18      	ldr	r3, [pc, #96]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001e5e:	881b      	ldrh	r3, [r3, #0]
 8001e60:	461a      	mov	r2, r3
 8001e62:	4b17      	ldr	r3, [pc, #92]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001e64:	885b      	ldrh	r3, [r3, #2]
 8001e66:	08db      	lsrs	r3, r3, #3
 8001e68:	b29b      	uxth	r3, r3
 8001e6a:	01db      	lsls	r3, r3, #7
 8001e6c:	4413      	add	r3, r2
 8001e6e:	68ba      	ldr	r2, [r7, #8]
 8001e70:	b2d1      	uxtb	r1, r2
 8001e72:	4a14      	ldr	r2, [pc, #80]	; (8001ec4 <ssd1306_print_char+0x9c>)
 8001e74:	54d1      	strb	r1, [r2, r3]
 8001e76:	e00e      	b.n	8001e96 <ssd1306_print_char+0x6e>
			}else
			{
				GB_SSD1306_Buffer[GB_SSD1306.CurrentX + (GB_SSD1306.CurrentY / 8) * GB_SSD1306_WIDTH] = ~Font_byte_value;
 8001e78:	68bb      	ldr	r3, [r7, #8]
 8001e7a:	b2da      	uxtb	r2, r3
 8001e7c:	4b10      	ldr	r3, [pc, #64]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001e7e:	881b      	ldrh	r3, [r3, #0]
 8001e80:	4619      	mov	r1, r3
 8001e82:	4b0f      	ldr	r3, [pc, #60]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001e84:	885b      	ldrh	r3, [r3, #2]
 8001e86:	08db      	lsrs	r3, r3, #3
 8001e88:	b29b      	uxth	r3, r3
 8001e8a:	01db      	lsls	r3, r3, #7
 8001e8c:	440b      	add	r3, r1
 8001e8e:	43d2      	mvns	r2, r2
 8001e90:	b2d1      	uxtb	r1, r2
 8001e92:	4a0c      	ldr	r2, [pc, #48]	; (8001ec4 <ssd1306_print_char+0x9c>)
 8001e94:	54d1      	strb	r1, [r2, r3]
			}

		  GB_SSD1306.CurrentX ++;
 8001e96:	4b0a      	ldr	r3, [pc, #40]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001e98:	881b      	ldrh	r3, [r3, #0]
 8001e9a:	3301      	adds	r3, #1
 8001e9c:	b29a      	uxth	r2, r3
 8001e9e:	4b08      	ldr	r3, [pc, #32]	; (8001ec0 <ssd1306_print_char+0x98>)
 8001ea0:	801a      	strh	r2, [r3, #0]
	for (uint32_t i = 0; i < 5 ; i++) // Font Width
 8001ea2:	68fb      	ldr	r3, [r7, #12]
 8001ea4:	3301      	adds	r3, #1
 8001ea6:	60fb      	str	r3, [r7, #12]
 8001ea8:	68fb      	ldr	r3, [r7, #12]
 8001eaa:	2b04      	cmp	r3, #4
 8001eac:	d9c7      	bls.n	8001e3e <ssd1306_print_char+0x16>
		}

	/* Return character written */
		return ch;
 8001eae:	79fb      	ldrb	r3, [r7, #7]

}
 8001eb0:	4618      	mov	r0, r3
 8001eb2:	3714      	adds	r7, #20
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	bc80      	pop	{r7}
 8001eb8:	4770      	bx	lr
 8001eba:	bf00      	nop
 8001ebc:	08007190 	.word	0x08007190
 8001ec0:	200005fc 	.word	0x200005fc
 8001ec4:	200001fc 	.word	0x200001fc

08001ec8 <ssd1306_print_string>:

char ssd1306_print_string(char* str, GB_SSD1306_COLOR_t color)
{
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	b082      	sub	sp, #8
 8001ecc:	af00      	add	r7, sp, #0
 8001ece:	6078      	str	r0, [r7, #4]
 8001ed0:	460b      	mov	r3, r1
 8001ed2:	70fb      	strb	r3, [r7, #3]
	while (*str)
 8001ed4:	e008      	b.n	8001ee8 <ssd1306_print_string+0x20>
	{
		ssd1306_print_char(*str++, (GB_SSD1306_COLOR_t) color);
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	1c5a      	adds	r2, r3, #1
 8001eda:	607a      	str	r2, [r7, #4]
 8001edc:	781b      	ldrb	r3, [r3, #0]
 8001ede:	78fa      	ldrb	r2, [r7, #3]
 8001ee0:	4611      	mov	r1, r2
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	f7ff ffa0 	bl	8001e28 <ssd1306_print_char>
	while (*str)
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	d1f2      	bne.n	8001ed6 <ssd1306_print_string+0xe>
	}
	/* Everything OK, zero should be returned */
		return *str;
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	781b      	ldrb	r3, [r3, #0]
}
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	3708      	adds	r7, #8
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	bd80      	pop	{r7, pc}

08001efc <ssd1306_float>:
		ssd1306_print_char(gb_buf[gb_ptr], (GB_SSD1306_COLOR_t) color);
	}
}

void ssd1306_float(float gb_value, GB_SSD1306_COLOR_t color)
{
 8001efc:	b580      	push	{r7, lr}
 8001efe:	b086      	sub	sp, #24
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	6078      	str	r0, [r7, #4]
 8001f04:	460b      	mov	r3, r1
 8001f06:	70fb      	strb	r3, [r7, #3]
	char gb_float_buff[10];
	sprintf(gb_float_buff,"%.2f",gb_value);
 8001f08:	6878      	ldr	r0, [r7, #4]
 8001f0a:	f7fe fa9d 	bl	8000448 <__aeabi_f2d>
 8001f0e:	4602      	mov	r2, r0
 8001f10:	460b      	mov	r3, r1
 8001f12:	f107 000c 	add.w	r0, r7, #12
 8001f16:	4907      	ldr	r1, [pc, #28]	; (8001f34 <ssd1306_float+0x38>)
 8001f18:	f001 f924 	bl	8003164 <siprintf>
	ssd1306_print_string(gb_float_buff,(GB_SSD1306_COLOR_t) color );
 8001f1c:	78fa      	ldrb	r2, [r7, #3]
 8001f1e:	f107 030c 	add.w	r3, r7, #12
 8001f22:	4611      	mov	r1, r2
 8001f24:	4618      	mov	r0, r3
 8001f26:	f7ff ffcf 	bl	8001ec8 <ssd1306_print_string>

}
 8001f2a:	bf00      	nop
 8001f2c:	3718      	adds	r7, #24
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bd80      	pop	{r7, pc}
 8001f32:	bf00      	nop
 8001f34:	08007150 	.word	0x08007150

08001f38 <timer_initialise>:
 * 1 us = 1 count
 * 1ms = 1000us
 * 1 sec = 1000ms
 */
 void timer_initialise()
{
 8001f38:	b480      	push	{r7}
 8001f3a:	af00      	add	r7, sp, #0
	// Start by making sure the timer's 'counter' is off
	TIM2->CR1 &= ~(TIM_CR1_CEN);
 8001f3c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f46:	f023 0301 	bic.w	r3, r3, #1
 8001f4a:	6013      	str	r3, [r2, #0]
	TIM2->SR &= ~(TIM_SR_UIF);
 8001f4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f50:	691b      	ldr	r3, [r3, #16]
 8001f52:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f56:	f023 0301 	bic.w	r3, r3, #1
 8001f5a:	6113      	str	r3, [r2, #16]

	//RESET THE TIMER2 BUS
	RCC->APB1RSTR |=  (RCC_APB1RSTR_TIM2RST);
 8001f5c:	4b1f      	ldr	r3, [pc, #124]	; (8001fdc <timer_initialise+0xa4>)
 8001f5e:	691b      	ldr	r3, [r3, #16]
 8001f60:	4a1e      	ldr	r2, [pc, #120]	; (8001fdc <timer_initialise+0xa4>)
 8001f62:	f043 0301 	orr.w	r3, r3, #1
 8001f66:	6113      	str	r3, [r2, #16]
	RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM2RST);
 8001f68:	4b1c      	ldr	r3, [pc, #112]	; (8001fdc <timer_initialise+0xa4>)
 8001f6a:	691b      	ldr	r3, [r3, #16]
 8001f6c:	4a1b      	ldr	r2, [pc, #108]	; (8001fdc <timer_initialise+0xa4>)
 8001f6e:	f023 0301 	bic.w	r3, r3, #1
 8001f72:	6113      	str	r3, [r2, #16]


	//Enable Timer2 peripheral clock
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001f74:	4b19      	ldr	r3, [pc, #100]	; (8001fdc <timer_initialise+0xa4>)
 8001f76:	69db      	ldr	r3, [r3, #28]
 8001f78:	4a18      	ldr	r2, [pc, #96]	; (8001fdc <timer_initialise+0xa4>)
 8001f7a:	f043 0301 	orr.w	r3, r3, #1
 8001f7e:	61d3      	str	r3, [r2, #28]


    TIM2-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
 8001f80:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f8a:	f043 0302 	orr.w	r3, r3, #2
 8001f8e:	6013      	str	r3, [r2, #0]
/**********************for example 1*******************************/
    //Timer prescaler value
    TIM2->PSC = 32;
 8001f90:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f94:	2220      	movs	r2, #32
 8001f96:	629a      	str	r2, [r3, #40]	; 0x28
    //TIM2->PSC = 0;
    //Timer Auto reload register value
    TIM2->ARR = 0xffff;
 8001f98:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001fa0:	62da      	str	r2, [r3, #44]	; 0x2c
    //65535
    //TIM2->ARR = 32;

    TIM2-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 8001fa2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fac:	f023 0302 	bic.w	r3, r3, #2
 8001fb0:	6013      	str	r3, [r2, #0]

   //Enable the update generation for updating the shadow register with preload register contents with new values
   TIM2->EGR |= TIM_EGR_UG;
 8001fb2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fb6:	695b      	ldr	r3, [r3, #20]
 8001fb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fbc:	f043 0301 	orr.w	r3, r3, #1
 8001fc0:	6153      	str	r3, [r2, #20]
   //Clear the UIF flag as that is set when UG bit is set in EGR to update the content of my register
   TIM2->SR &= ~(TIM_SR_UIF);
 8001fc2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fc6:	691b      	ldr	r3, [r3, #16]
 8001fc8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fcc:	f023 0301 	bic.w	r3, r3, #1
 8001fd0:	6113      	str	r3, [r2, #16]
}
 8001fd2:	bf00      	nop
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	bc80      	pop	{r7}
 8001fd8:	4770      	bx	lr
 8001fda:	bf00      	nop
 8001fdc:	40021000 	.word	0x40021000

08001fe0 <delay_us>:
void delay_us(uint16_t us)
{
 8001fe0:	b480      	push	{r7}
 8001fe2:	b083      	sub	sp, #12
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	4603      	mov	r3, r0
 8001fe8:	80fb      	strh	r3, [r7, #6]
	TIM2->CR1 |= TIM_CR1_CEN;
 8001fea:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001ff4:	f043 0301 	orr.w	r3, r3, #1
 8001ff8:	6013      	str	r3, [r2, #0]
	//TIM2-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
	//TIM2->EGR |= TIM_EGR_UG; // SET UG bit to reinitailse the counter register with 0
	TIM2->CNT=0; // initialise counter register
 8001ffa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001ffe:	2200      	movs	r2, #0
 8002000:	625a      	str	r2, [r3, #36]	; 0x24
	//while(!(TIM2->SR & (1<<TIM_SR_UIF)));
	//TIM2->SR &= ~(TIM_SR_UIF); //clear the update interrupt flag as this is set when CNT is reinitialsed with 0
	while(TIM2->CNT < us)
 8002002:	bf00      	nop
 8002004:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002008:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800200a:	88fb      	ldrh	r3, [r7, #6]
 800200c:	429a      	cmp	r2, r3
 800200e:	d3f9      	bcc.n	8002004 <delay_us+0x24>
	{	//uart_tran_dec(TIM2->CNT);
	}
	//TIM2->CR1 &= ~TIM_CR1_CEN;

}
 8002010:	bf00      	nop
 8002012:	bf00      	nop
 8002014:	370c      	adds	r7, #12
 8002016:	46bd      	mov	sp, r7
 8002018:	bc80      	pop	{r7}
 800201a:	4770      	bx	lr

0800201c <delay_ms>:
void delay_ms(uint16_t ms)
{
 800201c:	b580      	push	{r7, lr}
 800201e:	b084      	sub	sp, #16
 8002020:	af00      	add	r7, sp, #0
 8002022:	4603      	mov	r3, r0
 8002024:	80fb      	strh	r3, [r7, #6]
	for (uint16_t i=0; i<ms; i++)
 8002026:	2300      	movs	r3, #0
 8002028:	81fb      	strh	r3, [r7, #14]
 800202a:	e006      	b.n	800203a <delay_ms+0x1e>
	delay_us(1000);
 800202c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002030:	f7ff ffd6 	bl	8001fe0 <delay_us>
	for (uint16_t i=0; i<ms; i++)
 8002034:	89fb      	ldrh	r3, [r7, #14]
 8002036:	3301      	adds	r3, #1
 8002038:	81fb      	strh	r3, [r7, #14]
 800203a:	89fa      	ldrh	r2, [r7, #14]
 800203c:	88fb      	ldrh	r3, [r7, #6]
 800203e:	429a      	cmp	r2, r3
 8002040:	d3f4      	bcc.n	800202c <delay_ms+0x10>
}
 8002042:	bf00      	nop
 8002044:	bf00      	nop
 8002046:	3710      	adds	r7, #16
 8002048:	46bd      	mov	sp, r7
 800204a:	bd80      	pop	{r7, pc}

0800204c <__NVIC_EnableIRQ>:
{
 800204c:	b480      	push	{r7}
 800204e:	b083      	sub	sp, #12
 8002050:	af00      	add	r7, sp, #0
 8002052:	4603      	mov	r3, r0
 8002054:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002056:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800205a:	2b00      	cmp	r3, #0
 800205c:	db0b      	blt.n	8002076 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205e:	79fb      	ldrb	r3, [r7, #7]
 8002060:	f003 021f 	and.w	r2, r3, #31
 8002064:	4906      	ldr	r1, [pc, #24]	; (8002080 <__NVIC_EnableIRQ+0x34>)
 8002066:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800206a:	095b      	lsrs	r3, r3, #5
 800206c:	2001      	movs	r0, #1
 800206e:	fa00 f202 	lsl.w	r2, r0, r2
 8002072:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8002076:	bf00      	nop
 8002078:	370c      	adds	r7, #12
 800207a:	46bd      	mov	sp, r7
 800207c:	bc80      	pop	{r7}
 800207e:	4770      	bx	lr
 8002080:	e000e100 	.word	0xe000e100

08002084 <__NVIC_SetPriority>:
{
 8002084:	b480      	push	{r7}
 8002086:	b083      	sub	sp, #12
 8002088:	af00      	add	r7, sp, #0
 800208a:	4603      	mov	r3, r0
 800208c:	6039      	str	r1, [r7, #0]
 800208e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002090:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002094:	2b00      	cmp	r3, #0
 8002096:	db0a      	blt.n	80020ae <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002098:	683b      	ldr	r3, [r7, #0]
 800209a:	b2da      	uxtb	r2, r3
 800209c:	490c      	ldr	r1, [pc, #48]	; (80020d0 <__NVIC_SetPriority+0x4c>)
 800209e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020a2:	0112      	lsls	r2, r2, #4
 80020a4:	b2d2      	uxtb	r2, r2
 80020a6:	440b      	add	r3, r1
 80020a8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80020ac:	e00a      	b.n	80020c4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80020ae:	683b      	ldr	r3, [r7, #0]
 80020b0:	b2da      	uxtb	r2, r3
 80020b2:	4908      	ldr	r1, [pc, #32]	; (80020d4 <__NVIC_SetPriority+0x50>)
 80020b4:	79fb      	ldrb	r3, [r7, #7]
 80020b6:	f003 030f 	and.w	r3, r3, #15
 80020ba:	3b04      	subs	r3, #4
 80020bc:	0112      	lsls	r2, r2, #4
 80020be:	b2d2      	uxtb	r2, r2
 80020c0:	440b      	add	r3, r1
 80020c2:	761a      	strb	r2, [r3, #24]
}
 80020c4:	bf00      	nop
 80020c6:	370c      	adds	r7, #12
 80020c8:	46bd      	mov	sp, r7
 80020ca:	bc80      	pop	{r7}
 80020cc:	4770      	bx	lr
 80020ce:	bf00      	nop
 80020d0:	e000e100 	.word	0xe000e100
 80020d4:	e000ed00 	.word	0xe000ed00

080020d8 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80020d8:	b480      	push	{r7}
 80020da:	b083      	sub	sp, #12
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80020e0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80020e4:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80020e8:	f003 0301 	and.w	r3, r3, #1
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d013      	beq.n	8002118 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80020f0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80020f4:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80020f8:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d00b      	beq.n	8002118 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8002100:	e000      	b.n	8002104 <ITM_SendChar+0x2c>
    {
      __NOP();
 8002102:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8002104:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	2b00      	cmp	r3, #0
 800210c:	d0f9      	beq.n	8002102 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800210e:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002112:	687a      	ldr	r2, [r7, #4]
 8002114:	b2d2      	uxtb	r2, r2
 8002116:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8002118:	687b      	ldr	r3, [r7, #4]
}
 800211a:	4618      	mov	r0, r3
 800211c:	370c      	adds	r7, #12
 800211e:	46bd      	mov	sp, r7
 8002120:	bc80      	pop	{r7}
 8002122:	4770      	bx	lr

08002124 <_write>:
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )


int _write(int file, char *ptr, int len)
{
 8002124:	b580      	push	{r7, lr}
 8002126:	b086      	sub	sp, #24
 8002128:	af00      	add	r7, sp, #0
 800212a:	60f8      	str	r0, [r7, #12]
 800212c:	60b9      	str	r1, [r7, #8]
 800212e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002130:	2300      	movs	r3, #0
 8002132:	617b      	str	r3, [r7, #20]
 8002134:	e009      	b.n	800214a <_write+0x26>
	{
		//__io_putchar(*ptr++);
		 ITM_SendChar(*ptr++);
 8002136:	68bb      	ldr	r3, [r7, #8]
 8002138:	1c5a      	adds	r2, r3, #1
 800213a:	60ba      	str	r2, [r7, #8]
 800213c:	781b      	ldrb	r3, [r3, #0]
 800213e:	4618      	mov	r0, r3
 8002140:	f7ff ffca 	bl	80020d8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	3301      	adds	r3, #1
 8002148:	617b      	str	r3, [r7, #20]
 800214a:	697a      	ldr	r2, [r7, #20]
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	429a      	cmp	r2, r3
 8002150:	dbf1      	blt.n	8002136 <_write+0x12>
	}
	return len;
 8002152:	687b      	ldr	r3, [r7, #4]
}
 8002154:	4618      	mov	r0, r3
 8002156:	3718      	adds	r7, #24
 8002158:	46bd      	mov	sp, r7
 800215a:	bd80      	pop	{r7, pc}

0800215c <main>:

char rx_buf[1025];
char tx_buf[10];

int main(void)
{
 800215c:	b580      	push	{r7, lr}
 800215e:	b082      	sub	sp, #8
 8002160:	af00      	add	r7, sp, #0

    RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 8002162:	4b32      	ldr	r3, [pc, #200]	; (800222c <main+0xd0>)
 8002164:	699b      	ldr	r3, [r3, #24]
 8002166:	4a31      	ldr	r2, [pc, #196]	; (800222c <main+0xd0>)
 8002168:	f043 0301 	orr.w	r3, r3, #1
 800216c:	6193      	str	r3, [r2, #24]
	AFIO->MAPR |= AFIO_MAPR_SWJ_CFG_JTAGDISABLE;
 800216e:	4b30      	ldr	r3, [pc, #192]	; (8002230 <main+0xd4>)
 8002170:	685b      	ldr	r3, [r3, #4]
 8002172:	4a2f      	ldr	r2, [pc, #188]	; (8002230 <main+0xd4>)
 8002174:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002178:	6053      	str	r3, [r2, #4]
    systick_millis(32000);
 800217a:	f44f 40fa 	mov.w	r0, #32000	; 0x7d00
 800217e:	f7ff f8bd 	bl	80012fc <systick_millis>
    system_clk();
 8002182:	f7ff fd1d 	bl	8001bc0 <system_clk>
	timer_initialise();
 8002186:	f7ff fed7 	bl	8001f38 <timer_initialise>

	ssd1306_init();
 800218a:	f7ff fd6b 	bl	8001c64 <ssd1306_init>
	ssd1306_clear(GB_SSD1306_COLOR_BLACK);
 800218e:	2000      	movs	r0, #0
 8002190:	f7ff fe32 	bl	8001df8 <ssd1306_clear>
	ssd1306_update_data();
 8002194:	f7ff fdda 	bl	8001d4c <ssd1306_update_data>


	GB_uart_init1();  //terminal
 8002198:	f7ff f900 	bl	800139c <GB_uart_init1>
	GB_printString1("IOT DATA Logger");
 800219c:	4825      	ldr	r0, [pc, #148]	; (8002234 <main+0xd8>)
 800219e:	f7ff f939 	bl	8001414 <GB_printString1>
	GB_uart_init2();  	//ESP8266
 80021a2:	f7ff f9fd 	bl	80015a0 <GB_uart_init2>
	__NVIC_EnableIRQ(USART2_IRQn);
 80021a6:	2026      	movs	r0, #38	; 0x26
 80021a8:	f7ff ff50 	bl	800204c <__NVIC_EnableIRQ>
	__NVIC_SetPriority (USART2_IRQn, 1);
 80021ac:	2101      	movs	r1, #1
 80021ae:	2026      	movs	r0, #38	; 0x26
 80021b0:	f7ff ff68 	bl	8002084 <__NVIC_SetPriority>
	GB_esp8266_initialise_client();
 80021b4:	f7fe ff46 	bl	8001044 <GB_esp8266_initialise_client>
	uint8_t gb_t = 90;
 80021b8:	235a      	movs	r3, #90	; 0x5a
 80021ba:	71fb      	strb	r3, [r7, #7]

float temp =0;
 80021bc:	f04f 0300 	mov.w	r3, #0
 80021c0:	603b      	str	r3, [r7, #0]
//	delay_ms(100);
	/* Loop forever */
	while(1)
	{

		GB_dht11();
 80021c2:	f7ff fbe1 	bl	8001988 <GB_dht11>
		temp = GB_dht11_temp();
 80021c6:	f7ff fbf7 	bl	80019b8 <GB_dht11_temp>
 80021ca:	6038      	str	r0, [r7, #0]
	   ssd1306_GotoXY(0, 0);
 80021cc:	2100      	movs	r1, #0
 80021ce:	2000      	movs	r0, #0
 80021d0:	f7ff fdfc 	bl	8001dcc <ssd1306_GotoXY>
	   ssd1306_print_string("Temperature:  ", GB_SSD1306_COLOR_WHITE);
 80021d4:	2101      	movs	r1, #1
 80021d6:	4818      	ldr	r0, [pc, #96]	; (8002238 <main+0xdc>)
 80021d8:	f7ff fe76 	bl	8001ec8 <ssd1306_print_string>
	   ssd1306_float(temp,GB_SSD1306_COLOR_WHITE);
 80021dc:	2101      	movs	r1, #1
 80021de:	6838      	ldr	r0, [r7, #0]
 80021e0:	f7ff fe8c 	bl	8001efc <ssd1306_float>
	   //ssd1306_print_decimel(GB_dht11_temp(),GB_SSD1306_COLOR_WHITE);
	   ssd1306_print_string(" *C", GB_SSD1306_COLOR_WHITE);
 80021e4:	2101      	movs	r1, #1
 80021e6:	4815      	ldr	r0, [pc, #84]	; (800223c <main+0xe0>)
 80021e8:	f7ff fe6e 	bl	8001ec8 <ssd1306_print_string>
	   ssd1306_update_data();
 80021ec:	f7ff fdae 	bl	8001d4c <ssd1306_update_data>


		GB_esp8266_connectTCPserver(gb_url,80);
 80021f0:	2150      	movs	r1, #80	; 0x50
 80021f2:	4813      	ldr	r0, [pc, #76]	; (8002240 <main+0xe4>)
 80021f4:	f7fe ff3e 	bl	8001074 <GB_esp8266_connectTCPserver>
	    GB_esp8266_cipsendfloat(temp,gb_urlpath);
 80021f8:	4912      	ldr	r1, [pc, #72]	; (8002244 <main+0xe8>)
 80021fa:	6838      	ldr	r0, [r7, #0]
 80021fc:	f7fe ff92 	bl	8001124 <GB_esp8266_cipsendfloat>
	    GB_esp8266_tcpgetcommandfloat(gb_urlpath,temp);
 8002200:	6839      	ldr	r1, [r7, #0]
 8002202:	4810      	ldr	r0, [pc, #64]	; (8002244 <main+0xe8>)
 8002204:	f7fe ffb4 	bl	8001170 <GB_esp8266_tcpgetcommandfloat>
		delay_ms(2000);
 8002208:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800220c:	f7ff ff06 	bl	800201c <delay_ms>
		//gb_t++;

		GB_printString1("\nTemperature : ");
 8002210:	480d      	ldr	r0, [pc, #52]	; (8002248 <main+0xec>)
 8002212:	f7ff f8ff 	bl	8001414 <GB_printString1>
		GB_float_value1(temp);
 8002216:	6838      	ldr	r0, [r7, #0]
 8002218:	f7ff f974 	bl	8001504 <GB_float_value1>
		GB_printString1("\n");
 800221c:	480b      	ldr	r0, [pc, #44]	; (800224c <main+0xf0>)
 800221e:	f7ff f8f9 	bl	8001414 <GB_printString1>
		delay_ms(10);
 8002222:	200a      	movs	r0, #10
 8002224:	f7ff fefa 	bl	800201c <delay_ms>
		GB_dht11();
 8002228:	e7cb      	b.n	80021c2 <main+0x66>
 800222a:	bf00      	nop
 800222c:	40021000 	.word	0x40021000
 8002230:	40010000 	.word	0x40010000
 8002234:	08007158 	.word	0x08007158
 8002238:	08007168 	.word	0x08007168
 800223c:	08007178 	.word	0x08007178
 8002240:	080073d0 	.word	0x080073d0
 8002244:	0800736c 	.word	0x0800736c
 8002248:	0800717c 	.word	0x0800717c
 800224c:	0800718c 	.word	0x0800718c

08002250 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002250:	b480      	push	{r7}
 8002252:	af00      	add	r7, sp, #0
	return 1;
 8002254:	2301      	movs	r3, #1
}
 8002256:	4618      	mov	r0, r3
 8002258:	46bd      	mov	sp, r7
 800225a:	bc80      	pop	{r7}
 800225c:	4770      	bx	lr

0800225e <_kill>:

int _kill(int pid, int sig)
{
 800225e:	b580      	push	{r7, lr}
 8002260:	b082      	sub	sp, #8
 8002262:	af00      	add	r7, sp, #0
 8002264:	6078      	str	r0, [r7, #4]
 8002266:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002268:	f000 f8c6 	bl	80023f8 <__errno>
 800226c:	4603      	mov	r3, r0
 800226e:	2216      	movs	r2, #22
 8002270:	601a      	str	r2, [r3, #0]
	return -1;
 8002272:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002276:	4618      	mov	r0, r3
 8002278:	3708      	adds	r7, #8
 800227a:	46bd      	mov	sp, r7
 800227c:	bd80      	pop	{r7, pc}

0800227e <_exit>:

void _exit (int status)
{
 800227e:	b580      	push	{r7, lr}
 8002280:	b082      	sub	sp, #8
 8002282:	af00      	add	r7, sp, #0
 8002284:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002286:	f04f 31ff 	mov.w	r1, #4294967295
 800228a:	6878      	ldr	r0, [r7, #4]
 800228c:	f7ff ffe7 	bl	800225e <_kill>
	while (1) {}		/* Make sure we hang here */
 8002290:	e7fe      	b.n	8002290 <_exit+0x12>

08002292 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002292:	b580      	push	{r7, lr}
 8002294:	b086      	sub	sp, #24
 8002296:	af00      	add	r7, sp, #0
 8002298:	60f8      	str	r0, [r7, #12]
 800229a:	60b9      	str	r1, [r7, #8]
 800229c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800229e:	2300      	movs	r3, #0
 80022a0:	617b      	str	r3, [r7, #20]
 80022a2:	e00a      	b.n	80022ba <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80022a4:	f3af 8000 	nop.w
 80022a8:	4601      	mov	r1, r0
 80022aa:	68bb      	ldr	r3, [r7, #8]
 80022ac:	1c5a      	adds	r2, r3, #1
 80022ae:	60ba      	str	r2, [r7, #8]
 80022b0:	b2ca      	uxtb	r2, r1
 80022b2:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022b4:	697b      	ldr	r3, [r7, #20]
 80022b6:	3301      	adds	r3, #1
 80022b8:	617b      	str	r3, [r7, #20]
 80022ba:	697a      	ldr	r2, [r7, #20]
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	429a      	cmp	r2, r3
 80022c0:	dbf0      	blt.n	80022a4 <_read+0x12>
	}

return len;
 80022c2:	687b      	ldr	r3, [r7, #4]
}
 80022c4:	4618      	mov	r0, r3
 80022c6:	3718      	adds	r7, #24
 80022c8:	46bd      	mov	sp, r7
 80022ca:	bd80      	pop	{r7, pc}

080022cc <_close>:
	}
	return len;
}

int _close(int file)
{
 80022cc:	b480      	push	{r7}
 80022ce:	b083      	sub	sp, #12
 80022d0:	af00      	add	r7, sp, #0
 80022d2:	6078      	str	r0, [r7, #4]
	return -1;
 80022d4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80022d8:	4618      	mov	r0, r3
 80022da:	370c      	adds	r7, #12
 80022dc:	46bd      	mov	sp, r7
 80022de:	bc80      	pop	{r7}
 80022e0:	4770      	bx	lr

080022e2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80022e2:	b480      	push	{r7}
 80022e4:	b083      	sub	sp, #12
 80022e6:	af00      	add	r7, sp, #0
 80022e8:	6078      	str	r0, [r7, #4]
 80022ea:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80022ec:	683b      	ldr	r3, [r7, #0]
 80022ee:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80022f2:	605a      	str	r2, [r3, #4]
	return 0;
 80022f4:	2300      	movs	r3, #0
}
 80022f6:	4618      	mov	r0, r3
 80022f8:	370c      	adds	r7, #12
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bc80      	pop	{r7}
 80022fe:	4770      	bx	lr

08002300 <_isatty>:

int _isatty(int file)
{
 8002300:	b480      	push	{r7}
 8002302:	b083      	sub	sp, #12
 8002304:	af00      	add	r7, sp, #0
 8002306:	6078      	str	r0, [r7, #4]
	return 1;
 8002308:	2301      	movs	r3, #1
}
 800230a:	4618      	mov	r0, r3
 800230c:	370c      	adds	r7, #12
 800230e:	46bd      	mov	sp, r7
 8002310:	bc80      	pop	{r7}
 8002312:	4770      	bx	lr

08002314 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002314:	b480      	push	{r7}
 8002316:	b085      	sub	sp, #20
 8002318:	af00      	add	r7, sp, #0
 800231a:	60f8      	str	r0, [r7, #12]
 800231c:	60b9      	str	r1, [r7, #8]
 800231e:	607a      	str	r2, [r7, #4]
	return 0;
 8002320:	2300      	movs	r3, #0
}
 8002322:	4618      	mov	r0, r3
 8002324:	3714      	adds	r7, #20
 8002326:	46bd      	mov	sp, r7
 8002328:	bc80      	pop	{r7}
 800232a:	4770      	bx	lr

0800232c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800232c:	b580      	push	{r7, lr}
 800232e:	b086      	sub	sp, #24
 8002330:	af00      	add	r7, sp, #0
 8002332:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002334:	4a14      	ldr	r2, [pc, #80]	; (8002388 <_sbrk+0x5c>)
 8002336:	4b15      	ldr	r3, [pc, #84]	; (800238c <_sbrk+0x60>)
 8002338:	1ad3      	subs	r3, r2, r3
 800233a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800233c:	697b      	ldr	r3, [r7, #20]
 800233e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002340:	4b13      	ldr	r3, [pc, #76]	; (8002390 <_sbrk+0x64>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	2b00      	cmp	r3, #0
 8002346:	d102      	bne.n	800234e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002348:	4b11      	ldr	r3, [pc, #68]	; (8002390 <_sbrk+0x64>)
 800234a:	4a12      	ldr	r2, [pc, #72]	; (8002394 <_sbrk+0x68>)
 800234c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800234e:	4b10      	ldr	r3, [pc, #64]	; (8002390 <_sbrk+0x64>)
 8002350:	681a      	ldr	r2, [r3, #0]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	4413      	add	r3, r2
 8002356:	693a      	ldr	r2, [r7, #16]
 8002358:	429a      	cmp	r2, r3
 800235a:	d207      	bcs.n	800236c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800235c:	f000 f84c 	bl	80023f8 <__errno>
 8002360:	4603      	mov	r3, r0
 8002362:	220c      	movs	r2, #12
 8002364:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002366:	f04f 33ff 	mov.w	r3, #4294967295
 800236a:	e009      	b.n	8002380 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800236c:	4b08      	ldr	r3, [pc, #32]	; (8002390 <_sbrk+0x64>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002372:	4b07      	ldr	r3, [pc, #28]	; (8002390 <_sbrk+0x64>)
 8002374:	681a      	ldr	r2, [r3, #0]
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	4413      	add	r3, r2
 800237a:	4a05      	ldr	r2, [pc, #20]	; (8002390 <_sbrk+0x64>)
 800237c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800237e:	68fb      	ldr	r3, [r7, #12]
}
 8002380:	4618      	mov	r0, r3
 8002382:	3718      	adds	r7, #24
 8002384:	46bd      	mov	sp, r7
 8002386:	bd80      	pop	{r7, pc}
 8002388:	20005000 	.word	0x20005000
 800238c:	00000400 	.word	0x00000400
 8002390:	20000604 	.word	0x20000604
 8002394:	20000890 	.word	0x20000890

08002398 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002398:	b480      	push	{r7}
 800239a:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800239c:	bf00      	nop
 800239e:	46bd      	mov	sp, r7
 80023a0:	bc80      	pop	{r7}
 80023a2:	4770      	bx	lr

080023a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80023a4:	480d      	ldr	r0, [pc, #52]	; (80023dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80023a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80023a8:	f7ff fff6 	bl	8002398 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80023ac:	480c      	ldr	r0, [pc, #48]	; (80023e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80023ae:	490d      	ldr	r1, [pc, #52]	; (80023e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80023b0:	4a0d      	ldr	r2, [pc, #52]	; (80023e8 <LoopForever+0xe>)
  movs r3, #0
 80023b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80023b4:	e002      	b.n	80023bc <LoopCopyDataInit>

080023b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80023b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80023b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80023ba:	3304      	adds	r3, #4

080023bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80023bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80023be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80023c0:	d3f9      	bcc.n	80023b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80023c2:	4a0a      	ldr	r2, [pc, #40]	; (80023ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80023c4:	4c0a      	ldr	r4, [pc, #40]	; (80023f0 <LoopForever+0x16>)
  movs r3, #0
 80023c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80023c8:	e001      	b.n	80023ce <LoopFillZerobss>

080023ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80023ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80023cc:	3204      	adds	r2, #4

080023ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80023ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80023d0:	d3fb      	bcc.n	80023ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80023d2:	f000 f817 	bl	8002404 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80023d6:	f7ff fec1 	bl	800215c <main>

080023da <LoopForever>:

LoopForever:
    b LoopForever
 80023da:	e7fe      	b.n	80023da <LoopForever>
  ldr   r0, =_estack
 80023dc:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80023e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80023e4:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 80023e8:	080078f4 	.word	0x080078f4
  ldr r2, =_sbss
 80023ec:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 80023f0:	2000088c 	.word	0x2000088c

080023f4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80023f4:	e7fe      	b.n	80023f4 <ADC1_2_IRQHandler>
	...

080023f8 <__errno>:
 80023f8:	4b01      	ldr	r3, [pc, #4]	; (8002400 <__errno+0x8>)
 80023fa:	6818      	ldr	r0, [r3, #0]
 80023fc:	4770      	bx	lr
 80023fe:	bf00      	nop
 8002400:	20000000 	.word	0x20000000

08002404 <__libc_init_array>:
 8002404:	b570      	push	{r4, r5, r6, lr}
 8002406:	2600      	movs	r6, #0
 8002408:	4d0c      	ldr	r5, [pc, #48]	; (800243c <__libc_init_array+0x38>)
 800240a:	4c0d      	ldr	r4, [pc, #52]	; (8002440 <__libc_init_array+0x3c>)
 800240c:	1b64      	subs	r4, r4, r5
 800240e:	10a4      	asrs	r4, r4, #2
 8002410:	42a6      	cmp	r6, r4
 8002412:	d109      	bne.n	8002428 <__libc_init_array+0x24>
 8002414:	f004 fc60 	bl	8006cd8 <_init>
 8002418:	2600      	movs	r6, #0
 800241a:	4d0a      	ldr	r5, [pc, #40]	; (8002444 <__libc_init_array+0x40>)
 800241c:	4c0a      	ldr	r4, [pc, #40]	; (8002448 <__libc_init_array+0x44>)
 800241e:	1b64      	subs	r4, r4, r5
 8002420:	10a4      	asrs	r4, r4, #2
 8002422:	42a6      	cmp	r6, r4
 8002424:	d105      	bne.n	8002432 <__libc_init_array+0x2e>
 8002426:	bd70      	pop	{r4, r5, r6, pc}
 8002428:	f855 3b04 	ldr.w	r3, [r5], #4
 800242c:	4798      	blx	r3
 800242e:	3601      	adds	r6, #1
 8002430:	e7ee      	b.n	8002410 <__libc_init_array+0xc>
 8002432:	f855 3b04 	ldr.w	r3, [r5], #4
 8002436:	4798      	blx	r3
 8002438:	3601      	adds	r6, #1
 800243a:	e7f2      	b.n	8002422 <__libc_init_array+0x1e>
 800243c:	080078ec 	.word	0x080078ec
 8002440:	080078ec 	.word	0x080078ec
 8002444:	080078ec 	.word	0x080078ec
 8002448:	080078f0 	.word	0x080078f0

0800244c <memcpy>:
 800244c:	440a      	add	r2, r1
 800244e:	4291      	cmp	r1, r2
 8002450:	f100 33ff 	add.w	r3, r0, #4294967295
 8002454:	d100      	bne.n	8002458 <memcpy+0xc>
 8002456:	4770      	bx	lr
 8002458:	b510      	push	{r4, lr}
 800245a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800245e:	4291      	cmp	r1, r2
 8002460:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002464:	d1f9      	bne.n	800245a <memcpy+0xe>
 8002466:	bd10      	pop	{r4, pc}

08002468 <memset>:
 8002468:	4603      	mov	r3, r0
 800246a:	4402      	add	r2, r0
 800246c:	4293      	cmp	r3, r2
 800246e:	d100      	bne.n	8002472 <memset+0xa>
 8002470:	4770      	bx	lr
 8002472:	f803 1b01 	strb.w	r1, [r3], #1
 8002476:	e7f9      	b.n	800246c <memset+0x4>

08002478 <__cvt>:
 8002478:	2b00      	cmp	r3, #0
 800247a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800247e:	461f      	mov	r7, r3
 8002480:	bfbb      	ittet	lt
 8002482:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002486:	461f      	movlt	r7, r3
 8002488:	2300      	movge	r3, #0
 800248a:	232d      	movlt	r3, #45	; 0x2d
 800248c:	b088      	sub	sp, #32
 800248e:	4614      	mov	r4, r2
 8002490:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002492:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8002494:	7013      	strb	r3, [r2, #0]
 8002496:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002498:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800249c:	f023 0820 	bic.w	r8, r3, #32
 80024a0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80024a4:	d005      	beq.n	80024b2 <__cvt+0x3a>
 80024a6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80024aa:	d100      	bne.n	80024ae <__cvt+0x36>
 80024ac:	3501      	adds	r5, #1
 80024ae:	2302      	movs	r3, #2
 80024b0:	e000      	b.n	80024b4 <__cvt+0x3c>
 80024b2:	2303      	movs	r3, #3
 80024b4:	aa07      	add	r2, sp, #28
 80024b6:	9204      	str	r2, [sp, #16]
 80024b8:	aa06      	add	r2, sp, #24
 80024ba:	e9cd a202 	strd	sl, r2, [sp, #8]
 80024be:	e9cd 3500 	strd	r3, r5, [sp]
 80024c2:	4622      	mov	r2, r4
 80024c4:	463b      	mov	r3, r7
 80024c6:	f001 fe97 	bl	80041f8 <_dtoa_r>
 80024ca:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80024ce:	4606      	mov	r6, r0
 80024d0:	d102      	bne.n	80024d8 <__cvt+0x60>
 80024d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80024d4:	07db      	lsls	r3, r3, #31
 80024d6:	d522      	bpl.n	800251e <__cvt+0xa6>
 80024d8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80024dc:	eb06 0905 	add.w	r9, r6, r5
 80024e0:	d110      	bne.n	8002504 <__cvt+0x8c>
 80024e2:	7833      	ldrb	r3, [r6, #0]
 80024e4:	2b30      	cmp	r3, #48	; 0x30
 80024e6:	d10a      	bne.n	80024fe <__cvt+0x86>
 80024e8:	2200      	movs	r2, #0
 80024ea:	2300      	movs	r3, #0
 80024ec:	4620      	mov	r0, r4
 80024ee:	4639      	mov	r1, r7
 80024f0:	f7fe fa6a 	bl	80009c8 <__aeabi_dcmpeq>
 80024f4:	b918      	cbnz	r0, 80024fe <__cvt+0x86>
 80024f6:	f1c5 0501 	rsb	r5, r5, #1
 80024fa:	f8ca 5000 	str.w	r5, [sl]
 80024fe:	f8da 3000 	ldr.w	r3, [sl]
 8002502:	4499      	add	r9, r3
 8002504:	2200      	movs	r2, #0
 8002506:	2300      	movs	r3, #0
 8002508:	4620      	mov	r0, r4
 800250a:	4639      	mov	r1, r7
 800250c:	f7fe fa5c 	bl	80009c8 <__aeabi_dcmpeq>
 8002510:	b108      	cbz	r0, 8002516 <__cvt+0x9e>
 8002512:	f8cd 901c 	str.w	r9, [sp, #28]
 8002516:	2230      	movs	r2, #48	; 0x30
 8002518:	9b07      	ldr	r3, [sp, #28]
 800251a:	454b      	cmp	r3, r9
 800251c:	d307      	bcc.n	800252e <__cvt+0xb6>
 800251e:	4630      	mov	r0, r6
 8002520:	9b07      	ldr	r3, [sp, #28]
 8002522:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8002524:	1b9b      	subs	r3, r3, r6
 8002526:	6013      	str	r3, [r2, #0]
 8002528:	b008      	add	sp, #32
 800252a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800252e:	1c59      	adds	r1, r3, #1
 8002530:	9107      	str	r1, [sp, #28]
 8002532:	701a      	strb	r2, [r3, #0]
 8002534:	e7f0      	b.n	8002518 <__cvt+0xa0>

08002536 <__exponent>:
 8002536:	4603      	mov	r3, r0
 8002538:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800253a:	2900      	cmp	r1, #0
 800253c:	f803 2b02 	strb.w	r2, [r3], #2
 8002540:	bfb6      	itet	lt
 8002542:	222d      	movlt	r2, #45	; 0x2d
 8002544:	222b      	movge	r2, #43	; 0x2b
 8002546:	4249      	neglt	r1, r1
 8002548:	2909      	cmp	r1, #9
 800254a:	7042      	strb	r2, [r0, #1]
 800254c:	dd2b      	ble.n	80025a6 <__exponent+0x70>
 800254e:	f10d 0407 	add.w	r4, sp, #7
 8002552:	46a4      	mov	ip, r4
 8002554:	270a      	movs	r7, #10
 8002556:	fb91 f6f7 	sdiv	r6, r1, r7
 800255a:	460a      	mov	r2, r1
 800255c:	46a6      	mov	lr, r4
 800255e:	fb07 1516 	mls	r5, r7, r6, r1
 8002562:	2a63      	cmp	r2, #99	; 0x63
 8002564:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8002568:	4631      	mov	r1, r6
 800256a:	f104 34ff 	add.w	r4, r4, #4294967295
 800256e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8002572:	dcf0      	bgt.n	8002556 <__exponent+0x20>
 8002574:	3130      	adds	r1, #48	; 0x30
 8002576:	f1ae 0502 	sub.w	r5, lr, #2
 800257a:	f804 1c01 	strb.w	r1, [r4, #-1]
 800257e:	4629      	mov	r1, r5
 8002580:	1c44      	adds	r4, r0, #1
 8002582:	4561      	cmp	r1, ip
 8002584:	d30a      	bcc.n	800259c <__exponent+0x66>
 8002586:	f10d 0209 	add.w	r2, sp, #9
 800258a:	eba2 020e 	sub.w	r2, r2, lr
 800258e:	4565      	cmp	r5, ip
 8002590:	bf88      	it	hi
 8002592:	2200      	movhi	r2, #0
 8002594:	4413      	add	r3, r2
 8002596:	1a18      	subs	r0, r3, r0
 8002598:	b003      	add	sp, #12
 800259a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800259c:	f811 2b01 	ldrb.w	r2, [r1], #1
 80025a0:	f804 2f01 	strb.w	r2, [r4, #1]!
 80025a4:	e7ed      	b.n	8002582 <__exponent+0x4c>
 80025a6:	2330      	movs	r3, #48	; 0x30
 80025a8:	3130      	adds	r1, #48	; 0x30
 80025aa:	7083      	strb	r3, [r0, #2]
 80025ac:	70c1      	strb	r1, [r0, #3]
 80025ae:	1d03      	adds	r3, r0, #4
 80025b0:	e7f1      	b.n	8002596 <__exponent+0x60>
	...

080025b4 <_printf_float>:
 80025b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025b8:	b091      	sub	sp, #68	; 0x44
 80025ba:	460c      	mov	r4, r1
 80025bc:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80025c0:	4616      	mov	r6, r2
 80025c2:	461f      	mov	r7, r3
 80025c4:	4605      	mov	r5, r0
 80025c6:	f003 f923 	bl	8005810 <_localeconv_r>
 80025ca:	6803      	ldr	r3, [r0, #0]
 80025cc:	4618      	mov	r0, r3
 80025ce:	9309      	str	r3, [sp, #36]	; 0x24
 80025d0:	f7fd fdce 	bl	8000170 <strlen>
 80025d4:	2300      	movs	r3, #0
 80025d6:	930e      	str	r3, [sp, #56]	; 0x38
 80025d8:	f8d8 3000 	ldr.w	r3, [r8]
 80025dc:	900a      	str	r0, [sp, #40]	; 0x28
 80025de:	3307      	adds	r3, #7
 80025e0:	f023 0307 	bic.w	r3, r3, #7
 80025e4:	f103 0208 	add.w	r2, r3, #8
 80025e8:	f894 9018 	ldrb.w	r9, [r4, #24]
 80025ec:	f8d4 b000 	ldr.w	fp, [r4]
 80025f0:	f8c8 2000 	str.w	r2, [r8]
 80025f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025f8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80025fc:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 8002600:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8002604:	930b      	str	r3, [sp, #44]	; 0x2c
 8002606:	f04f 32ff 	mov.w	r2, #4294967295
 800260a:	4640      	mov	r0, r8
 800260c:	4b9c      	ldr	r3, [pc, #624]	; (8002880 <_printf_float+0x2cc>)
 800260e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002610:	f7fe fa0c 	bl	8000a2c <__aeabi_dcmpun>
 8002614:	bb70      	cbnz	r0, 8002674 <_printf_float+0xc0>
 8002616:	f04f 32ff 	mov.w	r2, #4294967295
 800261a:	4640      	mov	r0, r8
 800261c:	4b98      	ldr	r3, [pc, #608]	; (8002880 <_printf_float+0x2cc>)
 800261e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002620:	f7fe f9e6 	bl	80009f0 <__aeabi_dcmple>
 8002624:	bb30      	cbnz	r0, 8002674 <_printf_float+0xc0>
 8002626:	2200      	movs	r2, #0
 8002628:	2300      	movs	r3, #0
 800262a:	4640      	mov	r0, r8
 800262c:	4651      	mov	r1, sl
 800262e:	f7fe f9d5 	bl	80009dc <__aeabi_dcmplt>
 8002632:	b110      	cbz	r0, 800263a <_printf_float+0x86>
 8002634:	232d      	movs	r3, #45	; 0x2d
 8002636:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800263a:	4b92      	ldr	r3, [pc, #584]	; (8002884 <_printf_float+0x2d0>)
 800263c:	4892      	ldr	r0, [pc, #584]	; (8002888 <_printf_float+0x2d4>)
 800263e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8002642:	bf94      	ite	ls
 8002644:	4698      	movls	r8, r3
 8002646:	4680      	movhi	r8, r0
 8002648:	2303      	movs	r3, #3
 800264a:	f04f 0a00 	mov.w	sl, #0
 800264e:	6123      	str	r3, [r4, #16]
 8002650:	f02b 0304 	bic.w	r3, fp, #4
 8002654:	6023      	str	r3, [r4, #0]
 8002656:	4633      	mov	r3, r6
 8002658:	4621      	mov	r1, r4
 800265a:	4628      	mov	r0, r5
 800265c:	9700      	str	r7, [sp, #0]
 800265e:	aa0f      	add	r2, sp, #60	; 0x3c
 8002660:	f000 f9d4 	bl	8002a0c <_printf_common>
 8002664:	3001      	adds	r0, #1
 8002666:	f040 8090 	bne.w	800278a <_printf_float+0x1d6>
 800266a:	f04f 30ff 	mov.w	r0, #4294967295
 800266e:	b011      	add	sp, #68	; 0x44
 8002670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002674:	4642      	mov	r2, r8
 8002676:	4653      	mov	r3, sl
 8002678:	4640      	mov	r0, r8
 800267a:	4651      	mov	r1, sl
 800267c:	f7fe f9d6 	bl	8000a2c <__aeabi_dcmpun>
 8002680:	b148      	cbz	r0, 8002696 <_printf_float+0xe2>
 8002682:	f1ba 0f00 	cmp.w	sl, #0
 8002686:	bfb8      	it	lt
 8002688:	232d      	movlt	r3, #45	; 0x2d
 800268a:	4880      	ldr	r0, [pc, #512]	; (800288c <_printf_float+0x2d8>)
 800268c:	bfb8      	it	lt
 800268e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8002692:	4b7f      	ldr	r3, [pc, #508]	; (8002890 <_printf_float+0x2dc>)
 8002694:	e7d3      	b.n	800263e <_printf_float+0x8a>
 8002696:	6863      	ldr	r3, [r4, #4]
 8002698:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800269c:	1c5a      	adds	r2, r3, #1
 800269e:	d142      	bne.n	8002726 <_printf_float+0x172>
 80026a0:	2306      	movs	r3, #6
 80026a2:	6063      	str	r3, [r4, #4]
 80026a4:	2200      	movs	r2, #0
 80026a6:	9206      	str	r2, [sp, #24]
 80026a8:	aa0e      	add	r2, sp, #56	; 0x38
 80026aa:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80026ae:	aa0d      	add	r2, sp, #52	; 0x34
 80026b0:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80026b4:	9203      	str	r2, [sp, #12]
 80026b6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80026ba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026be:	6023      	str	r3, [r4, #0]
 80026c0:	6863      	ldr	r3, [r4, #4]
 80026c2:	4642      	mov	r2, r8
 80026c4:	9300      	str	r3, [sp, #0]
 80026c6:	4628      	mov	r0, r5
 80026c8:	4653      	mov	r3, sl
 80026ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80026cc:	f7ff fed4 	bl	8002478 <__cvt>
 80026d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80026d2:	4680      	mov	r8, r0
 80026d4:	2947      	cmp	r1, #71	; 0x47
 80026d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80026d8:	d108      	bne.n	80026ec <_printf_float+0x138>
 80026da:	1cc8      	adds	r0, r1, #3
 80026dc:	db02      	blt.n	80026e4 <_printf_float+0x130>
 80026de:	6863      	ldr	r3, [r4, #4]
 80026e0:	4299      	cmp	r1, r3
 80026e2:	dd40      	ble.n	8002766 <_printf_float+0x1b2>
 80026e4:	f1a9 0902 	sub.w	r9, r9, #2
 80026e8:	fa5f f989 	uxtb.w	r9, r9
 80026ec:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80026f0:	d81f      	bhi.n	8002732 <_printf_float+0x17e>
 80026f2:	464a      	mov	r2, r9
 80026f4:	3901      	subs	r1, #1
 80026f6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80026fa:	910d      	str	r1, [sp, #52]	; 0x34
 80026fc:	f7ff ff1b 	bl	8002536 <__exponent>
 8002700:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002702:	4682      	mov	sl, r0
 8002704:	1813      	adds	r3, r2, r0
 8002706:	2a01      	cmp	r2, #1
 8002708:	6123      	str	r3, [r4, #16]
 800270a:	dc02      	bgt.n	8002712 <_printf_float+0x15e>
 800270c:	6822      	ldr	r2, [r4, #0]
 800270e:	07d2      	lsls	r2, r2, #31
 8002710:	d501      	bpl.n	8002716 <_printf_float+0x162>
 8002712:	3301      	adds	r3, #1
 8002714:	6123      	str	r3, [r4, #16]
 8002716:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800271a:	2b00      	cmp	r3, #0
 800271c:	d09b      	beq.n	8002656 <_printf_float+0xa2>
 800271e:	232d      	movs	r3, #45	; 0x2d
 8002720:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002724:	e797      	b.n	8002656 <_printf_float+0xa2>
 8002726:	2947      	cmp	r1, #71	; 0x47
 8002728:	d1bc      	bne.n	80026a4 <_printf_float+0xf0>
 800272a:	2b00      	cmp	r3, #0
 800272c:	d1ba      	bne.n	80026a4 <_printf_float+0xf0>
 800272e:	2301      	movs	r3, #1
 8002730:	e7b7      	b.n	80026a2 <_printf_float+0xee>
 8002732:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8002736:	d118      	bne.n	800276a <_printf_float+0x1b6>
 8002738:	2900      	cmp	r1, #0
 800273a:	6863      	ldr	r3, [r4, #4]
 800273c:	dd0b      	ble.n	8002756 <_printf_float+0x1a2>
 800273e:	6121      	str	r1, [r4, #16]
 8002740:	b913      	cbnz	r3, 8002748 <_printf_float+0x194>
 8002742:	6822      	ldr	r2, [r4, #0]
 8002744:	07d0      	lsls	r0, r2, #31
 8002746:	d502      	bpl.n	800274e <_printf_float+0x19a>
 8002748:	3301      	adds	r3, #1
 800274a:	440b      	add	r3, r1
 800274c:	6123      	str	r3, [r4, #16]
 800274e:	f04f 0a00 	mov.w	sl, #0
 8002752:	65a1      	str	r1, [r4, #88]	; 0x58
 8002754:	e7df      	b.n	8002716 <_printf_float+0x162>
 8002756:	b913      	cbnz	r3, 800275e <_printf_float+0x1aa>
 8002758:	6822      	ldr	r2, [r4, #0]
 800275a:	07d2      	lsls	r2, r2, #31
 800275c:	d501      	bpl.n	8002762 <_printf_float+0x1ae>
 800275e:	3302      	adds	r3, #2
 8002760:	e7f4      	b.n	800274c <_printf_float+0x198>
 8002762:	2301      	movs	r3, #1
 8002764:	e7f2      	b.n	800274c <_printf_float+0x198>
 8002766:	f04f 0967 	mov.w	r9, #103	; 0x67
 800276a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800276c:	4299      	cmp	r1, r3
 800276e:	db05      	blt.n	800277c <_printf_float+0x1c8>
 8002770:	6823      	ldr	r3, [r4, #0]
 8002772:	6121      	str	r1, [r4, #16]
 8002774:	07d8      	lsls	r0, r3, #31
 8002776:	d5ea      	bpl.n	800274e <_printf_float+0x19a>
 8002778:	1c4b      	adds	r3, r1, #1
 800277a:	e7e7      	b.n	800274c <_printf_float+0x198>
 800277c:	2900      	cmp	r1, #0
 800277e:	bfcc      	ite	gt
 8002780:	2201      	movgt	r2, #1
 8002782:	f1c1 0202 	rsble	r2, r1, #2
 8002786:	4413      	add	r3, r2
 8002788:	e7e0      	b.n	800274c <_printf_float+0x198>
 800278a:	6823      	ldr	r3, [r4, #0]
 800278c:	055a      	lsls	r2, r3, #21
 800278e:	d407      	bmi.n	80027a0 <_printf_float+0x1ec>
 8002790:	6923      	ldr	r3, [r4, #16]
 8002792:	4642      	mov	r2, r8
 8002794:	4631      	mov	r1, r6
 8002796:	4628      	mov	r0, r5
 8002798:	47b8      	blx	r7
 800279a:	3001      	adds	r0, #1
 800279c:	d12b      	bne.n	80027f6 <_printf_float+0x242>
 800279e:	e764      	b.n	800266a <_printf_float+0xb6>
 80027a0:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80027a4:	f240 80dd 	bls.w	8002962 <_printf_float+0x3ae>
 80027a8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80027ac:	2200      	movs	r2, #0
 80027ae:	2300      	movs	r3, #0
 80027b0:	f7fe f90a 	bl	80009c8 <__aeabi_dcmpeq>
 80027b4:	2800      	cmp	r0, #0
 80027b6:	d033      	beq.n	8002820 <_printf_float+0x26c>
 80027b8:	2301      	movs	r3, #1
 80027ba:	4631      	mov	r1, r6
 80027bc:	4628      	mov	r0, r5
 80027be:	4a35      	ldr	r2, [pc, #212]	; (8002894 <_printf_float+0x2e0>)
 80027c0:	47b8      	blx	r7
 80027c2:	3001      	adds	r0, #1
 80027c4:	f43f af51 	beq.w	800266a <_printf_float+0xb6>
 80027c8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80027cc:	429a      	cmp	r2, r3
 80027ce:	db02      	blt.n	80027d6 <_printf_float+0x222>
 80027d0:	6823      	ldr	r3, [r4, #0]
 80027d2:	07d8      	lsls	r0, r3, #31
 80027d4:	d50f      	bpl.n	80027f6 <_printf_float+0x242>
 80027d6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80027da:	4631      	mov	r1, r6
 80027dc:	4628      	mov	r0, r5
 80027de:	47b8      	blx	r7
 80027e0:	3001      	adds	r0, #1
 80027e2:	f43f af42 	beq.w	800266a <_printf_float+0xb6>
 80027e6:	f04f 0800 	mov.w	r8, #0
 80027ea:	f104 091a 	add.w	r9, r4, #26
 80027ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80027f0:	3b01      	subs	r3, #1
 80027f2:	4543      	cmp	r3, r8
 80027f4:	dc09      	bgt.n	800280a <_printf_float+0x256>
 80027f6:	6823      	ldr	r3, [r4, #0]
 80027f8:	079b      	lsls	r3, r3, #30
 80027fa:	f100 8102 	bmi.w	8002a02 <_printf_float+0x44e>
 80027fe:	68e0      	ldr	r0, [r4, #12]
 8002800:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002802:	4298      	cmp	r0, r3
 8002804:	bfb8      	it	lt
 8002806:	4618      	movlt	r0, r3
 8002808:	e731      	b.n	800266e <_printf_float+0xba>
 800280a:	2301      	movs	r3, #1
 800280c:	464a      	mov	r2, r9
 800280e:	4631      	mov	r1, r6
 8002810:	4628      	mov	r0, r5
 8002812:	47b8      	blx	r7
 8002814:	3001      	adds	r0, #1
 8002816:	f43f af28 	beq.w	800266a <_printf_float+0xb6>
 800281a:	f108 0801 	add.w	r8, r8, #1
 800281e:	e7e6      	b.n	80027ee <_printf_float+0x23a>
 8002820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002822:	2b00      	cmp	r3, #0
 8002824:	dc38      	bgt.n	8002898 <_printf_float+0x2e4>
 8002826:	2301      	movs	r3, #1
 8002828:	4631      	mov	r1, r6
 800282a:	4628      	mov	r0, r5
 800282c:	4a19      	ldr	r2, [pc, #100]	; (8002894 <_printf_float+0x2e0>)
 800282e:	47b8      	blx	r7
 8002830:	3001      	adds	r0, #1
 8002832:	f43f af1a 	beq.w	800266a <_printf_float+0xb6>
 8002836:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800283a:	4313      	orrs	r3, r2
 800283c:	d102      	bne.n	8002844 <_printf_float+0x290>
 800283e:	6823      	ldr	r3, [r4, #0]
 8002840:	07d9      	lsls	r1, r3, #31
 8002842:	d5d8      	bpl.n	80027f6 <_printf_float+0x242>
 8002844:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002848:	4631      	mov	r1, r6
 800284a:	4628      	mov	r0, r5
 800284c:	47b8      	blx	r7
 800284e:	3001      	adds	r0, #1
 8002850:	f43f af0b 	beq.w	800266a <_printf_float+0xb6>
 8002854:	f04f 0900 	mov.w	r9, #0
 8002858:	f104 0a1a 	add.w	sl, r4, #26
 800285c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800285e:	425b      	negs	r3, r3
 8002860:	454b      	cmp	r3, r9
 8002862:	dc01      	bgt.n	8002868 <_printf_float+0x2b4>
 8002864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002866:	e794      	b.n	8002792 <_printf_float+0x1de>
 8002868:	2301      	movs	r3, #1
 800286a:	4652      	mov	r2, sl
 800286c:	4631      	mov	r1, r6
 800286e:	4628      	mov	r0, r5
 8002870:	47b8      	blx	r7
 8002872:	3001      	adds	r0, #1
 8002874:	f43f aef9 	beq.w	800266a <_printf_float+0xb6>
 8002878:	f109 0901 	add.w	r9, r9, #1
 800287c:	e7ee      	b.n	800285c <_printf_float+0x2a8>
 800287e:	bf00      	nop
 8002880:	7fefffff 	.word	0x7fefffff
 8002884:	08007438 	.word	0x08007438
 8002888:	0800743c 	.word	0x0800743c
 800288c:	08007444 	.word	0x08007444
 8002890:	08007440 	.word	0x08007440
 8002894:	08007448 	.word	0x08007448
 8002898:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800289a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800289c:	429a      	cmp	r2, r3
 800289e:	bfa8      	it	ge
 80028a0:	461a      	movge	r2, r3
 80028a2:	2a00      	cmp	r2, #0
 80028a4:	4691      	mov	r9, r2
 80028a6:	dc37      	bgt.n	8002918 <_printf_float+0x364>
 80028a8:	f04f 0b00 	mov.w	fp, #0
 80028ac:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80028b0:	f104 021a 	add.w	r2, r4, #26
 80028b4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80028b8:	ebaa 0309 	sub.w	r3, sl, r9
 80028bc:	455b      	cmp	r3, fp
 80028be:	dc33      	bgt.n	8002928 <_printf_float+0x374>
 80028c0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80028c4:	429a      	cmp	r2, r3
 80028c6:	db3b      	blt.n	8002940 <_printf_float+0x38c>
 80028c8:	6823      	ldr	r3, [r4, #0]
 80028ca:	07da      	lsls	r2, r3, #31
 80028cc:	d438      	bmi.n	8002940 <_printf_float+0x38c>
 80028ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80028d0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80028d2:	eba2 030a 	sub.w	r3, r2, sl
 80028d6:	eba2 0901 	sub.w	r9, r2, r1
 80028da:	4599      	cmp	r9, r3
 80028dc:	bfa8      	it	ge
 80028de:	4699      	movge	r9, r3
 80028e0:	f1b9 0f00 	cmp.w	r9, #0
 80028e4:	dc34      	bgt.n	8002950 <_printf_float+0x39c>
 80028e6:	f04f 0800 	mov.w	r8, #0
 80028ea:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80028ee:	f104 0a1a 	add.w	sl, r4, #26
 80028f2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80028f6:	1a9b      	subs	r3, r3, r2
 80028f8:	eba3 0309 	sub.w	r3, r3, r9
 80028fc:	4543      	cmp	r3, r8
 80028fe:	f77f af7a 	ble.w	80027f6 <_printf_float+0x242>
 8002902:	2301      	movs	r3, #1
 8002904:	4652      	mov	r2, sl
 8002906:	4631      	mov	r1, r6
 8002908:	4628      	mov	r0, r5
 800290a:	47b8      	blx	r7
 800290c:	3001      	adds	r0, #1
 800290e:	f43f aeac 	beq.w	800266a <_printf_float+0xb6>
 8002912:	f108 0801 	add.w	r8, r8, #1
 8002916:	e7ec      	b.n	80028f2 <_printf_float+0x33e>
 8002918:	4613      	mov	r3, r2
 800291a:	4631      	mov	r1, r6
 800291c:	4642      	mov	r2, r8
 800291e:	4628      	mov	r0, r5
 8002920:	47b8      	blx	r7
 8002922:	3001      	adds	r0, #1
 8002924:	d1c0      	bne.n	80028a8 <_printf_float+0x2f4>
 8002926:	e6a0      	b.n	800266a <_printf_float+0xb6>
 8002928:	2301      	movs	r3, #1
 800292a:	4631      	mov	r1, r6
 800292c:	4628      	mov	r0, r5
 800292e:	920b      	str	r2, [sp, #44]	; 0x2c
 8002930:	47b8      	blx	r7
 8002932:	3001      	adds	r0, #1
 8002934:	f43f ae99 	beq.w	800266a <_printf_float+0xb6>
 8002938:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800293a:	f10b 0b01 	add.w	fp, fp, #1
 800293e:	e7b9      	b.n	80028b4 <_printf_float+0x300>
 8002940:	4631      	mov	r1, r6
 8002942:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002946:	4628      	mov	r0, r5
 8002948:	47b8      	blx	r7
 800294a:	3001      	adds	r0, #1
 800294c:	d1bf      	bne.n	80028ce <_printf_float+0x31a>
 800294e:	e68c      	b.n	800266a <_printf_float+0xb6>
 8002950:	464b      	mov	r3, r9
 8002952:	4631      	mov	r1, r6
 8002954:	4628      	mov	r0, r5
 8002956:	eb08 020a 	add.w	r2, r8, sl
 800295a:	47b8      	blx	r7
 800295c:	3001      	adds	r0, #1
 800295e:	d1c2      	bne.n	80028e6 <_printf_float+0x332>
 8002960:	e683      	b.n	800266a <_printf_float+0xb6>
 8002962:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002964:	2a01      	cmp	r2, #1
 8002966:	dc01      	bgt.n	800296c <_printf_float+0x3b8>
 8002968:	07db      	lsls	r3, r3, #31
 800296a:	d537      	bpl.n	80029dc <_printf_float+0x428>
 800296c:	2301      	movs	r3, #1
 800296e:	4642      	mov	r2, r8
 8002970:	4631      	mov	r1, r6
 8002972:	4628      	mov	r0, r5
 8002974:	47b8      	blx	r7
 8002976:	3001      	adds	r0, #1
 8002978:	f43f ae77 	beq.w	800266a <_printf_float+0xb6>
 800297c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002980:	4631      	mov	r1, r6
 8002982:	4628      	mov	r0, r5
 8002984:	47b8      	blx	r7
 8002986:	3001      	adds	r0, #1
 8002988:	f43f ae6f 	beq.w	800266a <_printf_float+0xb6>
 800298c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002990:	2200      	movs	r2, #0
 8002992:	2300      	movs	r3, #0
 8002994:	f7fe f818 	bl	80009c8 <__aeabi_dcmpeq>
 8002998:	b9d8      	cbnz	r0, 80029d2 <_printf_float+0x41e>
 800299a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800299c:	f108 0201 	add.w	r2, r8, #1
 80029a0:	3b01      	subs	r3, #1
 80029a2:	4631      	mov	r1, r6
 80029a4:	4628      	mov	r0, r5
 80029a6:	47b8      	blx	r7
 80029a8:	3001      	adds	r0, #1
 80029aa:	d10e      	bne.n	80029ca <_printf_float+0x416>
 80029ac:	e65d      	b.n	800266a <_printf_float+0xb6>
 80029ae:	2301      	movs	r3, #1
 80029b0:	464a      	mov	r2, r9
 80029b2:	4631      	mov	r1, r6
 80029b4:	4628      	mov	r0, r5
 80029b6:	47b8      	blx	r7
 80029b8:	3001      	adds	r0, #1
 80029ba:	f43f ae56 	beq.w	800266a <_printf_float+0xb6>
 80029be:	f108 0801 	add.w	r8, r8, #1
 80029c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029c4:	3b01      	subs	r3, #1
 80029c6:	4543      	cmp	r3, r8
 80029c8:	dcf1      	bgt.n	80029ae <_printf_float+0x3fa>
 80029ca:	4653      	mov	r3, sl
 80029cc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80029d0:	e6e0      	b.n	8002794 <_printf_float+0x1e0>
 80029d2:	f04f 0800 	mov.w	r8, #0
 80029d6:	f104 091a 	add.w	r9, r4, #26
 80029da:	e7f2      	b.n	80029c2 <_printf_float+0x40e>
 80029dc:	2301      	movs	r3, #1
 80029de:	4642      	mov	r2, r8
 80029e0:	e7df      	b.n	80029a2 <_printf_float+0x3ee>
 80029e2:	2301      	movs	r3, #1
 80029e4:	464a      	mov	r2, r9
 80029e6:	4631      	mov	r1, r6
 80029e8:	4628      	mov	r0, r5
 80029ea:	47b8      	blx	r7
 80029ec:	3001      	adds	r0, #1
 80029ee:	f43f ae3c 	beq.w	800266a <_printf_float+0xb6>
 80029f2:	f108 0801 	add.w	r8, r8, #1
 80029f6:	68e3      	ldr	r3, [r4, #12]
 80029f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80029fa:	1a5b      	subs	r3, r3, r1
 80029fc:	4543      	cmp	r3, r8
 80029fe:	dcf0      	bgt.n	80029e2 <_printf_float+0x42e>
 8002a00:	e6fd      	b.n	80027fe <_printf_float+0x24a>
 8002a02:	f04f 0800 	mov.w	r8, #0
 8002a06:	f104 0919 	add.w	r9, r4, #25
 8002a0a:	e7f4      	b.n	80029f6 <_printf_float+0x442>

08002a0c <_printf_common>:
 8002a0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a10:	4616      	mov	r6, r2
 8002a12:	4699      	mov	r9, r3
 8002a14:	688a      	ldr	r2, [r1, #8]
 8002a16:	690b      	ldr	r3, [r1, #16]
 8002a18:	4607      	mov	r7, r0
 8002a1a:	4293      	cmp	r3, r2
 8002a1c:	bfb8      	it	lt
 8002a1e:	4613      	movlt	r3, r2
 8002a20:	6033      	str	r3, [r6, #0]
 8002a22:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002a26:	460c      	mov	r4, r1
 8002a28:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002a2c:	b10a      	cbz	r2, 8002a32 <_printf_common+0x26>
 8002a2e:	3301      	adds	r3, #1
 8002a30:	6033      	str	r3, [r6, #0]
 8002a32:	6823      	ldr	r3, [r4, #0]
 8002a34:	0699      	lsls	r1, r3, #26
 8002a36:	bf42      	ittt	mi
 8002a38:	6833      	ldrmi	r3, [r6, #0]
 8002a3a:	3302      	addmi	r3, #2
 8002a3c:	6033      	strmi	r3, [r6, #0]
 8002a3e:	6825      	ldr	r5, [r4, #0]
 8002a40:	f015 0506 	ands.w	r5, r5, #6
 8002a44:	d106      	bne.n	8002a54 <_printf_common+0x48>
 8002a46:	f104 0a19 	add.w	sl, r4, #25
 8002a4a:	68e3      	ldr	r3, [r4, #12]
 8002a4c:	6832      	ldr	r2, [r6, #0]
 8002a4e:	1a9b      	subs	r3, r3, r2
 8002a50:	42ab      	cmp	r3, r5
 8002a52:	dc28      	bgt.n	8002aa6 <_printf_common+0x9a>
 8002a54:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002a58:	1e13      	subs	r3, r2, #0
 8002a5a:	6822      	ldr	r2, [r4, #0]
 8002a5c:	bf18      	it	ne
 8002a5e:	2301      	movne	r3, #1
 8002a60:	0692      	lsls	r2, r2, #26
 8002a62:	d42d      	bmi.n	8002ac0 <_printf_common+0xb4>
 8002a64:	4649      	mov	r1, r9
 8002a66:	4638      	mov	r0, r7
 8002a68:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002a6c:	47c0      	blx	r8
 8002a6e:	3001      	adds	r0, #1
 8002a70:	d020      	beq.n	8002ab4 <_printf_common+0xa8>
 8002a72:	6823      	ldr	r3, [r4, #0]
 8002a74:	68e5      	ldr	r5, [r4, #12]
 8002a76:	f003 0306 	and.w	r3, r3, #6
 8002a7a:	2b04      	cmp	r3, #4
 8002a7c:	bf18      	it	ne
 8002a7e:	2500      	movne	r5, #0
 8002a80:	6832      	ldr	r2, [r6, #0]
 8002a82:	f04f 0600 	mov.w	r6, #0
 8002a86:	68a3      	ldr	r3, [r4, #8]
 8002a88:	bf08      	it	eq
 8002a8a:	1aad      	subeq	r5, r5, r2
 8002a8c:	6922      	ldr	r2, [r4, #16]
 8002a8e:	bf08      	it	eq
 8002a90:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002a94:	4293      	cmp	r3, r2
 8002a96:	bfc4      	itt	gt
 8002a98:	1a9b      	subgt	r3, r3, r2
 8002a9a:	18ed      	addgt	r5, r5, r3
 8002a9c:	341a      	adds	r4, #26
 8002a9e:	42b5      	cmp	r5, r6
 8002aa0:	d11a      	bne.n	8002ad8 <_printf_common+0xcc>
 8002aa2:	2000      	movs	r0, #0
 8002aa4:	e008      	b.n	8002ab8 <_printf_common+0xac>
 8002aa6:	2301      	movs	r3, #1
 8002aa8:	4652      	mov	r2, sl
 8002aaa:	4649      	mov	r1, r9
 8002aac:	4638      	mov	r0, r7
 8002aae:	47c0      	blx	r8
 8002ab0:	3001      	adds	r0, #1
 8002ab2:	d103      	bne.n	8002abc <_printf_common+0xb0>
 8002ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ab8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002abc:	3501      	adds	r5, #1
 8002abe:	e7c4      	b.n	8002a4a <_printf_common+0x3e>
 8002ac0:	2030      	movs	r0, #48	; 0x30
 8002ac2:	18e1      	adds	r1, r4, r3
 8002ac4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002ac8:	1c5a      	adds	r2, r3, #1
 8002aca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002ace:	4422      	add	r2, r4
 8002ad0:	3302      	adds	r3, #2
 8002ad2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002ad6:	e7c5      	b.n	8002a64 <_printf_common+0x58>
 8002ad8:	2301      	movs	r3, #1
 8002ada:	4622      	mov	r2, r4
 8002adc:	4649      	mov	r1, r9
 8002ade:	4638      	mov	r0, r7
 8002ae0:	47c0      	blx	r8
 8002ae2:	3001      	adds	r0, #1
 8002ae4:	d0e6      	beq.n	8002ab4 <_printf_common+0xa8>
 8002ae6:	3601      	adds	r6, #1
 8002ae8:	e7d9      	b.n	8002a9e <_printf_common+0x92>
	...

08002aec <_printf_i>:
 8002aec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002af0:	460c      	mov	r4, r1
 8002af2:	7e27      	ldrb	r7, [r4, #24]
 8002af4:	4691      	mov	r9, r2
 8002af6:	2f78      	cmp	r7, #120	; 0x78
 8002af8:	4680      	mov	r8, r0
 8002afa:	469a      	mov	sl, r3
 8002afc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002afe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002b02:	d807      	bhi.n	8002b14 <_printf_i+0x28>
 8002b04:	2f62      	cmp	r7, #98	; 0x62
 8002b06:	d80a      	bhi.n	8002b1e <_printf_i+0x32>
 8002b08:	2f00      	cmp	r7, #0
 8002b0a:	f000 80d9 	beq.w	8002cc0 <_printf_i+0x1d4>
 8002b0e:	2f58      	cmp	r7, #88	; 0x58
 8002b10:	f000 80a4 	beq.w	8002c5c <_printf_i+0x170>
 8002b14:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002b18:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002b1c:	e03a      	b.n	8002b94 <_printf_i+0xa8>
 8002b1e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002b22:	2b15      	cmp	r3, #21
 8002b24:	d8f6      	bhi.n	8002b14 <_printf_i+0x28>
 8002b26:	a001      	add	r0, pc, #4	; (adr r0, 8002b2c <_printf_i+0x40>)
 8002b28:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8002b2c:	08002b85 	.word	0x08002b85
 8002b30:	08002b99 	.word	0x08002b99
 8002b34:	08002b15 	.word	0x08002b15
 8002b38:	08002b15 	.word	0x08002b15
 8002b3c:	08002b15 	.word	0x08002b15
 8002b40:	08002b15 	.word	0x08002b15
 8002b44:	08002b99 	.word	0x08002b99
 8002b48:	08002b15 	.word	0x08002b15
 8002b4c:	08002b15 	.word	0x08002b15
 8002b50:	08002b15 	.word	0x08002b15
 8002b54:	08002b15 	.word	0x08002b15
 8002b58:	08002ca7 	.word	0x08002ca7
 8002b5c:	08002bc9 	.word	0x08002bc9
 8002b60:	08002c89 	.word	0x08002c89
 8002b64:	08002b15 	.word	0x08002b15
 8002b68:	08002b15 	.word	0x08002b15
 8002b6c:	08002cc9 	.word	0x08002cc9
 8002b70:	08002b15 	.word	0x08002b15
 8002b74:	08002bc9 	.word	0x08002bc9
 8002b78:	08002b15 	.word	0x08002b15
 8002b7c:	08002b15 	.word	0x08002b15
 8002b80:	08002c91 	.word	0x08002c91
 8002b84:	680b      	ldr	r3, [r1, #0]
 8002b86:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002b8a:	1d1a      	adds	r2, r3, #4
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	600a      	str	r2, [r1, #0]
 8002b90:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002b94:	2301      	movs	r3, #1
 8002b96:	e0a4      	b.n	8002ce2 <_printf_i+0x1f6>
 8002b98:	6825      	ldr	r5, [r4, #0]
 8002b9a:	6808      	ldr	r0, [r1, #0]
 8002b9c:	062e      	lsls	r6, r5, #24
 8002b9e:	f100 0304 	add.w	r3, r0, #4
 8002ba2:	d50a      	bpl.n	8002bba <_printf_i+0xce>
 8002ba4:	6805      	ldr	r5, [r0, #0]
 8002ba6:	600b      	str	r3, [r1, #0]
 8002ba8:	2d00      	cmp	r5, #0
 8002baa:	da03      	bge.n	8002bb4 <_printf_i+0xc8>
 8002bac:	232d      	movs	r3, #45	; 0x2d
 8002bae:	426d      	negs	r5, r5
 8002bb0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002bb4:	230a      	movs	r3, #10
 8002bb6:	485e      	ldr	r0, [pc, #376]	; (8002d30 <_printf_i+0x244>)
 8002bb8:	e019      	b.n	8002bee <_printf_i+0x102>
 8002bba:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002bbe:	6805      	ldr	r5, [r0, #0]
 8002bc0:	600b      	str	r3, [r1, #0]
 8002bc2:	bf18      	it	ne
 8002bc4:	b22d      	sxthne	r5, r5
 8002bc6:	e7ef      	b.n	8002ba8 <_printf_i+0xbc>
 8002bc8:	680b      	ldr	r3, [r1, #0]
 8002bca:	6825      	ldr	r5, [r4, #0]
 8002bcc:	1d18      	adds	r0, r3, #4
 8002bce:	6008      	str	r0, [r1, #0]
 8002bd0:	0628      	lsls	r0, r5, #24
 8002bd2:	d501      	bpl.n	8002bd8 <_printf_i+0xec>
 8002bd4:	681d      	ldr	r5, [r3, #0]
 8002bd6:	e002      	b.n	8002bde <_printf_i+0xf2>
 8002bd8:	0669      	lsls	r1, r5, #25
 8002bda:	d5fb      	bpl.n	8002bd4 <_printf_i+0xe8>
 8002bdc:	881d      	ldrh	r5, [r3, #0]
 8002bde:	2f6f      	cmp	r7, #111	; 0x6f
 8002be0:	bf0c      	ite	eq
 8002be2:	2308      	moveq	r3, #8
 8002be4:	230a      	movne	r3, #10
 8002be6:	4852      	ldr	r0, [pc, #328]	; (8002d30 <_printf_i+0x244>)
 8002be8:	2100      	movs	r1, #0
 8002bea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002bee:	6866      	ldr	r6, [r4, #4]
 8002bf0:	2e00      	cmp	r6, #0
 8002bf2:	bfa8      	it	ge
 8002bf4:	6821      	ldrge	r1, [r4, #0]
 8002bf6:	60a6      	str	r6, [r4, #8]
 8002bf8:	bfa4      	itt	ge
 8002bfa:	f021 0104 	bicge.w	r1, r1, #4
 8002bfe:	6021      	strge	r1, [r4, #0]
 8002c00:	b90d      	cbnz	r5, 8002c06 <_printf_i+0x11a>
 8002c02:	2e00      	cmp	r6, #0
 8002c04:	d04d      	beq.n	8002ca2 <_printf_i+0x1b6>
 8002c06:	4616      	mov	r6, r2
 8002c08:	fbb5 f1f3 	udiv	r1, r5, r3
 8002c0c:	fb03 5711 	mls	r7, r3, r1, r5
 8002c10:	5dc7      	ldrb	r7, [r0, r7]
 8002c12:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002c16:	462f      	mov	r7, r5
 8002c18:	42bb      	cmp	r3, r7
 8002c1a:	460d      	mov	r5, r1
 8002c1c:	d9f4      	bls.n	8002c08 <_printf_i+0x11c>
 8002c1e:	2b08      	cmp	r3, #8
 8002c20:	d10b      	bne.n	8002c3a <_printf_i+0x14e>
 8002c22:	6823      	ldr	r3, [r4, #0]
 8002c24:	07df      	lsls	r7, r3, #31
 8002c26:	d508      	bpl.n	8002c3a <_printf_i+0x14e>
 8002c28:	6923      	ldr	r3, [r4, #16]
 8002c2a:	6861      	ldr	r1, [r4, #4]
 8002c2c:	4299      	cmp	r1, r3
 8002c2e:	bfde      	ittt	le
 8002c30:	2330      	movle	r3, #48	; 0x30
 8002c32:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002c36:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002c3a:	1b92      	subs	r2, r2, r6
 8002c3c:	6122      	str	r2, [r4, #16]
 8002c3e:	464b      	mov	r3, r9
 8002c40:	4621      	mov	r1, r4
 8002c42:	4640      	mov	r0, r8
 8002c44:	f8cd a000 	str.w	sl, [sp]
 8002c48:	aa03      	add	r2, sp, #12
 8002c4a:	f7ff fedf 	bl	8002a0c <_printf_common>
 8002c4e:	3001      	adds	r0, #1
 8002c50:	d14c      	bne.n	8002cec <_printf_i+0x200>
 8002c52:	f04f 30ff 	mov.w	r0, #4294967295
 8002c56:	b004      	add	sp, #16
 8002c58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c5c:	4834      	ldr	r0, [pc, #208]	; (8002d30 <_printf_i+0x244>)
 8002c5e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002c62:	680e      	ldr	r6, [r1, #0]
 8002c64:	6823      	ldr	r3, [r4, #0]
 8002c66:	f856 5b04 	ldr.w	r5, [r6], #4
 8002c6a:	061f      	lsls	r7, r3, #24
 8002c6c:	600e      	str	r6, [r1, #0]
 8002c6e:	d514      	bpl.n	8002c9a <_printf_i+0x1ae>
 8002c70:	07d9      	lsls	r1, r3, #31
 8002c72:	bf44      	itt	mi
 8002c74:	f043 0320 	orrmi.w	r3, r3, #32
 8002c78:	6023      	strmi	r3, [r4, #0]
 8002c7a:	b91d      	cbnz	r5, 8002c84 <_printf_i+0x198>
 8002c7c:	6823      	ldr	r3, [r4, #0]
 8002c7e:	f023 0320 	bic.w	r3, r3, #32
 8002c82:	6023      	str	r3, [r4, #0]
 8002c84:	2310      	movs	r3, #16
 8002c86:	e7af      	b.n	8002be8 <_printf_i+0xfc>
 8002c88:	6823      	ldr	r3, [r4, #0]
 8002c8a:	f043 0320 	orr.w	r3, r3, #32
 8002c8e:	6023      	str	r3, [r4, #0]
 8002c90:	2378      	movs	r3, #120	; 0x78
 8002c92:	4828      	ldr	r0, [pc, #160]	; (8002d34 <_printf_i+0x248>)
 8002c94:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002c98:	e7e3      	b.n	8002c62 <_printf_i+0x176>
 8002c9a:	065e      	lsls	r6, r3, #25
 8002c9c:	bf48      	it	mi
 8002c9e:	b2ad      	uxthmi	r5, r5
 8002ca0:	e7e6      	b.n	8002c70 <_printf_i+0x184>
 8002ca2:	4616      	mov	r6, r2
 8002ca4:	e7bb      	b.n	8002c1e <_printf_i+0x132>
 8002ca6:	680b      	ldr	r3, [r1, #0]
 8002ca8:	6826      	ldr	r6, [r4, #0]
 8002caa:	1d1d      	adds	r5, r3, #4
 8002cac:	6960      	ldr	r0, [r4, #20]
 8002cae:	600d      	str	r5, [r1, #0]
 8002cb0:	0635      	lsls	r5, r6, #24
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	d501      	bpl.n	8002cba <_printf_i+0x1ce>
 8002cb6:	6018      	str	r0, [r3, #0]
 8002cb8:	e002      	b.n	8002cc0 <_printf_i+0x1d4>
 8002cba:	0671      	lsls	r1, r6, #25
 8002cbc:	d5fb      	bpl.n	8002cb6 <_printf_i+0x1ca>
 8002cbe:	8018      	strh	r0, [r3, #0]
 8002cc0:	2300      	movs	r3, #0
 8002cc2:	4616      	mov	r6, r2
 8002cc4:	6123      	str	r3, [r4, #16]
 8002cc6:	e7ba      	b.n	8002c3e <_printf_i+0x152>
 8002cc8:	680b      	ldr	r3, [r1, #0]
 8002cca:	1d1a      	adds	r2, r3, #4
 8002ccc:	600a      	str	r2, [r1, #0]
 8002cce:	681e      	ldr	r6, [r3, #0]
 8002cd0:	2100      	movs	r1, #0
 8002cd2:	4630      	mov	r0, r6
 8002cd4:	6862      	ldr	r2, [r4, #4]
 8002cd6:	f002 fe21 	bl	800591c <memchr>
 8002cda:	b108      	cbz	r0, 8002ce0 <_printf_i+0x1f4>
 8002cdc:	1b80      	subs	r0, r0, r6
 8002cde:	6060      	str	r0, [r4, #4]
 8002ce0:	6863      	ldr	r3, [r4, #4]
 8002ce2:	6123      	str	r3, [r4, #16]
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002cea:	e7a8      	b.n	8002c3e <_printf_i+0x152>
 8002cec:	4632      	mov	r2, r6
 8002cee:	4649      	mov	r1, r9
 8002cf0:	4640      	mov	r0, r8
 8002cf2:	6923      	ldr	r3, [r4, #16]
 8002cf4:	47d0      	blx	sl
 8002cf6:	3001      	adds	r0, #1
 8002cf8:	d0ab      	beq.n	8002c52 <_printf_i+0x166>
 8002cfa:	6823      	ldr	r3, [r4, #0]
 8002cfc:	079b      	lsls	r3, r3, #30
 8002cfe:	d413      	bmi.n	8002d28 <_printf_i+0x23c>
 8002d00:	68e0      	ldr	r0, [r4, #12]
 8002d02:	9b03      	ldr	r3, [sp, #12]
 8002d04:	4298      	cmp	r0, r3
 8002d06:	bfb8      	it	lt
 8002d08:	4618      	movlt	r0, r3
 8002d0a:	e7a4      	b.n	8002c56 <_printf_i+0x16a>
 8002d0c:	2301      	movs	r3, #1
 8002d0e:	4632      	mov	r2, r6
 8002d10:	4649      	mov	r1, r9
 8002d12:	4640      	mov	r0, r8
 8002d14:	47d0      	blx	sl
 8002d16:	3001      	adds	r0, #1
 8002d18:	d09b      	beq.n	8002c52 <_printf_i+0x166>
 8002d1a:	3501      	adds	r5, #1
 8002d1c:	68e3      	ldr	r3, [r4, #12]
 8002d1e:	9903      	ldr	r1, [sp, #12]
 8002d20:	1a5b      	subs	r3, r3, r1
 8002d22:	42ab      	cmp	r3, r5
 8002d24:	dcf2      	bgt.n	8002d0c <_printf_i+0x220>
 8002d26:	e7eb      	b.n	8002d00 <_printf_i+0x214>
 8002d28:	2500      	movs	r5, #0
 8002d2a:	f104 0619 	add.w	r6, r4, #25
 8002d2e:	e7f5      	b.n	8002d1c <_printf_i+0x230>
 8002d30:	0800744a 	.word	0x0800744a
 8002d34:	0800745b 	.word	0x0800745b

08002d38 <_scanf_float>:
 8002d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d3c:	b087      	sub	sp, #28
 8002d3e:	9303      	str	r3, [sp, #12]
 8002d40:	688b      	ldr	r3, [r1, #8]
 8002d42:	4617      	mov	r7, r2
 8002d44:	1e5a      	subs	r2, r3, #1
 8002d46:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002d4a:	bf85      	ittet	hi
 8002d4c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002d50:	195b      	addhi	r3, r3, r5
 8002d52:	2300      	movls	r3, #0
 8002d54:	9302      	strhi	r3, [sp, #8]
 8002d56:	bf88      	it	hi
 8002d58:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002d5c:	468b      	mov	fp, r1
 8002d5e:	f04f 0500 	mov.w	r5, #0
 8002d62:	bf8c      	ite	hi
 8002d64:	608b      	strhi	r3, [r1, #8]
 8002d66:	9302      	strls	r3, [sp, #8]
 8002d68:	680b      	ldr	r3, [r1, #0]
 8002d6a:	4680      	mov	r8, r0
 8002d6c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002d70:	f84b 3b1c 	str.w	r3, [fp], #28
 8002d74:	460c      	mov	r4, r1
 8002d76:	465e      	mov	r6, fp
 8002d78:	46aa      	mov	sl, r5
 8002d7a:	46a9      	mov	r9, r5
 8002d7c:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002d80:	9501      	str	r5, [sp, #4]
 8002d82:	68a2      	ldr	r2, [r4, #8]
 8002d84:	b152      	cbz	r2, 8002d9c <_scanf_float+0x64>
 8002d86:	683b      	ldr	r3, [r7, #0]
 8002d88:	781b      	ldrb	r3, [r3, #0]
 8002d8a:	2b4e      	cmp	r3, #78	; 0x4e
 8002d8c:	d864      	bhi.n	8002e58 <_scanf_float+0x120>
 8002d8e:	2b40      	cmp	r3, #64	; 0x40
 8002d90:	d83c      	bhi.n	8002e0c <_scanf_float+0xd4>
 8002d92:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002d96:	b2c8      	uxtb	r0, r1
 8002d98:	280e      	cmp	r0, #14
 8002d9a:	d93a      	bls.n	8002e12 <_scanf_float+0xda>
 8002d9c:	f1b9 0f00 	cmp.w	r9, #0
 8002da0:	d003      	beq.n	8002daa <_scanf_float+0x72>
 8002da2:	6823      	ldr	r3, [r4, #0]
 8002da4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002da8:	6023      	str	r3, [r4, #0]
 8002daa:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002dae:	f1ba 0f01 	cmp.w	sl, #1
 8002db2:	f200 8113 	bhi.w	8002fdc <_scanf_float+0x2a4>
 8002db6:	455e      	cmp	r6, fp
 8002db8:	f200 8105 	bhi.w	8002fc6 <_scanf_float+0x28e>
 8002dbc:	2501      	movs	r5, #1
 8002dbe:	4628      	mov	r0, r5
 8002dc0:	b007      	add	sp, #28
 8002dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dc6:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002dca:	2a0d      	cmp	r2, #13
 8002dcc:	d8e6      	bhi.n	8002d9c <_scanf_float+0x64>
 8002dce:	a101      	add	r1, pc, #4	; (adr r1, 8002dd4 <_scanf_float+0x9c>)
 8002dd0:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002dd4:	08002f13 	.word	0x08002f13
 8002dd8:	08002d9d 	.word	0x08002d9d
 8002ddc:	08002d9d 	.word	0x08002d9d
 8002de0:	08002d9d 	.word	0x08002d9d
 8002de4:	08002f73 	.word	0x08002f73
 8002de8:	08002f4b 	.word	0x08002f4b
 8002dec:	08002d9d 	.word	0x08002d9d
 8002df0:	08002d9d 	.word	0x08002d9d
 8002df4:	08002f21 	.word	0x08002f21
 8002df8:	08002d9d 	.word	0x08002d9d
 8002dfc:	08002d9d 	.word	0x08002d9d
 8002e00:	08002d9d 	.word	0x08002d9d
 8002e04:	08002d9d 	.word	0x08002d9d
 8002e08:	08002ed9 	.word	0x08002ed9
 8002e0c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e10:	e7db      	b.n	8002dca <_scanf_float+0x92>
 8002e12:	290e      	cmp	r1, #14
 8002e14:	d8c2      	bhi.n	8002d9c <_scanf_float+0x64>
 8002e16:	a001      	add	r0, pc, #4	; (adr r0, 8002e1c <_scanf_float+0xe4>)
 8002e18:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002e1c:	08002ecb 	.word	0x08002ecb
 8002e20:	08002d9d 	.word	0x08002d9d
 8002e24:	08002ecb 	.word	0x08002ecb
 8002e28:	08002f5f 	.word	0x08002f5f
 8002e2c:	08002d9d 	.word	0x08002d9d
 8002e30:	08002e79 	.word	0x08002e79
 8002e34:	08002eb5 	.word	0x08002eb5
 8002e38:	08002eb5 	.word	0x08002eb5
 8002e3c:	08002eb5 	.word	0x08002eb5
 8002e40:	08002eb5 	.word	0x08002eb5
 8002e44:	08002eb5 	.word	0x08002eb5
 8002e48:	08002eb5 	.word	0x08002eb5
 8002e4c:	08002eb5 	.word	0x08002eb5
 8002e50:	08002eb5 	.word	0x08002eb5
 8002e54:	08002eb5 	.word	0x08002eb5
 8002e58:	2b6e      	cmp	r3, #110	; 0x6e
 8002e5a:	d809      	bhi.n	8002e70 <_scanf_float+0x138>
 8002e5c:	2b60      	cmp	r3, #96	; 0x60
 8002e5e:	d8b2      	bhi.n	8002dc6 <_scanf_float+0x8e>
 8002e60:	2b54      	cmp	r3, #84	; 0x54
 8002e62:	d077      	beq.n	8002f54 <_scanf_float+0x21c>
 8002e64:	2b59      	cmp	r3, #89	; 0x59
 8002e66:	d199      	bne.n	8002d9c <_scanf_float+0x64>
 8002e68:	2d07      	cmp	r5, #7
 8002e6a:	d197      	bne.n	8002d9c <_scanf_float+0x64>
 8002e6c:	2508      	movs	r5, #8
 8002e6e:	e029      	b.n	8002ec4 <_scanf_float+0x18c>
 8002e70:	2b74      	cmp	r3, #116	; 0x74
 8002e72:	d06f      	beq.n	8002f54 <_scanf_float+0x21c>
 8002e74:	2b79      	cmp	r3, #121	; 0x79
 8002e76:	e7f6      	b.n	8002e66 <_scanf_float+0x12e>
 8002e78:	6821      	ldr	r1, [r4, #0]
 8002e7a:	05c8      	lsls	r0, r1, #23
 8002e7c:	d51a      	bpl.n	8002eb4 <_scanf_float+0x17c>
 8002e7e:	9b02      	ldr	r3, [sp, #8]
 8002e80:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002e84:	6021      	str	r1, [r4, #0]
 8002e86:	f109 0901 	add.w	r9, r9, #1
 8002e8a:	b11b      	cbz	r3, 8002e94 <_scanf_float+0x15c>
 8002e8c:	3b01      	subs	r3, #1
 8002e8e:	3201      	adds	r2, #1
 8002e90:	9302      	str	r3, [sp, #8]
 8002e92:	60a2      	str	r2, [r4, #8]
 8002e94:	68a3      	ldr	r3, [r4, #8]
 8002e96:	3b01      	subs	r3, #1
 8002e98:	60a3      	str	r3, [r4, #8]
 8002e9a:	6923      	ldr	r3, [r4, #16]
 8002e9c:	3301      	adds	r3, #1
 8002e9e:	6123      	str	r3, [r4, #16]
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	3b01      	subs	r3, #1
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	607b      	str	r3, [r7, #4]
 8002ea8:	f340 8084 	ble.w	8002fb4 <_scanf_float+0x27c>
 8002eac:	683b      	ldr	r3, [r7, #0]
 8002eae:	3301      	adds	r3, #1
 8002eb0:	603b      	str	r3, [r7, #0]
 8002eb2:	e766      	b.n	8002d82 <_scanf_float+0x4a>
 8002eb4:	eb1a 0f05 	cmn.w	sl, r5
 8002eb8:	f47f af70 	bne.w	8002d9c <_scanf_float+0x64>
 8002ebc:	6822      	ldr	r2, [r4, #0]
 8002ebe:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8002ec2:	6022      	str	r2, [r4, #0]
 8002ec4:	f806 3b01 	strb.w	r3, [r6], #1
 8002ec8:	e7e4      	b.n	8002e94 <_scanf_float+0x15c>
 8002eca:	6822      	ldr	r2, [r4, #0]
 8002ecc:	0610      	lsls	r0, r2, #24
 8002ece:	f57f af65 	bpl.w	8002d9c <_scanf_float+0x64>
 8002ed2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002ed6:	e7f4      	b.n	8002ec2 <_scanf_float+0x18a>
 8002ed8:	f1ba 0f00 	cmp.w	sl, #0
 8002edc:	d10e      	bne.n	8002efc <_scanf_float+0x1c4>
 8002ede:	f1b9 0f00 	cmp.w	r9, #0
 8002ee2:	d10e      	bne.n	8002f02 <_scanf_float+0x1ca>
 8002ee4:	6822      	ldr	r2, [r4, #0]
 8002ee6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002eea:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002eee:	d108      	bne.n	8002f02 <_scanf_float+0x1ca>
 8002ef0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002ef4:	f04f 0a01 	mov.w	sl, #1
 8002ef8:	6022      	str	r2, [r4, #0]
 8002efa:	e7e3      	b.n	8002ec4 <_scanf_float+0x18c>
 8002efc:	f1ba 0f02 	cmp.w	sl, #2
 8002f00:	d055      	beq.n	8002fae <_scanf_float+0x276>
 8002f02:	2d01      	cmp	r5, #1
 8002f04:	d002      	beq.n	8002f0c <_scanf_float+0x1d4>
 8002f06:	2d04      	cmp	r5, #4
 8002f08:	f47f af48 	bne.w	8002d9c <_scanf_float+0x64>
 8002f0c:	3501      	adds	r5, #1
 8002f0e:	b2ed      	uxtb	r5, r5
 8002f10:	e7d8      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f12:	f1ba 0f01 	cmp.w	sl, #1
 8002f16:	f47f af41 	bne.w	8002d9c <_scanf_float+0x64>
 8002f1a:	f04f 0a02 	mov.w	sl, #2
 8002f1e:	e7d1      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f20:	b97d      	cbnz	r5, 8002f42 <_scanf_float+0x20a>
 8002f22:	f1b9 0f00 	cmp.w	r9, #0
 8002f26:	f47f af3c 	bne.w	8002da2 <_scanf_float+0x6a>
 8002f2a:	6822      	ldr	r2, [r4, #0]
 8002f2c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002f30:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002f34:	f47f af39 	bne.w	8002daa <_scanf_float+0x72>
 8002f38:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002f3c:	2501      	movs	r5, #1
 8002f3e:	6022      	str	r2, [r4, #0]
 8002f40:	e7c0      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f42:	2d03      	cmp	r5, #3
 8002f44:	d0e2      	beq.n	8002f0c <_scanf_float+0x1d4>
 8002f46:	2d05      	cmp	r5, #5
 8002f48:	e7de      	b.n	8002f08 <_scanf_float+0x1d0>
 8002f4a:	2d02      	cmp	r5, #2
 8002f4c:	f47f af26 	bne.w	8002d9c <_scanf_float+0x64>
 8002f50:	2503      	movs	r5, #3
 8002f52:	e7b7      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f54:	2d06      	cmp	r5, #6
 8002f56:	f47f af21 	bne.w	8002d9c <_scanf_float+0x64>
 8002f5a:	2507      	movs	r5, #7
 8002f5c:	e7b2      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f5e:	6822      	ldr	r2, [r4, #0]
 8002f60:	0591      	lsls	r1, r2, #22
 8002f62:	f57f af1b 	bpl.w	8002d9c <_scanf_float+0x64>
 8002f66:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002f6a:	6022      	str	r2, [r4, #0]
 8002f6c:	f8cd 9004 	str.w	r9, [sp, #4]
 8002f70:	e7a8      	b.n	8002ec4 <_scanf_float+0x18c>
 8002f72:	6822      	ldr	r2, [r4, #0]
 8002f74:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002f78:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002f7c:	d006      	beq.n	8002f8c <_scanf_float+0x254>
 8002f7e:	0550      	lsls	r0, r2, #21
 8002f80:	f57f af0c 	bpl.w	8002d9c <_scanf_float+0x64>
 8002f84:	f1b9 0f00 	cmp.w	r9, #0
 8002f88:	f43f af0f 	beq.w	8002daa <_scanf_float+0x72>
 8002f8c:	0591      	lsls	r1, r2, #22
 8002f8e:	bf58      	it	pl
 8002f90:	9901      	ldrpl	r1, [sp, #4]
 8002f92:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002f96:	bf58      	it	pl
 8002f98:	eba9 0101 	subpl.w	r1, r9, r1
 8002f9c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002fa0:	f04f 0900 	mov.w	r9, #0
 8002fa4:	bf58      	it	pl
 8002fa6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002faa:	6022      	str	r2, [r4, #0]
 8002fac:	e78a      	b.n	8002ec4 <_scanf_float+0x18c>
 8002fae:	f04f 0a03 	mov.w	sl, #3
 8002fb2:	e787      	b.n	8002ec4 <_scanf_float+0x18c>
 8002fb4:	4639      	mov	r1, r7
 8002fb6:	4640      	mov	r0, r8
 8002fb8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002fbc:	4798      	blx	r3
 8002fbe:	2800      	cmp	r0, #0
 8002fc0:	f43f aedf 	beq.w	8002d82 <_scanf_float+0x4a>
 8002fc4:	e6ea      	b.n	8002d9c <_scanf_float+0x64>
 8002fc6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002fca:	463a      	mov	r2, r7
 8002fcc:	4640      	mov	r0, r8
 8002fce:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002fd2:	4798      	blx	r3
 8002fd4:	6923      	ldr	r3, [r4, #16]
 8002fd6:	3b01      	subs	r3, #1
 8002fd8:	6123      	str	r3, [r4, #16]
 8002fda:	e6ec      	b.n	8002db6 <_scanf_float+0x7e>
 8002fdc:	1e6b      	subs	r3, r5, #1
 8002fde:	2b06      	cmp	r3, #6
 8002fe0:	d825      	bhi.n	800302e <_scanf_float+0x2f6>
 8002fe2:	2d02      	cmp	r5, #2
 8002fe4:	d836      	bhi.n	8003054 <_scanf_float+0x31c>
 8002fe6:	455e      	cmp	r6, fp
 8002fe8:	f67f aee8 	bls.w	8002dbc <_scanf_float+0x84>
 8002fec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ff0:	463a      	mov	r2, r7
 8002ff2:	4640      	mov	r0, r8
 8002ff4:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002ff8:	4798      	blx	r3
 8002ffa:	6923      	ldr	r3, [r4, #16]
 8002ffc:	3b01      	subs	r3, #1
 8002ffe:	6123      	str	r3, [r4, #16]
 8003000:	e7f1      	b.n	8002fe6 <_scanf_float+0x2ae>
 8003002:	9802      	ldr	r0, [sp, #8]
 8003004:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003008:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800300c:	463a      	mov	r2, r7
 800300e:	9002      	str	r0, [sp, #8]
 8003010:	4640      	mov	r0, r8
 8003012:	4798      	blx	r3
 8003014:	6923      	ldr	r3, [r4, #16]
 8003016:	3b01      	subs	r3, #1
 8003018:	6123      	str	r3, [r4, #16]
 800301a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800301e:	fa5f fa8a 	uxtb.w	sl, sl
 8003022:	f1ba 0f02 	cmp.w	sl, #2
 8003026:	d1ec      	bne.n	8003002 <_scanf_float+0x2ca>
 8003028:	3d03      	subs	r5, #3
 800302a:	b2ed      	uxtb	r5, r5
 800302c:	1b76      	subs	r6, r6, r5
 800302e:	6823      	ldr	r3, [r4, #0]
 8003030:	05da      	lsls	r2, r3, #23
 8003032:	d52f      	bpl.n	8003094 <_scanf_float+0x35c>
 8003034:	055b      	lsls	r3, r3, #21
 8003036:	d510      	bpl.n	800305a <_scanf_float+0x322>
 8003038:	455e      	cmp	r6, fp
 800303a:	f67f aebf 	bls.w	8002dbc <_scanf_float+0x84>
 800303e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003042:	463a      	mov	r2, r7
 8003044:	4640      	mov	r0, r8
 8003046:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800304a:	4798      	blx	r3
 800304c:	6923      	ldr	r3, [r4, #16]
 800304e:	3b01      	subs	r3, #1
 8003050:	6123      	str	r3, [r4, #16]
 8003052:	e7f1      	b.n	8003038 <_scanf_float+0x300>
 8003054:	46aa      	mov	sl, r5
 8003056:	9602      	str	r6, [sp, #8]
 8003058:	e7df      	b.n	800301a <_scanf_float+0x2e2>
 800305a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800305e:	6923      	ldr	r3, [r4, #16]
 8003060:	2965      	cmp	r1, #101	; 0x65
 8003062:	f103 33ff 	add.w	r3, r3, #4294967295
 8003066:	f106 35ff 	add.w	r5, r6, #4294967295
 800306a:	6123      	str	r3, [r4, #16]
 800306c:	d00c      	beq.n	8003088 <_scanf_float+0x350>
 800306e:	2945      	cmp	r1, #69	; 0x45
 8003070:	d00a      	beq.n	8003088 <_scanf_float+0x350>
 8003072:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003076:	463a      	mov	r2, r7
 8003078:	4640      	mov	r0, r8
 800307a:	4798      	blx	r3
 800307c:	6923      	ldr	r3, [r4, #16]
 800307e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003082:	3b01      	subs	r3, #1
 8003084:	1eb5      	subs	r5, r6, #2
 8003086:	6123      	str	r3, [r4, #16]
 8003088:	463a      	mov	r2, r7
 800308a:	4640      	mov	r0, r8
 800308c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003090:	4798      	blx	r3
 8003092:	462e      	mov	r6, r5
 8003094:	6825      	ldr	r5, [r4, #0]
 8003096:	f015 0510 	ands.w	r5, r5, #16
 800309a:	d159      	bne.n	8003150 <_scanf_float+0x418>
 800309c:	7035      	strb	r5, [r6, #0]
 800309e:	6823      	ldr	r3, [r4, #0]
 80030a0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80030a4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80030a8:	d11c      	bne.n	80030e4 <_scanf_float+0x3ac>
 80030aa:	9b01      	ldr	r3, [sp, #4]
 80030ac:	454b      	cmp	r3, r9
 80030ae:	eba3 0209 	sub.w	r2, r3, r9
 80030b2:	d124      	bne.n	80030fe <_scanf_float+0x3c6>
 80030b4:	2200      	movs	r2, #0
 80030b6:	4659      	mov	r1, fp
 80030b8:	4640      	mov	r0, r8
 80030ba:	f000 fec1 	bl	8003e40 <_strtod_r>
 80030be:	f8d4 c000 	ldr.w	ip, [r4]
 80030c2:	9b03      	ldr	r3, [sp, #12]
 80030c4:	f01c 0f02 	tst.w	ip, #2
 80030c8:	4606      	mov	r6, r0
 80030ca:	460f      	mov	r7, r1
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	d021      	beq.n	8003114 <_scanf_float+0x3dc>
 80030d0:	9903      	ldr	r1, [sp, #12]
 80030d2:	1d1a      	adds	r2, r3, #4
 80030d4:	600a      	str	r2, [r1, #0]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	e9c3 6700 	strd	r6, r7, [r3]
 80030dc:	68e3      	ldr	r3, [r4, #12]
 80030de:	3301      	adds	r3, #1
 80030e0:	60e3      	str	r3, [r4, #12]
 80030e2:	e66c      	b.n	8002dbe <_scanf_float+0x86>
 80030e4:	9b04      	ldr	r3, [sp, #16]
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d0e4      	beq.n	80030b4 <_scanf_float+0x37c>
 80030ea:	9905      	ldr	r1, [sp, #20]
 80030ec:	230a      	movs	r3, #10
 80030ee:	462a      	mov	r2, r5
 80030f0:	4640      	mov	r0, r8
 80030f2:	3101      	adds	r1, #1
 80030f4:	f000 ff30 	bl	8003f58 <_strtol_r>
 80030f8:	9b04      	ldr	r3, [sp, #16]
 80030fa:	9e05      	ldr	r6, [sp, #20]
 80030fc:	1ac2      	subs	r2, r0, r3
 80030fe:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8003102:	429e      	cmp	r6, r3
 8003104:	bf28      	it	cs
 8003106:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800310a:	4630      	mov	r0, r6
 800310c:	4911      	ldr	r1, [pc, #68]	; (8003154 <_scanf_float+0x41c>)
 800310e:	f000 f829 	bl	8003164 <siprintf>
 8003112:	e7cf      	b.n	80030b4 <_scanf_float+0x37c>
 8003114:	f01c 0f04 	tst.w	ip, #4
 8003118:	f103 0e04 	add.w	lr, r3, #4
 800311c:	d003      	beq.n	8003126 <_scanf_float+0x3ee>
 800311e:	9903      	ldr	r1, [sp, #12]
 8003120:	f8c1 e000 	str.w	lr, [r1]
 8003124:	e7d7      	b.n	80030d6 <_scanf_float+0x39e>
 8003126:	9a03      	ldr	r2, [sp, #12]
 8003128:	f8c2 e000 	str.w	lr, [r2]
 800312c:	f8d3 8000 	ldr.w	r8, [r3]
 8003130:	4602      	mov	r2, r0
 8003132:	460b      	mov	r3, r1
 8003134:	f7fd fc7a 	bl	8000a2c <__aeabi_dcmpun>
 8003138:	b128      	cbz	r0, 8003146 <_scanf_float+0x40e>
 800313a:	4807      	ldr	r0, [pc, #28]	; (8003158 <_scanf_float+0x420>)
 800313c:	f000 f80e 	bl	800315c <nanf>
 8003140:	f8c8 0000 	str.w	r0, [r8]
 8003144:	e7ca      	b.n	80030dc <_scanf_float+0x3a4>
 8003146:	4630      	mov	r0, r6
 8003148:	4639      	mov	r1, r7
 800314a:	f7fd fccd 	bl	8000ae8 <__aeabi_d2f>
 800314e:	e7f7      	b.n	8003140 <_scanf_float+0x408>
 8003150:	2500      	movs	r5, #0
 8003152:	e634      	b.n	8002dbe <_scanf_float+0x86>
 8003154:	0800746c 	.word	0x0800746c
 8003158:	080078e8 	.word	0x080078e8

0800315c <nanf>:
 800315c:	4800      	ldr	r0, [pc, #0]	; (8003160 <nanf+0x4>)
 800315e:	4770      	bx	lr
 8003160:	7fc00000 	.word	0x7fc00000

08003164 <siprintf>:
 8003164:	b40e      	push	{r1, r2, r3}
 8003166:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800316a:	b500      	push	{lr}
 800316c:	b09c      	sub	sp, #112	; 0x70
 800316e:	ab1d      	add	r3, sp, #116	; 0x74
 8003170:	9002      	str	r0, [sp, #8]
 8003172:	9006      	str	r0, [sp, #24]
 8003174:	9107      	str	r1, [sp, #28]
 8003176:	9104      	str	r1, [sp, #16]
 8003178:	4808      	ldr	r0, [pc, #32]	; (800319c <siprintf+0x38>)
 800317a:	4909      	ldr	r1, [pc, #36]	; (80031a0 <siprintf+0x3c>)
 800317c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003180:	9105      	str	r1, [sp, #20]
 8003182:	6800      	ldr	r0, [r0, #0]
 8003184:	a902      	add	r1, sp, #8
 8003186:	9301      	str	r3, [sp, #4]
 8003188:	f003 f99e 	bl	80064c8 <_svfiprintf_r>
 800318c:	2200      	movs	r2, #0
 800318e:	9b02      	ldr	r3, [sp, #8]
 8003190:	701a      	strb	r2, [r3, #0]
 8003192:	b01c      	add	sp, #112	; 0x70
 8003194:	f85d eb04 	ldr.w	lr, [sp], #4
 8003198:	b003      	add	sp, #12
 800319a:	4770      	bx	lr
 800319c:	20000000 	.word	0x20000000
 80031a0:	ffff0208 	.word	0xffff0208

080031a4 <strchr>:
 80031a4:	4603      	mov	r3, r0
 80031a6:	b2c9      	uxtb	r1, r1
 80031a8:	4618      	mov	r0, r3
 80031aa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80031ae:	b112      	cbz	r2, 80031b6 <strchr+0x12>
 80031b0:	428a      	cmp	r2, r1
 80031b2:	d1f9      	bne.n	80031a8 <strchr+0x4>
 80031b4:	4770      	bx	lr
 80031b6:	2900      	cmp	r1, #0
 80031b8:	bf18      	it	ne
 80031ba:	2000      	movne	r0, #0
 80031bc:	4770      	bx	lr

080031be <strncpy>:
 80031be:	4603      	mov	r3, r0
 80031c0:	b510      	push	{r4, lr}
 80031c2:	3901      	subs	r1, #1
 80031c4:	b132      	cbz	r2, 80031d4 <strncpy+0x16>
 80031c6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80031ca:	3a01      	subs	r2, #1
 80031cc:	f803 4b01 	strb.w	r4, [r3], #1
 80031d0:	2c00      	cmp	r4, #0
 80031d2:	d1f7      	bne.n	80031c4 <strncpy+0x6>
 80031d4:	2100      	movs	r1, #0
 80031d6:	441a      	add	r2, r3
 80031d8:	4293      	cmp	r3, r2
 80031da:	d100      	bne.n	80031de <strncpy+0x20>
 80031dc:	bd10      	pop	{r4, pc}
 80031de:	f803 1b01 	strb.w	r1, [r3], #1
 80031e2:	e7f9      	b.n	80031d8 <strncpy+0x1a>

080031e4 <strstr>:
 80031e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80031e6:	780c      	ldrb	r4, [r1, #0]
 80031e8:	b164      	cbz	r4, 8003204 <strstr+0x20>
 80031ea:	4603      	mov	r3, r0
 80031ec:	781a      	ldrb	r2, [r3, #0]
 80031ee:	4618      	mov	r0, r3
 80031f0:	1c5e      	adds	r6, r3, #1
 80031f2:	b90a      	cbnz	r2, 80031f8 <strstr+0x14>
 80031f4:	4610      	mov	r0, r2
 80031f6:	e005      	b.n	8003204 <strstr+0x20>
 80031f8:	4294      	cmp	r4, r2
 80031fa:	d108      	bne.n	800320e <strstr+0x2a>
 80031fc:	460d      	mov	r5, r1
 80031fe:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8003202:	b902      	cbnz	r2, 8003206 <strstr+0x22>
 8003204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003206:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800320a:	4297      	cmp	r7, r2
 800320c:	d0f7      	beq.n	80031fe <strstr+0x1a>
 800320e:	4633      	mov	r3, r6
 8003210:	e7ec      	b.n	80031ec <strstr+0x8>

08003212 <sulp>:
 8003212:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003216:	460f      	mov	r7, r1
 8003218:	4690      	mov	r8, r2
 800321a:	f002 fefd 	bl	8006018 <__ulp>
 800321e:	4604      	mov	r4, r0
 8003220:	460d      	mov	r5, r1
 8003222:	f1b8 0f00 	cmp.w	r8, #0
 8003226:	d011      	beq.n	800324c <sulp+0x3a>
 8003228:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800322c:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003230:	2b00      	cmp	r3, #0
 8003232:	dd0b      	ble.n	800324c <sulp+0x3a>
 8003234:	2400      	movs	r4, #0
 8003236:	051b      	lsls	r3, r3, #20
 8003238:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800323c:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8003240:	4622      	mov	r2, r4
 8003242:	462b      	mov	r3, r5
 8003244:	f7fd f958 	bl	80004f8 <__aeabi_dmul>
 8003248:	4604      	mov	r4, r0
 800324a:	460d      	mov	r5, r1
 800324c:	4620      	mov	r0, r4
 800324e:	4629      	mov	r1, r5
 8003250:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003254:	0000      	movs	r0, r0
	...

08003258 <_strtod_l>:
 8003258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800325c:	469b      	mov	fp, r3
 800325e:	2300      	movs	r3, #0
 8003260:	b0a1      	sub	sp, #132	; 0x84
 8003262:	931c      	str	r3, [sp, #112]	; 0x70
 8003264:	4ba1      	ldr	r3, [pc, #644]	; (80034ec <_strtod_l+0x294>)
 8003266:	4682      	mov	sl, r0
 8003268:	681f      	ldr	r7, [r3, #0]
 800326a:	460e      	mov	r6, r1
 800326c:	4638      	mov	r0, r7
 800326e:	9217      	str	r2, [sp, #92]	; 0x5c
 8003270:	f7fc ff7e 	bl	8000170 <strlen>
 8003274:	f04f 0800 	mov.w	r8, #0
 8003278:	4604      	mov	r4, r0
 800327a:	f04f 0900 	mov.w	r9, #0
 800327e:	961b      	str	r6, [sp, #108]	; 0x6c
 8003280:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003282:	781a      	ldrb	r2, [r3, #0]
 8003284:	2a2b      	cmp	r2, #43	; 0x2b
 8003286:	d04c      	beq.n	8003322 <_strtod_l+0xca>
 8003288:	d83a      	bhi.n	8003300 <_strtod_l+0xa8>
 800328a:	2a0d      	cmp	r2, #13
 800328c:	d833      	bhi.n	80032f6 <_strtod_l+0x9e>
 800328e:	2a08      	cmp	r2, #8
 8003290:	d833      	bhi.n	80032fa <_strtod_l+0xa2>
 8003292:	2a00      	cmp	r2, #0
 8003294:	d03d      	beq.n	8003312 <_strtod_l+0xba>
 8003296:	2300      	movs	r3, #0
 8003298:	930c      	str	r3, [sp, #48]	; 0x30
 800329a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800329c:	782b      	ldrb	r3, [r5, #0]
 800329e:	2b30      	cmp	r3, #48	; 0x30
 80032a0:	f040 80af 	bne.w	8003402 <_strtod_l+0x1aa>
 80032a4:	786b      	ldrb	r3, [r5, #1]
 80032a6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80032aa:	2b58      	cmp	r3, #88	; 0x58
 80032ac:	d16c      	bne.n	8003388 <_strtod_l+0x130>
 80032ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032b0:	4650      	mov	r0, sl
 80032b2:	9301      	str	r3, [sp, #4]
 80032b4:	ab1c      	add	r3, sp, #112	; 0x70
 80032b6:	9300      	str	r3, [sp, #0]
 80032b8:	4a8d      	ldr	r2, [pc, #564]	; (80034f0 <_strtod_l+0x298>)
 80032ba:	f8cd b008 	str.w	fp, [sp, #8]
 80032be:	ab1d      	add	r3, sp, #116	; 0x74
 80032c0:	a91b      	add	r1, sp, #108	; 0x6c
 80032c2:	f001 ffa7 	bl	8005214 <__gethex>
 80032c6:	f010 0607 	ands.w	r6, r0, #7
 80032ca:	4604      	mov	r4, r0
 80032cc:	d005      	beq.n	80032da <_strtod_l+0x82>
 80032ce:	2e06      	cmp	r6, #6
 80032d0:	d129      	bne.n	8003326 <_strtod_l+0xce>
 80032d2:	2300      	movs	r3, #0
 80032d4:	3501      	adds	r5, #1
 80032d6:	951b      	str	r5, [sp, #108]	; 0x6c
 80032d8:	930c      	str	r3, [sp, #48]	; 0x30
 80032da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80032dc:	2b00      	cmp	r3, #0
 80032de:	f040 8596 	bne.w	8003e0e <_strtod_l+0xbb6>
 80032e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032e4:	b1d3      	cbz	r3, 800331c <_strtod_l+0xc4>
 80032e6:	4642      	mov	r2, r8
 80032e8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80032ec:	4610      	mov	r0, r2
 80032ee:	4619      	mov	r1, r3
 80032f0:	b021      	add	sp, #132	; 0x84
 80032f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032f6:	2a20      	cmp	r2, #32
 80032f8:	d1cd      	bne.n	8003296 <_strtod_l+0x3e>
 80032fa:	3301      	adds	r3, #1
 80032fc:	931b      	str	r3, [sp, #108]	; 0x6c
 80032fe:	e7bf      	b.n	8003280 <_strtod_l+0x28>
 8003300:	2a2d      	cmp	r2, #45	; 0x2d
 8003302:	d1c8      	bne.n	8003296 <_strtod_l+0x3e>
 8003304:	2201      	movs	r2, #1
 8003306:	920c      	str	r2, [sp, #48]	; 0x30
 8003308:	1c5a      	adds	r2, r3, #1
 800330a:	921b      	str	r2, [sp, #108]	; 0x6c
 800330c:	785b      	ldrb	r3, [r3, #1]
 800330e:	2b00      	cmp	r3, #0
 8003310:	d1c3      	bne.n	800329a <_strtod_l+0x42>
 8003312:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003314:	961b      	str	r6, [sp, #108]	; 0x6c
 8003316:	2b00      	cmp	r3, #0
 8003318:	f040 8577 	bne.w	8003e0a <_strtod_l+0xbb2>
 800331c:	4642      	mov	r2, r8
 800331e:	464b      	mov	r3, r9
 8003320:	e7e4      	b.n	80032ec <_strtod_l+0x94>
 8003322:	2200      	movs	r2, #0
 8003324:	e7ef      	b.n	8003306 <_strtod_l+0xae>
 8003326:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003328:	b13a      	cbz	r2, 800333a <_strtod_l+0xe2>
 800332a:	2135      	movs	r1, #53	; 0x35
 800332c:	a81e      	add	r0, sp, #120	; 0x78
 800332e:	f002 ff77 	bl	8006220 <__copybits>
 8003332:	4650      	mov	r0, sl
 8003334:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003336:	f002 fb3f 	bl	80059b8 <_Bfree>
 800333a:	3e01      	subs	r6, #1
 800333c:	2e05      	cmp	r6, #5
 800333e:	d807      	bhi.n	8003350 <_strtod_l+0xf8>
 8003340:	e8df f006 	tbb	[pc, r6]
 8003344:	1d180b0e 	.word	0x1d180b0e
 8003348:	030e      	.short	0x030e
 800334a:	f04f 0900 	mov.w	r9, #0
 800334e:	46c8      	mov	r8, r9
 8003350:	0721      	lsls	r1, r4, #28
 8003352:	d5c2      	bpl.n	80032da <_strtod_l+0x82>
 8003354:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8003358:	e7bf      	b.n	80032da <_strtod_l+0x82>
 800335a:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
 800335e:	e7f7      	b.n	8003350 <_strtod_l+0xf8>
 8003360:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003362:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
 8003366:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800336a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800336e:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8003372:	e7ed      	b.n	8003350 <_strtod_l+0xf8>
 8003374:	f04f 0800 	mov.w	r8, #0
 8003378:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80034f4 <_strtod_l+0x29c>
 800337c:	e7e8      	b.n	8003350 <_strtod_l+0xf8>
 800337e:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8003382:	f04f 38ff 	mov.w	r8, #4294967295
 8003386:	e7e3      	b.n	8003350 <_strtod_l+0xf8>
 8003388:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800338a:	1c5a      	adds	r2, r3, #1
 800338c:	921b      	str	r2, [sp, #108]	; 0x6c
 800338e:	785b      	ldrb	r3, [r3, #1]
 8003390:	2b30      	cmp	r3, #48	; 0x30
 8003392:	d0f9      	beq.n	8003388 <_strtod_l+0x130>
 8003394:	2b00      	cmp	r3, #0
 8003396:	d0a0      	beq.n	80032da <_strtod_l+0x82>
 8003398:	2301      	movs	r3, #1
 800339a:	9307      	str	r3, [sp, #28]
 800339c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800339e:	220a      	movs	r2, #10
 80033a0:	9308      	str	r3, [sp, #32]
 80033a2:	2300      	movs	r3, #0
 80033a4:	469b      	mov	fp, r3
 80033a6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80033aa:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80033ac:	7805      	ldrb	r5, [r0, #0]
 80033ae:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80033b2:	b2d9      	uxtb	r1, r3
 80033b4:	2909      	cmp	r1, #9
 80033b6:	d926      	bls.n	8003406 <_strtod_l+0x1ae>
 80033b8:	4622      	mov	r2, r4
 80033ba:	4639      	mov	r1, r7
 80033bc:	f003 f9dd 	bl	800677a <strncmp>
 80033c0:	2800      	cmp	r0, #0
 80033c2:	d032      	beq.n	800342a <_strtod_l+0x1d2>
 80033c4:	2000      	movs	r0, #0
 80033c6:	462b      	mov	r3, r5
 80033c8:	465c      	mov	r4, fp
 80033ca:	4602      	mov	r2, r0
 80033cc:	9004      	str	r0, [sp, #16]
 80033ce:	2b65      	cmp	r3, #101	; 0x65
 80033d0:	d001      	beq.n	80033d6 <_strtod_l+0x17e>
 80033d2:	2b45      	cmp	r3, #69	; 0x45
 80033d4:	d113      	bne.n	80033fe <_strtod_l+0x1a6>
 80033d6:	b91c      	cbnz	r4, 80033e0 <_strtod_l+0x188>
 80033d8:	9b07      	ldr	r3, [sp, #28]
 80033da:	4303      	orrs	r3, r0
 80033dc:	d099      	beq.n	8003312 <_strtod_l+0xba>
 80033de:	2400      	movs	r4, #0
 80033e0:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 80033e2:	1c73      	adds	r3, r6, #1
 80033e4:	931b      	str	r3, [sp, #108]	; 0x6c
 80033e6:	7873      	ldrb	r3, [r6, #1]
 80033e8:	2b2b      	cmp	r3, #43	; 0x2b
 80033ea:	d078      	beq.n	80034de <_strtod_l+0x286>
 80033ec:	2b2d      	cmp	r3, #45	; 0x2d
 80033ee:	d07b      	beq.n	80034e8 <_strtod_l+0x290>
 80033f0:	2700      	movs	r7, #0
 80033f2:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80033f6:	2909      	cmp	r1, #9
 80033f8:	f240 8082 	bls.w	8003500 <_strtod_l+0x2a8>
 80033fc:	961b      	str	r6, [sp, #108]	; 0x6c
 80033fe:	2500      	movs	r5, #0
 8003400:	e09e      	b.n	8003540 <_strtod_l+0x2e8>
 8003402:	2300      	movs	r3, #0
 8003404:	e7c9      	b.n	800339a <_strtod_l+0x142>
 8003406:	f1bb 0f08 	cmp.w	fp, #8
 800340a:	bfd5      	itete	le
 800340c:	9906      	ldrle	r1, [sp, #24]
 800340e:	9905      	ldrgt	r1, [sp, #20]
 8003410:	fb02 3301 	mlale	r3, r2, r1, r3
 8003414:	fb02 3301 	mlagt	r3, r2, r1, r3
 8003418:	f100 0001 	add.w	r0, r0, #1
 800341c:	bfd4      	ite	le
 800341e:	9306      	strle	r3, [sp, #24]
 8003420:	9305      	strgt	r3, [sp, #20]
 8003422:	f10b 0b01 	add.w	fp, fp, #1
 8003426:	901b      	str	r0, [sp, #108]	; 0x6c
 8003428:	e7bf      	b.n	80033aa <_strtod_l+0x152>
 800342a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800342c:	191a      	adds	r2, r3, r4
 800342e:	921b      	str	r2, [sp, #108]	; 0x6c
 8003430:	5d1b      	ldrb	r3, [r3, r4]
 8003432:	f1bb 0f00 	cmp.w	fp, #0
 8003436:	d036      	beq.n	80034a6 <_strtod_l+0x24e>
 8003438:	465c      	mov	r4, fp
 800343a:	9004      	str	r0, [sp, #16]
 800343c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8003440:	2a09      	cmp	r2, #9
 8003442:	d912      	bls.n	800346a <_strtod_l+0x212>
 8003444:	2201      	movs	r2, #1
 8003446:	e7c2      	b.n	80033ce <_strtod_l+0x176>
 8003448:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800344a:	3001      	adds	r0, #1
 800344c:	1c5a      	adds	r2, r3, #1
 800344e:	921b      	str	r2, [sp, #108]	; 0x6c
 8003450:	785b      	ldrb	r3, [r3, #1]
 8003452:	2b30      	cmp	r3, #48	; 0x30
 8003454:	d0f8      	beq.n	8003448 <_strtod_l+0x1f0>
 8003456:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 800345a:	2a08      	cmp	r2, #8
 800345c:	f200 84dc 	bhi.w	8003e18 <_strtod_l+0xbc0>
 8003460:	9004      	str	r0, [sp, #16]
 8003462:	2000      	movs	r0, #0
 8003464:	4604      	mov	r4, r0
 8003466:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8003468:	9208      	str	r2, [sp, #32]
 800346a:	3b30      	subs	r3, #48	; 0x30
 800346c:	f100 0201 	add.w	r2, r0, #1
 8003470:	d013      	beq.n	800349a <_strtod_l+0x242>
 8003472:	9904      	ldr	r1, [sp, #16]
 8003474:	1905      	adds	r5, r0, r4
 8003476:	4411      	add	r1, r2
 8003478:	9104      	str	r1, [sp, #16]
 800347a:	4622      	mov	r2, r4
 800347c:	210a      	movs	r1, #10
 800347e:	42aa      	cmp	r2, r5
 8003480:	d113      	bne.n	80034aa <_strtod_l+0x252>
 8003482:	1822      	adds	r2, r4, r0
 8003484:	2a08      	cmp	r2, #8
 8003486:	f104 0401 	add.w	r4, r4, #1
 800348a:	4404      	add	r4, r0
 800348c:	dc1b      	bgt.n	80034c6 <_strtod_l+0x26e>
 800348e:	220a      	movs	r2, #10
 8003490:	9906      	ldr	r1, [sp, #24]
 8003492:	fb02 3301 	mla	r3, r2, r1, r3
 8003496:	9306      	str	r3, [sp, #24]
 8003498:	2200      	movs	r2, #0
 800349a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800349c:	4610      	mov	r0, r2
 800349e:	1c59      	adds	r1, r3, #1
 80034a0:	911b      	str	r1, [sp, #108]	; 0x6c
 80034a2:	785b      	ldrb	r3, [r3, #1]
 80034a4:	e7ca      	b.n	800343c <_strtod_l+0x1e4>
 80034a6:	4658      	mov	r0, fp
 80034a8:	e7d3      	b.n	8003452 <_strtod_l+0x1fa>
 80034aa:	2a08      	cmp	r2, #8
 80034ac:	dc04      	bgt.n	80034b8 <_strtod_l+0x260>
 80034ae:	9f06      	ldr	r7, [sp, #24]
 80034b0:	434f      	muls	r7, r1
 80034b2:	9706      	str	r7, [sp, #24]
 80034b4:	3201      	adds	r2, #1
 80034b6:	e7e2      	b.n	800347e <_strtod_l+0x226>
 80034b8:	1c57      	adds	r7, r2, #1
 80034ba:	2f10      	cmp	r7, #16
 80034bc:	bfde      	ittt	le
 80034be:	9f05      	ldrle	r7, [sp, #20]
 80034c0:	434f      	mulle	r7, r1
 80034c2:	9705      	strle	r7, [sp, #20]
 80034c4:	e7f6      	b.n	80034b4 <_strtod_l+0x25c>
 80034c6:	2c10      	cmp	r4, #16
 80034c8:	bfdf      	itttt	le
 80034ca:	220a      	movle	r2, #10
 80034cc:	9905      	ldrle	r1, [sp, #20]
 80034ce:	fb02 3301 	mlale	r3, r2, r1, r3
 80034d2:	9305      	strle	r3, [sp, #20]
 80034d4:	e7e0      	b.n	8003498 <_strtod_l+0x240>
 80034d6:	2300      	movs	r3, #0
 80034d8:	2201      	movs	r2, #1
 80034da:	9304      	str	r3, [sp, #16]
 80034dc:	e77c      	b.n	80033d8 <_strtod_l+0x180>
 80034de:	2700      	movs	r7, #0
 80034e0:	1cb3      	adds	r3, r6, #2
 80034e2:	931b      	str	r3, [sp, #108]	; 0x6c
 80034e4:	78b3      	ldrb	r3, [r6, #2]
 80034e6:	e784      	b.n	80033f2 <_strtod_l+0x19a>
 80034e8:	2701      	movs	r7, #1
 80034ea:	e7f9      	b.n	80034e0 <_strtod_l+0x288>
 80034ec:	0800772c 	.word	0x0800772c
 80034f0:	08007474 	.word	0x08007474
 80034f4:	7ff00000 	.word	0x7ff00000
 80034f8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034fa:	1c59      	adds	r1, r3, #1
 80034fc:	911b      	str	r1, [sp, #108]	; 0x6c
 80034fe:	785b      	ldrb	r3, [r3, #1]
 8003500:	2b30      	cmp	r3, #48	; 0x30
 8003502:	d0f9      	beq.n	80034f8 <_strtod_l+0x2a0>
 8003504:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8003508:	2908      	cmp	r1, #8
 800350a:	f63f af78 	bhi.w	80033fe <_strtod_l+0x1a6>
 800350e:	f04f 0e0a 	mov.w	lr, #10
 8003512:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
 8003516:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003518:	9309      	str	r3, [sp, #36]	; 0x24
 800351a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800351c:	1c59      	adds	r1, r3, #1
 800351e:	911b      	str	r1, [sp, #108]	; 0x6c
 8003520:	785b      	ldrb	r3, [r3, #1]
 8003522:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8003526:	2d09      	cmp	r5, #9
 8003528:	d935      	bls.n	8003596 <_strtod_l+0x33e>
 800352a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800352c:	1b49      	subs	r1, r1, r5
 800352e:	2908      	cmp	r1, #8
 8003530:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8003534:	dc02      	bgt.n	800353c <_strtod_l+0x2e4>
 8003536:	4565      	cmp	r5, ip
 8003538:	bfa8      	it	ge
 800353a:	4665      	movge	r5, ip
 800353c:	b107      	cbz	r7, 8003540 <_strtod_l+0x2e8>
 800353e:	426d      	negs	r5, r5
 8003540:	2c00      	cmp	r4, #0
 8003542:	d14c      	bne.n	80035de <_strtod_l+0x386>
 8003544:	9907      	ldr	r1, [sp, #28]
 8003546:	4301      	orrs	r1, r0
 8003548:	f47f aec7 	bne.w	80032da <_strtod_l+0x82>
 800354c:	2a00      	cmp	r2, #0
 800354e:	f47f aee0 	bne.w	8003312 <_strtod_l+0xba>
 8003552:	2b69      	cmp	r3, #105	; 0x69
 8003554:	d026      	beq.n	80035a4 <_strtod_l+0x34c>
 8003556:	dc23      	bgt.n	80035a0 <_strtod_l+0x348>
 8003558:	2b49      	cmp	r3, #73	; 0x49
 800355a:	d023      	beq.n	80035a4 <_strtod_l+0x34c>
 800355c:	2b4e      	cmp	r3, #78	; 0x4e
 800355e:	f47f aed8 	bne.w	8003312 <_strtod_l+0xba>
 8003562:	499c      	ldr	r1, [pc, #624]	; (80037d4 <_strtod_l+0x57c>)
 8003564:	a81b      	add	r0, sp, #108	; 0x6c
 8003566:	f002 f8a3 	bl	80056b0 <__match>
 800356a:	2800      	cmp	r0, #0
 800356c:	f43f aed1 	beq.w	8003312 <_strtod_l+0xba>
 8003570:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003572:	781b      	ldrb	r3, [r3, #0]
 8003574:	2b28      	cmp	r3, #40	; 0x28
 8003576:	d12c      	bne.n	80035d2 <_strtod_l+0x37a>
 8003578:	4997      	ldr	r1, [pc, #604]	; (80037d8 <_strtod_l+0x580>)
 800357a:	aa1e      	add	r2, sp, #120	; 0x78
 800357c:	a81b      	add	r0, sp, #108	; 0x6c
 800357e:	f002 f8ab 	bl	80056d8 <__hexnan>
 8003582:	2805      	cmp	r0, #5
 8003584:	d125      	bne.n	80035d2 <_strtod_l+0x37a>
 8003586:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003588:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800358c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8003590:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8003594:	e6a1      	b.n	80032da <_strtod_l+0x82>
 8003596:	fb0e 3c0c 	mla	ip, lr, ip, r3
 800359a:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800359e:	e7bc      	b.n	800351a <_strtod_l+0x2c2>
 80035a0:	2b6e      	cmp	r3, #110	; 0x6e
 80035a2:	e7dc      	b.n	800355e <_strtod_l+0x306>
 80035a4:	498d      	ldr	r1, [pc, #564]	; (80037dc <_strtod_l+0x584>)
 80035a6:	a81b      	add	r0, sp, #108	; 0x6c
 80035a8:	f002 f882 	bl	80056b0 <__match>
 80035ac:	2800      	cmp	r0, #0
 80035ae:	f43f aeb0 	beq.w	8003312 <_strtod_l+0xba>
 80035b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80035b4:	498a      	ldr	r1, [pc, #552]	; (80037e0 <_strtod_l+0x588>)
 80035b6:	3b01      	subs	r3, #1
 80035b8:	a81b      	add	r0, sp, #108	; 0x6c
 80035ba:	931b      	str	r3, [sp, #108]	; 0x6c
 80035bc:	f002 f878 	bl	80056b0 <__match>
 80035c0:	b910      	cbnz	r0, 80035c8 <_strtod_l+0x370>
 80035c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80035c4:	3301      	adds	r3, #1
 80035c6:	931b      	str	r3, [sp, #108]	; 0x6c
 80035c8:	f04f 0800 	mov.w	r8, #0
 80035cc:	f8df 9220 	ldr.w	r9, [pc, #544]	; 80037f0 <_strtod_l+0x598>
 80035d0:	e683      	b.n	80032da <_strtod_l+0x82>
 80035d2:	4884      	ldr	r0, [pc, #528]	; (80037e4 <_strtod_l+0x58c>)
 80035d4:	f003 f878 	bl	80066c8 <nan>
 80035d8:	4680      	mov	r8, r0
 80035da:	4689      	mov	r9, r1
 80035dc:	e67d      	b.n	80032da <_strtod_l+0x82>
 80035de:	9b04      	ldr	r3, [sp, #16]
 80035e0:	f1bb 0f00 	cmp.w	fp, #0
 80035e4:	bf08      	it	eq
 80035e6:	46a3      	moveq	fp, r4
 80035e8:	1aeb      	subs	r3, r5, r3
 80035ea:	2c10      	cmp	r4, #16
 80035ec:	9806      	ldr	r0, [sp, #24]
 80035ee:	4626      	mov	r6, r4
 80035f0:	9307      	str	r3, [sp, #28]
 80035f2:	bfa8      	it	ge
 80035f4:	2610      	movge	r6, #16
 80035f6:	f7fc ff05 	bl	8000404 <__aeabi_ui2d>
 80035fa:	2c09      	cmp	r4, #9
 80035fc:	4680      	mov	r8, r0
 80035fe:	4689      	mov	r9, r1
 8003600:	dd13      	ble.n	800362a <_strtod_l+0x3d2>
 8003602:	4b79      	ldr	r3, [pc, #484]	; (80037e8 <_strtod_l+0x590>)
 8003604:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003608:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800360c:	f7fc ff74 	bl	80004f8 <__aeabi_dmul>
 8003610:	4680      	mov	r8, r0
 8003612:	9805      	ldr	r0, [sp, #20]
 8003614:	4689      	mov	r9, r1
 8003616:	f7fc fef5 	bl	8000404 <__aeabi_ui2d>
 800361a:	4602      	mov	r2, r0
 800361c:	460b      	mov	r3, r1
 800361e:	4640      	mov	r0, r8
 8003620:	4649      	mov	r1, r9
 8003622:	f7fc fdb3 	bl	800018c <__adddf3>
 8003626:	4680      	mov	r8, r0
 8003628:	4689      	mov	r9, r1
 800362a:	2c0f      	cmp	r4, #15
 800362c:	dc36      	bgt.n	800369c <_strtod_l+0x444>
 800362e:	9b07      	ldr	r3, [sp, #28]
 8003630:	2b00      	cmp	r3, #0
 8003632:	f43f ae52 	beq.w	80032da <_strtod_l+0x82>
 8003636:	dd22      	ble.n	800367e <_strtod_l+0x426>
 8003638:	2b16      	cmp	r3, #22
 800363a:	dc09      	bgt.n	8003650 <_strtod_l+0x3f8>
 800363c:	4c6a      	ldr	r4, [pc, #424]	; (80037e8 <_strtod_l+0x590>)
 800363e:	4642      	mov	r2, r8
 8003640:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
 8003644:	464b      	mov	r3, r9
 8003646:	e9d4 0100 	ldrd	r0, r1, [r4]
 800364a:	f7fc ff55 	bl	80004f8 <__aeabi_dmul>
 800364e:	e7c3      	b.n	80035d8 <_strtod_l+0x380>
 8003650:	9a07      	ldr	r2, [sp, #28]
 8003652:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8003656:	4293      	cmp	r3, r2
 8003658:	db20      	blt.n	800369c <_strtod_l+0x444>
 800365a:	4d63      	ldr	r5, [pc, #396]	; (80037e8 <_strtod_l+0x590>)
 800365c:	f1c4 040f 	rsb	r4, r4, #15
 8003660:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8003664:	4642      	mov	r2, r8
 8003666:	e9d1 0100 	ldrd	r0, r1, [r1]
 800366a:	464b      	mov	r3, r9
 800366c:	f7fc ff44 	bl	80004f8 <__aeabi_dmul>
 8003670:	9b07      	ldr	r3, [sp, #28]
 8003672:	1b1c      	subs	r4, r3, r4
 8003674:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8003678:	e9d5 2300 	ldrd	r2, r3, [r5]
 800367c:	e7e5      	b.n	800364a <_strtod_l+0x3f2>
 800367e:	9b07      	ldr	r3, [sp, #28]
 8003680:	3316      	adds	r3, #22
 8003682:	db0b      	blt.n	800369c <_strtod_l+0x444>
 8003684:	9b04      	ldr	r3, [sp, #16]
 8003686:	4a58      	ldr	r2, [pc, #352]	; (80037e8 <_strtod_l+0x590>)
 8003688:	1b5d      	subs	r5, r3, r5
 800368a:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800368e:	4640      	mov	r0, r8
 8003690:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003694:	4649      	mov	r1, r9
 8003696:	f7fd f859 	bl	800074c <__aeabi_ddiv>
 800369a:	e79d      	b.n	80035d8 <_strtod_l+0x380>
 800369c:	9b07      	ldr	r3, [sp, #28]
 800369e:	1ba6      	subs	r6, r4, r6
 80036a0:	441e      	add	r6, r3
 80036a2:	2e00      	cmp	r6, #0
 80036a4:	dd71      	ble.n	800378a <_strtod_l+0x532>
 80036a6:	f016 030f 	ands.w	r3, r6, #15
 80036aa:	d00a      	beq.n	80036c2 <_strtod_l+0x46a>
 80036ac:	494e      	ldr	r1, [pc, #312]	; (80037e8 <_strtod_l+0x590>)
 80036ae:	4642      	mov	r2, r8
 80036b0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80036b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80036b8:	464b      	mov	r3, r9
 80036ba:	f7fc ff1d 	bl	80004f8 <__aeabi_dmul>
 80036be:	4680      	mov	r8, r0
 80036c0:	4689      	mov	r9, r1
 80036c2:	f036 060f 	bics.w	r6, r6, #15
 80036c6:	d050      	beq.n	800376a <_strtod_l+0x512>
 80036c8:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 80036cc:	dd27      	ble.n	800371e <_strtod_l+0x4c6>
 80036ce:	f04f 0b00 	mov.w	fp, #0
 80036d2:	f8cd b010 	str.w	fp, [sp, #16]
 80036d6:	f8cd b020 	str.w	fp, [sp, #32]
 80036da:	f8cd b018 	str.w	fp, [sp, #24]
 80036de:	2322      	movs	r3, #34	; 0x22
 80036e0:	f04f 0800 	mov.w	r8, #0
 80036e4:	f8df 9108 	ldr.w	r9, [pc, #264]	; 80037f0 <_strtod_l+0x598>
 80036e8:	f8ca 3000 	str.w	r3, [sl]
 80036ec:	9b08      	ldr	r3, [sp, #32]
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	f43f adf3 	beq.w	80032da <_strtod_l+0x82>
 80036f4:	4650      	mov	r0, sl
 80036f6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80036f8:	f002 f95e 	bl	80059b8 <_Bfree>
 80036fc:	4650      	mov	r0, sl
 80036fe:	9906      	ldr	r1, [sp, #24]
 8003700:	f002 f95a 	bl	80059b8 <_Bfree>
 8003704:	4650      	mov	r0, sl
 8003706:	9904      	ldr	r1, [sp, #16]
 8003708:	f002 f956 	bl	80059b8 <_Bfree>
 800370c:	4650      	mov	r0, sl
 800370e:	9908      	ldr	r1, [sp, #32]
 8003710:	f002 f952 	bl	80059b8 <_Bfree>
 8003714:	4659      	mov	r1, fp
 8003716:	4650      	mov	r0, sl
 8003718:	f002 f94e 	bl	80059b8 <_Bfree>
 800371c:	e5dd      	b.n	80032da <_strtod_l+0x82>
 800371e:	2300      	movs	r3, #0
 8003720:	4640      	mov	r0, r8
 8003722:	4649      	mov	r1, r9
 8003724:	461f      	mov	r7, r3
 8003726:	1136      	asrs	r6, r6, #4
 8003728:	2e01      	cmp	r6, #1
 800372a:	dc21      	bgt.n	8003770 <_strtod_l+0x518>
 800372c:	b10b      	cbz	r3, 8003732 <_strtod_l+0x4da>
 800372e:	4680      	mov	r8, r0
 8003730:	4689      	mov	r9, r1
 8003732:	4b2e      	ldr	r3, [pc, #184]	; (80037ec <_strtod_l+0x594>)
 8003734:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8003738:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800373c:	4642      	mov	r2, r8
 800373e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003742:	464b      	mov	r3, r9
 8003744:	f7fc fed8 	bl	80004f8 <__aeabi_dmul>
 8003748:	4b29      	ldr	r3, [pc, #164]	; (80037f0 <_strtod_l+0x598>)
 800374a:	460a      	mov	r2, r1
 800374c:	400b      	ands	r3, r1
 800374e:	4929      	ldr	r1, [pc, #164]	; (80037f4 <_strtod_l+0x59c>)
 8003750:	4680      	mov	r8, r0
 8003752:	428b      	cmp	r3, r1
 8003754:	d8bb      	bhi.n	80036ce <_strtod_l+0x476>
 8003756:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800375a:	428b      	cmp	r3, r1
 800375c:	bf86      	itte	hi
 800375e:	f04f 38ff 	movhi.w	r8, #4294967295
 8003762:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 80037f8 <_strtod_l+0x5a0>
 8003766:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800376a:	2300      	movs	r3, #0
 800376c:	9305      	str	r3, [sp, #20]
 800376e:	e07e      	b.n	800386e <_strtod_l+0x616>
 8003770:	07f2      	lsls	r2, r6, #31
 8003772:	d507      	bpl.n	8003784 <_strtod_l+0x52c>
 8003774:	4b1d      	ldr	r3, [pc, #116]	; (80037ec <_strtod_l+0x594>)
 8003776:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800377a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800377e:	f7fc febb 	bl	80004f8 <__aeabi_dmul>
 8003782:	2301      	movs	r3, #1
 8003784:	3701      	adds	r7, #1
 8003786:	1076      	asrs	r6, r6, #1
 8003788:	e7ce      	b.n	8003728 <_strtod_l+0x4d0>
 800378a:	d0ee      	beq.n	800376a <_strtod_l+0x512>
 800378c:	4276      	negs	r6, r6
 800378e:	f016 020f 	ands.w	r2, r6, #15
 8003792:	d00a      	beq.n	80037aa <_strtod_l+0x552>
 8003794:	4b14      	ldr	r3, [pc, #80]	; (80037e8 <_strtod_l+0x590>)
 8003796:	4640      	mov	r0, r8
 8003798:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800379c:	4649      	mov	r1, r9
 800379e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037a2:	f7fc ffd3 	bl	800074c <__aeabi_ddiv>
 80037a6:	4680      	mov	r8, r0
 80037a8:	4689      	mov	r9, r1
 80037aa:	1136      	asrs	r6, r6, #4
 80037ac:	d0dd      	beq.n	800376a <_strtod_l+0x512>
 80037ae:	2e1f      	cmp	r6, #31
 80037b0:	dd24      	ble.n	80037fc <_strtod_l+0x5a4>
 80037b2:	f04f 0b00 	mov.w	fp, #0
 80037b6:	f8cd b010 	str.w	fp, [sp, #16]
 80037ba:	f8cd b020 	str.w	fp, [sp, #32]
 80037be:	f8cd b018 	str.w	fp, [sp, #24]
 80037c2:	2322      	movs	r3, #34	; 0x22
 80037c4:	f04f 0800 	mov.w	r8, #0
 80037c8:	f04f 0900 	mov.w	r9, #0
 80037cc:	f8ca 3000 	str.w	r3, [sl]
 80037d0:	e78c      	b.n	80036ec <_strtod_l+0x494>
 80037d2:	bf00      	nop
 80037d4:	08007445 	.word	0x08007445
 80037d8:	08007488 	.word	0x08007488
 80037dc:	0800743d 	.word	0x0800743d
 80037e0:	080075cc 	.word	0x080075cc
 80037e4:	080078e8 	.word	0x080078e8
 80037e8:	080077c8 	.word	0x080077c8
 80037ec:	080077a0 	.word	0x080077a0
 80037f0:	7ff00000 	.word	0x7ff00000
 80037f4:	7ca00000 	.word	0x7ca00000
 80037f8:	7fefffff 	.word	0x7fefffff
 80037fc:	f016 0310 	ands.w	r3, r6, #16
 8003800:	bf18      	it	ne
 8003802:	236a      	movne	r3, #106	; 0x6a
 8003804:	4640      	mov	r0, r8
 8003806:	9305      	str	r3, [sp, #20]
 8003808:	4649      	mov	r1, r9
 800380a:	2300      	movs	r3, #0
 800380c:	4fb2      	ldr	r7, [pc, #712]	; (8003ad8 <_strtod_l+0x880>)
 800380e:	07f2      	lsls	r2, r6, #31
 8003810:	d504      	bpl.n	800381c <_strtod_l+0x5c4>
 8003812:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003816:	f7fc fe6f 	bl	80004f8 <__aeabi_dmul>
 800381a:	2301      	movs	r3, #1
 800381c:	1076      	asrs	r6, r6, #1
 800381e:	f107 0708 	add.w	r7, r7, #8
 8003822:	d1f4      	bne.n	800380e <_strtod_l+0x5b6>
 8003824:	b10b      	cbz	r3, 800382a <_strtod_l+0x5d2>
 8003826:	4680      	mov	r8, r0
 8003828:	4689      	mov	r9, r1
 800382a:	9b05      	ldr	r3, [sp, #20]
 800382c:	b1bb      	cbz	r3, 800385e <_strtod_l+0x606>
 800382e:	f3c9 530a 	ubfx	r3, r9, #20, #11
 8003832:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003836:	2b00      	cmp	r3, #0
 8003838:	4649      	mov	r1, r9
 800383a:	dd10      	ble.n	800385e <_strtod_l+0x606>
 800383c:	2b1f      	cmp	r3, #31
 800383e:	f340 812b 	ble.w	8003a98 <_strtod_l+0x840>
 8003842:	2b34      	cmp	r3, #52	; 0x34
 8003844:	bfd8      	it	le
 8003846:	f04f 32ff 	movle.w	r2, #4294967295
 800384a:	f04f 0800 	mov.w	r8, #0
 800384e:	bfcf      	iteee	gt
 8003850:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8003854:	3b20      	suble	r3, #32
 8003856:	fa02 f303 	lslle.w	r3, r2, r3
 800385a:	ea03 0901 	andle.w	r9, r3, r1
 800385e:	2200      	movs	r2, #0
 8003860:	2300      	movs	r3, #0
 8003862:	4640      	mov	r0, r8
 8003864:	4649      	mov	r1, r9
 8003866:	f7fd f8af 	bl	80009c8 <__aeabi_dcmpeq>
 800386a:	2800      	cmp	r0, #0
 800386c:	d1a1      	bne.n	80037b2 <_strtod_l+0x55a>
 800386e:	9b06      	ldr	r3, [sp, #24]
 8003870:	465a      	mov	r2, fp
 8003872:	9300      	str	r3, [sp, #0]
 8003874:	4650      	mov	r0, sl
 8003876:	4623      	mov	r3, r4
 8003878:	9908      	ldr	r1, [sp, #32]
 800387a:	f002 f909 	bl	8005a90 <__s2b>
 800387e:	9008      	str	r0, [sp, #32]
 8003880:	2800      	cmp	r0, #0
 8003882:	f43f af24 	beq.w	80036ce <_strtod_l+0x476>
 8003886:	9b04      	ldr	r3, [sp, #16]
 8003888:	f04f 0b00 	mov.w	fp, #0
 800388c:	1b5d      	subs	r5, r3, r5
 800388e:	9b07      	ldr	r3, [sp, #28]
 8003890:	f8cd b010 	str.w	fp, [sp, #16]
 8003894:	2b00      	cmp	r3, #0
 8003896:	bfb4      	ite	lt
 8003898:	462b      	movlt	r3, r5
 800389a:	2300      	movge	r3, #0
 800389c:	930e      	str	r3, [sp, #56]	; 0x38
 800389e:	9b07      	ldr	r3, [sp, #28]
 80038a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80038a4:	9316      	str	r3, [sp, #88]	; 0x58
 80038a6:	9b08      	ldr	r3, [sp, #32]
 80038a8:	4650      	mov	r0, sl
 80038aa:	6859      	ldr	r1, [r3, #4]
 80038ac:	f002 f844 	bl	8005938 <_Balloc>
 80038b0:	9006      	str	r0, [sp, #24]
 80038b2:	2800      	cmp	r0, #0
 80038b4:	f43f af13 	beq.w	80036de <_strtod_l+0x486>
 80038b8:	9b08      	ldr	r3, [sp, #32]
 80038ba:	300c      	adds	r0, #12
 80038bc:	691a      	ldr	r2, [r3, #16]
 80038be:	f103 010c 	add.w	r1, r3, #12
 80038c2:	3202      	adds	r2, #2
 80038c4:	0092      	lsls	r2, r2, #2
 80038c6:	f7fe fdc1 	bl	800244c <memcpy>
 80038ca:	ab1e      	add	r3, sp, #120	; 0x78
 80038cc:	9301      	str	r3, [sp, #4]
 80038ce:	ab1d      	add	r3, sp, #116	; 0x74
 80038d0:	9300      	str	r3, [sp, #0]
 80038d2:	4642      	mov	r2, r8
 80038d4:	464b      	mov	r3, r9
 80038d6:	4650      	mov	r0, sl
 80038d8:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 80038dc:	f002 fc16 	bl	800610c <__d2b>
 80038e0:	901c      	str	r0, [sp, #112]	; 0x70
 80038e2:	2800      	cmp	r0, #0
 80038e4:	f43f aefb 	beq.w	80036de <_strtod_l+0x486>
 80038e8:	2101      	movs	r1, #1
 80038ea:	4650      	mov	r0, sl
 80038ec:	f002 f968 	bl	8005bc0 <__i2b>
 80038f0:	4603      	mov	r3, r0
 80038f2:	9004      	str	r0, [sp, #16]
 80038f4:	2800      	cmp	r0, #0
 80038f6:	f43f aef2 	beq.w	80036de <_strtod_l+0x486>
 80038fa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80038fc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80038fe:	2d00      	cmp	r5, #0
 8003900:	bfab      	itete	ge
 8003902:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003904:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8003906:	18ee      	addge	r6, r5, r3
 8003908:	1b5c      	sublt	r4, r3, r5
 800390a:	9b05      	ldr	r3, [sp, #20]
 800390c:	bfa8      	it	ge
 800390e:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8003910:	eba5 0503 	sub.w	r5, r5, r3
 8003914:	4415      	add	r5, r2
 8003916:	4b71      	ldr	r3, [pc, #452]	; (8003adc <_strtod_l+0x884>)
 8003918:	f105 35ff 	add.w	r5, r5, #4294967295
 800391c:	bfb8      	it	lt
 800391e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003920:	429d      	cmp	r5, r3
 8003922:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003926:	f280 80c9 	bge.w	8003abc <_strtod_l+0x864>
 800392a:	1b5b      	subs	r3, r3, r5
 800392c:	2b1f      	cmp	r3, #31
 800392e:	f04f 0701 	mov.w	r7, #1
 8003932:	eba2 0203 	sub.w	r2, r2, r3
 8003936:	f300 80b6 	bgt.w	8003aa6 <_strtod_l+0x84e>
 800393a:	2500      	movs	r5, #0
 800393c:	fa07 f303 	lsl.w	r3, r7, r3
 8003940:	930f      	str	r3, [sp, #60]	; 0x3c
 8003942:	18b7      	adds	r7, r6, r2
 8003944:	9b05      	ldr	r3, [sp, #20]
 8003946:	42be      	cmp	r6, r7
 8003948:	4414      	add	r4, r2
 800394a:	441c      	add	r4, r3
 800394c:	4633      	mov	r3, r6
 800394e:	bfa8      	it	ge
 8003950:	463b      	movge	r3, r7
 8003952:	42a3      	cmp	r3, r4
 8003954:	bfa8      	it	ge
 8003956:	4623      	movge	r3, r4
 8003958:	2b00      	cmp	r3, #0
 800395a:	bfc2      	ittt	gt
 800395c:	1aff      	subgt	r7, r7, r3
 800395e:	1ae4      	subgt	r4, r4, r3
 8003960:	1af6      	subgt	r6, r6, r3
 8003962:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003964:	2b00      	cmp	r3, #0
 8003966:	dd17      	ble.n	8003998 <_strtod_l+0x740>
 8003968:	461a      	mov	r2, r3
 800396a:	4650      	mov	r0, sl
 800396c:	9904      	ldr	r1, [sp, #16]
 800396e:	f002 f9e1 	bl	8005d34 <__pow5mult>
 8003972:	9004      	str	r0, [sp, #16]
 8003974:	2800      	cmp	r0, #0
 8003976:	f43f aeb2 	beq.w	80036de <_strtod_l+0x486>
 800397a:	4601      	mov	r1, r0
 800397c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800397e:	4650      	mov	r0, sl
 8003980:	f002 f934 	bl	8005bec <__multiply>
 8003984:	9009      	str	r0, [sp, #36]	; 0x24
 8003986:	2800      	cmp	r0, #0
 8003988:	f43f aea9 	beq.w	80036de <_strtod_l+0x486>
 800398c:	4650      	mov	r0, sl
 800398e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003990:	f002 f812 	bl	80059b8 <_Bfree>
 8003994:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003996:	931c      	str	r3, [sp, #112]	; 0x70
 8003998:	2f00      	cmp	r7, #0
 800399a:	f300 8093 	bgt.w	8003ac4 <_strtod_l+0x86c>
 800399e:	9b07      	ldr	r3, [sp, #28]
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	dd08      	ble.n	80039b6 <_strtod_l+0x75e>
 80039a4:	4650      	mov	r0, sl
 80039a6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80039a8:	9906      	ldr	r1, [sp, #24]
 80039aa:	f002 f9c3 	bl	8005d34 <__pow5mult>
 80039ae:	9006      	str	r0, [sp, #24]
 80039b0:	2800      	cmp	r0, #0
 80039b2:	f43f ae94 	beq.w	80036de <_strtod_l+0x486>
 80039b6:	2c00      	cmp	r4, #0
 80039b8:	dd08      	ble.n	80039cc <_strtod_l+0x774>
 80039ba:	4622      	mov	r2, r4
 80039bc:	4650      	mov	r0, sl
 80039be:	9906      	ldr	r1, [sp, #24]
 80039c0:	f002 fa12 	bl	8005de8 <__lshift>
 80039c4:	9006      	str	r0, [sp, #24]
 80039c6:	2800      	cmp	r0, #0
 80039c8:	f43f ae89 	beq.w	80036de <_strtod_l+0x486>
 80039cc:	2e00      	cmp	r6, #0
 80039ce:	dd08      	ble.n	80039e2 <_strtod_l+0x78a>
 80039d0:	4632      	mov	r2, r6
 80039d2:	4650      	mov	r0, sl
 80039d4:	9904      	ldr	r1, [sp, #16]
 80039d6:	f002 fa07 	bl	8005de8 <__lshift>
 80039da:	9004      	str	r0, [sp, #16]
 80039dc:	2800      	cmp	r0, #0
 80039de:	f43f ae7e 	beq.w	80036de <_strtod_l+0x486>
 80039e2:	4650      	mov	r0, sl
 80039e4:	9a06      	ldr	r2, [sp, #24]
 80039e6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80039e8:	f002 fa86 	bl	8005ef8 <__mdiff>
 80039ec:	4683      	mov	fp, r0
 80039ee:	2800      	cmp	r0, #0
 80039f0:	f43f ae75 	beq.w	80036de <_strtod_l+0x486>
 80039f4:	2400      	movs	r4, #0
 80039f6:	68c3      	ldr	r3, [r0, #12]
 80039f8:	9904      	ldr	r1, [sp, #16]
 80039fa:	60c4      	str	r4, [r0, #12]
 80039fc:	930d      	str	r3, [sp, #52]	; 0x34
 80039fe:	f002 fa5f 	bl	8005ec0 <__mcmp>
 8003a02:	42a0      	cmp	r0, r4
 8003a04:	da70      	bge.n	8003ae8 <_strtod_l+0x890>
 8003a06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003a08:	ea53 0308 	orrs.w	r3, r3, r8
 8003a0c:	f040 8096 	bne.w	8003b3c <_strtod_l+0x8e4>
 8003a10:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	f040 8091 	bne.w	8003b3c <_strtod_l+0x8e4>
 8003a1a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003a1e:	0d1b      	lsrs	r3, r3, #20
 8003a20:	051b      	lsls	r3, r3, #20
 8003a22:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003a26:	f240 8089 	bls.w	8003b3c <_strtod_l+0x8e4>
 8003a2a:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003a2e:	b923      	cbnz	r3, 8003a3a <_strtod_l+0x7e2>
 8003a30:	f8db 3010 	ldr.w	r3, [fp, #16]
 8003a34:	2b01      	cmp	r3, #1
 8003a36:	f340 8081 	ble.w	8003b3c <_strtod_l+0x8e4>
 8003a3a:	4659      	mov	r1, fp
 8003a3c:	2201      	movs	r2, #1
 8003a3e:	4650      	mov	r0, sl
 8003a40:	f002 f9d2 	bl	8005de8 <__lshift>
 8003a44:	9904      	ldr	r1, [sp, #16]
 8003a46:	4683      	mov	fp, r0
 8003a48:	f002 fa3a 	bl	8005ec0 <__mcmp>
 8003a4c:	2800      	cmp	r0, #0
 8003a4e:	dd75      	ble.n	8003b3c <_strtod_l+0x8e4>
 8003a50:	9905      	ldr	r1, [sp, #20]
 8003a52:	464b      	mov	r3, r9
 8003a54:	4a22      	ldr	r2, [pc, #136]	; (8003ae0 <_strtod_l+0x888>)
 8003a56:	2900      	cmp	r1, #0
 8003a58:	f000 8091 	beq.w	8003b7e <_strtod_l+0x926>
 8003a5c:	ea02 0109 	and.w	r1, r2, r9
 8003a60:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003a64:	f300 808b 	bgt.w	8003b7e <_strtod_l+0x926>
 8003a68:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003a6c:	f77f aea9 	ble.w	80037c2 <_strtod_l+0x56a>
 8003a70:	2300      	movs	r3, #0
 8003a72:	4a1c      	ldr	r2, [pc, #112]	; (8003ae4 <_strtod_l+0x88c>)
 8003a74:	4640      	mov	r0, r8
 8003a76:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003a7a:	4649      	mov	r1, r9
 8003a7c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003a80:	f7fc fd3a 	bl	80004f8 <__aeabi_dmul>
 8003a84:	460b      	mov	r3, r1
 8003a86:	4303      	orrs	r3, r0
 8003a88:	bf08      	it	eq
 8003a8a:	2322      	moveq	r3, #34	; 0x22
 8003a8c:	4680      	mov	r8, r0
 8003a8e:	4689      	mov	r9, r1
 8003a90:	bf08      	it	eq
 8003a92:	f8ca 3000 	streq.w	r3, [sl]
 8003a96:	e62d      	b.n	80036f4 <_strtod_l+0x49c>
 8003a98:	f04f 32ff 	mov.w	r2, #4294967295
 8003a9c:	fa02 f303 	lsl.w	r3, r2, r3
 8003aa0:	ea03 0808 	and.w	r8, r3, r8
 8003aa4:	e6db      	b.n	800385e <_strtod_l+0x606>
 8003aa6:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003aaa:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003aae:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003ab2:	35e2      	adds	r5, #226	; 0xe2
 8003ab4:	fa07 f505 	lsl.w	r5, r7, r5
 8003ab8:	970f      	str	r7, [sp, #60]	; 0x3c
 8003aba:	e742      	b.n	8003942 <_strtod_l+0x6ea>
 8003abc:	2301      	movs	r3, #1
 8003abe:	2500      	movs	r5, #0
 8003ac0:	930f      	str	r3, [sp, #60]	; 0x3c
 8003ac2:	e73e      	b.n	8003942 <_strtod_l+0x6ea>
 8003ac4:	463a      	mov	r2, r7
 8003ac6:	4650      	mov	r0, sl
 8003ac8:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003aca:	f002 f98d 	bl	8005de8 <__lshift>
 8003ace:	901c      	str	r0, [sp, #112]	; 0x70
 8003ad0:	2800      	cmp	r0, #0
 8003ad2:	f47f af64 	bne.w	800399e <_strtod_l+0x746>
 8003ad6:	e602      	b.n	80036de <_strtod_l+0x486>
 8003ad8:	080074a0 	.word	0x080074a0
 8003adc:	fffffc02 	.word	0xfffffc02
 8003ae0:	7ff00000 	.word	0x7ff00000
 8003ae4:	39500000 	.word	0x39500000
 8003ae8:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003aec:	d166      	bne.n	8003bbc <_strtod_l+0x964>
 8003aee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003af0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003af4:	b35a      	cbz	r2, 8003b4e <_strtod_l+0x8f6>
 8003af6:	4a9c      	ldr	r2, [pc, #624]	; (8003d68 <_strtod_l+0xb10>)
 8003af8:	4293      	cmp	r3, r2
 8003afa:	d12c      	bne.n	8003b56 <_strtod_l+0x8fe>
 8003afc:	9b05      	ldr	r3, [sp, #20]
 8003afe:	4640      	mov	r0, r8
 8003b00:	b303      	cbz	r3, 8003b44 <_strtod_l+0x8ec>
 8003b02:	464b      	mov	r3, r9
 8003b04:	4a99      	ldr	r2, [pc, #612]	; (8003d6c <_strtod_l+0xb14>)
 8003b06:	f04f 31ff 	mov.w	r1, #4294967295
 8003b0a:	401a      	ands	r2, r3
 8003b0c:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003b10:	d81b      	bhi.n	8003b4a <_strtod_l+0x8f2>
 8003b12:	0d12      	lsrs	r2, r2, #20
 8003b14:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003b18:	fa01 f303 	lsl.w	r3, r1, r3
 8003b1c:	4298      	cmp	r0, r3
 8003b1e:	d11a      	bne.n	8003b56 <_strtod_l+0x8fe>
 8003b20:	4b93      	ldr	r3, [pc, #588]	; (8003d70 <_strtod_l+0xb18>)
 8003b22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b24:	429a      	cmp	r2, r3
 8003b26:	d102      	bne.n	8003b2e <_strtod_l+0x8d6>
 8003b28:	3001      	adds	r0, #1
 8003b2a:	f43f add8 	beq.w	80036de <_strtod_l+0x486>
 8003b2e:	f04f 0800 	mov.w	r8, #0
 8003b32:	4b8e      	ldr	r3, [pc, #568]	; (8003d6c <_strtod_l+0xb14>)
 8003b34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b36:	401a      	ands	r2, r3
 8003b38:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003b3c:	9b05      	ldr	r3, [sp, #20]
 8003b3e:	2b00      	cmp	r3, #0
 8003b40:	d196      	bne.n	8003a70 <_strtod_l+0x818>
 8003b42:	e5d7      	b.n	80036f4 <_strtod_l+0x49c>
 8003b44:	f04f 33ff 	mov.w	r3, #4294967295
 8003b48:	e7e8      	b.n	8003b1c <_strtod_l+0x8c4>
 8003b4a:	460b      	mov	r3, r1
 8003b4c:	e7e6      	b.n	8003b1c <_strtod_l+0x8c4>
 8003b4e:	ea53 0308 	orrs.w	r3, r3, r8
 8003b52:	f43f af7d 	beq.w	8003a50 <_strtod_l+0x7f8>
 8003b56:	b1e5      	cbz	r5, 8003b92 <_strtod_l+0x93a>
 8003b58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b5a:	421d      	tst	r5, r3
 8003b5c:	d0ee      	beq.n	8003b3c <_strtod_l+0x8e4>
 8003b5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003b60:	4640      	mov	r0, r8
 8003b62:	4649      	mov	r1, r9
 8003b64:	9a05      	ldr	r2, [sp, #20]
 8003b66:	b1c3      	cbz	r3, 8003b9a <_strtod_l+0x942>
 8003b68:	f7ff fb53 	bl	8003212 <sulp>
 8003b6c:	4602      	mov	r2, r0
 8003b6e:	460b      	mov	r3, r1
 8003b70:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003b74:	f7fc fb0a 	bl	800018c <__adddf3>
 8003b78:	4680      	mov	r8, r0
 8003b7a:	4689      	mov	r9, r1
 8003b7c:	e7de      	b.n	8003b3c <_strtod_l+0x8e4>
 8003b7e:	4013      	ands	r3, r2
 8003b80:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003b84:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8003b88:	f04f 38ff 	mov.w	r8, #4294967295
 8003b8c:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8003b90:	e7d4      	b.n	8003b3c <_strtod_l+0x8e4>
 8003b92:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003b94:	ea13 0f08 	tst.w	r3, r8
 8003b98:	e7e0      	b.n	8003b5c <_strtod_l+0x904>
 8003b9a:	f7ff fb3a 	bl	8003212 <sulp>
 8003b9e:	4602      	mov	r2, r0
 8003ba0:	460b      	mov	r3, r1
 8003ba2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003ba6:	f7fc faef 	bl	8000188 <__aeabi_dsub>
 8003baa:	2200      	movs	r2, #0
 8003bac:	2300      	movs	r3, #0
 8003bae:	4680      	mov	r8, r0
 8003bb0:	4689      	mov	r9, r1
 8003bb2:	f7fc ff09 	bl	80009c8 <__aeabi_dcmpeq>
 8003bb6:	2800      	cmp	r0, #0
 8003bb8:	d0c0      	beq.n	8003b3c <_strtod_l+0x8e4>
 8003bba:	e602      	b.n	80037c2 <_strtod_l+0x56a>
 8003bbc:	4658      	mov	r0, fp
 8003bbe:	9904      	ldr	r1, [sp, #16]
 8003bc0:	f002 fb00 	bl	80061c4 <__ratio>
 8003bc4:	2200      	movs	r2, #0
 8003bc6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003bca:	4606      	mov	r6, r0
 8003bcc:	460f      	mov	r7, r1
 8003bce:	f7fc ff0f 	bl	80009f0 <__aeabi_dcmple>
 8003bd2:	2800      	cmp	r0, #0
 8003bd4:	d075      	beq.n	8003cc2 <_strtod_l+0xa6a>
 8003bd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d047      	beq.n	8003c6c <_strtod_l+0xa14>
 8003bdc:	2600      	movs	r6, #0
 8003bde:	4f65      	ldr	r7, [pc, #404]	; (8003d74 <_strtod_l+0xb1c>)
 8003be0:	4d64      	ldr	r5, [pc, #400]	; (8003d74 <_strtod_l+0xb1c>)
 8003be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003be4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003be8:	0d1b      	lsrs	r3, r3, #20
 8003bea:	051b      	lsls	r3, r3, #20
 8003bec:	930f      	str	r3, [sp, #60]	; 0x3c
 8003bee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003bf0:	4b61      	ldr	r3, [pc, #388]	; (8003d78 <_strtod_l+0xb20>)
 8003bf2:	429a      	cmp	r2, r3
 8003bf4:	f040 80c8 	bne.w	8003d88 <_strtod_l+0xb30>
 8003bf8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003bfc:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003c00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c02:	4640      	mov	r0, r8
 8003c04:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8003c08:	4649      	mov	r1, r9
 8003c0a:	f002 fa05 	bl	8006018 <__ulp>
 8003c0e:	4602      	mov	r2, r0
 8003c10:	460b      	mov	r3, r1
 8003c12:	4630      	mov	r0, r6
 8003c14:	4639      	mov	r1, r7
 8003c16:	f7fc fc6f 	bl	80004f8 <__aeabi_dmul>
 8003c1a:	4642      	mov	r2, r8
 8003c1c:	464b      	mov	r3, r9
 8003c1e:	f7fc fab5 	bl	800018c <__adddf3>
 8003c22:	460b      	mov	r3, r1
 8003c24:	4951      	ldr	r1, [pc, #324]	; (8003d6c <_strtod_l+0xb14>)
 8003c26:	4a55      	ldr	r2, [pc, #340]	; (8003d7c <_strtod_l+0xb24>)
 8003c28:	4019      	ands	r1, r3
 8003c2a:	4291      	cmp	r1, r2
 8003c2c:	4680      	mov	r8, r0
 8003c2e:	d95e      	bls.n	8003cee <_strtod_l+0xa96>
 8003c30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003c32:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003c36:	4293      	cmp	r3, r2
 8003c38:	d103      	bne.n	8003c42 <_strtod_l+0x9ea>
 8003c3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003c3c:	3301      	adds	r3, #1
 8003c3e:	f43f ad4e 	beq.w	80036de <_strtod_l+0x486>
 8003c42:	f04f 38ff 	mov.w	r8, #4294967295
 8003c46:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8003d70 <_strtod_l+0xb18>
 8003c4a:	4650      	mov	r0, sl
 8003c4c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003c4e:	f001 feb3 	bl	80059b8 <_Bfree>
 8003c52:	4650      	mov	r0, sl
 8003c54:	9906      	ldr	r1, [sp, #24]
 8003c56:	f001 feaf 	bl	80059b8 <_Bfree>
 8003c5a:	4650      	mov	r0, sl
 8003c5c:	9904      	ldr	r1, [sp, #16]
 8003c5e:	f001 feab 	bl	80059b8 <_Bfree>
 8003c62:	4659      	mov	r1, fp
 8003c64:	4650      	mov	r0, sl
 8003c66:	f001 fea7 	bl	80059b8 <_Bfree>
 8003c6a:	e61c      	b.n	80038a6 <_strtod_l+0x64e>
 8003c6c:	f1b8 0f00 	cmp.w	r8, #0
 8003c70:	d119      	bne.n	8003ca6 <_strtod_l+0xa4e>
 8003c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c74:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003c78:	b9e3      	cbnz	r3, 8003cb4 <_strtod_l+0xa5c>
 8003c7a:	2200      	movs	r2, #0
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	4639      	mov	r1, r7
 8003c80:	4b3c      	ldr	r3, [pc, #240]	; (8003d74 <_strtod_l+0xb1c>)
 8003c82:	f7fc feab 	bl	80009dc <__aeabi_dcmplt>
 8003c86:	b9c8      	cbnz	r0, 8003cbc <_strtod_l+0xa64>
 8003c88:	2200      	movs	r2, #0
 8003c8a:	4630      	mov	r0, r6
 8003c8c:	4639      	mov	r1, r7
 8003c8e:	4b3c      	ldr	r3, [pc, #240]	; (8003d80 <_strtod_l+0xb28>)
 8003c90:	f7fc fc32 	bl	80004f8 <__aeabi_dmul>
 8003c94:	4604      	mov	r4, r0
 8003c96:	460d      	mov	r5, r1
 8003c98:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003c9c:	9418      	str	r4, [sp, #96]	; 0x60
 8003c9e:	9319      	str	r3, [sp, #100]	; 0x64
 8003ca0:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003ca4:	e79d      	b.n	8003be2 <_strtod_l+0x98a>
 8003ca6:	f1b8 0f01 	cmp.w	r8, #1
 8003caa:	d103      	bne.n	8003cb4 <_strtod_l+0xa5c>
 8003cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	f43f ad87 	beq.w	80037c2 <_strtod_l+0x56a>
 8003cb4:	2600      	movs	r6, #0
 8003cb6:	2400      	movs	r4, #0
 8003cb8:	4f32      	ldr	r7, [pc, #200]	; (8003d84 <_strtod_l+0xb2c>)
 8003cba:	e791      	b.n	8003be0 <_strtod_l+0x988>
 8003cbc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003cbe:	4d30      	ldr	r5, [pc, #192]	; (8003d80 <_strtod_l+0xb28>)
 8003cc0:	e7ea      	b.n	8003c98 <_strtod_l+0xa40>
 8003cc2:	4b2f      	ldr	r3, [pc, #188]	; (8003d80 <_strtod_l+0xb28>)
 8003cc4:	2200      	movs	r2, #0
 8003cc6:	4630      	mov	r0, r6
 8003cc8:	4639      	mov	r1, r7
 8003cca:	f7fc fc15 	bl	80004f8 <__aeabi_dmul>
 8003cce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003cd0:	4604      	mov	r4, r0
 8003cd2:	460d      	mov	r5, r1
 8003cd4:	b933      	cbnz	r3, 8003ce4 <_strtod_l+0xa8c>
 8003cd6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003cda:	9010      	str	r0, [sp, #64]	; 0x40
 8003cdc:	9311      	str	r3, [sp, #68]	; 0x44
 8003cde:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003ce2:	e77e      	b.n	8003be2 <_strtod_l+0x98a>
 8003ce4:	4602      	mov	r2, r0
 8003ce6:	460b      	mov	r3, r1
 8003ce8:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003cec:	e7f7      	b.n	8003cde <_strtod_l+0xa86>
 8003cee:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8003cf2:	9b05      	ldr	r3, [sp, #20]
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d1a8      	bne.n	8003c4a <_strtod_l+0x9f2>
 8003cf8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003cfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003cfe:	0d1b      	lsrs	r3, r3, #20
 8003d00:	051b      	lsls	r3, r3, #20
 8003d02:	429a      	cmp	r2, r3
 8003d04:	d1a1      	bne.n	8003c4a <_strtod_l+0x9f2>
 8003d06:	4620      	mov	r0, r4
 8003d08:	4629      	mov	r1, r5
 8003d0a:	f7fc ff3d 	bl	8000b88 <__aeabi_d2lz>
 8003d0e:	f7fc fbc5 	bl	800049c <__aeabi_l2d>
 8003d12:	4602      	mov	r2, r0
 8003d14:	460b      	mov	r3, r1
 8003d16:	4620      	mov	r0, r4
 8003d18:	4629      	mov	r1, r5
 8003d1a:	f7fc fa35 	bl	8000188 <__aeabi_dsub>
 8003d1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003d20:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003d24:	ea43 0308 	orr.w	r3, r3, r8
 8003d28:	4313      	orrs	r3, r2
 8003d2a:	4604      	mov	r4, r0
 8003d2c:	460d      	mov	r5, r1
 8003d2e:	d066      	beq.n	8003dfe <_strtod_l+0xba6>
 8003d30:	a309      	add	r3, pc, #36	; (adr r3, 8003d58 <_strtod_l+0xb00>)
 8003d32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d36:	f7fc fe51 	bl	80009dc <__aeabi_dcmplt>
 8003d3a:	2800      	cmp	r0, #0
 8003d3c:	f47f acda 	bne.w	80036f4 <_strtod_l+0x49c>
 8003d40:	a307      	add	r3, pc, #28	; (adr r3, 8003d60 <_strtod_l+0xb08>)
 8003d42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d46:	4620      	mov	r0, r4
 8003d48:	4629      	mov	r1, r5
 8003d4a:	f7fc fe65 	bl	8000a18 <__aeabi_dcmpgt>
 8003d4e:	2800      	cmp	r0, #0
 8003d50:	f43f af7b 	beq.w	8003c4a <_strtod_l+0x9f2>
 8003d54:	e4ce      	b.n	80036f4 <_strtod_l+0x49c>
 8003d56:	bf00      	nop
 8003d58:	94a03595 	.word	0x94a03595
 8003d5c:	3fdfffff 	.word	0x3fdfffff
 8003d60:	35afe535 	.word	0x35afe535
 8003d64:	3fe00000 	.word	0x3fe00000
 8003d68:	000fffff 	.word	0x000fffff
 8003d6c:	7ff00000 	.word	0x7ff00000
 8003d70:	7fefffff 	.word	0x7fefffff
 8003d74:	3ff00000 	.word	0x3ff00000
 8003d78:	7fe00000 	.word	0x7fe00000
 8003d7c:	7c9fffff 	.word	0x7c9fffff
 8003d80:	3fe00000 	.word	0x3fe00000
 8003d84:	bff00000 	.word	0xbff00000
 8003d88:	9b05      	ldr	r3, [sp, #20]
 8003d8a:	b313      	cbz	r3, 8003dd2 <_strtod_l+0xb7a>
 8003d8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003d8e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003d92:	d81e      	bhi.n	8003dd2 <_strtod_l+0xb7a>
 8003d94:	a326      	add	r3, pc, #152	; (adr r3, 8003e30 <_strtod_l+0xbd8>)
 8003d96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d9a:	4620      	mov	r0, r4
 8003d9c:	4629      	mov	r1, r5
 8003d9e:	f7fc fe27 	bl	80009f0 <__aeabi_dcmple>
 8003da2:	b190      	cbz	r0, 8003dca <_strtod_l+0xb72>
 8003da4:	4629      	mov	r1, r5
 8003da6:	4620      	mov	r0, r4
 8003da8:	f7fc fe7e 	bl	8000aa8 <__aeabi_d2uiz>
 8003dac:	2801      	cmp	r0, #1
 8003dae:	bf38      	it	cc
 8003db0:	2001      	movcc	r0, #1
 8003db2:	f7fc fb27 	bl	8000404 <__aeabi_ui2d>
 8003db6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003db8:	4604      	mov	r4, r0
 8003dba:	460d      	mov	r5, r1
 8003dbc:	b9d3      	cbnz	r3, 8003df4 <_strtod_l+0xb9c>
 8003dbe:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003dc2:	9012      	str	r0, [sp, #72]	; 0x48
 8003dc4:	9313      	str	r3, [sp, #76]	; 0x4c
 8003dc6:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003dca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003dcc:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003dd0:	1a9f      	subs	r7, r3, r2
 8003dd2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003dd6:	f002 f91f 	bl	8006018 <__ulp>
 8003dda:	4602      	mov	r2, r0
 8003ddc:	460b      	mov	r3, r1
 8003dde:	4630      	mov	r0, r6
 8003de0:	4639      	mov	r1, r7
 8003de2:	f7fc fb89 	bl	80004f8 <__aeabi_dmul>
 8003de6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003dea:	f7fc f9cf 	bl	800018c <__adddf3>
 8003dee:	4680      	mov	r8, r0
 8003df0:	4689      	mov	r9, r1
 8003df2:	e77e      	b.n	8003cf2 <_strtod_l+0xa9a>
 8003df4:	4602      	mov	r2, r0
 8003df6:	460b      	mov	r3, r1
 8003df8:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003dfc:	e7e3      	b.n	8003dc6 <_strtod_l+0xb6e>
 8003dfe:	a30e      	add	r3, pc, #56	; (adr r3, 8003e38 <_strtod_l+0xbe0>)
 8003e00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e04:	f7fc fdea 	bl	80009dc <__aeabi_dcmplt>
 8003e08:	e7a1      	b.n	8003d4e <_strtod_l+0xaf6>
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	930c      	str	r3, [sp, #48]	; 0x30
 8003e0e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003e10:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003e12:	6013      	str	r3, [r2, #0]
 8003e14:	f7ff ba65 	b.w	80032e2 <_strtod_l+0x8a>
 8003e18:	2b65      	cmp	r3, #101	; 0x65
 8003e1a:	f43f ab5c 	beq.w	80034d6 <_strtod_l+0x27e>
 8003e1e:	2b45      	cmp	r3, #69	; 0x45
 8003e20:	f43f ab59 	beq.w	80034d6 <_strtod_l+0x27e>
 8003e24:	2201      	movs	r2, #1
 8003e26:	f7ff bb8d 	b.w	8003544 <_strtod_l+0x2ec>
 8003e2a:	bf00      	nop
 8003e2c:	f3af 8000 	nop.w
 8003e30:	ffc00000 	.word	0xffc00000
 8003e34:	41dfffff 	.word	0x41dfffff
 8003e38:	94a03595 	.word	0x94a03595
 8003e3c:	3fcfffff 	.word	0x3fcfffff

08003e40 <_strtod_r>:
 8003e40:	4b01      	ldr	r3, [pc, #4]	; (8003e48 <_strtod_r+0x8>)
 8003e42:	f7ff ba09 	b.w	8003258 <_strtod_l>
 8003e46:	bf00      	nop
 8003e48:	20000068 	.word	0x20000068

08003e4c <_strtol_l.isra.0>:
 8003e4c:	2b01      	cmp	r3, #1
 8003e4e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e52:	4686      	mov	lr, r0
 8003e54:	d001      	beq.n	8003e5a <_strtol_l.isra.0+0xe>
 8003e56:	2b24      	cmp	r3, #36	; 0x24
 8003e58:	d906      	bls.n	8003e68 <_strtol_l.isra.0+0x1c>
 8003e5a:	f7fe facd 	bl	80023f8 <__errno>
 8003e5e:	2316      	movs	r3, #22
 8003e60:	6003      	str	r3, [r0, #0]
 8003e62:	2000      	movs	r0, #0
 8003e64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e68:	468c      	mov	ip, r1
 8003e6a:	4e3a      	ldr	r6, [pc, #232]	; (8003f54 <_strtol_l.isra.0+0x108>)
 8003e6c:	4660      	mov	r0, ip
 8003e6e:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8003e72:	5da5      	ldrb	r5, [r4, r6]
 8003e74:	f015 0508 	ands.w	r5, r5, #8
 8003e78:	d1f8      	bne.n	8003e6c <_strtol_l.isra.0+0x20>
 8003e7a:	2c2d      	cmp	r4, #45	; 0x2d
 8003e7c:	d133      	bne.n	8003ee6 <_strtol_l.isra.0+0x9a>
 8003e7e:	f04f 0801 	mov.w	r8, #1
 8003e82:	f89c 4000 	ldrb.w	r4, [ip]
 8003e86:	f100 0c02 	add.w	ip, r0, #2
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d05d      	beq.n	8003f4a <_strtol_l.isra.0+0xfe>
 8003e8e:	2b10      	cmp	r3, #16
 8003e90:	d10c      	bne.n	8003eac <_strtol_l.isra.0+0x60>
 8003e92:	2c30      	cmp	r4, #48	; 0x30
 8003e94:	d10a      	bne.n	8003eac <_strtol_l.isra.0+0x60>
 8003e96:	f89c 0000 	ldrb.w	r0, [ip]
 8003e9a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8003e9e:	2858      	cmp	r0, #88	; 0x58
 8003ea0:	d14e      	bne.n	8003f40 <_strtol_l.isra.0+0xf4>
 8003ea2:	2310      	movs	r3, #16
 8003ea4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8003ea8:	f10c 0c02 	add.w	ip, ip, #2
 8003eac:	2500      	movs	r5, #0
 8003eae:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 8003eb2:	3f01      	subs	r7, #1
 8003eb4:	fbb7 f9f3 	udiv	r9, r7, r3
 8003eb8:	4628      	mov	r0, r5
 8003eba:	fb03 7a19 	mls	sl, r3, r9, r7
 8003ebe:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8003ec2:	2e09      	cmp	r6, #9
 8003ec4:	d818      	bhi.n	8003ef8 <_strtol_l.isra.0+0xac>
 8003ec6:	4634      	mov	r4, r6
 8003ec8:	42a3      	cmp	r3, r4
 8003eca:	dd24      	ble.n	8003f16 <_strtol_l.isra.0+0xca>
 8003ecc:	2d00      	cmp	r5, #0
 8003ece:	db1f      	blt.n	8003f10 <_strtol_l.isra.0+0xc4>
 8003ed0:	4581      	cmp	r9, r0
 8003ed2:	d31d      	bcc.n	8003f10 <_strtol_l.isra.0+0xc4>
 8003ed4:	d101      	bne.n	8003eda <_strtol_l.isra.0+0x8e>
 8003ed6:	45a2      	cmp	sl, r4
 8003ed8:	db1a      	blt.n	8003f10 <_strtol_l.isra.0+0xc4>
 8003eda:	2501      	movs	r5, #1
 8003edc:	fb00 4003 	mla	r0, r0, r3, r4
 8003ee0:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8003ee4:	e7eb      	b.n	8003ebe <_strtol_l.isra.0+0x72>
 8003ee6:	2c2b      	cmp	r4, #43	; 0x2b
 8003ee8:	bf08      	it	eq
 8003eea:	f89c 4000 	ldrbeq.w	r4, [ip]
 8003eee:	46a8      	mov	r8, r5
 8003ef0:	bf08      	it	eq
 8003ef2:	f100 0c02 	addeq.w	ip, r0, #2
 8003ef6:	e7c8      	b.n	8003e8a <_strtol_l.isra.0+0x3e>
 8003ef8:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8003efc:	2e19      	cmp	r6, #25
 8003efe:	d801      	bhi.n	8003f04 <_strtol_l.isra.0+0xb8>
 8003f00:	3c37      	subs	r4, #55	; 0x37
 8003f02:	e7e1      	b.n	8003ec8 <_strtol_l.isra.0+0x7c>
 8003f04:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8003f08:	2e19      	cmp	r6, #25
 8003f0a:	d804      	bhi.n	8003f16 <_strtol_l.isra.0+0xca>
 8003f0c:	3c57      	subs	r4, #87	; 0x57
 8003f0e:	e7db      	b.n	8003ec8 <_strtol_l.isra.0+0x7c>
 8003f10:	f04f 35ff 	mov.w	r5, #4294967295
 8003f14:	e7e4      	b.n	8003ee0 <_strtol_l.isra.0+0x94>
 8003f16:	2d00      	cmp	r5, #0
 8003f18:	da08      	bge.n	8003f2c <_strtol_l.isra.0+0xe0>
 8003f1a:	2322      	movs	r3, #34	; 0x22
 8003f1c:	4638      	mov	r0, r7
 8003f1e:	f8ce 3000 	str.w	r3, [lr]
 8003f22:	2a00      	cmp	r2, #0
 8003f24:	d09e      	beq.n	8003e64 <_strtol_l.isra.0+0x18>
 8003f26:	f10c 31ff 	add.w	r1, ip, #4294967295
 8003f2a:	e007      	b.n	8003f3c <_strtol_l.isra.0+0xf0>
 8003f2c:	f1b8 0f00 	cmp.w	r8, #0
 8003f30:	d000      	beq.n	8003f34 <_strtol_l.isra.0+0xe8>
 8003f32:	4240      	negs	r0, r0
 8003f34:	2a00      	cmp	r2, #0
 8003f36:	d095      	beq.n	8003e64 <_strtol_l.isra.0+0x18>
 8003f38:	2d00      	cmp	r5, #0
 8003f3a:	d1f4      	bne.n	8003f26 <_strtol_l.isra.0+0xda>
 8003f3c:	6011      	str	r1, [r2, #0]
 8003f3e:	e791      	b.n	8003e64 <_strtol_l.isra.0+0x18>
 8003f40:	2430      	movs	r4, #48	; 0x30
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d1b2      	bne.n	8003eac <_strtol_l.isra.0+0x60>
 8003f46:	2308      	movs	r3, #8
 8003f48:	e7b0      	b.n	8003eac <_strtol_l.isra.0+0x60>
 8003f4a:	2c30      	cmp	r4, #48	; 0x30
 8003f4c:	d0a3      	beq.n	8003e96 <_strtol_l.isra.0+0x4a>
 8003f4e:	230a      	movs	r3, #10
 8003f50:	e7ac      	b.n	8003eac <_strtol_l.isra.0+0x60>
 8003f52:	bf00      	nop
 8003f54:	080074c9 	.word	0x080074c9

08003f58 <_strtol_r>:
 8003f58:	f7ff bf78 	b.w	8003e4c <_strtol_l.isra.0>

08003f5c <__swbuf_r>:
 8003f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f5e:	460e      	mov	r6, r1
 8003f60:	4614      	mov	r4, r2
 8003f62:	4605      	mov	r5, r0
 8003f64:	b118      	cbz	r0, 8003f6e <__swbuf_r+0x12>
 8003f66:	6983      	ldr	r3, [r0, #24]
 8003f68:	b90b      	cbnz	r3, 8003f6e <__swbuf_r+0x12>
 8003f6a:	f001 f84d 	bl	8005008 <__sinit>
 8003f6e:	4b21      	ldr	r3, [pc, #132]	; (8003ff4 <__swbuf_r+0x98>)
 8003f70:	429c      	cmp	r4, r3
 8003f72:	d12b      	bne.n	8003fcc <__swbuf_r+0x70>
 8003f74:	686c      	ldr	r4, [r5, #4]
 8003f76:	69a3      	ldr	r3, [r4, #24]
 8003f78:	60a3      	str	r3, [r4, #8]
 8003f7a:	89a3      	ldrh	r3, [r4, #12]
 8003f7c:	071a      	lsls	r2, r3, #28
 8003f7e:	d52f      	bpl.n	8003fe0 <__swbuf_r+0x84>
 8003f80:	6923      	ldr	r3, [r4, #16]
 8003f82:	b36b      	cbz	r3, 8003fe0 <__swbuf_r+0x84>
 8003f84:	6923      	ldr	r3, [r4, #16]
 8003f86:	6820      	ldr	r0, [r4, #0]
 8003f88:	b2f6      	uxtb	r6, r6
 8003f8a:	1ac0      	subs	r0, r0, r3
 8003f8c:	6963      	ldr	r3, [r4, #20]
 8003f8e:	4637      	mov	r7, r6
 8003f90:	4283      	cmp	r3, r0
 8003f92:	dc04      	bgt.n	8003f9e <__swbuf_r+0x42>
 8003f94:	4621      	mov	r1, r4
 8003f96:	4628      	mov	r0, r5
 8003f98:	f000 ffa2 	bl	8004ee0 <_fflush_r>
 8003f9c:	bb30      	cbnz	r0, 8003fec <__swbuf_r+0x90>
 8003f9e:	68a3      	ldr	r3, [r4, #8]
 8003fa0:	3001      	adds	r0, #1
 8003fa2:	3b01      	subs	r3, #1
 8003fa4:	60a3      	str	r3, [r4, #8]
 8003fa6:	6823      	ldr	r3, [r4, #0]
 8003fa8:	1c5a      	adds	r2, r3, #1
 8003faa:	6022      	str	r2, [r4, #0]
 8003fac:	701e      	strb	r6, [r3, #0]
 8003fae:	6963      	ldr	r3, [r4, #20]
 8003fb0:	4283      	cmp	r3, r0
 8003fb2:	d004      	beq.n	8003fbe <__swbuf_r+0x62>
 8003fb4:	89a3      	ldrh	r3, [r4, #12]
 8003fb6:	07db      	lsls	r3, r3, #31
 8003fb8:	d506      	bpl.n	8003fc8 <__swbuf_r+0x6c>
 8003fba:	2e0a      	cmp	r6, #10
 8003fbc:	d104      	bne.n	8003fc8 <__swbuf_r+0x6c>
 8003fbe:	4621      	mov	r1, r4
 8003fc0:	4628      	mov	r0, r5
 8003fc2:	f000 ff8d 	bl	8004ee0 <_fflush_r>
 8003fc6:	b988      	cbnz	r0, 8003fec <__swbuf_r+0x90>
 8003fc8:	4638      	mov	r0, r7
 8003fca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003fcc:	4b0a      	ldr	r3, [pc, #40]	; (8003ff8 <__swbuf_r+0x9c>)
 8003fce:	429c      	cmp	r4, r3
 8003fd0:	d101      	bne.n	8003fd6 <__swbuf_r+0x7a>
 8003fd2:	68ac      	ldr	r4, [r5, #8]
 8003fd4:	e7cf      	b.n	8003f76 <__swbuf_r+0x1a>
 8003fd6:	4b09      	ldr	r3, [pc, #36]	; (8003ffc <__swbuf_r+0xa0>)
 8003fd8:	429c      	cmp	r4, r3
 8003fda:	bf08      	it	eq
 8003fdc:	68ec      	ldreq	r4, [r5, #12]
 8003fde:	e7ca      	b.n	8003f76 <__swbuf_r+0x1a>
 8003fe0:	4621      	mov	r1, r4
 8003fe2:	4628      	mov	r0, r5
 8003fe4:	f000 f80c 	bl	8004000 <__swsetup_r>
 8003fe8:	2800      	cmp	r0, #0
 8003fea:	d0cb      	beq.n	8003f84 <__swbuf_r+0x28>
 8003fec:	f04f 37ff 	mov.w	r7, #4294967295
 8003ff0:	e7ea      	b.n	8003fc8 <__swbuf_r+0x6c>
 8003ff2:	bf00      	nop
 8003ff4:	08007680 	.word	0x08007680
 8003ff8:	080076a0 	.word	0x080076a0
 8003ffc:	08007660 	.word	0x08007660

08004000 <__swsetup_r>:
 8004000:	4b32      	ldr	r3, [pc, #200]	; (80040cc <__swsetup_r+0xcc>)
 8004002:	b570      	push	{r4, r5, r6, lr}
 8004004:	681d      	ldr	r5, [r3, #0]
 8004006:	4606      	mov	r6, r0
 8004008:	460c      	mov	r4, r1
 800400a:	b125      	cbz	r5, 8004016 <__swsetup_r+0x16>
 800400c:	69ab      	ldr	r3, [r5, #24]
 800400e:	b913      	cbnz	r3, 8004016 <__swsetup_r+0x16>
 8004010:	4628      	mov	r0, r5
 8004012:	f000 fff9 	bl	8005008 <__sinit>
 8004016:	4b2e      	ldr	r3, [pc, #184]	; (80040d0 <__swsetup_r+0xd0>)
 8004018:	429c      	cmp	r4, r3
 800401a:	d10f      	bne.n	800403c <__swsetup_r+0x3c>
 800401c:	686c      	ldr	r4, [r5, #4]
 800401e:	89a3      	ldrh	r3, [r4, #12]
 8004020:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004024:	0719      	lsls	r1, r3, #28
 8004026:	d42c      	bmi.n	8004082 <__swsetup_r+0x82>
 8004028:	06dd      	lsls	r5, r3, #27
 800402a:	d411      	bmi.n	8004050 <__swsetup_r+0x50>
 800402c:	2309      	movs	r3, #9
 800402e:	6033      	str	r3, [r6, #0]
 8004030:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004034:	f04f 30ff 	mov.w	r0, #4294967295
 8004038:	81a3      	strh	r3, [r4, #12]
 800403a:	e03e      	b.n	80040ba <__swsetup_r+0xba>
 800403c:	4b25      	ldr	r3, [pc, #148]	; (80040d4 <__swsetup_r+0xd4>)
 800403e:	429c      	cmp	r4, r3
 8004040:	d101      	bne.n	8004046 <__swsetup_r+0x46>
 8004042:	68ac      	ldr	r4, [r5, #8]
 8004044:	e7eb      	b.n	800401e <__swsetup_r+0x1e>
 8004046:	4b24      	ldr	r3, [pc, #144]	; (80040d8 <__swsetup_r+0xd8>)
 8004048:	429c      	cmp	r4, r3
 800404a:	bf08      	it	eq
 800404c:	68ec      	ldreq	r4, [r5, #12]
 800404e:	e7e6      	b.n	800401e <__swsetup_r+0x1e>
 8004050:	0758      	lsls	r0, r3, #29
 8004052:	d512      	bpl.n	800407a <__swsetup_r+0x7a>
 8004054:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004056:	b141      	cbz	r1, 800406a <__swsetup_r+0x6a>
 8004058:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800405c:	4299      	cmp	r1, r3
 800405e:	d002      	beq.n	8004066 <__swsetup_r+0x66>
 8004060:	4630      	mov	r0, r6
 8004062:	f002 f92f 	bl	80062c4 <_free_r>
 8004066:	2300      	movs	r3, #0
 8004068:	6363      	str	r3, [r4, #52]	; 0x34
 800406a:	89a3      	ldrh	r3, [r4, #12]
 800406c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004070:	81a3      	strh	r3, [r4, #12]
 8004072:	2300      	movs	r3, #0
 8004074:	6063      	str	r3, [r4, #4]
 8004076:	6923      	ldr	r3, [r4, #16]
 8004078:	6023      	str	r3, [r4, #0]
 800407a:	89a3      	ldrh	r3, [r4, #12]
 800407c:	f043 0308 	orr.w	r3, r3, #8
 8004080:	81a3      	strh	r3, [r4, #12]
 8004082:	6923      	ldr	r3, [r4, #16]
 8004084:	b94b      	cbnz	r3, 800409a <__swsetup_r+0x9a>
 8004086:	89a3      	ldrh	r3, [r4, #12]
 8004088:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800408c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004090:	d003      	beq.n	800409a <__swsetup_r+0x9a>
 8004092:	4621      	mov	r1, r4
 8004094:	4630      	mov	r0, r6
 8004096:	f001 fbe7 	bl	8005868 <__smakebuf_r>
 800409a:	89a0      	ldrh	r0, [r4, #12]
 800409c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80040a0:	f010 0301 	ands.w	r3, r0, #1
 80040a4:	d00a      	beq.n	80040bc <__swsetup_r+0xbc>
 80040a6:	2300      	movs	r3, #0
 80040a8:	60a3      	str	r3, [r4, #8]
 80040aa:	6963      	ldr	r3, [r4, #20]
 80040ac:	425b      	negs	r3, r3
 80040ae:	61a3      	str	r3, [r4, #24]
 80040b0:	6923      	ldr	r3, [r4, #16]
 80040b2:	b943      	cbnz	r3, 80040c6 <__swsetup_r+0xc6>
 80040b4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80040b8:	d1ba      	bne.n	8004030 <__swsetup_r+0x30>
 80040ba:	bd70      	pop	{r4, r5, r6, pc}
 80040bc:	0781      	lsls	r1, r0, #30
 80040be:	bf58      	it	pl
 80040c0:	6963      	ldrpl	r3, [r4, #20]
 80040c2:	60a3      	str	r3, [r4, #8]
 80040c4:	e7f4      	b.n	80040b0 <__swsetup_r+0xb0>
 80040c6:	2000      	movs	r0, #0
 80040c8:	e7f7      	b.n	80040ba <__swsetup_r+0xba>
 80040ca:	bf00      	nop
 80040cc:	20000000 	.word	0x20000000
 80040d0:	08007680 	.word	0x08007680
 80040d4:	080076a0 	.word	0x080076a0
 80040d8:	08007660 	.word	0x08007660

080040dc <quorem>:
 80040dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040e0:	6903      	ldr	r3, [r0, #16]
 80040e2:	690c      	ldr	r4, [r1, #16]
 80040e4:	4607      	mov	r7, r0
 80040e6:	42a3      	cmp	r3, r4
 80040e8:	f2c0 8083 	blt.w	80041f2 <quorem+0x116>
 80040ec:	3c01      	subs	r4, #1
 80040ee:	f100 0514 	add.w	r5, r0, #20
 80040f2:	f101 0814 	add.w	r8, r1, #20
 80040f6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80040fa:	9301      	str	r3, [sp, #4]
 80040fc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004100:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004104:	3301      	adds	r3, #1
 8004106:	429a      	cmp	r2, r3
 8004108:	fbb2 f6f3 	udiv	r6, r2, r3
 800410c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8004110:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004114:	d332      	bcc.n	800417c <quorem+0xa0>
 8004116:	f04f 0e00 	mov.w	lr, #0
 800411a:	4640      	mov	r0, r8
 800411c:	46ac      	mov	ip, r5
 800411e:	46f2      	mov	sl, lr
 8004120:	f850 2b04 	ldr.w	r2, [r0], #4
 8004124:	b293      	uxth	r3, r2
 8004126:	fb06 e303 	mla	r3, r6, r3, lr
 800412a:	0c12      	lsrs	r2, r2, #16
 800412c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8004130:	fb06 e202 	mla	r2, r6, r2, lr
 8004134:	b29b      	uxth	r3, r3
 8004136:	ebaa 0303 	sub.w	r3, sl, r3
 800413a:	f8dc a000 	ldr.w	sl, [ip]
 800413e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004142:	fa1f fa8a 	uxth.w	sl, sl
 8004146:	4453      	add	r3, sl
 8004148:	fa1f fa82 	uxth.w	sl, r2
 800414c:	f8dc 2000 	ldr.w	r2, [ip]
 8004150:	4581      	cmp	r9, r0
 8004152:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8004156:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800415a:	b29b      	uxth	r3, r3
 800415c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004160:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8004164:	f84c 3b04 	str.w	r3, [ip], #4
 8004168:	d2da      	bcs.n	8004120 <quorem+0x44>
 800416a:	f855 300b 	ldr.w	r3, [r5, fp]
 800416e:	b92b      	cbnz	r3, 800417c <quorem+0xa0>
 8004170:	9b01      	ldr	r3, [sp, #4]
 8004172:	3b04      	subs	r3, #4
 8004174:	429d      	cmp	r5, r3
 8004176:	461a      	mov	r2, r3
 8004178:	d32f      	bcc.n	80041da <quorem+0xfe>
 800417a:	613c      	str	r4, [r7, #16]
 800417c:	4638      	mov	r0, r7
 800417e:	f001 fe9f 	bl	8005ec0 <__mcmp>
 8004182:	2800      	cmp	r0, #0
 8004184:	db25      	blt.n	80041d2 <quorem+0xf6>
 8004186:	4628      	mov	r0, r5
 8004188:	f04f 0c00 	mov.w	ip, #0
 800418c:	3601      	adds	r6, #1
 800418e:	f858 1b04 	ldr.w	r1, [r8], #4
 8004192:	f8d0 e000 	ldr.w	lr, [r0]
 8004196:	b28b      	uxth	r3, r1
 8004198:	ebac 0303 	sub.w	r3, ip, r3
 800419c:	fa1f f28e 	uxth.w	r2, lr
 80041a0:	4413      	add	r3, r2
 80041a2:	0c0a      	lsrs	r2, r1, #16
 80041a4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80041a8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80041ac:	b29b      	uxth	r3, r3
 80041ae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80041b2:	45c1      	cmp	r9, r8
 80041b4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80041b8:	f840 3b04 	str.w	r3, [r0], #4
 80041bc:	d2e7      	bcs.n	800418e <quorem+0xb2>
 80041be:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80041c2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80041c6:	b922      	cbnz	r2, 80041d2 <quorem+0xf6>
 80041c8:	3b04      	subs	r3, #4
 80041ca:	429d      	cmp	r5, r3
 80041cc:	461a      	mov	r2, r3
 80041ce:	d30a      	bcc.n	80041e6 <quorem+0x10a>
 80041d0:	613c      	str	r4, [r7, #16]
 80041d2:	4630      	mov	r0, r6
 80041d4:	b003      	add	sp, #12
 80041d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041da:	6812      	ldr	r2, [r2, #0]
 80041dc:	3b04      	subs	r3, #4
 80041de:	2a00      	cmp	r2, #0
 80041e0:	d1cb      	bne.n	800417a <quorem+0x9e>
 80041e2:	3c01      	subs	r4, #1
 80041e4:	e7c6      	b.n	8004174 <quorem+0x98>
 80041e6:	6812      	ldr	r2, [r2, #0]
 80041e8:	3b04      	subs	r3, #4
 80041ea:	2a00      	cmp	r2, #0
 80041ec:	d1f0      	bne.n	80041d0 <quorem+0xf4>
 80041ee:	3c01      	subs	r4, #1
 80041f0:	e7eb      	b.n	80041ca <quorem+0xee>
 80041f2:	2000      	movs	r0, #0
 80041f4:	e7ee      	b.n	80041d4 <quorem+0xf8>
	...

080041f8 <_dtoa_r>:
 80041f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041fc:	4616      	mov	r6, r2
 80041fe:	461f      	mov	r7, r3
 8004200:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004202:	b099      	sub	sp, #100	; 0x64
 8004204:	4605      	mov	r5, r0
 8004206:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800420a:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800420e:	b974      	cbnz	r4, 800422e <_dtoa_r+0x36>
 8004210:	2010      	movs	r0, #16
 8004212:	f001 fb69 	bl	80058e8 <malloc>
 8004216:	4602      	mov	r2, r0
 8004218:	6268      	str	r0, [r5, #36]	; 0x24
 800421a:	b920      	cbnz	r0, 8004226 <_dtoa_r+0x2e>
 800421c:	21ea      	movs	r1, #234	; 0xea
 800421e:	4bae      	ldr	r3, [pc, #696]	; (80044d8 <_dtoa_r+0x2e0>)
 8004220:	48ae      	ldr	r0, [pc, #696]	; (80044dc <_dtoa_r+0x2e4>)
 8004222:	f002 fadb 	bl	80067dc <__assert_func>
 8004226:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800422a:	6004      	str	r4, [r0, #0]
 800422c:	60c4      	str	r4, [r0, #12]
 800422e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004230:	6819      	ldr	r1, [r3, #0]
 8004232:	b151      	cbz	r1, 800424a <_dtoa_r+0x52>
 8004234:	685a      	ldr	r2, [r3, #4]
 8004236:	2301      	movs	r3, #1
 8004238:	4093      	lsls	r3, r2
 800423a:	604a      	str	r2, [r1, #4]
 800423c:	608b      	str	r3, [r1, #8]
 800423e:	4628      	mov	r0, r5
 8004240:	f001 fbba 	bl	80059b8 <_Bfree>
 8004244:	2200      	movs	r2, #0
 8004246:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004248:	601a      	str	r2, [r3, #0]
 800424a:	1e3b      	subs	r3, r7, #0
 800424c:	bfaf      	iteee	ge
 800424e:	2300      	movge	r3, #0
 8004250:	2201      	movlt	r2, #1
 8004252:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8004256:	9305      	strlt	r3, [sp, #20]
 8004258:	bfa8      	it	ge
 800425a:	f8c8 3000 	strge.w	r3, [r8]
 800425e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8004262:	4b9f      	ldr	r3, [pc, #636]	; (80044e0 <_dtoa_r+0x2e8>)
 8004264:	bfb8      	it	lt
 8004266:	f8c8 2000 	strlt.w	r2, [r8]
 800426a:	ea33 0309 	bics.w	r3, r3, r9
 800426e:	d119      	bne.n	80042a4 <_dtoa_r+0xac>
 8004270:	f242 730f 	movw	r3, #9999	; 0x270f
 8004274:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004276:	6013      	str	r3, [r2, #0]
 8004278:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800427c:	4333      	orrs	r3, r6
 800427e:	f000 8580 	beq.w	8004d82 <_dtoa_r+0xb8a>
 8004282:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004284:	b953      	cbnz	r3, 800429c <_dtoa_r+0xa4>
 8004286:	4b97      	ldr	r3, [pc, #604]	; (80044e4 <_dtoa_r+0x2ec>)
 8004288:	e022      	b.n	80042d0 <_dtoa_r+0xd8>
 800428a:	4b97      	ldr	r3, [pc, #604]	; (80044e8 <_dtoa_r+0x2f0>)
 800428c:	9308      	str	r3, [sp, #32]
 800428e:	3308      	adds	r3, #8
 8004290:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004292:	6013      	str	r3, [r2, #0]
 8004294:	9808      	ldr	r0, [sp, #32]
 8004296:	b019      	add	sp, #100	; 0x64
 8004298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800429c:	4b91      	ldr	r3, [pc, #580]	; (80044e4 <_dtoa_r+0x2ec>)
 800429e:	9308      	str	r3, [sp, #32]
 80042a0:	3303      	adds	r3, #3
 80042a2:	e7f5      	b.n	8004290 <_dtoa_r+0x98>
 80042a4:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80042a8:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80042ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80042b0:	2200      	movs	r2, #0
 80042b2:	2300      	movs	r3, #0
 80042b4:	f7fc fb88 	bl	80009c8 <__aeabi_dcmpeq>
 80042b8:	4680      	mov	r8, r0
 80042ba:	b158      	cbz	r0, 80042d4 <_dtoa_r+0xdc>
 80042bc:	2301      	movs	r3, #1
 80042be:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80042c0:	6013      	str	r3, [r2, #0]
 80042c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	f000 8559 	beq.w	8004d7c <_dtoa_r+0xb84>
 80042ca:	4888      	ldr	r0, [pc, #544]	; (80044ec <_dtoa_r+0x2f4>)
 80042cc:	6018      	str	r0, [r3, #0]
 80042ce:	1e43      	subs	r3, r0, #1
 80042d0:	9308      	str	r3, [sp, #32]
 80042d2:	e7df      	b.n	8004294 <_dtoa_r+0x9c>
 80042d4:	ab16      	add	r3, sp, #88	; 0x58
 80042d6:	9301      	str	r3, [sp, #4]
 80042d8:	ab17      	add	r3, sp, #92	; 0x5c
 80042da:	9300      	str	r3, [sp, #0]
 80042dc:	4628      	mov	r0, r5
 80042de:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80042e2:	f001 ff13 	bl	800610c <__d2b>
 80042e6:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80042ea:	4682      	mov	sl, r0
 80042ec:	2c00      	cmp	r4, #0
 80042ee:	d07e      	beq.n	80043ee <_dtoa_r+0x1f6>
 80042f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80042f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80042f6:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80042fa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80042fe:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8004302:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8004306:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800430a:	2200      	movs	r2, #0
 800430c:	4b78      	ldr	r3, [pc, #480]	; (80044f0 <_dtoa_r+0x2f8>)
 800430e:	f7fb ff3b 	bl	8000188 <__aeabi_dsub>
 8004312:	a36b      	add	r3, pc, #428	; (adr r3, 80044c0 <_dtoa_r+0x2c8>)
 8004314:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004318:	f7fc f8ee 	bl	80004f8 <__aeabi_dmul>
 800431c:	a36a      	add	r3, pc, #424	; (adr r3, 80044c8 <_dtoa_r+0x2d0>)
 800431e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004322:	f7fb ff33 	bl	800018c <__adddf3>
 8004326:	4606      	mov	r6, r0
 8004328:	4620      	mov	r0, r4
 800432a:	460f      	mov	r7, r1
 800432c:	f7fc f87a 	bl	8000424 <__aeabi_i2d>
 8004330:	a367      	add	r3, pc, #412	; (adr r3, 80044d0 <_dtoa_r+0x2d8>)
 8004332:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004336:	f7fc f8df 	bl	80004f8 <__aeabi_dmul>
 800433a:	4602      	mov	r2, r0
 800433c:	460b      	mov	r3, r1
 800433e:	4630      	mov	r0, r6
 8004340:	4639      	mov	r1, r7
 8004342:	f7fb ff23 	bl	800018c <__adddf3>
 8004346:	4606      	mov	r6, r0
 8004348:	460f      	mov	r7, r1
 800434a:	f7fc fb85 	bl	8000a58 <__aeabi_d2iz>
 800434e:	2200      	movs	r2, #0
 8004350:	4681      	mov	r9, r0
 8004352:	2300      	movs	r3, #0
 8004354:	4630      	mov	r0, r6
 8004356:	4639      	mov	r1, r7
 8004358:	f7fc fb40 	bl	80009dc <__aeabi_dcmplt>
 800435c:	b148      	cbz	r0, 8004372 <_dtoa_r+0x17a>
 800435e:	4648      	mov	r0, r9
 8004360:	f7fc f860 	bl	8000424 <__aeabi_i2d>
 8004364:	4632      	mov	r2, r6
 8004366:	463b      	mov	r3, r7
 8004368:	f7fc fb2e 	bl	80009c8 <__aeabi_dcmpeq>
 800436c:	b908      	cbnz	r0, 8004372 <_dtoa_r+0x17a>
 800436e:	f109 39ff 	add.w	r9, r9, #4294967295
 8004372:	f1b9 0f16 	cmp.w	r9, #22
 8004376:	d857      	bhi.n	8004428 <_dtoa_r+0x230>
 8004378:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800437c:	4b5d      	ldr	r3, [pc, #372]	; (80044f4 <_dtoa_r+0x2fc>)
 800437e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8004382:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004386:	f7fc fb29 	bl	80009dc <__aeabi_dcmplt>
 800438a:	2800      	cmp	r0, #0
 800438c:	d04e      	beq.n	800442c <_dtoa_r+0x234>
 800438e:	2300      	movs	r3, #0
 8004390:	f109 39ff 	add.w	r9, r9, #4294967295
 8004394:	930f      	str	r3, [sp, #60]	; 0x3c
 8004396:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004398:	1b1c      	subs	r4, r3, r4
 800439a:	1e63      	subs	r3, r4, #1
 800439c:	9309      	str	r3, [sp, #36]	; 0x24
 800439e:	bf49      	itett	mi
 80043a0:	f1c4 0301 	rsbmi	r3, r4, #1
 80043a4:	2300      	movpl	r3, #0
 80043a6:	9306      	strmi	r3, [sp, #24]
 80043a8:	2300      	movmi	r3, #0
 80043aa:	bf54      	ite	pl
 80043ac:	9306      	strpl	r3, [sp, #24]
 80043ae:	9309      	strmi	r3, [sp, #36]	; 0x24
 80043b0:	f1b9 0f00 	cmp.w	r9, #0
 80043b4:	db3c      	blt.n	8004430 <_dtoa_r+0x238>
 80043b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043b8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80043bc:	444b      	add	r3, r9
 80043be:	9309      	str	r3, [sp, #36]	; 0x24
 80043c0:	2300      	movs	r3, #0
 80043c2:	930a      	str	r3, [sp, #40]	; 0x28
 80043c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80043c6:	2b09      	cmp	r3, #9
 80043c8:	d86c      	bhi.n	80044a4 <_dtoa_r+0x2ac>
 80043ca:	2b05      	cmp	r3, #5
 80043cc:	bfc4      	itt	gt
 80043ce:	3b04      	subgt	r3, #4
 80043d0:	9322      	strgt	r3, [sp, #136]	; 0x88
 80043d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80043d4:	bfc8      	it	gt
 80043d6:	2400      	movgt	r4, #0
 80043d8:	f1a3 0302 	sub.w	r3, r3, #2
 80043dc:	bfd8      	it	le
 80043de:	2401      	movle	r4, #1
 80043e0:	2b03      	cmp	r3, #3
 80043e2:	f200 808b 	bhi.w	80044fc <_dtoa_r+0x304>
 80043e6:	e8df f003 	tbb	[pc, r3]
 80043ea:	4f2d      	.short	0x4f2d
 80043ec:	5b4d      	.short	0x5b4d
 80043ee:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80043f2:	441c      	add	r4, r3
 80043f4:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80043f8:	2b20      	cmp	r3, #32
 80043fa:	bfc3      	ittte	gt
 80043fc:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8004400:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8004404:	fa09 f303 	lslgt.w	r3, r9, r3
 8004408:	f1c3 0320 	rsble	r3, r3, #32
 800440c:	bfc6      	itte	gt
 800440e:	fa26 f000 	lsrgt.w	r0, r6, r0
 8004412:	4318      	orrgt	r0, r3
 8004414:	fa06 f003 	lslle.w	r0, r6, r3
 8004418:	f7fb fff4 	bl	8000404 <__aeabi_ui2d>
 800441c:	2301      	movs	r3, #1
 800441e:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8004422:	3c01      	subs	r4, #1
 8004424:	9313      	str	r3, [sp, #76]	; 0x4c
 8004426:	e770      	b.n	800430a <_dtoa_r+0x112>
 8004428:	2301      	movs	r3, #1
 800442a:	e7b3      	b.n	8004394 <_dtoa_r+0x19c>
 800442c:	900f      	str	r0, [sp, #60]	; 0x3c
 800442e:	e7b2      	b.n	8004396 <_dtoa_r+0x19e>
 8004430:	9b06      	ldr	r3, [sp, #24]
 8004432:	eba3 0309 	sub.w	r3, r3, r9
 8004436:	9306      	str	r3, [sp, #24]
 8004438:	f1c9 0300 	rsb	r3, r9, #0
 800443c:	930a      	str	r3, [sp, #40]	; 0x28
 800443e:	2300      	movs	r3, #0
 8004440:	930e      	str	r3, [sp, #56]	; 0x38
 8004442:	e7bf      	b.n	80043c4 <_dtoa_r+0x1cc>
 8004444:	2300      	movs	r3, #0
 8004446:	930b      	str	r3, [sp, #44]	; 0x2c
 8004448:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800444a:	2b00      	cmp	r3, #0
 800444c:	dc59      	bgt.n	8004502 <_dtoa_r+0x30a>
 800444e:	f04f 0b01 	mov.w	fp, #1
 8004452:	465b      	mov	r3, fp
 8004454:	f8cd b008 	str.w	fp, [sp, #8]
 8004458:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800445c:	2200      	movs	r2, #0
 800445e:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8004460:	6042      	str	r2, [r0, #4]
 8004462:	2204      	movs	r2, #4
 8004464:	f102 0614 	add.w	r6, r2, #20
 8004468:	429e      	cmp	r6, r3
 800446a:	6841      	ldr	r1, [r0, #4]
 800446c:	d94f      	bls.n	800450e <_dtoa_r+0x316>
 800446e:	4628      	mov	r0, r5
 8004470:	f001 fa62 	bl	8005938 <_Balloc>
 8004474:	9008      	str	r0, [sp, #32]
 8004476:	2800      	cmp	r0, #0
 8004478:	d14d      	bne.n	8004516 <_dtoa_r+0x31e>
 800447a:	4602      	mov	r2, r0
 800447c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8004480:	4b1d      	ldr	r3, [pc, #116]	; (80044f8 <_dtoa_r+0x300>)
 8004482:	e6cd      	b.n	8004220 <_dtoa_r+0x28>
 8004484:	2301      	movs	r3, #1
 8004486:	e7de      	b.n	8004446 <_dtoa_r+0x24e>
 8004488:	2300      	movs	r3, #0
 800448a:	930b      	str	r3, [sp, #44]	; 0x2c
 800448c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800448e:	eb09 0b03 	add.w	fp, r9, r3
 8004492:	f10b 0301 	add.w	r3, fp, #1
 8004496:	2b01      	cmp	r3, #1
 8004498:	9302      	str	r3, [sp, #8]
 800449a:	bfb8      	it	lt
 800449c:	2301      	movlt	r3, #1
 800449e:	e7dd      	b.n	800445c <_dtoa_r+0x264>
 80044a0:	2301      	movs	r3, #1
 80044a2:	e7f2      	b.n	800448a <_dtoa_r+0x292>
 80044a4:	2401      	movs	r4, #1
 80044a6:	2300      	movs	r3, #0
 80044a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80044aa:	9322      	str	r3, [sp, #136]	; 0x88
 80044ac:	f04f 3bff 	mov.w	fp, #4294967295
 80044b0:	2200      	movs	r2, #0
 80044b2:	2312      	movs	r3, #18
 80044b4:	f8cd b008 	str.w	fp, [sp, #8]
 80044b8:	9223      	str	r2, [sp, #140]	; 0x8c
 80044ba:	e7cf      	b.n	800445c <_dtoa_r+0x264>
 80044bc:	f3af 8000 	nop.w
 80044c0:	636f4361 	.word	0x636f4361
 80044c4:	3fd287a7 	.word	0x3fd287a7
 80044c8:	8b60c8b3 	.word	0x8b60c8b3
 80044cc:	3fc68a28 	.word	0x3fc68a28
 80044d0:	509f79fb 	.word	0x509f79fb
 80044d4:	3fd34413 	.word	0x3fd34413
 80044d8:	080075d6 	.word	0x080075d6
 80044dc:	080075ed 	.word	0x080075ed
 80044e0:	7ff00000 	.word	0x7ff00000
 80044e4:	080075d2 	.word	0x080075d2
 80044e8:	080075c9 	.word	0x080075c9
 80044ec:	08007449 	.word	0x08007449
 80044f0:	3ff80000 	.word	0x3ff80000
 80044f4:	080077c8 	.word	0x080077c8
 80044f8:	0800764c 	.word	0x0800764c
 80044fc:	2301      	movs	r3, #1
 80044fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8004500:	e7d4      	b.n	80044ac <_dtoa_r+0x2b4>
 8004502:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8004506:	465b      	mov	r3, fp
 8004508:	f8cd b008 	str.w	fp, [sp, #8]
 800450c:	e7a6      	b.n	800445c <_dtoa_r+0x264>
 800450e:	3101      	adds	r1, #1
 8004510:	6041      	str	r1, [r0, #4]
 8004512:	0052      	lsls	r2, r2, #1
 8004514:	e7a6      	b.n	8004464 <_dtoa_r+0x26c>
 8004516:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004518:	9a08      	ldr	r2, [sp, #32]
 800451a:	601a      	str	r2, [r3, #0]
 800451c:	9b02      	ldr	r3, [sp, #8]
 800451e:	2b0e      	cmp	r3, #14
 8004520:	f200 80a8 	bhi.w	8004674 <_dtoa_r+0x47c>
 8004524:	2c00      	cmp	r4, #0
 8004526:	f000 80a5 	beq.w	8004674 <_dtoa_r+0x47c>
 800452a:	f1b9 0f00 	cmp.w	r9, #0
 800452e:	dd34      	ble.n	800459a <_dtoa_r+0x3a2>
 8004530:	4a9a      	ldr	r2, [pc, #616]	; (800479c <_dtoa_r+0x5a4>)
 8004532:	f009 030f 	and.w	r3, r9, #15
 8004536:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800453a:	f419 7f80 	tst.w	r9, #256	; 0x100
 800453e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004542:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004546:	ea4f 1429 	mov.w	r4, r9, asr #4
 800454a:	d016      	beq.n	800457a <_dtoa_r+0x382>
 800454c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004550:	4b93      	ldr	r3, [pc, #588]	; (80047a0 <_dtoa_r+0x5a8>)
 8004552:	2703      	movs	r7, #3
 8004554:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004558:	f7fc f8f8 	bl	800074c <__aeabi_ddiv>
 800455c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004560:	f004 040f 	and.w	r4, r4, #15
 8004564:	4e8e      	ldr	r6, [pc, #568]	; (80047a0 <_dtoa_r+0x5a8>)
 8004566:	b954      	cbnz	r4, 800457e <_dtoa_r+0x386>
 8004568:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800456c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004570:	f7fc f8ec 	bl	800074c <__aeabi_ddiv>
 8004574:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004578:	e029      	b.n	80045ce <_dtoa_r+0x3d6>
 800457a:	2702      	movs	r7, #2
 800457c:	e7f2      	b.n	8004564 <_dtoa_r+0x36c>
 800457e:	07e1      	lsls	r1, r4, #31
 8004580:	d508      	bpl.n	8004594 <_dtoa_r+0x39c>
 8004582:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004586:	e9d6 2300 	ldrd	r2, r3, [r6]
 800458a:	f7fb ffb5 	bl	80004f8 <__aeabi_dmul>
 800458e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004592:	3701      	adds	r7, #1
 8004594:	1064      	asrs	r4, r4, #1
 8004596:	3608      	adds	r6, #8
 8004598:	e7e5      	b.n	8004566 <_dtoa_r+0x36e>
 800459a:	f000 80a5 	beq.w	80046e8 <_dtoa_r+0x4f0>
 800459e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80045a2:	f1c9 0400 	rsb	r4, r9, #0
 80045a6:	4b7d      	ldr	r3, [pc, #500]	; (800479c <_dtoa_r+0x5a4>)
 80045a8:	f004 020f 	and.w	r2, r4, #15
 80045ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80045b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045b4:	f7fb ffa0 	bl	80004f8 <__aeabi_dmul>
 80045b8:	2702      	movs	r7, #2
 80045ba:	2300      	movs	r3, #0
 80045bc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80045c0:	4e77      	ldr	r6, [pc, #476]	; (80047a0 <_dtoa_r+0x5a8>)
 80045c2:	1124      	asrs	r4, r4, #4
 80045c4:	2c00      	cmp	r4, #0
 80045c6:	f040 8084 	bne.w	80046d2 <_dtoa_r+0x4da>
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	d1d2      	bne.n	8004574 <_dtoa_r+0x37c>
 80045ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	f000 808b 	beq.w	80046ec <_dtoa_r+0x4f4>
 80045d6:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80045da:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80045de:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80045e2:	2200      	movs	r2, #0
 80045e4:	4b6f      	ldr	r3, [pc, #444]	; (80047a4 <_dtoa_r+0x5ac>)
 80045e6:	f7fc f9f9 	bl	80009dc <__aeabi_dcmplt>
 80045ea:	2800      	cmp	r0, #0
 80045ec:	d07e      	beq.n	80046ec <_dtoa_r+0x4f4>
 80045ee:	9b02      	ldr	r3, [sp, #8]
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	d07b      	beq.n	80046ec <_dtoa_r+0x4f4>
 80045f4:	f1bb 0f00 	cmp.w	fp, #0
 80045f8:	dd38      	ble.n	800466c <_dtoa_r+0x474>
 80045fa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80045fe:	2200      	movs	r2, #0
 8004600:	4b69      	ldr	r3, [pc, #420]	; (80047a8 <_dtoa_r+0x5b0>)
 8004602:	f7fb ff79 	bl	80004f8 <__aeabi_dmul>
 8004606:	465c      	mov	r4, fp
 8004608:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800460c:	f109 38ff 	add.w	r8, r9, #4294967295
 8004610:	3701      	adds	r7, #1
 8004612:	4638      	mov	r0, r7
 8004614:	f7fb ff06 	bl	8000424 <__aeabi_i2d>
 8004618:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800461c:	f7fb ff6c 	bl	80004f8 <__aeabi_dmul>
 8004620:	2200      	movs	r2, #0
 8004622:	4b62      	ldr	r3, [pc, #392]	; (80047ac <_dtoa_r+0x5b4>)
 8004624:	f7fb fdb2 	bl	800018c <__adddf3>
 8004628:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800462c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004630:	9611      	str	r6, [sp, #68]	; 0x44
 8004632:	2c00      	cmp	r4, #0
 8004634:	d15d      	bne.n	80046f2 <_dtoa_r+0x4fa>
 8004636:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800463a:	2200      	movs	r2, #0
 800463c:	4b5c      	ldr	r3, [pc, #368]	; (80047b0 <_dtoa_r+0x5b8>)
 800463e:	f7fb fda3 	bl	8000188 <__aeabi_dsub>
 8004642:	4602      	mov	r2, r0
 8004644:	460b      	mov	r3, r1
 8004646:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800464a:	4633      	mov	r3, r6
 800464c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800464e:	f7fc f9e3 	bl	8000a18 <__aeabi_dcmpgt>
 8004652:	2800      	cmp	r0, #0
 8004654:	f040 829e 	bne.w	8004b94 <_dtoa_r+0x99c>
 8004658:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800465c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800465e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8004662:	f7fc f9bb 	bl	80009dc <__aeabi_dcmplt>
 8004666:	2800      	cmp	r0, #0
 8004668:	f040 8292 	bne.w	8004b90 <_dtoa_r+0x998>
 800466c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004670:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004674:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004676:	2b00      	cmp	r3, #0
 8004678:	f2c0 8153 	blt.w	8004922 <_dtoa_r+0x72a>
 800467c:	f1b9 0f0e 	cmp.w	r9, #14
 8004680:	f300 814f 	bgt.w	8004922 <_dtoa_r+0x72a>
 8004684:	4b45      	ldr	r3, [pc, #276]	; (800479c <_dtoa_r+0x5a4>)
 8004686:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 800468a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800468e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004692:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004694:	2b00      	cmp	r3, #0
 8004696:	f280 80db 	bge.w	8004850 <_dtoa_r+0x658>
 800469a:	9b02      	ldr	r3, [sp, #8]
 800469c:	2b00      	cmp	r3, #0
 800469e:	f300 80d7 	bgt.w	8004850 <_dtoa_r+0x658>
 80046a2:	f040 8274 	bne.w	8004b8e <_dtoa_r+0x996>
 80046a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80046aa:	2200      	movs	r2, #0
 80046ac:	4b40      	ldr	r3, [pc, #256]	; (80047b0 <_dtoa_r+0x5b8>)
 80046ae:	f7fb ff23 	bl	80004f8 <__aeabi_dmul>
 80046b2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80046b6:	f7fc f9a5 	bl	8000a04 <__aeabi_dcmpge>
 80046ba:	9c02      	ldr	r4, [sp, #8]
 80046bc:	4626      	mov	r6, r4
 80046be:	2800      	cmp	r0, #0
 80046c0:	f040 824a 	bne.w	8004b58 <_dtoa_r+0x960>
 80046c4:	2331      	movs	r3, #49	; 0x31
 80046c6:	9f08      	ldr	r7, [sp, #32]
 80046c8:	f109 0901 	add.w	r9, r9, #1
 80046cc:	f807 3b01 	strb.w	r3, [r7], #1
 80046d0:	e246      	b.n	8004b60 <_dtoa_r+0x968>
 80046d2:	07e2      	lsls	r2, r4, #31
 80046d4:	d505      	bpl.n	80046e2 <_dtoa_r+0x4ea>
 80046d6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80046da:	f7fb ff0d 	bl	80004f8 <__aeabi_dmul>
 80046de:	2301      	movs	r3, #1
 80046e0:	3701      	adds	r7, #1
 80046e2:	1064      	asrs	r4, r4, #1
 80046e4:	3608      	adds	r6, #8
 80046e6:	e76d      	b.n	80045c4 <_dtoa_r+0x3cc>
 80046e8:	2702      	movs	r7, #2
 80046ea:	e770      	b.n	80045ce <_dtoa_r+0x3d6>
 80046ec:	46c8      	mov	r8, r9
 80046ee:	9c02      	ldr	r4, [sp, #8]
 80046f0:	e78f      	b.n	8004612 <_dtoa_r+0x41a>
 80046f2:	9908      	ldr	r1, [sp, #32]
 80046f4:	4b29      	ldr	r3, [pc, #164]	; (800479c <_dtoa_r+0x5a4>)
 80046f6:	4421      	add	r1, r4
 80046f8:	9112      	str	r1, [sp, #72]	; 0x48
 80046fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80046fc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004700:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8004704:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004708:	2900      	cmp	r1, #0
 800470a:	d055      	beq.n	80047b8 <_dtoa_r+0x5c0>
 800470c:	2000      	movs	r0, #0
 800470e:	4929      	ldr	r1, [pc, #164]	; (80047b4 <_dtoa_r+0x5bc>)
 8004710:	f7fc f81c 	bl	800074c <__aeabi_ddiv>
 8004714:	463b      	mov	r3, r7
 8004716:	4632      	mov	r2, r6
 8004718:	f7fb fd36 	bl	8000188 <__aeabi_dsub>
 800471c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004720:	9f08      	ldr	r7, [sp, #32]
 8004722:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004726:	f7fc f997 	bl	8000a58 <__aeabi_d2iz>
 800472a:	4604      	mov	r4, r0
 800472c:	f7fb fe7a 	bl	8000424 <__aeabi_i2d>
 8004730:	4602      	mov	r2, r0
 8004732:	460b      	mov	r3, r1
 8004734:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004738:	f7fb fd26 	bl	8000188 <__aeabi_dsub>
 800473c:	4602      	mov	r2, r0
 800473e:	460b      	mov	r3, r1
 8004740:	3430      	adds	r4, #48	; 0x30
 8004742:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004746:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800474a:	f807 4b01 	strb.w	r4, [r7], #1
 800474e:	f7fc f945 	bl	80009dc <__aeabi_dcmplt>
 8004752:	2800      	cmp	r0, #0
 8004754:	d174      	bne.n	8004840 <_dtoa_r+0x648>
 8004756:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800475a:	2000      	movs	r0, #0
 800475c:	4911      	ldr	r1, [pc, #68]	; (80047a4 <_dtoa_r+0x5ac>)
 800475e:	f7fb fd13 	bl	8000188 <__aeabi_dsub>
 8004762:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004766:	f7fc f939 	bl	80009dc <__aeabi_dcmplt>
 800476a:	2800      	cmp	r0, #0
 800476c:	f040 80b6 	bne.w	80048dc <_dtoa_r+0x6e4>
 8004770:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004772:	429f      	cmp	r7, r3
 8004774:	f43f af7a 	beq.w	800466c <_dtoa_r+0x474>
 8004778:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800477c:	2200      	movs	r2, #0
 800477e:	4b0a      	ldr	r3, [pc, #40]	; (80047a8 <_dtoa_r+0x5b0>)
 8004780:	f7fb feba 	bl	80004f8 <__aeabi_dmul>
 8004784:	2200      	movs	r2, #0
 8004786:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800478a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800478e:	4b06      	ldr	r3, [pc, #24]	; (80047a8 <_dtoa_r+0x5b0>)
 8004790:	f7fb feb2 	bl	80004f8 <__aeabi_dmul>
 8004794:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004798:	e7c3      	b.n	8004722 <_dtoa_r+0x52a>
 800479a:	bf00      	nop
 800479c:	080077c8 	.word	0x080077c8
 80047a0:	080077a0 	.word	0x080077a0
 80047a4:	3ff00000 	.word	0x3ff00000
 80047a8:	40240000 	.word	0x40240000
 80047ac:	401c0000 	.word	0x401c0000
 80047b0:	40140000 	.word	0x40140000
 80047b4:	3fe00000 	.word	0x3fe00000
 80047b8:	4630      	mov	r0, r6
 80047ba:	4639      	mov	r1, r7
 80047bc:	f7fb fe9c 	bl	80004f8 <__aeabi_dmul>
 80047c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80047c2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80047c6:	9c08      	ldr	r4, [sp, #32]
 80047c8:	9314      	str	r3, [sp, #80]	; 0x50
 80047ca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80047ce:	f7fc f943 	bl	8000a58 <__aeabi_d2iz>
 80047d2:	9015      	str	r0, [sp, #84]	; 0x54
 80047d4:	f7fb fe26 	bl	8000424 <__aeabi_i2d>
 80047d8:	4602      	mov	r2, r0
 80047da:	460b      	mov	r3, r1
 80047dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80047e0:	f7fb fcd2 	bl	8000188 <__aeabi_dsub>
 80047e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80047e6:	4606      	mov	r6, r0
 80047e8:	3330      	adds	r3, #48	; 0x30
 80047ea:	f804 3b01 	strb.w	r3, [r4], #1
 80047ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80047f0:	460f      	mov	r7, r1
 80047f2:	429c      	cmp	r4, r3
 80047f4:	f04f 0200 	mov.w	r2, #0
 80047f8:	d124      	bne.n	8004844 <_dtoa_r+0x64c>
 80047fa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80047fe:	4bb3      	ldr	r3, [pc, #716]	; (8004acc <_dtoa_r+0x8d4>)
 8004800:	f7fb fcc4 	bl	800018c <__adddf3>
 8004804:	4602      	mov	r2, r0
 8004806:	460b      	mov	r3, r1
 8004808:	4630      	mov	r0, r6
 800480a:	4639      	mov	r1, r7
 800480c:	f7fc f904 	bl	8000a18 <__aeabi_dcmpgt>
 8004810:	2800      	cmp	r0, #0
 8004812:	d162      	bne.n	80048da <_dtoa_r+0x6e2>
 8004814:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004818:	2000      	movs	r0, #0
 800481a:	49ac      	ldr	r1, [pc, #688]	; (8004acc <_dtoa_r+0x8d4>)
 800481c:	f7fb fcb4 	bl	8000188 <__aeabi_dsub>
 8004820:	4602      	mov	r2, r0
 8004822:	460b      	mov	r3, r1
 8004824:	4630      	mov	r0, r6
 8004826:	4639      	mov	r1, r7
 8004828:	f7fc f8d8 	bl	80009dc <__aeabi_dcmplt>
 800482c:	2800      	cmp	r0, #0
 800482e:	f43f af1d 	beq.w	800466c <_dtoa_r+0x474>
 8004832:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004834:	1e7b      	subs	r3, r7, #1
 8004836:	9314      	str	r3, [sp, #80]	; 0x50
 8004838:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800483c:	2b30      	cmp	r3, #48	; 0x30
 800483e:	d0f8      	beq.n	8004832 <_dtoa_r+0x63a>
 8004840:	46c1      	mov	r9, r8
 8004842:	e03a      	b.n	80048ba <_dtoa_r+0x6c2>
 8004844:	4ba2      	ldr	r3, [pc, #648]	; (8004ad0 <_dtoa_r+0x8d8>)
 8004846:	f7fb fe57 	bl	80004f8 <__aeabi_dmul>
 800484a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800484e:	e7bc      	b.n	80047ca <_dtoa_r+0x5d2>
 8004850:	9f08      	ldr	r7, [sp, #32]
 8004852:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004856:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800485a:	f7fb ff77 	bl	800074c <__aeabi_ddiv>
 800485e:	f7fc f8fb 	bl	8000a58 <__aeabi_d2iz>
 8004862:	4604      	mov	r4, r0
 8004864:	f7fb fdde 	bl	8000424 <__aeabi_i2d>
 8004868:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800486c:	f7fb fe44 	bl	80004f8 <__aeabi_dmul>
 8004870:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8004874:	460b      	mov	r3, r1
 8004876:	4602      	mov	r2, r0
 8004878:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800487c:	f7fb fc84 	bl	8000188 <__aeabi_dsub>
 8004880:	f807 6b01 	strb.w	r6, [r7], #1
 8004884:	9e08      	ldr	r6, [sp, #32]
 8004886:	9b02      	ldr	r3, [sp, #8]
 8004888:	1bbe      	subs	r6, r7, r6
 800488a:	42b3      	cmp	r3, r6
 800488c:	d13a      	bne.n	8004904 <_dtoa_r+0x70c>
 800488e:	4602      	mov	r2, r0
 8004890:	460b      	mov	r3, r1
 8004892:	f7fb fc7b 	bl	800018c <__adddf3>
 8004896:	4602      	mov	r2, r0
 8004898:	460b      	mov	r3, r1
 800489a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800489e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80048a2:	f7fc f8b9 	bl	8000a18 <__aeabi_dcmpgt>
 80048a6:	bb58      	cbnz	r0, 8004900 <_dtoa_r+0x708>
 80048a8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80048ac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80048b0:	f7fc f88a 	bl	80009c8 <__aeabi_dcmpeq>
 80048b4:	b108      	cbz	r0, 80048ba <_dtoa_r+0x6c2>
 80048b6:	07e1      	lsls	r1, r4, #31
 80048b8:	d422      	bmi.n	8004900 <_dtoa_r+0x708>
 80048ba:	4628      	mov	r0, r5
 80048bc:	4651      	mov	r1, sl
 80048be:	f001 f87b 	bl	80059b8 <_Bfree>
 80048c2:	2300      	movs	r3, #0
 80048c4:	703b      	strb	r3, [r7, #0]
 80048c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80048c8:	f109 0001 	add.w	r0, r9, #1
 80048cc:	6018      	str	r0, [r3, #0]
 80048ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	f43f acdf 	beq.w	8004294 <_dtoa_r+0x9c>
 80048d6:	601f      	str	r7, [r3, #0]
 80048d8:	e4dc      	b.n	8004294 <_dtoa_r+0x9c>
 80048da:	4627      	mov	r7, r4
 80048dc:	463b      	mov	r3, r7
 80048de:	461f      	mov	r7, r3
 80048e0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80048e4:	2a39      	cmp	r2, #57	; 0x39
 80048e6:	d107      	bne.n	80048f8 <_dtoa_r+0x700>
 80048e8:	9a08      	ldr	r2, [sp, #32]
 80048ea:	429a      	cmp	r2, r3
 80048ec:	d1f7      	bne.n	80048de <_dtoa_r+0x6e6>
 80048ee:	2230      	movs	r2, #48	; 0x30
 80048f0:	9908      	ldr	r1, [sp, #32]
 80048f2:	f108 0801 	add.w	r8, r8, #1
 80048f6:	700a      	strb	r2, [r1, #0]
 80048f8:	781a      	ldrb	r2, [r3, #0]
 80048fa:	3201      	adds	r2, #1
 80048fc:	701a      	strb	r2, [r3, #0]
 80048fe:	e79f      	b.n	8004840 <_dtoa_r+0x648>
 8004900:	46c8      	mov	r8, r9
 8004902:	e7eb      	b.n	80048dc <_dtoa_r+0x6e4>
 8004904:	2200      	movs	r2, #0
 8004906:	4b72      	ldr	r3, [pc, #456]	; (8004ad0 <_dtoa_r+0x8d8>)
 8004908:	f7fb fdf6 	bl	80004f8 <__aeabi_dmul>
 800490c:	4602      	mov	r2, r0
 800490e:	460b      	mov	r3, r1
 8004910:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004914:	2200      	movs	r2, #0
 8004916:	2300      	movs	r3, #0
 8004918:	f7fc f856 	bl	80009c8 <__aeabi_dcmpeq>
 800491c:	2800      	cmp	r0, #0
 800491e:	d098      	beq.n	8004852 <_dtoa_r+0x65a>
 8004920:	e7cb      	b.n	80048ba <_dtoa_r+0x6c2>
 8004922:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004924:	2a00      	cmp	r2, #0
 8004926:	f000 80cd 	beq.w	8004ac4 <_dtoa_r+0x8cc>
 800492a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800492c:	2a01      	cmp	r2, #1
 800492e:	f300 80af 	bgt.w	8004a90 <_dtoa_r+0x898>
 8004932:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004934:	2a00      	cmp	r2, #0
 8004936:	f000 80a7 	beq.w	8004a88 <_dtoa_r+0x890>
 800493a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800493e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004940:	9f06      	ldr	r7, [sp, #24]
 8004942:	9a06      	ldr	r2, [sp, #24]
 8004944:	2101      	movs	r1, #1
 8004946:	441a      	add	r2, r3
 8004948:	9206      	str	r2, [sp, #24]
 800494a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800494c:	4628      	mov	r0, r5
 800494e:	441a      	add	r2, r3
 8004950:	9209      	str	r2, [sp, #36]	; 0x24
 8004952:	f001 f935 	bl	8005bc0 <__i2b>
 8004956:	4606      	mov	r6, r0
 8004958:	2f00      	cmp	r7, #0
 800495a:	dd0c      	ble.n	8004976 <_dtoa_r+0x77e>
 800495c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800495e:	2b00      	cmp	r3, #0
 8004960:	dd09      	ble.n	8004976 <_dtoa_r+0x77e>
 8004962:	42bb      	cmp	r3, r7
 8004964:	bfa8      	it	ge
 8004966:	463b      	movge	r3, r7
 8004968:	9a06      	ldr	r2, [sp, #24]
 800496a:	1aff      	subs	r7, r7, r3
 800496c:	1ad2      	subs	r2, r2, r3
 800496e:	9206      	str	r2, [sp, #24]
 8004970:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004972:	1ad3      	subs	r3, r2, r3
 8004974:	9309      	str	r3, [sp, #36]	; 0x24
 8004976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004978:	b1f3      	cbz	r3, 80049b8 <_dtoa_r+0x7c0>
 800497a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800497c:	2b00      	cmp	r3, #0
 800497e:	f000 80a9 	beq.w	8004ad4 <_dtoa_r+0x8dc>
 8004982:	2c00      	cmp	r4, #0
 8004984:	dd10      	ble.n	80049a8 <_dtoa_r+0x7b0>
 8004986:	4631      	mov	r1, r6
 8004988:	4622      	mov	r2, r4
 800498a:	4628      	mov	r0, r5
 800498c:	f001 f9d2 	bl	8005d34 <__pow5mult>
 8004990:	4652      	mov	r2, sl
 8004992:	4601      	mov	r1, r0
 8004994:	4606      	mov	r6, r0
 8004996:	4628      	mov	r0, r5
 8004998:	f001 f928 	bl	8005bec <__multiply>
 800499c:	4680      	mov	r8, r0
 800499e:	4651      	mov	r1, sl
 80049a0:	4628      	mov	r0, r5
 80049a2:	f001 f809 	bl	80059b8 <_Bfree>
 80049a6:	46c2      	mov	sl, r8
 80049a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049aa:	1b1a      	subs	r2, r3, r4
 80049ac:	d004      	beq.n	80049b8 <_dtoa_r+0x7c0>
 80049ae:	4651      	mov	r1, sl
 80049b0:	4628      	mov	r0, r5
 80049b2:	f001 f9bf 	bl	8005d34 <__pow5mult>
 80049b6:	4682      	mov	sl, r0
 80049b8:	2101      	movs	r1, #1
 80049ba:	4628      	mov	r0, r5
 80049bc:	f001 f900 	bl	8005bc0 <__i2b>
 80049c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80049c2:	4604      	mov	r4, r0
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	f340 8087 	ble.w	8004ad8 <_dtoa_r+0x8e0>
 80049ca:	461a      	mov	r2, r3
 80049cc:	4601      	mov	r1, r0
 80049ce:	4628      	mov	r0, r5
 80049d0:	f001 f9b0 	bl	8005d34 <__pow5mult>
 80049d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80049d6:	4604      	mov	r4, r0
 80049d8:	2b01      	cmp	r3, #1
 80049da:	f340 8080 	ble.w	8004ade <_dtoa_r+0x8e6>
 80049de:	f04f 0800 	mov.w	r8, #0
 80049e2:	6923      	ldr	r3, [r4, #16]
 80049e4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80049e8:	6918      	ldr	r0, [r3, #16]
 80049ea:	f001 f89b 	bl	8005b24 <__hi0bits>
 80049ee:	f1c0 0020 	rsb	r0, r0, #32
 80049f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049f4:	4418      	add	r0, r3
 80049f6:	f010 001f 	ands.w	r0, r0, #31
 80049fa:	f000 8092 	beq.w	8004b22 <_dtoa_r+0x92a>
 80049fe:	f1c0 0320 	rsb	r3, r0, #32
 8004a02:	2b04      	cmp	r3, #4
 8004a04:	f340 808a 	ble.w	8004b1c <_dtoa_r+0x924>
 8004a08:	f1c0 001c 	rsb	r0, r0, #28
 8004a0c:	9b06      	ldr	r3, [sp, #24]
 8004a0e:	4407      	add	r7, r0
 8004a10:	4403      	add	r3, r0
 8004a12:	9306      	str	r3, [sp, #24]
 8004a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a16:	4403      	add	r3, r0
 8004a18:	9309      	str	r3, [sp, #36]	; 0x24
 8004a1a:	9b06      	ldr	r3, [sp, #24]
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	dd05      	ble.n	8004a2c <_dtoa_r+0x834>
 8004a20:	4651      	mov	r1, sl
 8004a22:	461a      	mov	r2, r3
 8004a24:	4628      	mov	r0, r5
 8004a26:	f001 f9df 	bl	8005de8 <__lshift>
 8004a2a:	4682      	mov	sl, r0
 8004a2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	dd05      	ble.n	8004a3e <_dtoa_r+0x846>
 8004a32:	4621      	mov	r1, r4
 8004a34:	461a      	mov	r2, r3
 8004a36:	4628      	mov	r0, r5
 8004a38:	f001 f9d6 	bl	8005de8 <__lshift>
 8004a3c:	4604      	mov	r4, r0
 8004a3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d070      	beq.n	8004b26 <_dtoa_r+0x92e>
 8004a44:	4621      	mov	r1, r4
 8004a46:	4650      	mov	r0, sl
 8004a48:	f001 fa3a 	bl	8005ec0 <__mcmp>
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	da6a      	bge.n	8004b26 <_dtoa_r+0x92e>
 8004a50:	2300      	movs	r3, #0
 8004a52:	4651      	mov	r1, sl
 8004a54:	220a      	movs	r2, #10
 8004a56:	4628      	mov	r0, r5
 8004a58:	f000 ffd0 	bl	80059fc <__multadd>
 8004a5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a5e:	4682      	mov	sl, r0
 8004a60:	f109 39ff 	add.w	r9, r9, #4294967295
 8004a64:	2b00      	cmp	r3, #0
 8004a66:	f000 8193 	beq.w	8004d90 <_dtoa_r+0xb98>
 8004a6a:	4631      	mov	r1, r6
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	220a      	movs	r2, #10
 8004a70:	4628      	mov	r0, r5
 8004a72:	f000 ffc3 	bl	80059fc <__multadd>
 8004a76:	f1bb 0f00 	cmp.w	fp, #0
 8004a7a:	4606      	mov	r6, r0
 8004a7c:	f300 8093 	bgt.w	8004ba6 <_dtoa_r+0x9ae>
 8004a80:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a82:	2b02      	cmp	r3, #2
 8004a84:	dc57      	bgt.n	8004b36 <_dtoa_r+0x93e>
 8004a86:	e08e      	b.n	8004ba6 <_dtoa_r+0x9ae>
 8004a88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004a8a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004a8e:	e756      	b.n	800493e <_dtoa_r+0x746>
 8004a90:	9b02      	ldr	r3, [sp, #8]
 8004a92:	1e5c      	subs	r4, r3, #1
 8004a94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a96:	42a3      	cmp	r3, r4
 8004a98:	bfb7      	itett	lt
 8004a9a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004a9c:	1b1c      	subge	r4, r3, r4
 8004a9e:	1ae2      	sublt	r2, r4, r3
 8004aa0:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004aa2:	bfbe      	ittt	lt
 8004aa4:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004aa6:	189b      	addlt	r3, r3, r2
 8004aa8:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004aaa:	9b02      	ldr	r3, [sp, #8]
 8004aac:	bfb8      	it	lt
 8004aae:	2400      	movlt	r4, #0
 8004ab0:	2b00      	cmp	r3, #0
 8004ab2:	bfbb      	ittet	lt
 8004ab4:	9b06      	ldrlt	r3, [sp, #24]
 8004ab6:	9a02      	ldrlt	r2, [sp, #8]
 8004ab8:	9f06      	ldrge	r7, [sp, #24]
 8004aba:	1a9f      	sublt	r7, r3, r2
 8004abc:	bfac      	ite	ge
 8004abe:	9b02      	ldrge	r3, [sp, #8]
 8004ac0:	2300      	movlt	r3, #0
 8004ac2:	e73e      	b.n	8004942 <_dtoa_r+0x74a>
 8004ac4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004ac6:	9f06      	ldr	r7, [sp, #24]
 8004ac8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004aca:	e745      	b.n	8004958 <_dtoa_r+0x760>
 8004acc:	3fe00000 	.word	0x3fe00000
 8004ad0:	40240000 	.word	0x40240000
 8004ad4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004ad6:	e76a      	b.n	80049ae <_dtoa_r+0x7b6>
 8004ad8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004ada:	2b01      	cmp	r3, #1
 8004adc:	dc19      	bgt.n	8004b12 <_dtoa_r+0x91a>
 8004ade:	9b04      	ldr	r3, [sp, #16]
 8004ae0:	b9bb      	cbnz	r3, 8004b12 <_dtoa_r+0x91a>
 8004ae2:	9b05      	ldr	r3, [sp, #20]
 8004ae4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004ae8:	b99b      	cbnz	r3, 8004b12 <_dtoa_r+0x91a>
 8004aea:	9b05      	ldr	r3, [sp, #20]
 8004aec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004af0:	0d1b      	lsrs	r3, r3, #20
 8004af2:	051b      	lsls	r3, r3, #20
 8004af4:	b183      	cbz	r3, 8004b18 <_dtoa_r+0x920>
 8004af6:	f04f 0801 	mov.w	r8, #1
 8004afa:	9b06      	ldr	r3, [sp, #24]
 8004afc:	3301      	adds	r3, #1
 8004afe:	9306      	str	r3, [sp, #24]
 8004b00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b02:	3301      	adds	r3, #1
 8004b04:	9309      	str	r3, [sp, #36]	; 0x24
 8004b06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	f47f af6a 	bne.w	80049e2 <_dtoa_r+0x7ea>
 8004b0e:	2001      	movs	r0, #1
 8004b10:	e76f      	b.n	80049f2 <_dtoa_r+0x7fa>
 8004b12:	f04f 0800 	mov.w	r8, #0
 8004b16:	e7f6      	b.n	8004b06 <_dtoa_r+0x90e>
 8004b18:	4698      	mov	r8, r3
 8004b1a:	e7f4      	b.n	8004b06 <_dtoa_r+0x90e>
 8004b1c:	f43f af7d 	beq.w	8004a1a <_dtoa_r+0x822>
 8004b20:	4618      	mov	r0, r3
 8004b22:	301c      	adds	r0, #28
 8004b24:	e772      	b.n	8004a0c <_dtoa_r+0x814>
 8004b26:	9b02      	ldr	r3, [sp, #8]
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	dc36      	bgt.n	8004b9a <_dtoa_r+0x9a2>
 8004b2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004b2e:	2b02      	cmp	r3, #2
 8004b30:	dd33      	ble.n	8004b9a <_dtoa_r+0x9a2>
 8004b32:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004b36:	f1bb 0f00 	cmp.w	fp, #0
 8004b3a:	d10d      	bne.n	8004b58 <_dtoa_r+0x960>
 8004b3c:	4621      	mov	r1, r4
 8004b3e:	465b      	mov	r3, fp
 8004b40:	2205      	movs	r2, #5
 8004b42:	4628      	mov	r0, r5
 8004b44:	f000 ff5a 	bl	80059fc <__multadd>
 8004b48:	4601      	mov	r1, r0
 8004b4a:	4604      	mov	r4, r0
 8004b4c:	4650      	mov	r0, sl
 8004b4e:	f001 f9b7 	bl	8005ec0 <__mcmp>
 8004b52:	2800      	cmp	r0, #0
 8004b54:	f73f adb6 	bgt.w	80046c4 <_dtoa_r+0x4cc>
 8004b58:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004b5a:	9f08      	ldr	r7, [sp, #32]
 8004b5c:	ea6f 0903 	mvn.w	r9, r3
 8004b60:	f04f 0800 	mov.w	r8, #0
 8004b64:	4621      	mov	r1, r4
 8004b66:	4628      	mov	r0, r5
 8004b68:	f000 ff26 	bl	80059b8 <_Bfree>
 8004b6c:	2e00      	cmp	r6, #0
 8004b6e:	f43f aea4 	beq.w	80048ba <_dtoa_r+0x6c2>
 8004b72:	f1b8 0f00 	cmp.w	r8, #0
 8004b76:	d005      	beq.n	8004b84 <_dtoa_r+0x98c>
 8004b78:	45b0      	cmp	r8, r6
 8004b7a:	d003      	beq.n	8004b84 <_dtoa_r+0x98c>
 8004b7c:	4641      	mov	r1, r8
 8004b7e:	4628      	mov	r0, r5
 8004b80:	f000 ff1a 	bl	80059b8 <_Bfree>
 8004b84:	4631      	mov	r1, r6
 8004b86:	4628      	mov	r0, r5
 8004b88:	f000 ff16 	bl	80059b8 <_Bfree>
 8004b8c:	e695      	b.n	80048ba <_dtoa_r+0x6c2>
 8004b8e:	2400      	movs	r4, #0
 8004b90:	4626      	mov	r6, r4
 8004b92:	e7e1      	b.n	8004b58 <_dtoa_r+0x960>
 8004b94:	46c1      	mov	r9, r8
 8004b96:	4626      	mov	r6, r4
 8004b98:	e594      	b.n	80046c4 <_dtoa_r+0x4cc>
 8004b9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b9c:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	f000 80fc 	beq.w	8004d9e <_dtoa_r+0xba6>
 8004ba6:	2f00      	cmp	r7, #0
 8004ba8:	dd05      	ble.n	8004bb6 <_dtoa_r+0x9be>
 8004baa:	4631      	mov	r1, r6
 8004bac:	463a      	mov	r2, r7
 8004bae:	4628      	mov	r0, r5
 8004bb0:	f001 f91a 	bl	8005de8 <__lshift>
 8004bb4:	4606      	mov	r6, r0
 8004bb6:	f1b8 0f00 	cmp.w	r8, #0
 8004bba:	d05c      	beq.n	8004c76 <_dtoa_r+0xa7e>
 8004bbc:	4628      	mov	r0, r5
 8004bbe:	6871      	ldr	r1, [r6, #4]
 8004bc0:	f000 feba 	bl	8005938 <_Balloc>
 8004bc4:	4607      	mov	r7, r0
 8004bc6:	b928      	cbnz	r0, 8004bd4 <_dtoa_r+0x9dc>
 8004bc8:	4602      	mov	r2, r0
 8004bca:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004bce:	4b7e      	ldr	r3, [pc, #504]	; (8004dc8 <_dtoa_r+0xbd0>)
 8004bd0:	f7ff bb26 	b.w	8004220 <_dtoa_r+0x28>
 8004bd4:	6932      	ldr	r2, [r6, #16]
 8004bd6:	f106 010c 	add.w	r1, r6, #12
 8004bda:	3202      	adds	r2, #2
 8004bdc:	0092      	lsls	r2, r2, #2
 8004bde:	300c      	adds	r0, #12
 8004be0:	f7fd fc34 	bl	800244c <memcpy>
 8004be4:	2201      	movs	r2, #1
 8004be6:	4639      	mov	r1, r7
 8004be8:	4628      	mov	r0, r5
 8004bea:	f001 f8fd 	bl	8005de8 <__lshift>
 8004bee:	46b0      	mov	r8, r6
 8004bf0:	4606      	mov	r6, r0
 8004bf2:	9b08      	ldr	r3, [sp, #32]
 8004bf4:	3301      	adds	r3, #1
 8004bf6:	9302      	str	r3, [sp, #8]
 8004bf8:	9b08      	ldr	r3, [sp, #32]
 8004bfa:	445b      	add	r3, fp
 8004bfc:	930a      	str	r3, [sp, #40]	; 0x28
 8004bfe:	9b04      	ldr	r3, [sp, #16]
 8004c00:	f003 0301 	and.w	r3, r3, #1
 8004c04:	9309      	str	r3, [sp, #36]	; 0x24
 8004c06:	9b02      	ldr	r3, [sp, #8]
 8004c08:	4621      	mov	r1, r4
 8004c0a:	4650      	mov	r0, sl
 8004c0c:	f103 3bff 	add.w	fp, r3, #4294967295
 8004c10:	f7ff fa64 	bl	80040dc <quorem>
 8004c14:	4603      	mov	r3, r0
 8004c16:	4641      	mov	r1, r8
 8004c18:	3330      	adds	r3, #48	; 0x30
 8004c1a:	9004      	str	r0, [sp, #16]
 8004c1c:	4650      	mov	r0, sl
 8004c1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004c20:	f001 f94e 	bl	8005ec0 <__mcmp>
 8004c24:	4632      	mov	r2, r6
 8004c26:	9006      	str	r0, [sp, #24]
 8004c28:	4621      	mov	r1, r4
 8004c2a:	4628      	mov	r0, r5
 8004c2c:	f001 f964 	bl	8005ef8 <__mdiff>
 8004c30:	68c2      	ldr	r2, [r0, #12]
 8004c32:	4607      	mov	r7, r0
 8004c34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c36:	bb02      	cbnz	r2, 8004c7a <_dtoa_r+0xa82>
 8004c38:	4601      	mov	r1, r0
 8004c3a:	4650      	mov	r0, sl
 8004c3c:	f001 f940 	bl	8005ec0 <__mcmp>
 8004c40:	4602      	mov	r2, r0
 8004c42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c44:	4639      	mov	r1, r7
 8004c46:	4628      	mov	r0, r5
 8004c48:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8004c4c:	f000 feb4 	bl	80059b8 <_Bfree>
 8004c50:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004c52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004c54:	9f02      	ldr	r7, [sp, #8]
 8004c56:	ea43 0102 	orr.w	r1, r3, r2
 8004c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c5c:	430b      	orrs	r3, r1
 8004c5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c60:	d10d      	bne.n	8004c7e <_dtoa_r+0xa86>
 8004c62:	2b39      	cmp	r3, #57	; 0x39
 8004c64:	d027      	beq.n	8004cb6 <_dtoa_r+0xabe>
 8004c66:	9a06      	ldr	r2, [sp, #24]
 8004c68:	2a00      	cmp	r2, #0
 8004c6a:	dd01      	ble.n	8004c70 <_dtoa_r+0xa78>
 8004c6c:	9b04      	ldr	r3, [sp, #16]
 8004c6e:	3331      	adds	r3, #49	; 0x31
 8004c70:	f88b 3000 	strb.w	r3, [fp]
 8004c74:	e776      	b.n	8004b64 <_dtoa_r+0x96c>
 8004c76:	4630      	mov	r0, r6
 8004c78:	e7b9      	b.n	8004bee <_dtoa_r+0x9f6>
 8004c7a:	2201      	movs	r2, #1
 8004c7c:	e7e2      	b.n	8004c44 <_dtoa_r+0xa4c>
 8004c7e:	9906      	ldr	r1, [sp, #24]
 8004c80:	2900      	cmp	r1, #0
 8004c82:	db04      	blt.n	8004c8e <_dtoa_r+0xa96>
 8004c84:	9822      	ldr	r0, [sp, #136]	; 0x88
 8004c86:	4301      	orrs	r1, r0
 8004c88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c8a:	4301      	orrs	r1, r0
 8004c8c:	d120      	bne.n	8004cd0 <_dtoa_r+0xad8>
 8004c8e:	2a00      	cmp	r2, #0
 8004c90:	ddee      	ble.n	8004c70 <_dtoa_r+0xa78>
 8004c92:	4651      	mov	r1, sl
 8004c94:	2201      	movs	r2, #1
 8004c96:	4628      	mov	r0, r5
 8004c98:	9302      	str	r3, [sp, #8]
 8004c9a:	f001 f8a5 	bl	8005de8 <__lshift>
 8004c9e:	4621      	mov	r1, r4
 8004ca0:	4682      	mov	sl, r0
 8004ca2:	f001 f90d 	bl	8005ec0 <__mcmp>
 8004ca6:	2800      	cmp	r0, #0
 8004ca8:	9b02      	ldr	r3, [sp, #8]
 8004caa:	dc02      	bgt.n	8004cb2 <_dtoa_r+0xaba>
 8004cac:	d1e0      	bne.n	8004c70 <_dtoa_r+0xa78>
 8004cae:	07da      	lsls	r2, r3, #31
 8004cb0:	d5de      	bpl.n	8004c70 <_dtoa_r+0xa78>
 8004cb2:	2b39      	cmp	r3, #57	; 0x39
 8004cb4:	d1da      	bne.n	8004c6c <_dtoa_r+0xa74>
 8004cb6:	2339      	movs	r3, #57	; 0x39
 8004cb8:	f88b 3000 	strb.w	r3, [fp]
 8004cbc:	463b      	mov	r3, r7
 8004cbe:	461f      	mov	r7, r3
 8004cc0:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8004cc4:	3b01      	subs	r3, #1
 8004cc6:	2a39      	cmp	r2, #57	; 0x39
 8004cc8:	d050      	beq.n	8004d6c <_dtoa_r+0xb74>
 8004cca:	3201      	adds	r2, #1
 8004ccc:	701a      	strb	r2, [r3, #0]
 8004cce:	e749      	b.n	8004b64 <_dtoa_r+0x96c>
 8004cd0:	2a00      	cmp	r2, #0
 8004cd2:	dd03      	ble.n	8004cdc <_dtoa_r+0xae4>
 8004cd4:	2b39      	cmp	r3, #57	; 0x39
 8004cd6:	d0ee      	beq.n	8004cb6 <_dtoa_r+0xabe>
 8004cd8:	3301      	adds	r3, #1
 8004cda:	e7c9      	b.n	8004c70 <_dtoa_r+0xa78>
 8004cdc:	9a02      	ldr	r2, [sp, #8]
 8004cde:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004ce0:	f802 3c01 	strb.w	r3, [r2, #-1]
 8004ce4:	428a      	cmp	r2, r1
 8004ce6:	d02a      	beq.n	8004d3e <_dtoa_r+0xb46>
 8004ce8:	4651      	mov	r1, sl
 8004cea:	2300      	movs	r3, #0
 8004cec:	220a      	movs	r2, #10
 8004cee:	4628      	mov	r0, r5
 8004cf0:	f000 fe84 	bl	80059fc <__multadd>
 8004cf4:	45b0      	cmp	r8, r6
 8004cf6:	4682      	mov	sl, r0
 8004cf8:	f04f 0300 	mov.w	r3, #0
 8004cfc:	f04f 020a 	mov.w	r2, #10
 8004d00:	4641      	mov	r1, r8
 8004d02:	4628      	mov	r0, r5
 8004d04:	d107      	bne.n	8004d16 <_dtoa_r+0xb1e>
 8004d06:	f000 fe79 	bl	80059fc <__multadd>
 8004d0a:	4680      	mov	r8, r0
 8004d0c:	4606      	mov	r6, r0
 8004d0e:	9b02      	ldr	r3, [sp, #8]
 8004d10:	3301      	adds	r3, #1
 8004d12:	9302      	str	r3, [sp, #8]
 8004d14:	e777      	b.n	8004c06 <_dtoa_r+0xa0e>
 8004d16:	f000 fe71 	bl	80059fc <__multadd>
 8004d1a:	4631      	mov	r1, r6
 8004d1c:	4680      	mov	r8, r0
 8004d1e:	2300      	movs	r3, #0
 8004d20:	220a      	movs	r2, #10
 8004d22:	4628      	mov	r0, r5
 8004d24:	f000 fe6a 	bl	80059fc <__multadd>
 8004d28:	4606      	mov	r6, r0
 8004d2a:	e7f0      	b.n	8004d0e <_dtoa_r+0xb16>
 8004d2c:	f1bb 0f00 	cmp.w	fp, #0
 8004d30:	bfcc      	ite	gt
 8004d32:	465f      	movgt	r7, fp
 8004d34:	2701      	movle	r7, #1
 8004d36:	f04f 0800 	mov.w	r8, #0
 8004d3a:	9a08      	ldr	r2, [sp, #32]
 8004d3c:	4417      	add	r7, r2
 8004d3e:	4651      	mov	r1, sl
 8004d40:	2201      	movs	r2, #1
 8004d42:	4628      	mov	r0, r5
 8004d44:	9302      	str	r3, [sp, #8]
 8004d46:	f001 f84f 	bl	8005de8 <__lshift>
 8004d4a:	4621      	mov	r1, r4
 8004d4c:	4682      	mov	sl, r0
 8004d4e:	f001 f8b7 	bl	8005ec0 <__mcmp>
 8004d52:	2800      	cmp	r0, #0
 8004d54:	dcb2      	bgt.n	8004cbc <_dtoa_r+0xac4>
 8004d56:	d102      	bne.n	8004d5e <_dtoa_r+0xb66>
 8004d58:	9b02      	ldr	r3, [sp, #8]
 8004d5a:	07db      	lsls	r3, r3, #31
 8004d5c:	d4ae      	bmi.n	8004cbc <_dtoa_r+0xac4>
 8004d5e:	463b      	mov	r3, r7
 8004d60:	461f      	mov	r7, r3
 8004d62:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004d66:	2a30      	cmp	r2, #48	; 0x30
 8004d68:	d0fa      	beq.n	8004d60 <_dtoa_r+0xb68>
 8004d6a:	e6fb      	b.n	8004b64 <_dtoa_r+0x96c>
 8004d6c:	9a08      	ldr	r2, [sp, #32]
 8004d6e:	429a      	cmp	r2, r3
 8004d70:	d1a5      	bne.n	8004cbe <_dtoa_r+0xac6>
 8004d72:	2331      	movs	r3, #49	; 0x31
 8004d74:	f109 0901 	add.w	r9, r9, #1
 8004d78:	7013      	strb	r3, [r2, #0]
 8004d7a:	e6f3      	b.n	8004b64 <_dtoa_r+0x96c>
 8004d7c:	4b13      	ldr	r3, [pc, #76]	; (8004dcc <_dtoa_r+0xbd4>)
 8004d7e:	f7ff baa7 	b.w	80042d0 <_dtoa_r+0xd8>
 8004d82:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	f47f aa80 	bne.w	800428a <_dtoa_r+0x92>
 8004d8a:	4b11      	ldr	r3, [pc, #68]	; (8004dd0 <_dtoa_r+0xbd8>)
 8004d8c:	f7ff baa0 	b.w	80042d0 <_dtoa_r+0xd8>
 8004d90:	f1bb 0f00 	cmp.w	fp, #0
 8004d94:	dc03      	bgt.n	8004d9e <_dtoa_r+0xba6>
 8004d96:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d98:	2b02      	cmp	r3, #2
 8004d9a:	f73f aecc 	bgt.w	8004b36 <_dtoa_r+0x93e>
 8004d9e:	9f08      	ldr	r7, [sp, #32]
 8004da0:	4621      	mov	r1, r4
 8004da2:	4650      	mov	r0, sl
 8004da4:	f7ff f99a 	bl	80040dc <quorem>
 8004da8:	9a08      	ldr	r2, [sp, #32]
 8004daa:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8004dae:	f807 3b01 	strb.w	r3, [r7], #1
 8004db2:	1aba      	subs	r2, r7, r2
 8004db4:	4593      	cmp	fp, r2
 8004db6:	ddb9      	ble.n	8004d2c <_dtoa_r+0xb34>
 8004db8:	4651      	mov	r1, sl
 8004dba:	2300      	movs	r3, #0
 8004dbc:	220a      	movs	r2, #10
 8004dbe:	4628      	mov	r0, r5
 8004dc0:	f000 fe1c 	bl	80059fc <__multadd>
 8004dc4:	4682      	mov	sl, r0
 8004dc6:	e7eb      	b.n	8004da0 <_dtoa_r+0xba8>
 8004dc8:	0800764c 	.word	0x0800764c
 8004dcc:	08007448 	.word	0x08007448
 8004dd0:	080075c9 	.word	0x080075c9

08004dd4 <__sflush_r>:
 8004dd4:	898a      	ldrh	r2, [r1, #12]
 8004dd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004dda:	4605      	mov	r5, r0
 8004ddc:	0710      	lsls	r0, r2, #28
 8004dde:	460c      	mov	r4, r1
 8004de0:	d458      	bmi.n	8004e94 <__sflush_r+0xc0>
 8004de2:	684b      	ldr	r3, [r1, #4]
 8004de4:	2b00      	cmp	r3, #0
 8004de6:	dc05      	bgt.n	8004df4 <__sflush_r+0x20>
 8004de8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	dc02      	bgt.n	8004df4 <__sflush_r+0x20>
 8004dee:	2000      	movs	r0, #0
 8004df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004df4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004df6:	2e00      	cmp	r6, #0
 8004df8:	d0f9      	beq.n	8004dee <__sflush_r+0x1a>
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004e00:	682f      	ldr	r7, [r5, #0]
 8004e02:	602b      	str	r3, [r5, #0]
 8004e04:	d032      	beq.n	8004e6c <__sflush_r+0x98>
 8004e06:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004e08:	89a3      	ldrh	r3, [r4, #12]
 8004e0a:	075a      	lsls	r2, r3, #29
 8004e0c:	d505      	bpl.n	8004e1a <__sflush_r+0x46>
 8004e0e:	6863      	ldr	r3, [r4, #4]
 8004e10:	1ac0      	subs	r0, r0, r3
 8004e12:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004e14:	b10b      	cbz	r3, 8004e1a <__sflush_r+0x46>
 8004e16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004e18:	1ac0      	subs	r0, r0, r3
 8004e1a:	2300      	movs	r3, #0
 8004e1c:	4602      	mov	r2, r0
 8004e1e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004e20:	4628      	mov	r0, r5
 8004e22:	6a21      	ldr	r1, [r4, #32]
 8004e24:	47b0      	blx	r6
 8004e26:	1c43      	adds	r3, r0, #1
 8004e28:	89a3      	ldrh	r3, [r4, #12]
 8004e2a:	d106      	bne.n	8004e3a <__sflush_r+0x66>
 8004e2c:	6829      	ldr	r1, [r5, #0]
 8004e2e:	291d      	cmp	r1, #29
 8004e30:	d82c      	bhi.n	8004e8c <__sflush_r+0xb8>
 8004e32:	4a2a      	ldr	r2, [pc, #168]	; (8004edc <__sflush_r+0x108>)
 8004e34:	40ca      	lsrs	r2, r1
 8004e36:	07d6      	lsls	r6, r2, #31
 8004e38:	d528      	bpl.n	8004e8c <__sflush_r+0xb8>
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	6062      	str	r2, [r4, #4]
 8004e3e:	6922      	ldr	r2, [r4, #16]
 8004e40:	04d9      	lsls	r1, r3, #19
 8004e42:	6022      	str	r2, [r4, #0]
 8004e44:	d504      	bpl.n	8004e50 <__sflush_r+0x7c>
 8004e46:	1c42      	adds	r2, r0, #1
 8004e48:	d101      	bne.n	8004e4e <__sflush_r+0x7a>
 8004e4a:	682b      	ldr	r3, [r5, #0]
 8004e4c:	b903      	cbnz	r3, 8004e50 <__sflush_r+0x7c>
 8004e4e:	6560      	str	r0, [r4, #84]	; 0x54
 8004e50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004e52:	602f      	str	r7, [r5, #0]
 8004e54:	2900      	cmp	r1, #0
 8004e56:	d0ca      	beq.n	8004dee <__sflush_r+0x1a>
 8004e58:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004e5c:	4299      	cmp	r1, r3
 8004e5e:	d002      	beq.n	8004e66 <__sflush_r+0x92>
 8004e60:	4628      	mov	r0, r5
 8004e62:	f001 fa2f 	bl	80062c4 <_free_r>
 8004e66:	2000      	movs	r0, #0
 8004e68:	6360      	str	r0, [r4, #52]	; 0x34
 8004e6a:	e7c1      	b.n	8004df0 <__sflush_r+0x1c>
 8004e6c:	6a21      	ldr	r1, [r4, #32]
 8004e6e:	2301      	movs	r3, #1
 8004e70:	4628      	mov	r0, r5
 8004e72:	47b0      	blx	r6
 8004e74:	1c41      	adds	r1, r0, #1
 8004e76:	d1c7      	bne.n	8004e08 <__sflush_r+0x34>
 8004e78:	682b      	ldr	r3, [r5, #0]
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d0c4      	beq.n	8004e08 <__sflush_r+0x34>
 8004e7e:	2b1d      	cmp	r3, #29
 8004e80:	d001      	beq.n	8004e86 <__sflush_r+0xb2>
 8004e82:	2b16      	cmp	r3, #22
 8004e84:	d101      	bne.n	8004e8a <__sflush_r+0xb6>
 8004e86:	602f      	str	r7, [r5, #0]
 8004e88:	e7b1      	b.n	8004dee <__sflush_r+0x1a>
 8004e8a:	89a3      	ldrh	r3, [r4, #12]
 8004e8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004e90:	81a3      	strh	r3, [r4, #12]
 8004e92:	e7ad      	b.n	8004df0 <__sflush_r+0x1c>
 8004e94:	690f      	ldr	r7, [r1, #16]
 8004e96:	2f00      	cmp	r7, #0
 8004e98:	d0a9      	beq.n	8004dee <__sflush_r+0x1a>
 8004e9a:	0793      	lsls	r3, r2, #30
 8004e9c:	bf18      	it	ne
 8004e9e:	2300      	movne	r3, #0
 8004ea0:	680e      	ldr	r6, [r1, #0]
 8004ea2:	bf08      	it	eq
 8004ea4:	694b      	ldreq	r3, [r1, #20]
 8004ea6:	eba6 0807 	sub.w	r8, r6, r7
 8004eaa:	600f      	str	r7, [r1, #0]
 8004eac:	608b      	str	r3, [r1, #8]
 8004eae:	f1b8 0f00 	cmp.w	r8, #0
 8004eb2:	dd9c      	ble.n	8004dee <__sflush_r+0x1a>
 8004eb4:	4643      	mov	r3, r8
 8004eb6:	463a      	mov	r2, r7
 8004eb8:	4628      	mov	r0, r5
 8004eba:	6a21      	ldr	r1, [r4, #32]
 8004ebc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004ebe:	47b0      	blx	r6
 8004ec0:	2800      	cmp	r0, #0
 8004ec2:	dc06      	bgt.n	8004ed2 <__sflush_r+0xfe>
 8004ec4:	89a3      	ldrh	r3, [r4, #12]
 8004ec6:	f04f 30ff 	mov.w	r0, #4294967295
 8004eca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ece:	81a3      	strh	r3, [r4, #12]
 8004ed0:	e78e      	b.n	8004df0 <__sflush_r+0x1c>
 8004ed2:	4407      	add	r7, r0
 8004ed4:	eba8 0800 	sub.w	r8, r8, r0
 8004ed8:	e7e9      	b.n	8004eae <__sflush_r+0xda>
 8004eda:	bf00      	nop
 8004edc:	20400001 	.word	0x20400001

08004ee0 <_fflush_r>:
 8004ee0:	b538      	push	{r3, r4, r5, lr}
 8004ee2:	690b      	ldr	r3, [r1, #16]
 8004ee4:	4605      	mov	r5, r0
 8004ee6:	460c      	mov	r4, r1
 8004ee8:	b913      	cbnz	r3, 8004ef0 <_fflush_r+0x10>
 8004eea:	2500      	movs	r5, #0
 8004eec:	4628      	mov	r0, r5
 8004eee:	bd38      	pop	{r3, r4, r5, pc}
 8004ef0:	b118      	cbz	r0, 8004efa <_fflush_r+0x1a>
 8004ef2:	6983      	ldr	r3, [r0, #24]
 8004ef4:	b90b      	cbnz	r3, 8004efa <_fflush_r+0x1a>
 8004ef6:	f000 f887 	bl	8005008 <__sinit>
 8004efa:	4b14      	ldr	r3, [pc, #80]	; (8004f4c <_fflush_r+0x6c>)
 8004efc:	429c      	cmp	r4, r3
 8004efe:	d11b      	bne.n	8004f38 <_fflush_r+0x58>
 8004f00:	686c      	ldr	r4, [r5, #4]
 8004f02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d0ef      	beq.n	8004eea <_fflush_r+0xa>
 8004f0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004f0c:	07d0      	lsls	r0, r2, #31
 8004f0e:	d404      	bmi.n	8004f1a <_fflush_r+0x3a>
 8004f10:	0599      	lsls	r1, r3, #22
 8004f12:	d402      	bmi.n	8004f1a <_fflush_r+0x3a>
 8004f14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004f16:	f000 fc80 	bl	800581a <__retarget_lock_acquire_recursive>
 8004f1a:	4628      	mov	r0, r5
 8004f1c:	4621      	mov	r1, r4
 8004f1e:	f7ff ff59 	bl	8004dd4 <__sflush_r>
 8004f22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004f24:	4605      	mov	r5, r0
 8004f26:	07da      	lsls	r2, r3, #31
 8004f28:	d4e0      	bmi.n	8004eec <_fflush_r+0xc>
 8004f2a:	89a3      	ldrh	r3, [r4, #12]
 8004f2c:	059b      	lsls	r3, r3, #22
 8004f2e:	d4dd      	bmi.n	8004eec <_fflush_r+0xc>
 8004f30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004f32:	f000 fc73 	bl	800581c <__retarget_lock_release_recursive>
 8004f36:	e7d9      	b.n	8004eec <_fflush_r+0xc>
 8004f38:	4b05      	ldr	r3, [pc, #20]	; (8004f50 <_fflush_r+0x70>)
 8004f3a:	429c      	cmp	r4, r3
 8004f3c:	d101      	bne.n	8004f42 <_fflush_r+0x62>
 8004f3e:	68ac      	ldr	r4, [r5, #8]
 8004f40:	e7df      	b.n	8004f02 <_fflush_r+0x22>
 8004f42:	4b04      	ldr	r3, [pc, #16]	; (8004f54 <_fflush_r+0x74>)
 8004f44:	429c      	cmp	r4, r3
 8004f46:	bf08      	it	eq
 8004f48:	68ec      	ldreq	r4, [r5, #12]
 8004f4a:	e7da      	b.n	8004f02 <_fflush_r+0x22>
 8004f4c:	08007680 	.word	0x08007680
 8004f50:	080076a0 	.word	0x080076a0
 8004f54:	08007660 	.word	0x08007660

08004f58 <std>:
 8004f58:	2300      	movs	r3, #0
 8004f5a:	b510      	push	{r4, lr}
 8004f5c:	4604      	mov	r4, r0
 8004f5e:	e9c0 3300 	strd	r3, r3, [r0]
 8004f62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004f66:	6083      	str	r3, [r0, #8]
 8004f68:	8181      	strh	r1, [r0, #12]
 8004f6a:	6643      	str	r3, [r0, #100]	; 0x64
 8004f6c:	81c2      	strh	r2, [r0, #14]
 8004f6e:	6183      	str	r3, [r0, #24]
 8004f70:	4619      	mov	r1, r3
 8004f72:	2208      	movs	r2, #8
 8004f74:	305c      	adds	r0, #92	; 0x5c
 8004f76:	f7fd fa77 	bl	8002468 <memset>
 8004f7a:	4b05      	ldr	r3, [pc, #20]	; (8004f90 <std+0x38>)
 8004f7c:	6224      	str	r4, [r4, #32]
 8004f7e:	6263      	str	r3, [r4, #36]	; 0x24
 8004f80:	4b04      	ldr	r3, [pc, #16]	; (8004f94 <std+0x3c>)
 8004f82:	62a3      	str	r3, [r4, #40]	; 0x28
 8004f84:	4b04      	ldr	r3, [pc, #16]	; (8004f98 <std+0x40>)
 8004f86:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004f88:	4b04      	ldr	r3, [pc, #16]	; (8004f9c <std+0x44>)
 8004f8a:	6323      	str	r3, [r4, #48]	; 0x30
 8004f8c:	bd10      	pop	{r4, pc}
 8004f8e:	bf00      	nop
 8004f90:	080066f5 	.word	0x080066f5
 8004f94:	08006717 	.word	0x08006717
 8004f98:	0800674f 	.word	0x0800674f
 8004f9c:	08006773 	.word	0x08006773

08004fa0 <_cleanup_r>:
 8004fa0:	4901      	ldr	r1, [pc, #4]	; (8004fa8 <_cleanup_r+0x8>)
 8004fa2:	f000 b8af 	b.w	8005104 <_fwalk_reent>
 8004fa6:	bf00      	nop
 8004fa8:	08004ee1 	.word	0x08004ee1

08004fac <__sfmoreglue>:
 8004fac:	b570      	push	{r4, r5, r6, lr}
 8004fae:	2568      	movs	r5, #104	; 0x68
 8004fb0:	1e4a      	subs	r2, r1, #1
 8004fb2:	4355      	muls	r5, r2
 8004fb4:	460e      	mov	r6, r1
 8004fb6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004fba:	f001 f9cf 	bl	800635c <_malloc_r>
 8004fbe:	4604      	mov	r4, r0
 8004fc0:	b140      	cbz	r0, 8004fd4 <__sfmoreglue+0x28>
 8004fc2:	2100      	movs	r1, #0
 8004fc4:	e9c0 1600 	strd	r1, r6, [r0]
 8004fc8:	300c      	adds	r0, #12
 8004fca:	60a0      	str	r0, [r4, #8]
 8004fcc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004fd0:	f7fd fa4a 	bl	8002468 <memset>
 8004fd4:	4620      	mov	r0, r4
 8004fd6:	bd70      	pop	{r4, r5, r6, pc}

08004fd8 <__sfp_lock_acquire>:
 8004fd8:	4801      	ldr	r0, [pc, #4]	; (8004fe0 <__sfp_lock_acquire+0x8>)
 8004fda:	f000 bc1e 	b.w	800581a <__retarget_lock_acquire_recursive>
 8004fde:	bf00      	nop
 8004fe0:	20000885 	.word	0x20000885

08004fe4 <__sfp_lock_release>:
 8004fe4:	4801      	ldr	r0, [pc, #4]	; (8004fec <__sfp_lock_release+0x8>)
 8004fe6:	f000 bc19 	b.w	800581c <__retarget_lock_release_recursive>
 8004fea:	bf00      	nop
 8004fec:	20000885 	.word	0x20000885

08004ff0 <__sinit_lock_acquire>:
 8004ff0:	4801      	ldr	r0, [pc, #4]	; (8004ff8 <__sinit_lock_acquire+0x8>)
 8004ff2:	f000 bc12 	b.w	800581a <__retarget_lock_acquire_recursive>
 8004ff6:	bf00      	nop
 8004ff8:	20000880 	.word	0x20000880

08004ffc <__sinit_lock_release>:
 8004ffc:	4801      	ldr	r0, [pc, #4]	; (8005004 <__sinit_lock_release+0x8>)
 8004ffe:	f000 bc0d 	b.w	800581c <__retarget_lock_release_recursive>
 8005002:	bf00      	nop
 8005004:	20000880 	.word	0x20000880

08005008 <__sinit>:
 8005008:	b510      	push	{r4, lr}
 800500a:	4604      	mov	r4, r0
 800500c:	f7ff fff0 	bl	8004ff0 <__sinit_lock_acquire>
 8005010:	69a3      	ldr	r3, [r4, #24]
 8005012:	b11b      	cbz	r3, 800501c <__sinit+0x14>
 8005014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005018:	f7ff bff0 	b.w	8004ffc <__sinit_lock_release>
 800501c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8005020:	6523      	str	r3, [r4, #80]	; 0x50
 8005022:	4b13      	ldr	r3, [pc, #76]	; (8005070 <__sinit+0x68>)
 8005024:	4a13      	ldr	r2, [pc, #76]	; (8005074 <__sinit+0x6c>)
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	62a2      	str	r2, [r4, #40]	; 0x28
 800502a:	42a3      	cmp	r3, r4
 800502c:	bf08      	it	eq
 800502e:	2301      	moveq	r3, #1
 8005030:	4620      	mov	r0, r4
 8005032:	bf08      	it	eq
 8005034:	61a3      	streq	r3, [r4, #24]
 8005036:	f000 f81f 	bl	8005078 <__sfp>
 800503a:	6060      	str	r0, [r4, #4]
 800503c:	4620      	mov	r0, r4
 800503e:	f000 f81b 	bl	8005078 <__sfp>
 8005042:	60a0      	str	r0, [r4, #8]
 8005044:	4620      	mov	r0, r4
 8005046:	f000 f817 	bl	8005078 <__sfp>
 800504a:	2200      	movs	r2, #0
 800504c:	2104      	movs	r1, #4
 800504e:	60e0      	str	r0, [r4, #12]
 8005050:	6860      	ldr	r0, [r4, #4]
 8005052:	f7ff ff81 	bl	8004f58 <std>
 8005056:	2201      	movs	r2, #1
 8005058:	2109      	movs	r1, #9
 800505a:	68a0      	ldr	r0, [r4, #8]
 800505c:	f7ff ff7c 	bl	8004f58 <std>
 8005060:	2202      	movs	r2, #2
 8005062:	2112      	movs	r1, #18
 8005064:	68e0      	ldr	r0, [r4, #12]
 8005066:	f7ff ff77 	bl	8004f58 <std>
 800506a:	2301      	movs	r3, #1
 800506c:	61a3      	str	r3, [r4, #24]
 800506e:	e7d1      	b.n	8005014 <__sinit+0xc>
 8005070:	08007434 	.word	0x08007434
 8005074:	08004fa1 	.word	0x08004fa1

08005078 <__sfp>:
 8005078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800507a:	4607      	mov	r7, r0
 800507c:	f7ff ffac 	bl	8004fd8 <__sfp_lock_acquire>
 8005080:	4b1e      	ldr	r3, [pc, #120]	; (80050fc <__sfp+0x84>)
 8005082:	681e      	ldr	r6, [r3, #0]
 8005084:	69b3      	ldr	r3, [r6, #24]
 8005086:	b913      	cbnz	r3, 800508e <__sfp+0x16>
 8005088:	4630      	mov	r0, r6
 800508a:	f7ff ffbd 	bl	8005008 <__sinit>
 800508e:	3648      	adds	r6, #72	; 0x48
 8005090:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005094:	3b01      	subs	r3, #1
 8005096:	d503      	bpl.n	80050a0 <__sfp+0x28>
 8005098:	6833      	ldr	r3, [r6, #0]
 800509a:	b30b      	cbz	r3, 80050e0 <__sfp+0x68>
 800509c:	6836      	ldr	r6, [r6, #0]
 800509e:	e7f7      	b.n	8005090 <__sfp+0x18>
 80050a0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80050a4:	b9d5      	cbnz	r5, 80050dc <__sfp+0x64>
 80050a6:	4b16      	ldr	r3, [pc, #88]	; (8005100 <__sfp+0x88>)
 80050a8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80050ac:	60e3      	str	r3, [r4, #12]
 80050ae:	6665      	str	r5, [r4, #100]	; 0x64
 80050b0:	f000 fbb2 	bl	8005818 <__retarget_lock_init_recursive>
 80050b4:	f7ff ff96 	bl	8004fe4 <__sfp_lock_release>
 80050b8:	2208      	movs	r2, #8
 80050ba:	4629      	mov	r1, r5
 80050bc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80050c0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80050c4:	6025      	str	r5, [r4, #0]
 80050c6:	61a5      	str	r5, [r4, #24]
 80050c8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80050cc:	f7fd f9cc 	bl	8002468 <memset>
 80050d0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80050d4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80050d8:	4620      	mov	r0, r4
 80050da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80050dc:	3468      	adds	r4, #104	; 0x68
 80050de:	e7d9      	b.n	8005094 <__sfp+0x1c>
 80050e0:	2104      	movs	r1, #4
 80050e2:	4638      	mov	r0, r7
 80050e4:	f7ff ff62 	bl	8004fac <__sfmoreglue>
 80050e8:	4604      	mov	r4, r0
 80050ea:	6030      	str	r0, [r6, #0]
 80050ec:	2800      	cmp	r0, #0
 80050ee:	d1d5      	bne.n	800509c <__sfp+0x24>
 80050f0:	f7ff ff78 	bl	8004fe4 <__sfp_lock_release>
 80050f4:	230c      	movs	r3, #12
 80050f6:	603b      	str	r3, [r7, #0]
 80050f8:	e7ee      	b.n	80050d8 <__sfp+0x60>
 80050fa:	bf00      	nop
 80050fc:	08007434 	.word	0x08007434
 8005100:	ffff0001 	.word	0xffff0001

08005104 <_fwalk_reent>:
 8005104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005108:	4606      	mov	r6, r0
 800510a:	4688      	mov	r8, r1
 800510c:	2700      	movs	r7, #0
 800510e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005112:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005116:	f1b9 0901 	subs.w	r9, r9, #1
 800511a:	d505      	bpl.n	8005128 <_fwalk_reent+0x24>
 800511c:	6824      	ldr	r4, [r4, #0]
 800511e:	2c00      	cmp	r4, #0
 8005120:	d1f7      	bne.n	8005112 <_fwalk_reent+0xe>
 8005122:	4638      	mov	r0, r7
 8005124:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005128:	89ab      	ldrh	r3, [r5, #12]
 800512a:	2b01      	cmp	r3, #1
 800512c:	d907      	bls.n	800513e <_fwalk_reent+0x3a>
 800512e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005132:	3301      	adds	r3, #1
 8005134:	d003      	beq.n	800513e <_fwalk_reent+0x3a>
 8005136:	4629      	mov	r1, r5
 8005138:	4630      	mov	r0, r6
 800513a:	47c0      	blx	r8
 800513c:	4307      	orrs	r7, r0
 800513e:	3568      	adds	r5, #104	; 0x68
 8005140:	e7e9      	b.n	8005116 <_fwalk_reent+0x12>

08005142 <rshift>:
 8005142:	6903      	ldr	r3, [r0, #16]
 8005144:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005148:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800514c:	f100 0414 	add.w	r4, r0, #20
 8005150:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005154:	dd46      	ble.n	80051e4 <rshift+0xa2>
 8005156:	f011 011f 	ands.w	r1, r1, #31
 800515a:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800515e:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005162:	d10c      	bne.n	800517e <rshift+0x3c>
 8005164:	4629      	mov	r1, r5
 8005166:	f100 0710 	add.w	r7, r0, #16
 800516a:	42b1      	cmp	r1, r6
 800516c:	d335      	bcc.n	80051da <rshift+0x98>
 800516e:	1a9b      	subs	r3, r3, r2
 8005170:	009b      	lsls	r3, r3, #2
 8005172:	1eea      	subs	r2, r5, #3
 8005174:	4296      	cmp	r6, r2
 8005176:	bf38      	it	cc
 8005178:	2300      	movcc	r3, #0
 800517a:	4423      	add	r3, r4
 800517c:	e015      	b.n	80051aa <rshift+0x68>
 800517e:	46a1      	mov	r9, r4
 8005180:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005184:	f1c1 0820 	rsb	r8, r1, #32
 8005188:	40cf      	lsrs	r7, r1
 800518a:	f105 0e04 	add.w	lr, r5, #4
 800518e:	4576      	cmp	r6, lr
 8005190:	46f4      	mov	ip, lr
 8005192:	d816      	bhi.n	80051c2 <rshift+0x80>
 8005194:	1a9b      	subs	r3, r3, r2
 8005196:	009a      	lsls	r2, r3, #2
 8005198:	3a04      	subs	r2, #4
 800519a:	3501      	adds	r5, #1
 800519c:	42ae      	cmp	r6, r5
 800519e:	bf38      	it	cc
 80051a0:	2200      	movcc	r2, #0
 80051a2:	18a3      	adds	r3, r4, r2
 80051a4:	50a7      	str	r7, [r4, r2]
 80051a6:	b107      	cbz	r7, 80051aa <rshift+0x68>
 80051a8:	3304      	adds	r3, #4
 80051aa:	42a3      	cmp	r3, r4
 80051ac:	eba3 0204 	sub.w	r2, r3, r4
 80051b0:	bf08      	it	eq
 80051b2:	2300      	moveq	r3, #0
 80051b4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80051b8:	6102      	str	r2, [r0, #16]
 80051ba:	bf08      	it	eq
 80051bc:	6143      	streq	r3, [r0, #20]
 80051be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80051c2:	f8dc c000 	ldr.w	ip, [ip]
 80051c6:	fa0c fc08 	lsl.w	ip, ip, r8
 80051ca:	ea4c 0707 	orr.w	r7, ip, r7
 80051ce:	f849 7b04 	str.w	r7, [r9], #4
 80051d2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80051d6:	40cf      	lsrs	r7, r1
 80051d8:	e7d9      	b.n	800518e <rshift+0x4c>
 80051da:	f851 cb04 	ldr.w	ip, [r1], #4
 80051de:	f847 cf04 	str.w	ip, [r7, #4]!
 80051e2:	e7c2      	b.n	800516a <rshift+0x28>
 80051e4:	4623      	mov	r3, r4
 80051e6:	e7e0      	b.n	80051aa <rshift+0x68>

080051e8 <__hexdig_fun>:
 80051e8:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80051ec:	2b09      	cmp	r3, #9
 80051ee:	d802      	bhi.n	80051f6 <__hexdig_fun+0xe>
 80051f0:	3820      	subs	r0, #32
 80051f2:	b2c0      	uxtb	r0, r0
 80051f4:	4770      	bx	lr
 80051f6:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80051fa:	2b05      	cmp	r3, #5
 80051fc:	d801      	bhi.n	8005202 <__hexdig_fun+0x1a>
 80051fe:	3847      	subs	r0, #71	; 0x47
 8005200:	e7f7      	b.n	80051f2 <__hexdig_fun+0xa>
 8005202:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005206:	2b05      	cmp	r3, #5
 8005208:	d801      	bhi.n	800520e <__hexdig_fun+0x26>
 800520a:	3827      	subs	r0, #39	; 0x27
 800520c:	e7f1      	b.n	80051f2 <__hexdig_fun+0xa>
 800520e:	2000      	movs	r0, #0
 8005210:	4770      	bx	lr
	...

08005214 <__gethex>:
 8005214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005218:	b08b      	sub	sp, #44	; 0x2c
 800521a:	9306      	str	r3, [sp, #24]
 800521c:	4bb9      	ldr	r3, [pc, #740]	; (8005504 <__gethex+0x2f0>)
 800521e:	9002      	str	r0, [sp, #8]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	468b      	mov	fp, r1
 8005224:	4618      	mov	r0, r3
 8005226:	4690      	mov	r8, r2
 8005228:	9303      	str	r3, [sp, #12]
 800522a:	f7fa ffa1 	bl	8000170 <strlen>
 800522e:	4682      	mov	sl, r0
 8005230:	9b03      	ldr	r3, [sp, #12]
 8005232:	f8db 2000 	ldr.w	r2, [fp]
 8005236:	4403      	add	r3, r0
 8005238:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800523c:	9307      	str	r3, [sp, #28]
 800523e:	1c93      	adds	r3, r2, #2
 8005240:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005244:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005248:	32fe      	adds	r2, #254	; 0xfe
 800524a:	18d1      	adds	r1, r2, r3
 800524c:	461f      	mov	r7, r3
 800524e:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005252:	9101      	str	r1, [sp, #4]
 8005254:	2830      	cmp	r0, #48	; 0x30
 8005256:	d0f8      	beq.n	800524a <__gethex+0x36>
 8005258:	f7ff ffc6 	bl	80051e8 <__hexdig_fun>
 800525c:	4604      	mov	r4, r0
 800525e:	2800      	cmp	r0, #0
 8005260:	d13a      	bne.n	80052d8 <__gethex+0xc4>
 8005262:	4652      	mov	r2, sl
 8005264:	4638      	mov	r0, r7
 8005266:	9903      	ldr	r1, [sp, #12]
 8005268:	f001 fa87 	bl	800677a <strncmp>
 800526c:	4605      	mov	r5, r0
 800526e:	2800      	cmp	r0, #0
 8005270:	d166      	bne.n	8005340 <__gethex+0x12c>
 8005272:	f817 000a 	ldrb.w	r0, [r7, sl]
 8005276:	eb07 060a 	add.w	r6, r7, sl
 800527a:	f7ff ffb5 	bl	80051e8 <__hexdig_fun>
 800527e:	2800      	cmp	r0, #0
 8005280:	d060      	beq.n	8005344 <__gethex+0x130>
 8005282:	4633      	mov	r3, r6
 8005284:	7818      	ldrb	r0, [r3, #0]
 8005286:	461f      	mov	r7, r3
 8005288:	2830      	cmp	r0, #48	; 0x30
 800528a:	f103 0301 	add.w	r3, r3, #1
 800528e:	d0f9      	beq.n	8005284 <__gethex+0x70>
 8005290:	f7ff ffaa 	bl	80051e8 <__hexdig_fun>
 8005294:	2301      	movs	r3, #1
 8005296:	fab0 f480 	clz	r4, r0
 800529a:	4635      	mov	r5, r6
 800529c:	0964      	lsrs	r4, r4, #5
 800529e:	9301      	str	r3, [sp, #4]
 80052a0:	463a      	mov	r2, r7
 80052a2:	4616      	mov	r6, r2
 80052a4:	7830      	ldrb	r0, [r6, #0]
 80052a6:	3201      	adds	r2, #1
 80052a8:	f7ff ff9e 	bl	80051e8 <__hexdig_fun>
 80052ac:	2800      	cmp	r0, #0
 80052ae:	d1f8      	bne.n	80052a2 <__gethex+0x8e>
 80052b0:	4652      	mov	r2, sl
 80052b2:	4630      	mov	r0, r6
 80052b4:	9903      	ldr	r1, [sp, #12]
 80052b6:	f001 fa60 	bl	800677a <strncmp>
 80052ba:	b980      	cbnz	r0, 80052de <__gethex+0xca>
 80052bc:	b94d      	cbnz	r5, 80052d2 <__gethex+0xbe>
 80052be:	eb06 050a 	add.w	r5, r6, sl
 80052c2:	462a      	mov	r2, r5
 80052c4:	4616      	mov	r6, r2
 80052c6:	7830      	ldrb	r0, [r6, #0]
 80052c8:	3201      	adds	r2, #1
 80052ca:	f7ff ff8d 	bl	80051e8 <__hexdig_fun>
 80052ce:	2800      	cmp	r0, #0
 80052d0:	d1f8      	bne.n	80052c4 <__gethex+0xb0>
 80052d2:	1bad      	subs	r5, r5, r6
 80052d4:	00ad      	lsls	r5, r5, #2
 80052d6:	e004      	b.n	80052e2 <__gethex+0xce>
 80052d8:	2400      	movs	r4, #0
 80052da:	4625      	mov	r5, r4
 80052dc:	e7e0      	b.n	80052a0 <__gethex+0x8c>
 80052de:	2d00      	cmp	r5, #0
 80052e0:	d1f7      	bne.n	80052d2 <__gethex+0xbe>
 80052e2:	7833      	ldrb	r3, [r6, #0]
 80052e4:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80052e8:	2b50      	cmp	r3, #80	; 0x50
 80052ea:	d139      	bne.n	8005360 <__gethex+0x14c>
 80052ec:	7873      	ldrb	r3, [r6, #1]
 80052ee:	2b2b      	cmp	r3, #43	; 0x2b
 80052f0:	d02a      	beq.n	8005348 <__gethex+0x134>
 80052f2:	2b2d      	cmp	r3, #45	; 0x2d
 80052f4:	d02c      	beq.n	8005350 <__gethex+0x13c>
 80052f6:	f04f 0900 	mov.w	r9, #0
 80052fa:	1c71      	adds	r1, r6, #1
 80052fc:	7808      	ldrb	r0, [r1, #0]
 80052fe:	f7ff ff73 	bl	80051e8 <__hexdig_fun>
 8005302:	1e43      	subs	r3, r0, #1
 8005304:	b2db      	uxtb	r3, r3
 8005306:	2b18      	cmp	r3, #24
 8005308:	d82a      	bhi.n	8005360 <__gethex+0x14c>
 800530a:	f1a0 0210 	sub.w	r2, r0, #16
 800530e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005312:	f7ff ff69 	bl	80051e8 <__hexdig_fun>
 8005316:	1e43      	subs	r3, r0, #1
 8005318:	b2db      	uxtb	r3, r3
 800531a:	2b18      	cmp	r3, #24
 800531c:	d91b      	bls.n	8005356 <__gethex+0x142>
 800531e:	f1b9 0f00 	cmp.w	r9, #0
 8005322:	d000      	beq.n	8005326 <__gethex+0x112>
 8005324:	4252      	negs	r2, r2
 8005326:	4415      	add	r5, r2
 8005328:	f8cb 1000 	str.w	r1, [fp]
 800532c:	b1d4      	cbz	r4, 8005364 <__gethex+0x150>
 800532e:	9b01      	ldr	r3, [sp, #4]
 8005330:	2b00      	cmp	r3, #0
 8005332:	bf14      	ite	ne
 8005334:	2700      	movne	r7, #0
 8005336:	2706      	moveq	r7, #6
 8005338:	4638      	mov	r0, r7
 800533a:	b00b      	add	sp, #44	; 0x2c
 800533c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005340:	463e      	mov	r6, r7
 8005342:	4625      	mov	r5, r4
 8005344:	2401      	movs	r4, #1
 8005346:	e7cc      	b.n	80052e2 <__gethex+0xce>
 8005348:	f04f 0900 	mov.w	r9, #0
 800534c:	1cb1      	adds	r1, r6, #2
 800534e:	e7d5      	b.n	80052fc <__gethex+0xe8>
 8005350:	f04f 0901 	mov.w	r9, #1
 8005354:	e7fa      	b.n	800534c <__gethex+0x138>
 8005356:	230a      	movs	r3, #10
 8005358:	fb03 0202 	mla	r2, r3, r2, r0
 800535c:	3a10      	subs	r2, #16
 800535e:	e7d6      	b.n	800530e <__gethex+0xfa>
 8005360:	4631      	mov	r1, r6
 8005362:	e7e1      	b.n	8005328 <__gethex+0x114>
 8005364:	4621      	mov	r1, r4
 8005366:	1bf3      	subs	r3, r6, r7
 8005368:	3b01      	subs	r3, #1
 800536a:	2b07      	cmp	r3, #7
 800536c:	dc0a      	bgt.n	8005384 <__gethex+0x170>
 800536e:	9802      	ldr	r0, [sp, #8]
 8005370:	f000 fae2 	bl	8005938 <_Balloc>
 8005374:	4604      	mov	r4, r0
 8005376:	b940      	cbnz	r0, 800538a <__gethex+0x176>
 8005378:	4602      	mov	r2, r0
 800537a:	21de      	movs	r1, #222	; 0xde
 800537c:	4b62      	ldr	r3, [pc, #392]	; (8005508 <__gethex+0x2f4>)
 800537e:	4863      	ldr	r0, [pc, #396]	; (800550c <__gethex+0x2f8>)
 8005380:	f001 fa2c 	bl	80067dc <__assert_func>
 8005384:	3101      	adds	r1, #1
 8005386:	105b      	asrs	r3, r3, #1
 8005388:	e7ef      	b.n	800536a <__gethex+0x156>
 800538a:	f04f 0b00 	mov.w	fp, #0
 800538e:	f100 0914 	add.w	r9, r0, #20
 8005392:	f1ca 0301 	rsb	r3, sl, #1
 8005396:	f8cd 9010 	str.w	r9, [sp, #16]
 800539a:	f8cd b004 	str.w	fp, [sp, #4]
 800539e:	9308      	str	r3, [sp, #32]
 80053a0:	42b7      	cmp	r7, r6
 80053a2:	d33f      	bcc.n	8005424 <__gethex+0x210>
 80053a4:	9f04      	ldr	r7, [sp, #16]
 80053a6:	9b01      	ldr	r3, [sp, #4]
 80053a8:	f847 3b04 	str.w	r3, [r7], #4
 80053ac:	eba7 0709 	sub.w	r7, r7, r9
 80053b0:	10bf      	asrs	r7, r7, #2
 80053b2:	6127      	str	r7, [r4, #16]
 80053b4:	4618      	mov	r0, r3
 80053b6:	f000 fbb5 	bl	8005b24 <__hi0bits>
 80053ba:	017f      	lsls	r7, r7, #5
 80053bc:	f8d8 6000 	ldr.w	r6, [r8]
 80053c0:	1a3f      	subs	r7, r7, r0
 80053c2:	42b7      	cmp	r7, r6
 80053c4:	dd62      	ble.n	800548c <__gethex+0x278>
 80053c6:	1bbf      	subs	r7, r7, r6
 80053c8:	4639      	mov	r1, r7
 80053ca:	4620      	mov	r0, r4
 80053cc:	f000 ff4b 	bl	8006266 <__any_on>
 80053d0:	4682      	mov	sl, r0
 80053d2:	b1a8      	cbz	r0, 8005400 <__gethex+0x1ec>
 80053d4:	f04f 0a01 	mov.w	sl, #1
 80053d8:	1e7b      	subs	r3, r7, #1
 80053da:	1159      	asrs	r1, r3, #5
 80053dc:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80053e0:	f003 021f 	and.w	r2, r3, #31
 80053e4:	fa0a f202 	lsl.w	r2, sl, r2
 80053e8:	420a      	tst	r2, r1
 80053ea:	d009      	beq.n	8005400 <__gethex+0x1ec>
 80053ec:	4553      	cmp	r3, sl
 80053ee:	dd05      	ble.n	80053fc <__gethex+0x1e8>
 80053f0:	4620      	mov	r0, r4
 80053f2:	1eb9      	subs	r1, r7, #2
 80053f4:	f000 ff37 	bl	8006266 <__any_on>
 80053f8:	2800      	cmp	r0, #0
 80053fa:	d144      	bne.n	8005486 <__gethex+0x272>
 80053fc:	f04f 0a02 	mov.w	sl, #2
 8005400:	4639      	mov	r1, r7
 8005402:	4620      	mov	r0, r4
 8005404:	f7ff fe9d 	bl	8005142 <rshift>
 8005408:	443d      	add	r5, r7
 800540a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800540e:	42ab      	cmp	r3, r5
 8005410:	da4a      	bge.n	80054a8 <__gethex+0x294>
 8005412:	4621      	mov	r1, r4
 8005414:	9802      	ldr	r0, [sp, #8]
 8005416:	f000 facf 	bl	80059b8 <_Bfree>
 800541a:	2300      	movs	r3, #0
 800541c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800541e:	27a3      	movs	r7, #163	; 0xa3
 8005420:	6013      	str	r3, [r2, #0]
 8005422:	e789      	b.n	8005338 <__gethex+0x124>
 8005424:	1e73      	subs	r3, r6, #1
 8005426:	9a07      	ldr	r2, [sp, #28]
 8005428:	9305      	str	r3, [sp, #20]
 800542a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800542e:	4293      	cmp	r3, r2
 8005430:	d019      	beq.n	8005466 <__gethex+0x252>
 8005432:	f1bb 0f20 	cmp.w	fp, #32
 8005436:	d107      	bne.n	8005448 <__gethex+0x234>
 8005438:	9b04      	ldr	r3, [sp, #16]
 800543a:	9a01      	ldr	r2, [sp, #4]
 800543c:	f843 2b04 	str.w	r2, [r3], #4
 8005440:	9304      	str	r3, [sp, #16]
 8005442:	2300      	movs	r3, #0
 8005444:	469b      	mov	fp, r3
 8005446:	9301      	str	r3, [sp, #4]
 8005448:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800544c:	f7ff fecc 	bl	80051e8 <__hexdig_fun>
 8005450:	9b01      	ldr	r3, [sp, #4]
 8005452:	f000 000f 	and.w	r0, r0, #15
 8005456:	fa00 f00b 	lsl.w	r0, r0, fp
 800545a:	4303      	orrs	r3, r0
 800545c:	9301      	str	r3, [sp, #4]
 800545e:	f10b 0b04 	add.w	fp, fp, #4
 8005462:	9b05      	ldr	r3, [sp, #20]
 8005464:	e00d      	b.n	8005482 <__gethex+0x26e>
 8005466:	9b05      	ldr	r3, [sp, #20]
 8005468:	9a08      	ldr	r2, [sp, #32]
 800546a:	4413      	add	r3, r2
 800546c:	42bb      	cmp	r3, r7
 800546e:	d3e0      	bcc.n	8005432 <__gethex+0x21e>
 8005470:	4618      	mov	r0, r3
 8005472:	4652      	mov	r2, sl
 8005474:	9903      	ldr	r1, [sp, #12]
 8005476:	9309      	str	r3, [sp, #36]	; 0x24
 8005478:	f001 f97f 	bl	800677a <strncmp>
 800547c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800547e:	2800      	cmp	r0, #0
 8005480:	d1d7      	bne.n	8005432 <__gethex+0x21e>
 8005482:	461e      	mov	r6, r3
 8005484:	e78c      	b.n	80053a0 <__gethex+0x18c>
 8005486:	f04f 0a03 	mov.w	sl, #3
 800548a:	e7b9      	b.n	8005400 <__gethex+0x1ec>
 800548c:	da09      	bge.n	80054a2 <__gethex+0x28e>
 800548e:	1bf7      	subs	r7, r6, r7
 8005490:	4621      	mov	r1, r4
 8005492:	463a      	mov	r2, r7
 8005494:	9802      	ldr	r0, [sp, #8]
 8005496:	f000 fca7 	bl	8005de8 <__lshift>
 800549a:	4604      	mov	r4, r0
 800549c:	1bed      	subs	r5, r5, r7
 800549e:	f100 0914 	add.w	r9, r0, #20
 80054a2:	f04f 0a00 	mov.w	sl, #0
 80054a6:	e7b0      	b.n	800540a <__gethex+0x1f6>
 80054a8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80054ac:	42a8      	cmp	r0, r5
 80054ae:	dd71      	ble.n	8005594 <__gethex+0x380>
 80054b0:	1b45      	subs	r5, r0, r5
 80054b2:	42ae      	cmp	r6, r5
 80054b4:	dc34      	bgt.n	8005520 <__gethex+0x30c>
 80054b6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80054ba:	2b02      	cmp	r3, #2
 80054bc:	d028      	beq.n	8005510 <__gethex+0x2fc>
 80054be:	2b03      	cmp	r3, #3
 80054c0:	d02a      	beq.n	8005518 <__gethex+0x304>
 80054c2:	2b01      	cmp	r3, #1
 80054c4:	d115      	bne.n	80054f2 <__gethex+0x2de>
 80054c6:	42ae      	cmp	r6, r5
 80054c8:	d113      	bne.n	80054f2 <__gethex+0x2de>
 80054ca:	2e01      	cmp	r6, #1
 80054cc:	d10b      	bne.n	80054e6 <__gethex+0x2d2>
 80054ce:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80054d2:	9a06      	ldr	r2, [sp, #24]
 80054d4:	2762      	movs	r7, #98	; 0x62
 80054d6:	6013      	str	r3, [r2, #0]
 80054d8:	2301      	movs	r3, #1
 80054da:	6123      	str	r3, [r4, #16]
 80054dc:	f8c9 3000 	str.w	r3, [r9]
 80054e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80054e2:	601c      	str	r4, [r3, #0]
 80054e4:	e728      	b.n	8005338 <__gethex+0x124>
 80054e6:	4620      	mov	r0, r4
 80054e8:	1e71      	subs	r1, r6, #1
 80054ea:	f000 febc 	bl	8006266 <__any_on>
 80054ee:	2800      	cmp	r0, #0
 80054f0:	d1ed      	bne.n	80054ce <__gethex+0x2ba>
 80054f2:	4621      	mov	r1, r4
 80054f4:	9802      	ldr	r0, [sp, #8]
 80054f6:	f000 fa5f 	bl	80059b8 <_Bfree>
 80054fa:	2300      	movs	r3, #0
 80054fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80054fe:	2750      	movs	r7, #80	; 0x50
 8005500:	6013      	str	r3, [r2, #0]
 8005502:	e719      	b.n	8005338 <__gethex+0x124>
 8005504:	0800772c 	.word	0x0800772c
 8005508:	0800764c 	.word	0x0800764c
 800550c:	080076c0 	.word	0x080076c0
 8005510:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005512:	2b00      	cmp	r3, #0
 8005514:	d1ed      	bne.n	80054f2 <__gethex+0x2de>
 8005516:	e7da      	b.n	80054ce <__gethex+0x2ba>
 8005518:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800551a:	2b00      	cmp	r3, #0
 800551c:	d1d7      	bne.n	80054ce <__gethex+0x2ba>
 800551e:	e7e8      	b.n	80054f2 <__gethex+0x2de>
 8005520:	1e6f      	subs	r7, r5, #1
 8005522:	f1ba 0f00 	cmp.w	sl, #0
 8005526:	d132      	bne.n	800558e <__gethex+0x37a>
 8005528:	b127      	cbz	r7, 8005534 <__gethex+0x320>
 800552a:	4639      	mov	r1, r7
 800552c:	4620      	mov	r0, r4
 800552e:	f000 fe9a 	bl	8006266 <__any_on>
 8005532:	4682      	mov	sl, r0
 8005534:	2101      	movs	r1, #1
 8005536:	117b      	asrs	r3, r7, #5
 8005538:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800553c:	f007 071f 	and.w	r7, r7, #31
 8005540:	fa01 f707 	lsl.w	r7, r1, r7
 8005544:	421f      	tst	r7, r3
 8005546:	f04f 0702 	mov.w	r7, #2
 800554a:	4629      	mov	r1, r5
 800554c:	4620      	mov	r0, r4
 800554e:	bf18      	it	ne
 8005550:	f04a 0a02 	orrne.w	sl, sl, #2
 8005554:	1b76      	subs	r6, r6, r5
 8005556:	f7ff fdf4 	bl	8005142 <rshift>
 800555a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800555e:	f1ba 0f00 	cmp.w	sl, #0
 8005562:	d048      	beq.n	80055f6 <__gethex+0x3e2>
 8005564:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005568:	2b02      	cmp	r3, #2
 800556a:	d015      	beq.n	8005598 <__gethex+0x384>
 800556c:	2b03      	cmp	r3, #3
 800556e:	d017      	beq.n	80055a0 <__gethex+0x38c>
 8005570:	2b01      	cmp	r3, #1
 8005572:	d109      	bne.n	8005588 <__gethex+0x374>
 8005574:	f01a 0f02 	tst.w	sl, #2
 8005578:	d006      	beq.n	8005588 <__gethex+0x374>
 800557a:	f8d9 0000 	ldr.w	r0, [r9]
 800557e:	ea4a 0a00 	orr.w	sl, sl, r0
 8005582:	f01a 0f01 	tst.w	sl, #1
 8005586:	d10e      	bne.n	80055a6 <__gethex+0x392>
 8005588:	f047 0710 	orr.w	r7, r7, #16
 800558c:	e033      	b.n	80055f6 <__gethex+0x3e2>
 800558e:	f04f 0a01 	mov.w	sl, #1
 8005592:	e7cf      	b.n	8005534 <__gethex+0x320>
 8005594:	2701      	movs	r7, #1
 8005596:	e7e2      	b.n	800555e <__gethex+0x34a>
 8005598:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800559a:	f1c3 0301 	rsb	r3, r3, #1
 800559e:	9315      	str	r3, [sp, #84]	; 0x54
 80055a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d0f0      	beq.n	8005588 <__gethex+0x374>
 80055a6:	f04f 0c00 	mov.w	ip, #0
 80055aa:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80055ae:	f104 0314 	add.w	r3, r4, #20
 80055b2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80055b6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80055ba:	4618      	mov	r0, r3
 80055bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80055c0:	f1b2 3fff 	cmp.w	r2, #4294967295
 80055c4:	d01c      	beq.n	8005600 <__gethex+0x3ec>
 80055c6:	3201      	adds	r2, #1
 80055c8:	6002      	str	r2, [r0, #0]
 80055ca:	2f02      	cmp	r7, #2
 80055cc:	f104 0314 	add.w	r3, r4, #20
 80055d0:	d13d      	bne.n	800564e <__gethex+0x43a>
 80055d2:	f8d8 2000 	ldr.w	r2, [r8]
 80055d6:	3a01      	subs	r2, #1
 80055d8:	42b2      	cmp	r2, r6
 80055da:	d10a      	bne.n	80055f2 <__gethex+0x3de>
 80055dc:	2201      	movs	r2, #1
 80055de:	1171      	asrs	r1, r6, #5
 80055e0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80055e4:	f006 061f 	and.w	r6, r6, #31
 80055e8:	fa02 f606 	lsl.w	r6, r2, r6
 80055ec:	421e      	tst	r6, r3
 80055ee:	bf18      	it	ne
 80055f0:	4617      	movne	r7, r2
 80055f2:	f047 0720 	orr.w	r7, r7, #32
 80055f6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80055f8:	601c      	str	r4, [r3, #0]
 80055fa:	9b06      	ldr	r3, [sp, #24]
 80055fc:	601d      	str	r5, [r3, #0]
 80055fe:	e69b      	b.n	8005338 <__gethex+0x124>
 8005600:	4299      	cmp	r1, r3
 8005602:	f843 cc04 	str.w	ip, [r3, #-4]
 8005606:	d8d8      	bhi.n	80055ba <__gethex+0x3a6>
 8005608:	68a3      	ldr	r3, [r4, #8]
 800560a:	459b      	cmp	fp, r3
 800560c:	db17      	blt.n	800563e <__gethex+0x42a>
 800560e:	6861      	ldr	r1, [r4, #4]
 8005610:	9802      	ldr	r0, [sp, #8]
 8005612:	3101      	adds	r1, #1
 8005614:	f000 f990 	bl	8005938 <_Balloc>
 8005618:	4681      	mov	r9, r0
 800561a:	b918      	cbnz	r0, 8005624 <__gethex+0x410>
 800561c:	4602      	mov	r2, r0
 800561e:	2184      	movs	r1, #132	; 0x84
 8005620:	4b19      	ldr	r3, [pc, #100]	; (8005688 <__gethex+0x474>)
 8005622:	e6ac      	b.n	800537e <__gethex+0x16a>
 8005624:	6922      	ldr	r2, [r4, #16]
 8005626:	f104 010c 	add.w	r1, r4, #12
 800562a:	3202      	adds	r2, #2
 800562c:	0092      	lsls	r2, r2, #2
 800562e:	300c      	adds	r0, #12
 8005630:	f7fc ff0c 	bl	800244c <memcpy>
 8005634:	4621      	mov	r1, r4
 8005636:	9802      	ldr	r0, [sp, #8]
 8005638:	f000 f9be 	bl	80059b8 <_Bfree>
 800563c:	464c      	mov	r4, r9
 800563e:	6923      	ldr	r3, [r4, #16]
 8005640:	1c5a      	adds	r2, r3, #1
 8005642:	6122      	str	r2, [r4, #16]
 8005644:	2201      	movs	r2, #1
 8005646:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800564a:	615a      	str	r2, [r3, #20]
 800564c:	e7bd      	b.n	80055ca <__gethex+0x3b6>
 800564e:	6922      	ldr	r2, [r4, #16]
 8005650:	455a      	cmp	r2, fp
 8005652:	dd0b      	ble.n	800566c <__gethex+0x458>
 8005654:	2101      	movs	r1, #1
 8005656:	4620      	mov	r0, r4
 8005658:	f7ff fd73 	bl	8005142 <rshift>
 800565c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005660:	3501      	adds	r5, #1
 8005662:	42ab      	cmp	r3, r5
 8005664:	f6ff aed5 	blt.w	8005412 <__gethex+0x1fe>
 8005668:	2701      	movs	r7, #1
 800566a:	e7c2      	b.n	80055f2 <__gethex+0x3de>
 800566c:	f016 061f 	ands.w	r6, r6, #31
 8005670:	d0fa      	beq.n	8005668 <__gethex+0x454>
 8005672:	449a      	add	sl, r3
 8005674:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8005678:	f000 fa54 	bl	8005b24 <__hi0bits>
 800567c:	f1c6 0620 	rsb	r6, r6, #32
 8005680:	42b0      	cmp	r0, r6
 8005682:	dbe7      	blt.n	8005654 <__gethex+0x440>
 8005684:	e7f0      	b.n	8005668 <__gethex+0x454>
 8005686:	bf00      	nop
 8005688:	0800764c 	.word	0x0800764c

0800568c <L_shift>:
 800568c:	f1c2 0208 	rsb	r2, r2, #8
 8005690:	0092      	lsls	r2, r2, #2
 8005692:	b570      	push	{r4, r5, r6, lr}
 8005694:	f1c2 0620 	rsb	r6, r2, #32
 8005698:	6843      	ldr	r3, [r0, #4]
 800569a:	6804      	ldr	r4, [r0, #0]
 800569c:	fa03 f506 	lsl.w	r5, r3, r6
 80056a0:	432c      	orrs	r4, r5
 80056a2:	40d3      	lsrs	r3, r2
 80056a4:	6004      	str	r4, [r0, #0]
 80056a6:	f840 3f04 	str.w	r3, [r0, #4]!
 80056aa:	4288      	cmp	r0, r1
 80056ac:	d3f4      	bcc.n	8005698 <L_shift+0xc>
 80056ae:	bd70      	pop	{r4, r5, r6, pc}

080056b0 <__match>:
 80056b0:	b530      	push	{r4, r5, lr}
 80056b2:	6803      	ldr	r3, [r0, #0]
 80056b4:	3301      	adds	r3, #1
 80056b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80056ba:	b914      	cbnz	r4, 80056c2 <__match+0x12>
 80056bc:	6003      	str	r3, [r0, #0]
 80056be:	2001      	movs	r0, #1
 80056c0:	bd30      	pop	{r4, r5, pc}
 80056c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80056c6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80056ca:	2d19      	cmp	r5, #25
 80056cc:	bf98      	it	ls
 80056ce:	3220      	addls	r2, #32
 80056d0:	42a2      	cmp	r2, r4
 80056d2:	d0f0      	beq.n	80056b6 <__match+0x6>
 80056d4:	2000      	movs	r0, #0
 80056d6:	e7f3      	b.n	80056c0 <__match+0x10>

080056d8 <__hexnan>:
 80056d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056dc:	2500      	movs	r5, #0
 80056de:	680b      	ldr	r3, [r1, #0]
 80056e0:	4682      	mov	sl, r0
 80056e2:	115e      	asrs	r6, r3, #5
 80056e4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80056e8:	f013 031f 	ands.w	r3, r3, #31
 80056ec:	bf18      	it	ne
 80056ee:	3604      	addne	r6, #4
 80056f0:	1f37      	subs	r7, r6, #4
 80056f2:	4690      	mov	r8, r2
 80056f4:	46b9      	mov	r9, r7
 80056f6:	463c      	mov	r4, r7
 80056f8:	46ab      	mov	fp, r5
 80056fa:	b087      	sub	sp, #28
 80056fc:	6801      	ldr	r1, [r0, #0]
 80056fe:	9301      	str	r3, [sp, #4]
 8005700:	f846 5c04 	str.w	r5, [r6, #-4]
 8005704:	9502      	str	r5, [sp, #8]
 8005706:	784a      	ldrb	r2, [r1, #1]
 8005708:	1c4b      	adds	r3, r1, #1
 800570a:	9303      	str	r3, [sp, #12]
 800570c:	b342      	cbz	r2, 8005760 <__hexnan+0x88>
 800570e:	4610      	mov	r0, r2
 8005710:	9105      	str	r1, [sp, #20]
 8005712:	9204      	str	r2, [sp, #16]
 8005714:	f7ff fd68 	bl	80051e8 <__hexdig_fun>
 8005718:	2800      	cmp	r0, #0
 800571a:	d14f      	bne.n	80057bc <__hexnan+0xe4>
 800571c:	9a04      	ldr	r2, [sp, #16]
 800571e:	9905      	ldr	r1, [sp, #20]
 8005720:	2a20      	cmp	r2, #32
 8005722:	d818      	bhi.n	8005756 <__hexnan+0x7e>
 8005724:	9b02      	ldr	r3, [sp, #8]
 8005726:	459b      	cmp	fp, r3
 8005728:	dd13      	ble.n	8005752 <__hexnan+0x7a>
 800572a:	454c      	cmp	r4, r9
 800572c:	d206      	bcs.n	800573c <__hexnan+0x64>
 800572e:	2d07      	cmp	r5, #7
 8005730:	dc04      	bgt.n	800573c <__hexnan+0x64>
 8005732:	462a      	mov	r2, r5
 8005734:	4649      	mov	r1, r9
 8005736:	4620      	mov	r0, r4
 8005738:	f7ff ffa8 	bl	800568c <L_shift>
 800573c:	4544      	cmp	r4, r8
 800573e:	d950      	bls.n	80057e2 <__hexnan+0x10a>
 8005740:	2300      	movs	r3, #0
 8005742:	f1a4 0904 	sub.w	r9, r4, #4
 8005746:	f844 3c04 	str.w	r3, [r4, #-4]
 800574a:	461d      	mov	r5, r3
 800574c:	464c      	mov	r4, r9
 800574e:	f8cd b008 	str.w	fp, [sp, #8]
 8005752:	9903      	ldr	r1, [sp, #12]
 8005754:	e7d7      	b.n	8005706 <__hexnan+0x2e>
 8005756:	2a29      	cmp	r2, #41	; 0x29
 8005758:	d156      	bne.n	8005808 <__hexnan+0x130>
 800575a:	3102      	adds	r1, #2
 800575c:	f8ca 1000 	str.w	r1, [sl]
 8005760:	f1bb 0f00 	cmp.w	fp, #0
 8005764:	d050      	beq.n	8005808 <__hexnan+0x130>
 8005766:	454c      	cmp	r4, r9
 8005768:	d206      	bcs.n	8005778 <__hexnan+0xa0>
 800576a:	2d07      	cmp	r5, #7
 800576c:	dc04      	bgt.n	8005778 <__hexnan+0xa0>
 800576e:	462a      	mov	r2, r5
 8005770:	4649      	mov	r1, r9
 8005772:	4620      	mov	r0, r4
 8005774:	f7ff ff8a 	bl	800568c <L_shift>
 8005778:	4544      	cmp	r4, r8
 800577a:	d934      	bls.n	80057e6 <__hexnan+0x10e>
 800577c:	4623      	mov	r3, r4
 800577e:	f1a8 0204 	sub.w	r2, r8, #4
 8005782:	f853 1b04 	ldr.w	r1, [r3], #4
 8005786:	429f      	cmp	r7, r3
 8005788:	f842 1f04 	str.w	r1, [r2, #4]!
 800578c:	d2f9      	bcs.n	8005782 <__hexnan+0xaa>
 800578e:	1b3b      	subs	r3, r7, r4
 8005790:	f023 0303 	bic.w	r3, r3, #3
 8005794:	3304      	adds	r3, #4
 8005796:	3401      	adds	r4, #1
 8005798:	3e03      	subs	r6, #3
 800579a:	42b4      	cmp	r4, r6
 800579c:	bf88      	it	hi
 800579e:	2304      	movhi	r3, #4
 80057a0:	2200      	movs	r2, #0
 80057a2:	4443      	add	r3, r8
 80057a4:	f843 2b04 	str.w	r2, [r3], #4
 80057a8:	429f      	cmp	r7, r3
 80057aa:	d2fb      	bcs.n	80057a4 <__hexnan+0xcc>
 80057ac:	683b      	ldr	r3, [r7, #0]
 80057ae:	b91b      	cbnz	r3, 80057b8 <__hexnan+0xe0>
 80057b0:	4547      	cmp	r7, r8
 80057b2:	d127      	bne.n	8005804 <__hexnan+0x12c>
 80057b4:	2301      	movs	r3, #1
 80057b6:	603b      	str	r3, [r7, #0]
 80057b8:	2005      	movs	r0, #5
 80057ba:	e026      	b.n	800580a <__hexnan+0x132>
 80057bc:	3501      	adds	r5, #1
 80057be:	2d08      	cmp	r5, #8
 80057c0:	f10b 0b01 	add.w	fp, fp, #1
 80057c4:	dd06      	ble.n	80057d4 <__hexnan+0xfc>
 80057c6:	4544      	cmp	r4, r8
 80057c8:	d9c3      	bls.n	8005752 <__hexnan+0x7a>
 80057ca:	2300      	movs	r3, #0
 80057cc:	2501      	movs	r5, #1
 80057ce:	f844 3c04 	str.w	r3, [r4, #-4]
 80057d2:	3c04      	subs	r4, #4
 80057d4:	6822      	ldr	r2, [r4, #0]
 80057d6:	f000 000f 	and.w	r0, r0, #15
 80057da:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80057de:	6022      	str	r2, [r4, #0]
 80057e0:	e7b7      	b.n	8005752 <__hexnan+0x7a>
 80057e2:	2508      	movs	r5, #8
 80057e4:	e7b5      	b.n	8005752 <__hexnan+0x7a>
 80057e6:	9b01      	ldr	r3, [sp, #4]
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d0df      	beq.n	80057ac <__hexnan+0xd4>
 80057ec:	f04f 32ff 	mov.w	r2, #4294967295
 80057f0:	f1c3 0320 	rsb	r3, r3, #32
 80057f4:	fa22 f303 	lsr.w	r3, r2, r3
 80057f8:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80057fc:	401a      	ands	r2, r3
 80057fe:	f846 2c04 	str.w	r2, [r6, #-4]
 8005802:	e7d3      	b.n	80057ac <__hexnan+0xd4>
 8005804:	3f04      	subs	r7, #4
 8005806:	e7d1      	b.n	80057ac <__hexnan+0xd4>
 8005808:	2004      	movs	r0, #4
 800580a:	b007      	add	sp, #28
 800580c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005810 <_localeconv_r>:
 8005810:	4800      	ldr	r0, [pc, #0]	; (8005814 <_localeconv_r+0x4>)
 8005812:	4770      	bx	lr
 8005814:	20000158 	.word	0x20000158

08005818 <__retarget_lock_init_recursive>:
 8005818:	4770      	bx	lr

0800581a <__retarget_lock_acquire_recursive>:
 800581a:	4770      	bx	lr

0800581c <__retarget_lock_release_recursive>:
 800581c:	4770      	bx	lr

0800581e <__swhatbuf_r>:
 800581e:	b570      	push	{r4, r5, r6, lr}
 8005820:	460e      	mov	r6, r1
 8005822:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005826:	4614      	mov	r4, r2
 8005828:	2900      	cmp	r1, #0
 800582a:	461d      	mov	r5, r3
 800582c:	b096      	sub	sp, #88	; 0x58
 800582e:	da07      	bge.n	8005840 <__swhatbuf_r+0x22>
 8005830:	2300      	movs	r3, #0
 8005832:	602b      	str	r3, [r5, #0]
 8005834:	89b3      	ldrh	r3, [r6, #12]
 8005836:	061a      	lsls	r2, r3, #24
 8005838:	d410      	bmi.n	800585c <__swhatbuf_r+0x3e>
 800583a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800583e:	e00e      	b.n	800585e <__swhatbuf_r+0x40>
 8005840:	466a      	mov	r2, sp
 8005842:	f001 f80b 	bl	800685c <_fstat_r>
 8005846:	2800      	cmp	r0, #0
 8005848:	dbf2      	blt.n	8005830 <__swhatbuf_r+0x12>
 800584a:	9a01      	ldr	r2, [sp, #4]
 800584c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005850:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005854:	425a      	negs	r2, r3
 8005856:	415a      	adcs	r2, r3
 8005858:	602a      	str	r2, [r5, #0]
 800585a:	e7ee      	b.n	800583a <__swhatbuf_r+0x1c>
 800585c:	2340      	movs	r3, #64	; 0x40
 800585e:	2000      	movs	r0, #0
 8005860:	6023      	str	r3, [r4, #0]
 8005862:	b016      	add	sp, #88	; 0x58
 8005864:	bd70      	pop	{r4, r5, r6, pc}
	...

08005868 <__smakebuf_r>:
 8005868:	898b      	ldrh	r3, [r1, #12]
 800586a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800586c:	079d      	lsls	r5, r3, #30
 800586e:	4606      	mov	r6, r0
 8005870:	460c      	mov	r4, r1
 8005872:	d507      	bpl.n	8005884 <__smakebuf_r+0x1c>
 8005874:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005878:	6023      	str	r3, [r4, #0]
 800587a:	6123      	str	r3, [r4, #16]
 800587c:	2301      	movs	r3, #1
 800587e:	6163      	str	r3, [r4, #20]
 8005880:	b002      	add	sp, #8
 8005882:	bd70      	pop	{r4, r5, r6, pc}
 8005884:	466a      	mov	r2, sp
 8005886:	ab01      	add	r3, sp, #4
 8005888:	f7ff ffc9 	bl	800581e <__swhatbuf_r>
 800588c:	9900      	ldr	r1, [sp, #0]
 800588e:	4605      	mov	r5, r0
 8005890:	4630      	mov	r0, r6
 8005892:	f000 fd63 	bl	800635c <_malloc_r>
 8005896:	b948      	cbnz	r0, 80058ac <__smakebuf_r+0x44>
 8005898:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800589c:	059a      	lsls	r2, r3, #22
 800589e:	d4ef      	bmi.n	8005880 <__smakebuf_r+0x18>
 80058a0:	f023 0303 	bic.w	r3, r3, #3
 80058a4:	f043 0302 	orr.w	r3, r3, #2
 80058a8:	81a3      	strh	r3, [r4, #12]
 80058aa:	e7e3      	b.n	8005874 <__smakebuf_r+0xc>
 80058ac:	4b0d      	ldr	r3, [pc, #52]	; (80058e4 <__smakebuf_r+0x7c>)
 80058ae:	62b3      	str	r3, [r6, #40]	; 0x28
 80058b0:	89a3      	ldrh	r3, [r4, #12]
 80058b2:	6020      	str	r0, [r4, #0]
 80058b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80058b8:	81a3      	strh	r3, [r4, #12]
 80058ba:	9b00      	ldr	r3, [sp, #0]
 80058bc:	6120      	str	r0, [r4, #16]
 80058be:	6163      	str	r3, [r4, #20]
 80058c0:	9b01      	ldr	r3, [sp, #4]
 80058c2:	b15b      	cbz	r3, 80058dc <__smakebuf_r+0x74>
 80058c4:	4630      	mov	r0, r6
 80058c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80058ca:	f000 ffd9 	bl	8006880 <_isatty_r>
 80058ce:	b128      	cbz	r0, 80058dc <__smakebuf_r+0x74>
 80058d0:	89a3      	ldrh	r3, [r4, #12]
 80058d2:	f023 0303 	bic.w	r3, r3, #3
 80058d6:	f043 0301 	orr.w	r3, r3, #1
 80058da:	81a3      	strh	r3, [r4, #12]
 80058dc:	89a0      	ldrh	r0, [r4, #12]
 80058de:	4305      	orrs	r5, r0
 80058e0:	81a5      	strh	r5, [r4, #12]
 80058e2:	e7cd      	b.n	8005880 <__smakebuf_r+0x18>
 80058e4:	08004fa1 	.word	0x08004fa1

080058e8 <malloc>:
 80058e8:	4b02      	ldr	r3, [pc, #8]	; (80058f4 <malloc+0xc>)
 80058ea:	4601      	mov	r1, r0
 80058ec:	6818      	ldr	r0, [r3, #0]
 80058ee:	f000 bd35 	b.w	800635c <_malloc_r>
 80058f2:	bf00      	nop
 80058f4:	20000000 	.word	0x20000000

080058f8 <__ascii_mbtowc>:
 80058f8:	b082      	sub	sp, #8
 80058fa:	b901      	cbnz	r1, 80058fe <__ascii_mbtowc+0x6>
 80058fc:	a901      	add	r1, sp, #4
 80058fe:	b142      	cbz	r2, 8005912 <__ascii_mbtowc+0x1a>
 8005900:	b14b      	cbz	r3, 8005916 <__ascii_mbtowc+0x1e>
 8005902:	7813      	ldrb	r3, [r2, #0]
 8005904:	600b      	str	r3, [r1, #0]
 8005906:	7812      	ldrb	r2, [r2, #0]
 8005908:	1e10      	subs	r0, r2, #0
 800590a:	bf18      	it	ne
 800590c:	2001      	movne	r0, #1
 800590e:	b002      	add	sp, #8
 8005910:	4770      	bx	lr
 8005912:	4610      	mov	r0, r2
 8005914:	e7fb      	b.n	800590e <__ascii_mbtowc+0x16>
 8005916:	f06f 0001 	mvn.w	r0, #1
 800591a:	e7f8      	b.n	800590e <__ascii_mbtowc+0x16>

0800591c <memchr>:
 800591c:	4603      	mov	r3, r0
 800591e:	b510      	push	{r4, lr}
 8005920:	b2c9      	uxtb	r1, r1
 8005922:	4402      	add	r2, r0
 8005924:	4293      	cmp	r3, r2
 8005926:	4618      	mov	r0, r3
 8005928:	d101      	bne.n	800592e <memchr+0x12>
 800592a:	2000      	movs	r0, #0
 800592c:	e003      	b.n	8005936 <memchr+0x1a>
 800592e:	7804      	ldrb	r4, [r0, #0]
 8005930:	3301      	adds	r3, #1
 8005932:	428c      	cmp	r4, r1
 8005934:	d1f6      	bne.n	8005924 <memchr+0x8>
 8005936:	bd10      	pop	{r4, pc}

08005938 <_Balloc>:
 8005938:	b570      	push	{r4, r5, r6, lr}
 800593a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800593c:	4604      	mov	r4, r0
 800593e:	460d      	mov	r5, r1
 8005940:	b976      	cbnz	r6, 8005960 <_Balloc+0x28>
 8005942:	2010      	movs	r0, #16
 8005944:	f7ff ffd0 	bl	80058e8 <malloc>
 8005948:	4602      	mov	r2, r0
 800594a:	6260      	str	r0, [r4, #36]	; 0x24
 800594c:	b920      	cbnz	r0, 8005958 <_Balloc+0x20>
 800594e:	2166      	movs	r1, #102	; 0x66
 8005950:	4b17      	ldr	r3, [pc, #92]	; (80059b0 <_Balloc+0x78>)
 8005952:	4818      	ldr	r0, [pc, #96]	; (80059b4 <_Balloc+0x7c>)
 8005954:	f000 ff42 	bl	80067dc <__assert_func>
 8005958:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800595c:	6006      	str	r6, [r0, #0]
 800595e:	60c6      	str	r6, [r0, #12]
 8005960:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8005962:	68f3      	ldr	r3, [r6, #12]
 8005964:	b183      	cbz	r3, 8005988 <_Balloc+0x50>
 8005966:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005968:	68db      	ldr	r3, [r3, #12]
 800596a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800596e:	b9b8      	cbnz	r0, 80059a0 <_Balloc+0x68>
 8005970:	2101      	movs	r1, #1
 8005972:	fa01 f605 	lsl.w	r6, r1, r5
 8005976:	1d72      	adds	r2, r6, #5
 8005978:	4620      	mov	r0, r4
 800597a:	0092      	lsls	r2, r2, #2
 800597c:	f000 fc94 	bl	80062a8 <_calloc_r>
 8005980:	b160      	cbz	r0, 800599c <_Balloc+0x64>
 8005982:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005986:	e00e      	b.n	80059a6 <_Balloc+0x6e>
 8005988:	2221      	movs	r2, #33	; 0x21
 800598a:	2104      	movs	r1, #4
 800598c:	4620      	mov	r0, r4
 800598e:	f000 fc8b 	bl	80062a8 <_calloc_r>
 8005992:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005994:	60f0      	str	r0, [r6, #12]
 8005996:	68db      	ldr	r3, [r3, #12]
 8005998:	2b00      	cmp	r3, #0
 800599a:	d1e4      	bne.n	8005966 <_Balloc+0x2e>
 800599c:	2000      	movs	r0, #0
 800599e:	bd70      	pop	{r4, r5, r6, pc}
 80059a0:	6802      	ldr	r2, [r0, #0]
 80059a2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80059a6:	2300      	movs	r3, #0
 80059a8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80059ac:	e7f7      	b.n	800599e <_Balloc+0x66>
 80059ae:	bf00      	nop
 80059b0:	080075d6 	.word	0x080075d6
 80059b4:	08007740 	.word	0x08007740

080059b8 <_Bfree>:
 80059b8:	b570      	push	{r4, r5, r6, lr}
 80059ba:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80059bc:	4605      	mov	r5, r0
 80059be:	460c      	mov	r4, r1
 80059c0:	b976      	cbnz	r6, 80059e0 <_Bfree+0x28>
 80059c2:	2010      	movs	r0, #16
 80059c4:	f7ff ff90 	bl	80058e8 <malloc>
 80059c8:	4602      	mov	r2, r0
 80059ca:	6268      	str	r0, [r5, #36]	; 0x24
 80059cc:	b920      	cbnz	r0, 80059d8 <_Bfree+0x20>
 80059ce:	218a      	movs	r1, #138	; 0x8a
 80059d0:	4b08      	ldr	r3, [pc, #32]	; (80059f4 <_Bfree+0x3c>)
 80059d2:	4809      	ldr	r0, [pc, #36]	; (80059f8 <_Bfree+0x40>)
 80059d4:	f000 ff02 	bl	80067dc <__assert_func>
 80059d8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80059dc:	6006      	str	r6, [r0, #0]
 80059de:	60c6      	str	r6, [r0, #12]
 80059e0:	b13c      	cbz	r4, 80059f2 <_Bfree+0x3a>
 80059e2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80059e4:	6862      	ldr	r2, [r4, #4]
 80059e6:	68db      	ldr	r3, [r3, #12]
 80059e8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80059ec:	6021      	str	r1, [r4, #0]
 80059ee:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80059f2:	bd70      	pop	{r4, r5, r6, pc}
 80059f4:	080075d6 	.word	0x080075d6
 80059f8:	08007740 	.word	0x08007740

080059fc <__multadd>:
 80059fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a00:	4698      	mov	r8, r3
 8005a02:	460c      	mov	r4, r1
 8005a04:	2300      	movs	r3, #0
 8005a06:	690e      	ldr	r6, [r1, #16]
 8005a08:	4607      	mov	r7, r0
 8005a0a:	f101 0014 	add.w	r0, r1, #20
 8005a0e:	6805      	ldr	r5, [r0, #0]
 8005a10:	3301      	adds	r3, #1
 8005a12:	b2a9      	uxth	r1, r5
 8005a14:	fb02 8101 	mla	r1, r2, r1, r8
 8005a18:	0c2d      	lsrs	r5, r5, #16
 8005a1a:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8005a1e:	fb02 c505 	mla	r5, r2, r5, ip
 8005a22:	b289      	uxth	r1, r1
 8005a24:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8005a28:	429e      	cmp	r6, r3
 8005a2a:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8005a2e:	f840 1b04 	str.w	r1, [r0], #4
 8005a32:	dcec      	bgt.n	8005a0e <__multadd+0x12>
 8005a34:	f1b8 0f00 	cmp.w	r8, #0
 8005a38:	d022      	beq.n	8005a80 <__multadd+0x84>
 8005a3a:	68a3      	ldr	r3, [r4, #8]
 8005a3c:	42b3      	cmp	r3, r6
 8005a3e:	dc19      	bgt.n	8005a74 <__multadd+0x78>
 8005a40:	6861      	ldr	r1, [r4, #4]
 8005a42:	4638      	mov	r0, r7
 8005a44:	3101      	adds	r1, #1
 8005a46:	f7ff ff77 	bl	8005938 <_Balloc>
 8005a4a:	4605      	mov	r5, r0
 8005a4c:	b928      	cbnz	r0, 8005a5a <__multadd+0x5e>
 8005a4e:	4602      	mov	r2, r0
 8005a50:	21b5      	movs	r1, #181	; 0xb5
 8005a52:	4b0d      	ldr	r3, [pc, #52]	; (8005a88 <__multadd+0x8c>)
 8005a54:	480d      	ldr	r0, [pc, #52]	; (8005a8c <__multadd+0x90>)
 8005a56:	f000 fec1 	bl	80067dc <__assert_func>
 8005a5a:	6922      	ldr	r2, [r4, #16]
 8005a5c:	f104 010c 	add.w	r1, r4, #12
 8005a60:	3202      	adds	r2, #2
 8005a62:	0092      	lsls	r2, r2, #2
 8005a64:	300c      	adds	r0, #12
 8005a66:	f7fc fcf1 	bl	800244c <memcpy>
 8005a6a:	4621      	mov	r1, r4
 8005a6c:	4638      	mov	r0, r7
 8005a6e:	f7ff ffa3 	bl	80059b8 <_Bfree>
 8005a72:	462c      	mov	r4, r5
 8005a74:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8005a78:	3601      	adds	r6, #1
 8005a7a:	f8c3 8014 	str.w	r8, [r3, #20]
 8005a7e:	6126      	str	r6, [r4, #16]
 8005a80:	4620      	mov	r0, r4
 8005a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a86:	bf00      	nop
 8005a88:	0800764c 	.word	0x0800764c
 8005a8c:	08007740 	.word	0x08007740

08005a90 <__s2b>:
 8005a90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005a94:	4615      	mov	r5, r2
 8005a96:	2209      	movs	r2, #9
 8005a98:	461f      	mov	r7, r3
 8005a9a:	3308      	adds	r3, #8
 8005a9c:	460c      	mov	r4, r1
 8005a9e:	fb93 f3f2 	sdiv	r3, r3, r2
 8005aa2:	4606      	mov	r6, r0
 8005aa4:	2201      	movs	r2, #1
 8005aa6:	2100      	movs	r1, #0
 8005aa8:	429a      	cmp	r2, r3
 8005aaa:	db09      	blt.n	8005ac0 <__s2b+0x30>
 8005aac:	4630      	mov	r0, r6
 8005aae:	f7ff ff43 	bl	8005938 <_Balloc>
 8005ab2:	b940      	cbnz	r0, 8005ac6 <__s2b+0x36>
 8005ab4:	4602      	mov	r2, r0
 8005ab6:	21ce      	movs	r1, #206	; 0xce
 8005ab8:	4b18      	ldr	r3, [pc, #96]	; (8005b1c <__s2b+0x8c>)
 8005aba:	4819      	ldr	r0, [pc, #100]	; (8005b20 <__s2b+0x90>)
 8005abc:	f000 fe8e 	bl	80067dc <__assert_func>
 8005ac0:	0052      	lsls	r2, r2, #1
 8005ac2:	3101      	adds	r1, #1
 8005ac4:	e7f0      	b.n	8005aa8 <__s2b+0x18>
 8005ac6:	9b08      	ldr	r3, [sp, #32]
 8005ac8:	2d09      	cmp	r5, #9
 8005aca:	6143      	str	r3, [r0, #20]
 8005acc:	f04f 0301 	mov.w	r3, #1
 8005ad0:	6103      	str	r3, [r0, #16]
 8005ad2:	dd16      	ble.n	8005b02 <__s2b+0x72>
 8005ad4:	f104 0909 	add.w	r9, r4, #9
 8005ad8:	46c8      	mov	r8, r9
 8005ada:	442c      	add	r4, r5
 8005adc:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005ae0:	4601      	mov	r1, r0
 8005ae2:	220a      	movs	r2, #10
 8005ae4:	4630      	mov	r0, r6
 8005ae6:	3b30      	subs	r3, #48	; 0x30
 8005ae8:	f7ff ff88 	bl	80059fc <__multadd>
 8005aec:	45a0      	cmp	r8, r4
 8005aee:	d1f5      	bne.n	8005adc <__s2b+0x4c>
 8005af0:	f1a5 0408 	sub.w	r4, r5, #8
 8005af4:	444c      	add	r4, r9
 8005af6:	1b2d      	subs	r5, r5, r4
 8005af8:	1963      	adds	r3, r4, r5
 8005afa:	42bb      	cmp	r3, r7
 8005afc:	db04      	blt.n	8005b08 <__s2b+0x78>
 8005afe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005b02:	2509      	movs	r5, #9
 8005b04:	340a      	adds	r4, #10
 8005b06:	e7f6      	b.n	8005af6 <__s2b+0x66>
 8005b08:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005b0c:	4601      	mov	r1, r0
 8005b0e:	220a      	movs	r2, #10
 8005b10:	4630      	mov	r0, r6
 8005b12:	3b30      	subs	r3, #48	; 0x30
 8005b14:	f7ff ff72 	bl	80059fc <__multadd>
 8005b18:	e7ee      	b.n	8005af8 <__s2b+0x68>
 8005b1a:	bf00      	nop
 8005b1c:	0800764c 	.word	0x0800764c
 8005b20:	08007740 	.word	0x08007740

08005b24 <__hi0bits>:
 8005b24:	0c02      	lsrs	r2, r0, #16
 8005b26:	0412      	lsls	r2, r2, #16
 8005b28:	4603      	mov	r3, r0
 8005b2a:	b9ca      	cbnz	r2, 8005b60 <__hi0bits+0x3c>
 8005b2c:	0403      	lsls	r3, r0, #16
 8005b2e:	2010      	movs	r0, #16
 8005b30:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005b34:	bf04      	itt	eq
 8005b36:	021b      	lsleq	r3, r3, #8
 8005b38:	3008      	addeq	r0, #8
 8005b3a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005b3e:	bf04      	itt	eq
 8005b40:	011b      	lsleq	r3, r3, #4
 8005b42:	3004      	addeq	r0, #4
 8005b44:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005b48:	bf04      	itt	eq
 8005b4a:	009b      	lsleq	r3, r3, #2
 8005b4c:	3002      	addeq	r0, #2
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	db05      	blt.n	8005b5e <__hi0bits+0x3a>
 8005b52:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8005b56:	f100 0001 	add.w	r0, r0, #1
 8005b5a:	bf08      	it	eq
 8005b5c:	2020      	moveq	r0, #32
 8005b5e:	4770      	bx	lr
 8005b60:	2000      	movs	r0, #0
 8005b62:	e7e5      	b.n	8005b30 <__hi0bits+0xc>

08005b64 <__lo0bits>:
 8005b64:	6803      	ldr	r3, [r0, #0]
 8005b66:	4602      	mov	r2, r0
 8005b68:	f013 0007 	ands.w	r0, r3, #7
 8005b6c:	d00b      	beq.n	8005b86 <__lo0bits+0x22>
 8005b6e:	07d9      	lsls	r1, r3, #31
 8005b70:	d422      	bmi.n	8005bb8 <__lo0bits+0x54>
 8005b72:	0798      	lsls	r0, r3, #30
 8005b74:	bf49      	itett	mi
 8005b76:	085b      	lsrmi	r3, r3, #1
 8005b78:	089b      	lsrpl	r3, r3, #2
 8005b7a:	2001      	movmi	r0, #1
 8005b7c:	6013      	strmi	r3, [r2, #0]
 8005b7e:	bf5c      	itt	pl
 8005b80:	2002      	movpl	r0, #2
 8005b82:	6013      	strpl	r3, [r2, #0]
 8005b84:	4770      	bx	lr
 8005b86:	b299      	uxth	r1, r3
 8005b88:	b909      	cbnz	r1, 8005b8e <__lo0bits+0x2a>
 8005b8a:	2010      	movs	r0, #16
 8005b8c:	0c1b      	lsrs	r3, r3, #16
 8005b8e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8005b92:	bf04      	itt	eq
 8005b94:	0a1b      	lsreq	r3, r3, #8
 8005b96:	3008      	addeq	r0, #8
 8005b98:	0719      	lsls	r1, r3, #28
 8005b9a:	bf04      	itt	eq
 8005b9c:	091b      	lsreq	r3, r3, #4
 8005b9e:	3004      	addeq	r0, #4
 8005ba0:	0799      	lsls	r1, r3, #30
 8005ba2:	bf04      	itt	eq
 8005ba4:	089b      	lsreq	r3, r3, #2
 8005ba6:	3002      	addeq	r0, #2
 8005ba8:	07d9      	lsls	r1, r3, #31
 8005baa:	d403      	bmi.n	8005bb4 <__lo0bits+0x50>
 8005bac:	085b      	lsrs	r3, r3, #1
 8005bae:	f100 0001 	add.w	r0, r0, #1
 8005bb2:	d003      	beq.n	8005bbc <__lo0bits+0x58>
 8005bb4:	6013      	str	r3, [r2, #0]
 8005bb6:	4770      	bx	lr
 8005bb8:	2000      	movs	r0, #0
 8005bba:	4770      	bx	lr
 8005bbc:	2020      	movs	r0, #32
 8005bbe:	4770      	bx	lr

08005bc0 <__i2b>:
 8005bc0:	b510      	push	{r4, lr}
 8005bc2:	460c      	mov	r4, r1
 8005bc4:	2101      	movs	r1, #1
 8005bc6:	f7ff feb7 	bl	8005938 <_Balloc>
 8005bca:	4602      	mov	r2, r0
 8005bcc:	b928      	cbnz	r0, 8005bda <__i2b+0x1a>
 8005bce:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005bd2:	4b04      	ldr	r3, [pc, #16]	; (8005be4 <__i2b+0x24>)
 8005bd4:	4804      	ldr	r0, [pc, #16]	; (8005be8 <__i2b+0x28>)
 8005bd6:	f000 fe01 	bl	80067dc <__assert_func>
 8005bda:	2301      	movs	r3, #1
 8005bdc:	6144      	str	r4, [r0, #20]
 8005bde:	6103      	str	r3, [r0, #16]
 8005be0:	bd10      	pop	{r4, pc}
 8005be2:	bf00      	nop
 8005be4:	0800764c 	.word	0x0800764c
 8005be8:	08007740 	.word	0x08007740

08005bec <__multiply>:
 8005bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bf0:	4614      	mov	r4, r2
 8005bf2:	690a      	ldr	r2, [r1, #16]
 8005bf4:	6923      	ldr	r3, [r4, #16]
 8005bf6:	460d      	mov	r5, r1
 8005bf8:	429a      	cmp	r2, r3
 8005bfa:	bfbe      	ittt	lt
 8005bfc:	460b      	movlt	r3, r1
 8005bfe:	4625      	movlt	r5, r4
 8005c00:	461c      	movlt	r4, r3
 8005c02:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8005c06:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005c0a:	68ab      	ldr	r3, [r5, #8]
 8005c0c:	6869      	ldr	r1, [r5, #4]
 8005c0e:	eb0a 0709 	add.w	r7, sl, r9
 8005c12:	42bb      	cmp	r3, r7
 8005c14:	b085      	sub	sp, #20
 8005c16:	bfb8      	it	lt
 8005c18:	3101      	addlt	r1, #1
 8005c1a:	f7ff fe8d 	bl	8005938 <_Balloc>
 8005c1e:	b930      	cbnz	r0, 8005c2e <__multiply+0x42>
 8005c20:	4602      	mov	r2, r0
 8005c22:	f240 115d 	movw	r1, #349	; 0x15d
 8005c26:	4b41      	ldr	r3, [pc, #260]	; (8005d2c <__multiply+0x140>)
 8005c28:	4841      	ldr	r0, [pc, #260]	; (8005d30 <__multiply+0x144>)
 8005c2a:	f000 fdd7 	bl	80067dc <__assert_func>
 8005c2e:	f100 0614 	add.w	r6, r0, #20
 8005c32:	4633      	mov	r3, r6
 8005c34:	2200      	movs	r2, #0
 8005c36:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8005c3a:	4543      	cmp	r3, r8
 8005c3c:	d31e      	bcc.n	8005c7c <__multiply+0x90>
 8005c3e:	f105 0c14 	add.w	ip, r5, #20
 8005c42:	f104 0314 	add.w	r3, r4, #20
 8005c46:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8005c4a:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8005c4e:	9202      	str	r2, [sp, #8]
 8005c50:	ebac 0205 	sub.w	r2, ip, r5
 8005c54:	3a15      	subs	r2, #21
 8005c56:	f022 0203 	bic.w	r2, r2, #3
 8005c5a:	3204      	adds	r2, #4
 8005c5c:	f105 0115 	add.w	r1, r5, #21
 8005c60:	458c      	cmp	ip, r1
 8005c62:	bf38      	it	cc
 8005c64:	2204      	movcc	r2, #4
 8005c66:	9201      	str	r2, [sp, #4]
 8005c68:	9a02      	ldr	r2, [sp, #8]
 8005c6a:	9303      	str	r3, [sp, #12]
 8005c6c:	429a      	cmp	r2, r3
 8005c6e:	d808      	bhi.n	8005c82 <__multiply+0x96>
 8005c70:	2f00      	cmp	r7, #0
 8005c72:	dc55      	bgt.n	8005d20 <__multiply+0x134>
 8005c74:	6107      	str	r7, [r0, #16]
 8005c76:	b005      	add	sp, #20
 8005c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c7c:	f843 2b04 	str.w	r2, [r3], #4
 8005c80:	e7db      	b.n	8005c3a <__multiply+0x4e>
 8005c82:	f8b3 a000 	ldrh.w	sl, [r3]
 8005c86:	f1ba 0f00 	cmp.w	sl, #0
 8005c8a:	d020      	beq.n	8005cce <__multiply+0xe2>
 8005c8c:	46b1      	mov	r9, r6
 8005c8e:	2200      	movs	r2, #0
 8005c90:	f105 0e14 	add.w	lr, r5, #20
 8005c94:	f85e 4b04 	ldr.w	r4, [lr], #4
 8005c98:	f8d9 b000 	ldr.w	fp, [r9]
 8005c9c:	b2a1      	uxth	r1, r4
 8005c9e:	fa1f fb8b 	uxth.w	fp, fp
 8005ca2:	fb0a b101 	mla	r1, sl, r1, fp
 8005ca6:	4411      	add	r1, r2
 8005ca8:	f8d9 2000 	ldr.w	r2, [r9]
 8005cac:	0c24      	lsrs	r4, r4, #16
 8005cae:	0c12      	lsrs	r2, r2, #16
 8005cb0:	fb0a 2404 	mla	r4, sl, r4, r2
 8005cb4:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8005cb8:	b289      	uxth	r1, r1
 8005cba:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8005cbe:	45f4      	cmp	ip, lr
 8005cc0:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8005cc4:	f849 1b04 	str.w	r1, [r9], #4
 8005cc8:	d8e4      	bhi.n	8005c94 <__multiply+0xa8>
 8005cca:	9901      	ldr	r1, [sp, #4]
 8005ccc:	5072      	str	r2, [r6, r1]
 8005cce:	9a03      	ldr	r2, [sp, #12]
 8005cd0:	3304      	adds	r3, #4
 8005cd2:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005cd6:	f1b9 0f00 	cmp.w	r9, #0
 8005cda:	d01f      	beq.n	8005d1c <__multiply+0x130>
 8005cdc:	46b6      	mov	lr, r6
 8005cde:	f04f 0a00 	mov.w	sl, #0
 8005ce2:	6834      	ldr	r4, [r6, #0]
 8005ce4:	f105 0114 	add.w	r1, r5, #20
 8005ce8:	880a      	ldrh	r2, [r1, #0]
 8005cea:	f8be b002 	ldrh.w	fp, [lr, #2]
 8005cee:	b2a4      	uxth	r4, r4
 8005cf0:	fb09 b202 	mla	r2, r9, r2, fp
 8005cf4:	4492      	add	sl, r2
 8005cf6:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8005cfa:	f84e 4b04 	str.w	r4, [lr], #4
 8005cfe:	f851 4b04 	ldr.w	r4, [r1], #4
 8005d02:	f8be 2000 	ldrh.w	r2, [lr]
 8005d06:	0c24      	lsrs	r4, r4, #16
 8005d08:	fb09 2404 	mla	r4, r9, r4, r2
 8005d0c:	458c      	cmp	ip, r1
 8005d0e:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8005d12:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8005d16:	d8e7      	bhi.n	8005ce8 <__multiply+0xfc>
 8005d18:	9a01      	ldr	r2, [sp, #4]
 8005d1a:	50b4      	str	r4, [r6, r2]
 8005d1c:	3604      	adds	r6, #4
 8005d1e:	e7a3      	b.n	8005c68 <__multiply+0x7c>
 8005d20:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d1a5      	bne.n	8005c74 <__multiply+0x88>
 8005d28:	3f01      	subs	r7, #1
 8005d2a:	e7a1      	b.n	8005c70 <__multiply+0x84>
 8005d2c:	0800764c 	.word	0x0800764c
 8005d30:	08007740 	.word	0x08007740

08005d34 <__pow5mult>:
 8005d34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d38:	4615      	mov	r5, r2
 8005d3a:	f012 0203 	ands.w	r2, r2, #3
 8005d3e:	4606      	mov	r6, r0
 8005d40:	460f      	mov	r7, r1
 8005d42:	d007      	beq.n	8005d54 <__pow5mult+0x20>
 8005d44:	4c25      	ldr	r4, [pc, #148]	; (8005ddc <__pow5mult+0xa8>)
 8005d46:	3a01      	subs	r2, #1
 8005d48:	2300      	movs	r3, #0
 8005d4a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005d4e:	f7ff fe55 	bl	80059fc <__multadd>
 8005d52:	4607      	mov	r7, r0
 8005d54:	10ad      	asrs	r5, r5, #2
 8005d56:	d03d      	beq.n	8005dd4 <__pow5mult+0xa0>
 8005d58:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8005d5a:	b97c      	cbnz	r4, 8005d7c <__pow5mult+0x48>
 8005d5c:	2010      	movs	r0, #16
 8005d5e:	f7ff fdc3 	bl	80058e8 <malloc>
 8005d62:	4602      	mov	r2, r0
 8005d64:	6270      	str	r0, [r6, #36]	; 0x24
 8005d66:	b928      	cbnz	r0, 8005d74 <__pow5mult+0x40>
 8005d68:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8005d6c:	4b1c      	ldr	r3, [pc, #112]	; (8005de0 <__pow5mult+0xac>)
 8005d6e:	481d      	ldr	r0, [pc, #116]	; (8005de4 <__pow5mult+0xb0>)
 8005d70:	f000 fd34 	bl	80067dc <__assert_func>
 8005d74:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005d78:	6004      	str	r4, [r0, #0]
 8005d7a:	60c4      	str	r4, [r0, #12]
 8005d7c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8005d80:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005d84:	b94c      	cbnz	r4, 8005d9a <__pow5mult+0x66>
 8005d86:	f240 2171 	movw	r1, #625	; 0x271
 8005d8a:	4630      	mov	r0, r6
 8005d8c:	f7ff ff18 	bl	8005bc0 <__i2b>
 8005d90:	2300      	movs	r3, #0
 8005d92:	4604      	mov	r4, r0
 8005d94:	f8c8 0008 	str.w	r0, [r8, #8]
 8005d98:	6003      	str	r3, [r0, #0]
 8005d9a:	f04f 0900 	mov.w	r9, #0
 8005d9e:	07eb      	lsls	r3, r5, #31
 8005da0:	d50a      	bpl.n	8005db8 <__pow5mult+0x84>
 8005da2:	4639      	mov	r1, r7
 8005da4:	4622      	mov	r2, r4
 8005da6:	4630      	mov	r0, r6
 8005da8:	f7ff ff20 	bl	8005bec <__multiply>
 8005dac:	4680      	mov	r8, r0
 8005dae:	4639      	mov	r1, r7
 8005db0:	4630      	mov	r0, r6
 8005db2:	f7ff fe01 	bl	80059b8 <_Bfree>
 8005db6:	4647      	mov	r7, r8
 8005db8:	106d      	asrs	r5, r5, #1
 8005dba:	d00b      	beq.n	8005dd4 <__pow5mult+0xa0>
 8005dbc:	6820      	ldr	r0, [r4, #0]
 8005dbe:	b938      	cbnz	r0, 8005dd0 <__pow5mult+0x9c>
 8005dc0:	4622      	mov	r2, r4
 8005dc2:	4621      	mov	r1, r4
 8005dc4:	4630      	mov	r0, r6
 8005dc6:	f7ff ff11 	bl	8005bec <__multiply>
 8005dca:	6020      	str	r0, [r4, #0]
 8005dcc:	f8c0 9000 	str.w	r9, [r0]
 8005dd0:	4604      	mov	r4, r0
 8005dd2:	e7e4      	b.n	8005d9e <__pow5mult+0x6a>
 8005dd4:	4638      	mov	r0, r7
 8005dd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005dda:	bf00      	nop
 8005ddc:	08007890 	.word	0x08007890
 8005de0:	080075d6 	.word	0x080075d6
 8005de4:	08007740 	.word	0x08007740

08005de8 <__lshift>:
 8005de8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005dec:	460c      	mov	r4, r1
 8005dee:	4607      	mov	r7, r0
 8005df0:	4691      	mov	r9, r2
 8005df2:	6923      	ldr	r3, [r4, #16]
 8005df4:	6849      	ldr	r1, [r1, #4]
 8005df6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8005dfa:	68a3      	ldr	r3, [r4, #8]
 8005dfc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005e00:	f108 0601 	add.w	r6, r8, #1
 8005e04:	42b3      	cmp	r3, r6
 8005e06:	db0b      	blt.n	8005e20 <__lshift+0x38>
 8005e08:	4638      	mov	r0, r7
 8005e0a:	f7ff fd95 	bl	8005938 <_Balloc>
 8005e0e:	4605      	mov	r5, r0
 8005e10:	b948      	cbnz	r0, 8005e26 <__lshift+0x3e>
 8005e12:	4602      	mov	r2, r0
 8005e14:	f240 11d9 	movw	r1, #473	; 0x1d9
 8005e18:	4b27      	ldr	r3, [pc, #156]	; (8005eb8 <__lshift+0xd0>)
 8005e1a:	4828      	ldr	r0, [pc, #160]	; (8005ebc <__lshift+0xd4>)
 8005e1c:	f000 fcde 	bl	80067dc <__assert_func>
 8005e20:	3101      	adds	r1, #1
 8005e22:	005b      	lsls	r3, r3, #1
 8005e24:	e7ee      	b.n	8005e04 <__lshift+0x1c>
 8005e26:	2300      	movs	r3, #0
 8005e28:	f100 0114 	add.w	r1, r0, #20
 8005e2c:	f100 0210 	add.w	r2, r0, #16
 8005e30:	4618      	mov	r0, r3
 8005e32:	4553      	cmp	r3, sl
 8005e34:	db33      	blt.n	8005e9e <__lshift+0xb6>
 8005e36:	6920      	ldr	r0, [r4, #16]
 8005e38:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005e3c:	f104 0314 	add.w	r3, r4, #20
 8005e40:	f019 091f 	ands.w	r9, r9, #31
 8005e44:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005e48:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005e4c:	d02b      	beq.n	8005ea6 <__lshift+0xbe>
 8005e4e:	468a      	mov	sl, r1
 8005e50:	2200      	movs	r2, #0
 8005e52:	f1c9 0e20 	rsb	lr, r9, #32
 8005e56:	6818      	ldr	r0, [r3, #0]
 8005e58:	fa00 f009 	lsl.w	r0, r0, r9
 8005e5c:	4302      	orrs	r2, r0
 8005e5e:	f84a 2b04 	str.w	r2, [sl], #4
 8005e62:	f853 2b04 	ldr.w	r2, [r3], #4
 8005e66:	459c      	cmp	ip, r3
 8005e68:	fa22 f20e 	lsr.w	r2, r2, lr
 8005e6c:	d8f3      	bhi.n	8005e56 <__lshift+0x6e>
 8005e6e:	ebac 0304 	sub.w	r3, ip, r4
 8005e72:	3b15      	subs	r3, #21
 8005e74:	f023 0303 	bic.w	r3, r3, #3
 8005e78:	3304      	adds	r3, #4
 8005e7a:	f104 0015 	add.w	r0, r4, #21
 8005e7e:	4584      	cmp	ip, r0
 8005e80:	bf38      	it	cc
 8005e82:	2304      	movcc	r3, #4
 8005e84:	50ca      	str	r2, [r1, r3]
 8005e86:	b10a      	cbz	r2, 8005e8c <__lshift+0xa4>
 8005e88:	f108 0602 	add.w	r6, r8, #2
 8005e8c:	3e01      	subs	r6, #1
 8005e8e:	4638      	mov	r0, r7
 8005e90:	4621      	mov	r1, r4
 8005e92:	612e      	str	r6, [r5, #16]
 8005e94:	f7ff fd90 	bl	80059b8 <_Bfree>
 8005e98:	4628      	mov	r0, r5
 8005e9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005e9e:	f842 0f04 	str.w	r0, [r2, #4]!
 8005ea2:	3301      	adds	r3, #1
 8005ea4:	e7c5      	b.n	8005e32 <__lshift+0x4a>
 8005ea6:	3904      	subs	r1, #4
 8005ea8:	f853 2b04 	ldr.w	r2, [r3], #4
 8005eac:	459c      	cmp	ip, r3
 8005eae:	f841 2f04 	str.w	r2, [r1, #4]!
 8005eb2:	d8f9      	bhi.n	8005ea8 <__lshift+0xc0>
 8005eb4:	e7ea      	b.n	8005e8c <__lshift+0xa4>
 8005eb6:	bf00      	nop
 8005eb8:	0800764c 	.word	0x0800764c
 8005ebc:	08007740 	.word	0x08007740

08005ec0 <__mcmp>:
 8005ec0:	4603      	mov	r3, r0
 8005ec2:	690a      	ldr	r2, [r1, #16]
 8005ec4:	6900      	ldr	r0, [r0, #16]
 8005ec6:	b530      	push	{r4, r5, lr}
 8005ec8:	1a80      	subs	r0, r0, r2
 8005eca:	d10d      	bne.n	8005ee8 <__mcmp+0x28>
 8005ecc:	3314      	adds	r3, #20
 8005ece:	3114      	adds	r1, #20
 8005ed0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005ed4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005ed8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005edc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005ee0:	4295      	cmp	r5, r2
 8005ee2:	d002      	beq.n	8005eea <__mcmp+0x2a>
 8005ee4:	d304      	bcc.n	8005ef0 <__mcmp+0x30>
 8005ee6:	2001      	movs	r0, #1
 8005ee8:	bd30      	pop	{r4, r5, pc}
 8005eea:	42a3      	cmp	r3, r4
 8005eec:	d3f4      	bcc.n	8005ed8 <__mcmp+0x18>
 8005eee:	e7fb      	b.n	8005ee8 <__mcmp+0x28>
 8005ef0:	f04f 30ff 	mov.w	r0, #4294967295
 8005ef4:	e7f8      	b.n	8005ee8 <__mcmp+0x28>
	...

08005ef8 <__mdiff>:
 8005ef8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005efc:	460c      	mov	r4, r1
 8005efe:	4606      	mov	r6, r0
 8005f00:	4611      	mov	r1, r2
 8005f02:	4620      	mov	r0, r4
 8005f04:	4692      	mov	sl, r2
 8005f06:	f7ff ffdb 	bl	8005ec0 <__mcmp>
 8005f0a:	1e05      	subs	r5, r0, #0
 8005f0c:	d111      	bne.n	8005f32 <__mdiff+0x3a>
 8005f0e:	4629      	mov	r1, r5
 8005f10:	4630      	mov	r0, r6
 8005f12:	f7ff fd11 	bl	8005938 <_Balloc>
 8005f16:	4602      	mov	r2, r0
 8005f18:	b928      	cbnz	r0, 8005f26 <__mdiff+0x2e>
 8005f1a:	f240 2132 	movw	r1, #562	; 0x232
 8005f1e:	4b3c      	ldr	r3, [pc, #240]	; (8006010 <__mdiff+0x118>)
 8005f20:	483c      	ldr	r0, [pc, #240]	; (8006014 <__mdiff+0x11c>)
 8005f22:	f000 fc5b 	bl	80067dc <__assert_func>
 8005f26:	2301      	movs	r3, #1
 8005f28:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8005f2c:	4610      	mov	r0, r2
 8005f2e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f32:	bfa4      	itt	ge
 8005f34:	4653      	movge	r3, sl
 8005f36:	46a2      	movge	sl, r4
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f8da 1004 	ldr.w	r1, [sl, #4]
 8005f3e:	bfa6      	itte	ge
 8005f40:	461c      	movge	r4, r3
 8005f42:	2500      	movge	r5, #0
 8005f44:	2501      	movlt	r5, #1
 8005f46:	f7ff fcf7 	bl	8005938 <_Balloc>
 8005f4a:	4602      	mov	r2, r0
 8005f4c:	b918      	cbnz	r0, 8005f56 <__mdiff+0x5e>
 8005f4e:	f44f 7110 	mov.w	r1, #576	; 0x240
 8005f52:	4b2f      	ldr	r3, [pc, #188]	; (8006010 <__mdiff+0x118>)
 8005f54:	e7e4      	b.n	8005f20 <__mdiff+0x28>
 8005f56:	f100 0814 	add.w	r8, r0, #20
 8005f5a:	f8da 7010 	ldr.w	r7, [sl, #16]
 8005f5e:	60c5      	str	r5, [r0, #12]
 8005f60:	f04f 0c00 	mov.w	ip, #0
 8005f64:	f10a 0514 	add.w	r5, sl, #20
 8005f68:	f10a 0010 	add.w	r0, sl, #16
 8005f6c:	46c2      	mov	sl, r8
 8005f6e:	6926      	ldr	r6, [r4, #16]
 8005f70:	f104 0914 	add.w	r9, r4, #20
 8005f74:	eb05 0e87 	add.w	lr, r5, r7, lsl #2
 8005f78:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8005f7c:	f850 bf04 	ldr.w	fp, [r0, #4]!
 8005f80:	f859 3b04 	ldr.w	r3, [r9], #4
 8005f84:	fa1f f18b 	uxth.w	r1, fp
 8005f88:	4461      	add	r1, ip
 8005f8a:	fa1f fc83 	uxth.w	ip, r3
 8005f8e:	0c1b      	lsrs	r3, r3, #16
 8005f90:	eba1 010c 	sub.w	r1, r1, ip
 8005f94:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8005f98:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8005f9c:	b289      	uxth	r1, r1
 8005f9e:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8005fa2:	454e      	cmp	r6, r9
 8005fa4:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8005fa8:	f84a 3b04 	str.w	r3, [sl], #4
 8005fac:	d8e6      	bhi.n	8005f7c <__mdiff+0x84>
 8005fae:	1b33      	subs	r3, r6, r4
 8005fb0:	3b15      	subs	r3, #21
 8005fb2:	f023 0303 	bic.w	r3, r3, #3
 8005fb6:	3415      	adds	r4, #21
 8005fb8:	3304      	adds	r3, #4
 8005fba:	42a6      	cmp	r6, r4
 8005fbc:	bf38      	it	cc
 8005fbe:	2304      	movcc	r3, #4
 8005fc0:	441d      	add	r5, r3
 8005fc2:	4443      	add	r3, r8
 8005fc4:	461e      	mov	r6, r3
 8005fc6:	462c      	mov	r4, r5
 8005fc8:	4574      	cmp	r4, lr
 8005fca:	d30e      	bcc.n	8005fea <__mdiff+0xf2>
 8005fcc:	f10e 0103 	add.w	r1, lr, #3
 8005fd0:	1b49      	subs	r1, r1, r5
 8005fd2:	f021 0103 	bic.w	r1, r1, #3
 8005fd6:	3d03      	subs	r5, #3
 8005fd8:	45ae      	cmp	lr, r5
 8005fda:	bf38      	it	cc
 8005fdc:	2100      	movcc	r1, #0
 8005fde:	4419      	add	r1, r3
 8005fe0:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005fe4:	b18b      	cbz	r3, 800600a <__mdiff+0x112>
 8005fe6:	6117      	str	r7, [r2, #16]
 8005fe8:	e7a0      	b.n	8005f2c <__mdiff+0x34>
 8005fea:	f854 8b04 	ldr.w	r8, [r4], #4
 8005fee:	fa1f f188 	uxth.w	r1, r8
 8005ff2:	4461      	add	r1, ip
 8005ff4:	1408      	asrs	r0, r1, #16
 8005ff6:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 8005ffa:	b289      	uxth	r1, r1
 8005ffc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8006000:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8006004:	f846 1b04 	str.w	r1, [r6], #4
 8006008:	e7de      	b.n	8005fc8 <__mdiff+0xd0>
 800600a:	3f01      	subs	r7, #1
 800600c:	e7e8      	b.n	8005fe0 <__mdiff+0xe8>
 800600e:	bf00      	nop
 8006010:	0800764c 	.word	0x0800764c
 8006014:	08007740 	.word	0x08007740

08006018 <__ulp>:
 8006018:	4b11      	ldr	r3, [pc, #68]	; (8006060 <__ulp+0x48>)
 800601a:	400b      	ands	r3, r1
 800601c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8006020:	2b00      	cmp	r3, #0
 8006022:	dd02      	ble.n	800602a <__ulp+0x12>
 8006024:	2000      	movs	r0, #0
 8006026:	4619      	mov	r1, r3
 8006028:	4770      	bx	lr
 800602a:	425b      	negs	r3, r3
 800602c:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8006030:	f04f 0000 	mov.w	r0, #0
 8006034:	f04f 0100 	mov.w	r1, #0
 8006038:	ea4f 5223 	mov.w	r2, r3, asr #20
 800603c:	da04      	bge.n	8006048 <__ulp+0x30>
 800603e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8006042:	fa43 f102 	asr.w	r1, r3, r2
 8006046:	4770      	bx	lr
 8006048:	f1a2 0314 	sub.w	r3, r2, #20
 800604c:	2b1e      	cmp	r3, #30
 800604e:	bfd6      	itet	le
 8006050:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8006054:	2301      	movgt	r3, #1
 8006056:	fa22 f303 	lsrle.w	r3, r2, r3
 800605a:	4618      	mov	r0, r3
 800605c:	4770      	bx	lr
 800605e:	bf00      	nop
 8006060:	7ff00000 	.word	0x7ff00000

08006064 <__b2d>:
 8006064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006068:	6907      	ldr	r7, [r0, #16]
 800606a:	f100 0914 	add.w	r9, r0, #20
 800606e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8006072:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8006076:	f1a7 0804 	sub.w	r8, r7, #4
 800607a:	4630      	mov	r0, r6
 800607c:	f7ff fd52 	bl	8005b24 <__hi0bits>
 8006080:	f1c0 0320 	rsb	r3, r0, #32
 8006084:	280a      	cmp	r0, #10
 8006086:	600b      	str	r3, [r1, #0]
 8006088:	491f      	ldr	r1, [pc, #124]	; (8006108 <__b2d+0xa4>)
 800608a:	dc17      	bgt.n	80060bc <__b2d+0x58>
 800608c:	45c1      	cmp	r9, r8
 800608e:	bf28      	it	cs
 8006090:	2200      	movcs	r2, #0
 8006092:	f1c0 0c0b 	rsb	ip, r0, #11
 8006096:	fa26 f30c 	lsr.w	r3, r6, ip
 800609a:	bf38      	it	cc
 800609c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80060a0:	ea43 0501 	orr.w	r5, r3, r1
 80060a4:	f100 0315 	add.w	r3, r0, #21
 80060a8:	fa06 f303 	lsl.w	r3, r6, r3
 80060ac:	fa22 f20c 	lsr.w	r2, r2, ip
 80060b0:	ea43 0402 	orr.w	r4, r3, r2
 80060b4:	4620      	mov	r0, r4
 80060b6:	4629      	mov	r1, r5
 80060b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80060bc:	45c1      	cmp	r9, r8
 80060be:	bf2e      	itee	cs
 80060c0:	2200      	movcs	r2, #0
 80060c2:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80060c6:	f1a7 0808 	subcc.w	r8, r7, #8
 80060ca:	f1b0 030b 	subs.w	r3, r0, #11
 80060ce:	d016      	beq.n	80060fe <__b2d+0x9a>
 80060d0:	f1c3 0720 	rsb	r7, r3, #32
 80060d4:	fa22 f107 	lsr.w	r1, r2, r7
 80060d8:	45c8      	cmp	r8, r9
 80060da:	fa06 f603 	lsl.w	r6, r6, r3
 80060de:	ea46 0601 	orr.w	r6, r6, r1
 80060e2:	bf94      	ite	ls
 80060e4:	2100      	movls	r1, #0
 80060e6:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 80060ea:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 80060ee:	fa02 f003 	lsl.w	r0, r2, r3
 80060f2:	40f9      	lsrs	r1, r7
 80060f4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80060f8:	ea40 0401 	orr.w	r4, r0, r1
 80060fc:	e7da      	b.n	80060b4 <__b2d+0x50>
 80060fe:	4614      	mov	r4, r2
 8006100:	ea46 0501 	orr.w	r5, r6, r1
 8006104:	e7d6      	b.n	80060b4 <__b2d+0x50>
 8006106:	bf00      	nop
 8006108:	3ff00000 	.word	0x3ff00000

0800610c <__d2b>:
 800610c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006110:	2101      	movs	r1, #1
 8006112:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8006116:	4690      	mov	r8, r2
 8006118:	461d      	mov	r5, r3
 800611a:	f7ff fc0d 	bl	8005938 <_Balloc>
 800611e:	4604      	mov	r4, r0
 8006120:	b930      	cbnz	r0, 8006130 <__d2b+0x24>
 8006122:	4602      	mov	r2, r0
 8006124:	f240 310a 	movw	r1, #778	; 0x30a
 8006128:	4b24      	ldr	r3, [pc, #144]	; (80061bc <__d2b+0xb0>)
 800612a:	4825      	ldr	r0, [pc, #148]	; (80061c0 <__d2b+0xb4>)
 800612c:	f000 fb56 	bl	80067dc <__assert_func>
 8006130:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8006134:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8006138:	bb2d      	cbnz	r5, 8006186 <__d2b+0x7a>
 800613a:	9301      	str	r3, [sp, #4]
 800613c:	f1b8 0300 	subs.w	r3, r8, #0
 8006140:	d026      	beq.n	8006190 <__d2b+0x84>
 8006142:	4668      	mov	r0, sp
 8006144:	9300      	str	r3, [sp, #0]
 8006146:	f7ff fd0d 	bl	8005b64 <__lo0bits>
 800614a:	9900      	ldr	r1, [sp, #0]
 800614c:	b1f0      	cbz	r0, 800618c <__d2b+0x80>
 800614e:	9a01      	ldr	r2, [sp, #4]
 8006150:	f1c0 0320 	rsb	r3, r0, #32
 8006154:	fa02 f303 	lsl.w	r3, r2, r3
 8006158:	430b      	orrs	r3, r1
 800615a:	40c2      	lsrs	r2, r0
 800615c:	6163      	str	r3, [r4, #20]
 800615e:	9201      	str	r2, [sp, #4]
 8006160:	9b01      	ldr	r3, [sp, #4]
 8006162:	2b00      	cmp	r3, #0
 8006164:	bf14      	ite	ne
 8006166:	2102      	movne	r1, #2
 8006168:	2101      	moveq	r1, #1
 800616a:	61a3      	str	r3, [r4, #24]
 800616c:	6121      	str	r1, [r4, #16]
 800616e:	b1c5      	cbz	r5, 80061a2 <__d2b+0x96>
 8006170:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006174:	4405      	add	r5, r0
 8006176:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800617a:	603d      	str	r5, [r7, #0]
 800617c:	6030      	str	r0, [r6, #0]
 800617e:	4620      	mov	r0, r4
 8006180:	b002      	add	sp, #8
 8006182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006186:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800618a:	e7d6      	b.n	800613a <__d2b+0x2e>
 800618c:	6161      	str	r1, [r4, #20]
 800618e:	e7e7      	b.n	8006160 <__d2b+0x54>
 8006190:	a801      	add	r0, sp, #4
 8006192:	f7ff fce7 	bl	8005b64 <__lo0bits>
 8006196:	2101      	movs	r1, #1
 8006198:	9b01      	ldr	r3, [sp, #4]
 800619a:	6121      	str	r1, [r4, #16]
 800619c:	6163      	str	r3, [r4, #20]
 800619e:	3020      	adds	r0, #32
 80061a0:	e7e5      	b.n	800616e <__d2b+0x62>
 80061a2:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 80061a6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80061aa:	6038      	str	r0, [r7, #0]
 80061ac:	6918      	ldr	r0, [r3, #16]
 80061ae:	f7ff fcb9 	bl	8005b24 <__hi0bits>
 80061b2:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 80061b6:	6031      	str	r1, [r6, #0]
 80061b8:	e7e1      	b.n	800617e <__d2b+0x72>
 80061ba:	bf00      	nop
 80061bc:	0800764c 	.word	0x0800764c
 80061c0:	08007740 	.word	0x08007740

080061c4 <__ratio>:
 80061c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061c8:	4688      	mov	r8, r1
 80061ca:	4669      	mov	r1, sp
 80061cc:	4681      	mov	r9, r0
 80061ce:	f7ff ff49 	bl	8006064 <__b2d>
 80061d2:	460f      	mov	r7, r1
 80061d4:	4604      	mov	r4, r0
 80061d6:	460d      	mov	r5, r1
 80061d8:	4640      	mov	r0, r8
 80061da:	a901      	add	r1, sp, #4
 80061dc:	f7ff ff42 	bl	8006064 <__b2d>
 80061e0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80061e4:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80061e8:	468b      	mov	fp, r1
 80061ea:	eba3 0c02 	sub.w	ip, r3, r2
 80061ee:	e9dd 3200 	ldrd	r3, r2, [sp]
 80061f2:	1a9b      	subs	r3, r3, r2
 80061f4:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	bfd5      	itete	le
 80061fc:	460a      	movle	r2, r1
 80061fe:	462a      	movgt	r2, r5
 8006200:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8006204:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8006208:	bfd8      	it	le
 800620a:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800620e:	465b      	mov	r3, fp
 8006210:	4602      	mov	r2, r0
 8006212:	4639      	mov	r1, r7
 8006214:	4620      	mov	r0, r4
 8006216:	f7fa fa99 	bl	800074c <__aeabi_ddiv>
 800621a:	b003      	add	sp, #12
 800621c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006220 <__copybits>:
 8006220:	3901      	subs	r1, #1
 8006222:	b570      	push	{r4, r5, r6, lr}
 8006224:	1149      	asrs	r1, r1, #5
 8006226:	6914      	ldr	r4, [r2, #16]
 8006228:	3101      	adds	r1, #1
 800622a:	f102 0314 	add.w	r3, r2, #20
 800622e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006232:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006236:	1f05      	subs	r5, r0, #4
 8006238:	42a3      	cmp	r3, r4
 800623a:	d30c      	bcc.n	8006256 <__copybits+0x36>
 800623c:	1aa3      	subs	r3, r4, r2
 800623e:	3b11      	subs	r3, #17
 8006240:	f023 0303 	bic.w	r3, r3, #3
 8006244:	3211      	adds	r2, #17
 8006246:	42a2      	cmp	r2, r4
 8006248:	bf88      	it	hi
 800624a:	2300      	movhi	r3, #0
 800624c:	4418      	add	r0, r3
 800624e:	2300      	movs	r3, #0
 8006250:	4288      	cmp	r0, r1
 8006252:	d305      	bcc.n	8006260 <__copybits+0x40>
 8006254:	bd70      	pop	{r4, r5, r6, pc}
 8006256:	f853 6b04 	ldr.w	r6, [r3], #4
 800625a:	f845 6f04 	str.w	r6, [r5, #4]!
 800625e:	e7eb      	b.n	8006238 <__copybits+0x18>
 8006260:	f840 3b04 	str.w	r3, [r0], #4
 8006264:	e7f4      	b.n	8006250 <__copybits+0x30>

08006266 <__any_on>:
 8006266:	f100 0214 	add.w	r2, r0, #20
 800626a:	6900      	ldr	r0, [r0, #16]
 800626c:	114b      	asrs	r3, r1, #5
 800626e:	4298      	cmp	r0, r3
 8006270:	b510      	push	{r4, lr}
 8006272:	db11      	blt.n	8006298 <__any_on+0x32>
 8006274:	dd0a      	ble.n	800628c <__any_on+0x26>
 8006276:	f011 011f 	ands.w	r1, r1, #31
 800627a:	d007      	beq.n	800628c <__any_on+0x26>
 800627c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006280:	fa24 f001 	lsr.w	r0, r4, r1
 8006284:	fa00 f101 	lsl.w	r1, r0, r1
 8006288:	428c      	cmp	r4, r1
 800628a:	d10b      	bne.n	80062a4 <__any_on+0x3e>
 800628c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006290:	4293      	cmp	r3, r2
 8006292:	d803      	bhi.n	800629c <__any_on+0x36>
 8006294:	2000      	movs	r0, #0
 8006296:	bd10      	pop	{r4, pc}
 8006298:	4603      	mov	r3, r0
 800629a:	e7f7      	b.n	800628c <__any_on+0x26>
 800629c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80062a0:	2900      	cmp	r1, #0
 80062a2:	d0f5      	beq.n	8006290 <__any_on+0x2a>
 80062a4:	2001      	movs	r0, #1
 80062a6:	e7f6      	b.n	8006296 <__any_on+0x30>

080062a8 <_calloc_r>:
 80062a8:	b538      	push	{r3, r4, r5, lr}
 80062aa:	fb02 f501 	mul.w	r5, r2, r1
 80062ae:	4629      	mov	r1, r5
 80062b0:	f000 f854 	bl	800635c <_malloc_r>
 80062b4:	4604      	mov	r4, r0
 80062b6:	b118      	cbz	r0, 80062c0 <_calloc_r+0x18>
 80062b8:	462a      	mov	r2, r5
 80062ba:	2100      	movs	r1, #0
 80062bc:	f7fc f8d4 	bl	8002468 <memset>
 80062c0:	4620      	mov	r0, r4
 80062c2:	bd38      	pop	{r3, r4, r5, pc}

080062c4 <_free_r>:
 80062c4:	b538      	push	{r3, r4, r5, lr}
 80062c6:	4605      	mov	r5, r0
 80062c8:	2900      	cmp	r1, #0
 80062ca:	d043      	beq.n	8006354 <_free_r+0x90>
 80062cc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80062d0:	1f0c      	subs	r4, r1, #4
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	bfb8      	it	lt
 80062d6:	18e4      	addlt	r4, r4, r3
 80062d8:	f000 fb0e 	bl	80068f8 <__malloc_lock>
 80062dc:	4a1e      	ldr	r2, [pc, #120]	; (8006358 <_free_r+0x94>)
 80062de:	6813      	ldr	r3, [r2, #0]
 80062e0:	4610      	mov	r0, r2
 80062e2:	b933      	cbnz	r3, 80062f2 <_free_r+0x2e>
 80062e4:	6063      	str	r3, [r4, #4]
 80062e6:	6014      	str	r4, [r2, #0]
 80062e8:	4628      	mov	r0, r5
 80062ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80062ee:	f000 bb09 	b.w	8006904 <__malloc_unlock>
 80062f2:	42a3      	cmp	r3, r4
 80062f4:	d90a      	bls.n	800630c <_free_r+0x48>
 80062f6:	6821      	ldr	r1, [r4, #0]
 80062f8:	1862      	adds	r2, r4, r1
 80062fa:	4293      	cmp	r3, r2
 80062fc:	bf01      	itttt	eq
 80062fe:	681a      	ldreq	r2, [r3, #0]
 8006300:	685b      	ldreq	r3, [r3, #4]
 8006302:	1852      	addeq	r2, r2, r1
 8006304:	6022      	streq	r2, [r4, #0]
 8006306:	6063      	str	r3, [r4, #4]
 8006308:	6004      	str	r4, [r0, #0]
 800630a:	e7ed      	b.n	80062e8 <_free_r+0x24>
 800630c:	461a      	mov	r2, r3
 800630e:	685b      	ldr	r3, [r3, #4]
 8006310:	b10b      	cbz	r3, 8006316 <_free_r+0x52>
 8006312:	42a3      	cmp	r3, r4
 8006314:	d9fa      	bls.n	800630c <_free_r+0x48>
 8006316:	6811      	ldr	r1, [r2, #0]
 8006318:	1850      	adds	r0, r2, r1
 800631a:	42a0      	cmp	r0, r4
 800631c:	d10b      	bne.n	8006336 <_free_r+0x72>
 800631e:	6820      	ldr	r0, [r4, #0]
 8006320:	4401      	add	r1, r0
 8006322:	1850      	adds	r0, r2, r1
 8006324:	4283      	cmp	r3, r0
 8006326:	6011      	str	r1, [r2, #0]
 8006328:	d1de      	bne.n	80062e8 <_free_r+0x24>
 800632a:	6818      	ldr	r0, [r3, #0]
 800632c:	685b      	ldr	r3, [r3, #4]
 800632e:	4401      	add	r1, r0
 8006330:	6011      	str	r1, [r2, #0]
 8006332:	6053      	str	r3, [r2, #4]
 8006334:	e7d8      	b.n	80062e8 <_free_r+0x24>
 8006336:	d902      	bls.n	800633e <_free_r+0x7a>
 8006338:	230c      	movs	r3, #12
 800633a:	602b      	str	r3, [r5, #0]
 800633c:	e7d4      	b.n	80062e8 <_free_r+0x24>
 800633e:	6820      	ldr	r0, [r4, #0]
 8006340:	1821      	adds	r1, r4, r0
 8006342:	428b      	cmp	r3, r1
 8006344:	bf01      	itttt	eq
 8006346:	6819      	ldreq	r1, [r3, #0]
 8006348:	685b      	ldreq	r3, [r3, #4]
 800634a:	1809      	addeq	r1, r1, r0
 800634c:	6021      	streq	r1, [r4, #0]
 800634e:	6063      	str	r3, [r4, #4]
 8006350:	6054      	str	r4, [r2, #4]
 8006352:	e7c9      	b.n	80062e8 <_free_r+0x24>
 8006354:	bd38      	pop	{r3, r4, r5, pc}
 8006356:	bf00      	nop
 8006358:	20000608 	.word	0x20000608

0800635c <_malloc_r>:
 800635c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800635e:	1ccd      	adds	r5, r1, #3
 8006360:	f025 0503 	bic.w	r5, r5, #3
 8006364:	3508      	adds	r5, #8
 8006366:	2d0c      	cmp	r5, #12
 8006368:	bf38      	it	cc
 800636a:	250c      	movcc	r5, #12
 800636c:	2d00      	cmp	r5, #0
 800636e:	4606      	mov	r6, r0
 8006370:	db01      	blt.n	8006376 <_malloc_r+0x1a>
 8006372:	42a9      	cmp	r1, r5
 8006374:	d903      	bls.n	800637e <_malloc_r+0x22>
 8006376:	230c      	movs	r3, #12
 8006378:	6033      	str	r3, [r6, #0]
 800637a:	2000      	movs	r0, #0
 800637c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800637e:	f000 fabb 	bl	80068f8 <__malloc_lock>
 8006382:	4921      	ldr	r1, [pc, #132]	; (8006408 <_malloc_r+0xac>)
 8006384:	680a      	ldr	r2, [r1, #0]
 8006386:	4614      	mov	r4, r2
 8006388:	b99c      	cbnz	r4, 80063b2 <_malloc_r+0x56>
 800638a:	4f20      	ldr	r7, [pc, #128]	; (800640c <_malloc_r+0xb0>)
 800638c:	683b      	ldr	r3, [r7, #0]
 800638e:	b923      	cbnz	r3, 800639a <_malloc_r+0x3e>
 8006390:	4621      	mov	r1, r4
 8006392:	4630      	mov	r0, r6
 8006394:	f000 f99e 	bl	80066d4 <_sbrk_r>
 8006398:	6038      	str	r0, [r7, #0]
 800639a:	4629      	mov	r1, r5
 800639c:	4630      	mov	r0, r6
 800639e:	f000 f999 	bl	80066d4 <_sbrk_r>
 80063a2:	1c43      	adds	r3, r0, #1
 80063a4:	d123      	bne.n	80063ee <_malloc_r+0x92>
 80063a6:	230c      	movs	r3, #12
 80063a8:	4630      	mov	r0, r6
 80063aa:	6033      	str	r3, [r6, #0]
 80063ac:	f000 faaa 	bl	8006904 <__malloc_unlock>
 80063b0:	e7e3      	b.n	800637a <_malloc_r+0x1e>
 80063b2:	6823      	ldr	r3, [r4, #0]
 80063b4:	1b5b      	subs	r3, r3, r5
 80063b6:	d417      	bmi.n	80063e8 <_malloc_r+0x8c>
 80063b8:	2b0b      	cmp	r3, #11
 80063ba:	d903      	bls.n	80063c4 <_malloc_r+0x68>
 80063bc:	6023      	str	r3, [r4, #0]
 80063be:	441c      	add	r4, r3
 80063c0:	6025      	str	r5, [r4, #0]
 80063c2:	e004      	b.n	80063ce <_malloc_r+0x72>
 80063c4:	6863      	ldr	r3, [r4, #4]
 80063c6:	42a2      	cmp	r2, r4
 80063c8:	bf0c      	ite	eq
 80063ca:	600b      	streq	r3, [r1, #0]
 80063cc:	6053      	strne	r3, [r2, #4]
 80063ce:	4630      	mov	r0, r6
 80063d0:	f000 fa98 	bl	8006904 <__malloc_unlock>
 80063d4:	f104 000b 	add.w	r0, r4, #11
 80063d8:	1d23      	adds	r3, r4, #4
 80063da:	f020 0007 	bic.w	r0, r0, #7
 80063de:	1ac2      	subs	r2, r0, r3
 80063e0:	d0cc      	beq.n	800637c <_malloc_r+0x20>
 80063e2:	1a1b      	subs	r3, r3, r0
 80063e4:	50a3      	str	r3, [r4, r2]
 80063e6:	e7c9      	b.n	800637c <_malloc_r+0x20>
 80063e8:	4622      	mov	r2, r4
 80063ea:	6864      	ldr	r4, [r4, #4]
 80063ec:	e7cc      	b.n	8006388 <_malloc_r+0x2c>
 80063ee:	1cc4      	adds	r4, r0, #3
 80063f0:	f024 0403 	bic.w	r4, r4, #3
 80063f4:	42a0      	cmp	r0, r4
 80063f6:	d0e3      	beq.n	80063c0 <_malloc_r+0x64>
 80063f8:	1a21      	subs	r1, r4, r0
 80063fa:	4630      	mov	r0, r6
 80063fc:	f000 f96a 	bl	80066d4 <_sbrk_r>
 8006400:	3001      	adds	r0, #1
 8006402:	d1dd      	bne.n	80063c0 <_malloc_r+0x64>
 8006404:	e7cf      	b.n	80063a6 <_malloc_r+0x4a>
 8006406:	bf00      	nop
 8006408:	20000608 	.word	0x20000608
 800640c:	2000060c 	.word	0x2000060c

08006410 <__ssputs_r>:
 8006410:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006414:	688e      	ldr	r6, [r1, #8]
 8006416:	4682      	mov	sl, r0
 8006418:	429e      	cmp	r6, r3
 800641a:	460c      	mov	r4, r1
 800641c:	4690      	mov	r8, r2
 800641e:	461f      	mov	r7, r3
 8006420:	d838      	bhi.n	8006494 <__ssputs_r+0x84>
 8006422:	898a      	ldrh	r2, [r1, #12]
 8006424:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006428:	d032      	beq.n	8006490 <__ssputs_r+0x80>
 800642a:	6825      	ldr	r5, [r4, #0]
 800642c:	6909      	ldr	r1, [r1, #16]
 800642e:	3301      	adds	r3, #1
 8006430:	eba5 0901 	sub.w	r9, r5, r1
 8006434:	6965      	ldr	r5, [r4, #20]
 8006436:	444b      	add	r3, r9
 8006438:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800643c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006440:	106d      	asrs	r5, r5, #1
 8006442:	429d      	cmp	r5, r3
 8006444:	bf38      	it	cc
 8006446:	461d      	movcc	r5, r3
 8006448:	0553      	lsls	r3, r2, #21
 800644a:	d531      	bpl.n	80064b0 <__ssputs_r+0xa0>
 800644c:	4629      	mov	r1, r5
 800644e:	f7ff ff85 	bl	800635c <_malloc_r>
 8006452:	4606      	mov	r6, r0
 8006454:	b950      	cbnz	r0, 800646c <__ssputs_r+0x5c>
 8006456:	230c      	movs	r3, #12
 8006458:	f04f 30ff 	mov.w	r0, #4294967295
 800645c:	f8ca 3000 	str.w	r3, [sl]
 8006460:	89a3      	ldrh	r3, [r4, #12]
 8006462:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006466:	81a3      	strh	r3, [r4, #12]
 8006468:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800646c:	464a      	mov	r2, r9
 800646e:	6921      	ldr	r1, [r4, #16]
 8006470:	f7fb ffec 	bl	800244c <memcpy>
 8006474:	89a3      	ldrh	r3, [r4, #12]
 8006476:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800647a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800647e:	81a3      	strh	r3, [r4, #12]
 8006480:	6126      	str	r6, [r4, #16]
 8006482:	444e      	add	r6, r9
 8006484:	6026      	str	r6, [r4, #0]
 8006486:	463e      	mov	r6, r7
 8006488:	6165      	str	r5, [r4, #20]
 800648a:	eba5 0509 	sub.w	r5, r5, r9
 800648e:	60a5      	str	r5, [r4, #8]
 8006490:	42be      	cmp	r6, r7
 8006492:	d900      	bls.n	8006496 <__ssputs_r+0x86>
 8006494:	463e      	mov	r6, r7
 8006496:	4632      	mov	r2, r6
 8006498:	4641      	mov	r1, r8
 800649a:	6820      	ldr	r0, [r4, #0]
 800649c:	f000 fa12 	bl	80068c4 <memmove>
 80064a0:	68a3      	ldr	r3, [r4, #8]
 80064a2:	6822      	ldr	r2, [r4, #0]
 80064a4:	1b9b      	subs	r3, r3, r6
 80064a6:	4432      	add	r2, r6
 80064a8:	2000      	movs	r0, #0
 80064aa:	60a3      	str	r3, [r4, #8]
 80064ac:	6022      	str	r2, [r4, #0]
 80064ae:	e7db      	b.n	8006468 <__ssputs_r+0x58>
 80064b0:	462a      	mov	r2, r5
 80064b2:	f000 fa2d 	bl	8006910 <_realloc_r>
 80064b6:	4606      	mov	r6, r0
 80064b8:	2800      	cmp	r0, #0
 80064ba:	d1e1      	bne.n	8006480 <__ssputs_r+0x70>
 80064bc:	4650      	mov	r0, sl
 80064be:	6921      	ldr	r1, [r4, #16]
 80064c0:	f7ff ff00 	bl	80062c4 <_free_r>
 80064c4:	e7c7      	b.n	8006456 <__ssputs_r+0x46>
	...

080064c8 <_svfiprintf_r>:
 80064c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80064cc:	4698      	mov	r8, r3
 80064ce:	898b      	ldrh	r3, [r1, #12]
 80064d0:	4607      	mov	r7, r0
 80064d2:	061b      	lsls	r3, r3, #24
 80064d4:	460d      	mov	r5, r1
 80064d6:	4614      	mov	r4, r2
 80064d8:	b09d      	sub	sp, #116	; 0x74
 80064da:	d50e      	bpl.n	80064fa <_svfiprintf_r+0x32>
 80064dc:	690b      	ldr	r3, [r1, #16]
 80064de:	b963      	cbnz	r3, 80064fa <_svfiprintf_r+0x32>
 80064e0:	2140      	movs	r1, #64	; 0x40
 80064e2:	f7ff ff3b 	bl	800635c <_malloc_r>
 80064e6:	6028      	str	r0, [r5, #0]
 80064e8:	6128      	str	r0, [r5, #16]
 80064ea:	b920      	cbnz	r0, 80064f6 <_svfiprintf_r+0x2e>
 80064ec:	230c      	movs	r3, #12
 80064ee:	603b      	str	r3, [r7, #0]
 80064f0:	f04f 30ff 	mov.w	r0, #4294967295
 80064f4:	e0d1      	b.n	800669a <_svfiprintf_r+0x1d2>
 80064f6:	2340      	movs	r3, #64	; 0x40
 80064f8:	616b      	str	r3, [r5, #20]
 80064fa:	2300      	movs	r3, #0
 80064fc:	9309      	str	r3, [sp, #36]	; 0x24
 80064fe:	2320      	movs	r3, #32
 8006500:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006504:	2330      	movs	r3, #48	; 0x30
 8006506:	f04f 0901 	mov.w	r9, #1
 800650a:	f8cd 800c 	str.w	r8, [sp, #12]
 800650e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80066b4 <_svfiprintf_r+0x1ec>
 8006512:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006516:	4623      	mov	r3, r4
 8006518:	469a      	mov	sl, r3
 800651a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800651e:	b10a      	cbz	r2, 8006524 <_svfiprintf_r+0x5c>
 8006520:	2a25      	cmp	r2, #37	; 0x25
 8006522:	d1f9      	bne.n	8006518 <_svfiprintf_r+0x50>
 8006524:	ebba 0b04 	subs.w	fp, sl, r4
 8006528:	d00b      	beq.n	8006542 <_svfiprintf_r+0x7a>
 800652a:	465b      	mov	r3, fp
 800652c:	4622      	mov	r2, r4
 800652e:	4629      	mov	r1, r5
 8006530:	4638      	mov	r0, r7
 8006532:	f7ff ff6d 	bl	8006410 <__ssputs_r>
 8006536:	3001      	adds	r0, #1
 8006538:	f000 80aa 	beq.w	8006690 <_svfiprintf_r+0x1c8>
 800653c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800653e:	445a      	add	r2, fp
 8006540:	9209      	str	r2, [sp, #36]	; 0x24
 8006542:	f89a 3000 	ldrb.w	r3, [sl]
 8006546:	2b00      	cmp	r3, #0
 8006548:	f000 80a2 	beq.w	8006690 <_svfiprintf_r+0x1c8>
 800654c:	2300      	movs	r3, #0
 800654e:	f04f 32ff 	mov.w	r2, #4294967295
 8006552:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006556:	f10a 0a01 	add.w	sl, sl, #1
 800655a:	9304      	str	r3, [sp, #16]
 800655c:	9307      	str	r3, [sp, #28]
 800655e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006562:	931a      	str	r3, [sp, #104]	; 0x68
 8006564:	4654      	mov	r4, sl
 8006566:	2205      	movs	r2, #5
 8006568:	f814 1b01 	ldrb.w	r1, [r4], #1
 800656c:	4851      	ldr	r0, [pc, #324]	; (80066b4 <_svfiprintf_r+0x1ec>)
 800656e:	f7ff f9d5 	bl	800591c <memchr>
 8006572:	9a04      	ldr	r2, [sp, #16]
 8006574:	b9d8      	cbnz	r0, 80065ae <_svfiprintf_r+0xe6>
 8006576:	06d0      	lsls	r0, r2, #27
 8006578:	bf44      	itt	mi
 800657a:	2320      	movmi	r3, #32
 800657c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006580:	0711      	lsls	r1, r2, #28
 8006582:	bf44      	itt	mi
 8006584:	232b      	movmi	r3, #43	; 0x2b
 8006586:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800658a:	f89a 3000 	ldrb.w	r3, [sl]
 800658e:	2b2a      	cmp	r3, #42	; 0x2a
 8006590:	d015      	beq.n	80065be <_svfiprintf_r+0xf6>
 8006592:	4654      	mov	r4, sl
 8006594:	2000      	movs	r0, #0
 8006596:	f04f 0c0a 	mov.w	ip, #10
 800659a:	9a07      	ldr	r2, [sp, #28]
 800659c:	4621      	mov	r1, r4
 800659e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80065a2:	3b30      	subs	r3, #48	; 0x30
 80065a4:	2b09      	cmp	r3, #9
 80065a6:	d94e      	bls.n	8006646 <_svfiprintf_r+0x17e>
 80065a8:	b1b0      	cbz	r0, 80065d8 <_svfiprintf_r+0x110>
 80065aa:	9207      	str	r2, [sp, #28]
 80065ac:	e014      	b.n	80065d8 <_svfiprintf_r+0x110>
 80065ae:	eba0 0308 	sub.w	r3, r0, r8
 80065b2:	fa09 f303 	lsl.w	r3, r9, r3
 80065b6:	4313      	orrs	r3, r2
 80065b8:	46a2      	mov	sl, r4
 80065ba:	9304      	str	r3, [sp, #16]
 80065bc:	e7d2      	b.n	8006564 <_svfiprintf_r+0x9c>
 80065be:	9b03      	ldr	r3, [sp, #12]
 80065c0:	1d19      	adds	r1, r3, #4
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	9103      	str	r1, [sp, #12]
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	bfbb      	ittet	lt
 80065ca:	425b      	neglt	r3, r3
 80065cc:	f042 0202 	orrlt.w	r2, r2, #2
 80065d0:	9307      	strge	r3, [sp, #28]
 80065d2:	9307      	strlt	r3, [sp, #28]
 80065d4:	bfb8      	it	lt
 80065d6:	9204      	strlt	r2, [sp, #16]
 80065d8:	7823      	ldrb	r3, [r4, #0]
 80065da:	2b2e      	cmp	r3, #46	; 0x2e
 80065dc:	d10c      	bne.n	80065f8 <_svfiprintf_r+0x130>
 80065de:	7863      	ldrb	r3, [r4, #1]
 80065e0:	2b2a      	cmp	r3, #42	; 0x2a
 80065e2:	d135      	bne.n	8006650 <_svfiprintf_r+0x188>
 80065e4:	9b03      	ldr	r3, [sp, #12]
 80065e6:	3402      	adds	r4, #2
 80065e8:	1d1a      	adds	r2, r3, #4
 80065ea:	681b      	ldr	r3, [r3, #0]
 80065ec:	9203      	str	r2, [sp, #12]
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	bfb8      	it	lt
 80065f2:	f04f 33ff 	movlt.w	r3, #4294967295
 80065f6:	9305      	str	r3, [sp, #20]
 80065f8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80066c4 <_svfiprintf_r+0x1fc>
 80065fc:	2203      	movs	r2, #3
 80065fe:	4650      	mov	r0, sl
 8006600:	7821      	ldrb	r1, [r4, #0]
 8006602:	f7ff f98b 	bl	800591c <memchr>
 8006606:	b140      	cbz	r0, 800661a <_svfiprintf_r+0x152>
 8006608:	2340      	movs	r3, #64	; 0x40
 800660a:	eba0 000a 	sub.w	r0, r0, sl
 800660e:	fa03 f000 	lsl.w	r0, r3, r0
 8006612:	9b04      	ldr	r3, [sp, #16]
 8006614:	3401      	adds	r4, #1
 8006616:	4303      	orrs	r3, r0
 8006618:	9304      	str	r3, [sp, #16]
 800661a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800661e:	2206      	movs	r2, #6
 8006620:	4825      	ldr	r0, [pc, #148]	; (80066b8 <_svfiprintf_r+0x1f0>)
 8006622:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006626:	f7ff f979 	bl	800591c <memchr>
 800662a:	2800      	cmp	r0, #0
 800662c:	d038      	beq.n	80066a0 <_svfiprintf_r+0x1d8>
 800662e:	4b23      	ldr	r3, [pc, #140]	; (80066bc <_svfiprintf_r+0x1f4>)
 8006630:	bb1b      	cbnz	r3, 800667a <_svfiprintf_r+0x1b2>
 8006632:	9b03      	ldr	r3, [sp, #12]
 8006634:	3307      	adds	r3, #7
 8006636:	f023 0307 	bic.w	r3, r3, #7
 800663a:	3308      	adds	r3, #8
 800663c:	9303      	str	r3, [sp, #12]
 800663e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006640:	4433      	add	r3, r6
 8006642:	9309      	str	r3, [sp, #36]	; 0x24
 8006644:	e767      	b.n	8006516 <_svfiprintf_r+0x4e>
 8006646:	460c      	mov	r4, r1
 8006648:	2001      	movs	r0, #1
 800664a:	fb0c 3202 	mla	r2, ip, r2, r3
 800664e:	e7a5      	b.n	800659c <_svfiprintf_r+0xd4>
 8006650:	2300      	movs	r3, #0
 8006652:	f04f 0c0a 	mov.w	ip, #10
 8006656:	4619      	mov	r1, r3
 8006658:	3401      	adds	r4, #1
 800665a:	9305      	str	r3, [sp, #20]
 800665c:	4620      	mov	r0, r4
 800665e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006662:	3a30      	subs	r2, #48	; 0x30
 8006664:	2a09      	cmp	r2, #9
 8006666:	d903      	bls.n	8006670 <_svfiprintf_r+0x1a8>
 8006668:	2b00      	cmp	r3, #0
 800666a:	d0c5      	beq.n	80065f8 <_svfiprintf_r+0x130>
 800666c:	9105      	str	r1, [sp, #20]
 800666e:	e7c3      	b.n	80065f8 <_svfiprintf_r+0x130>
 8006670:	4604      	mov	r4, r0
 8006672:	2301      	movs	r3, #1
 8006674:	fb0c 2101 	mla	r1, ip, r1, r2
 8006678:	e7f0      	b.n	800665c <_svfiprintf_r+0x194>
 800667a:	ab03      	add	r3, sp, #12
 800667c:	9300      	str	r3, [sp, #0]
 800667e:	462a      	mov	r2, r5
 8006680:	4638      	mov	r0, r7
 8006682:	4b0f      	ldr	r3, [pc, #60]	; (80066c0 <_svfiprintf_r+0x1f8>)
 8006684:	a904      	add	r1, sp, #16
 8006686:	f7fb ff95 	bl	80025b4 <_printf_float>
 800668a:	1c42      	adds	r2, r0, #1
 800668c:	4606      	mov	r6, r0
 800668e:	d1d6      	bne.n	800663e <_svfiprintf_r+0x176>
 8006690:	89ab      	ldrh	r3, [r5, #12]
 8006692:	065b      	lsls	r3, r3, #25
 8006694:	f53f af2c 	bmi.w	80064f0 <_svfiprintf_r+0x28>
 8006698:	9809      	ldr	r0, [sp, #36]	; 0x24
 800669a:	b01d      	add	sp, #116	; 0x74
 800669c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066a0:	ab03      	add	r3, sp, #12
 80066a2:	9300      	str	r3, [sp, #0]
 80066a4:	462a      	mov	r2, r5
 80066a6:	4638      	mov	r0, r7
 80066a8:	4b05      	ldr	r3, [pc, #20]	; (80066c0 <_svfiprintf_r+0x1f8>)
 80066aa:	a904      	add	r1, sp, #16
 80066ac:	f7fc fa1e 	bl	8002aec <_printf_i>
 80066b0:	e7eb      	b.n	800668a <_svfiprintf_r+0x1c2>
 80066b2:	bf00      	nop
 80066b4:	0800789c 	.word	0x0800789c
 80066b8:	080078a6 	.word	0x080078a6
 80066bc:	080025b5 	.word	0x080025b5
 80066c0:	08006411 	.word	0x08006411
 80066c4:	080078a2 	.word	0x080078a2

080066c8 <nan>:
 80066c8:	2000      	movs	r0, #0
 80066ca:	4901      	ldr	r1, [pc, #4]	; (80066d0 <nan+0x8>)
 80066cc:	4770      	bx	lr
 80066ce:	bf00      	nop
 80066d0:	7ff80000 	.word	0x7ff80000

080066d4 <_sbrk_r>:
 80066d4:	b538      	push	{r3, r4, r5, lr}
 80066d6:	2300      	movs	r3, #0
 80066d8:	4d05      	ldr	r5, [pc, #20]	; (80066f0 <_sbrk_r+0x1c>)
 80066da:	4604      	mov	r4, r0
 80066dc:	4608      	mov	r0, r1
 80066de:	602b      	str	r3, [r5, #0]
 80066e0:	f7fb fe24 	bl	800232c <_sbrk>
 80066e4:	1c43      	adds	r3, r0, #1
 80066e6:	d102      	bne.n	80066ee <_sbrk_r+0x1a>
 80066e8:	682b      	ldr	r3, [r5, #0]
 80066ea:	b103      	cbz	r3, 80066ee <_sbrk_r+0x1a>
 80066ec:	6023      	str	r3, [r4, #0]
 80066ee:	bd38      	pop	{r3, r4, r5, pc}
 80066f0:	20000888 	.word	0x20000888

080066f4 <__sread>:
 80066f4:	b510      	push	{r4, lr}
 80066f6:	460c      	mov	r4, r1
 80066f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066fc:	f000 fa86 	bl	8006c0c <_read_r>
 8006700:	2800      	cmp	r0, #0
 8006702:	bfab      	itete	ge
 8006704:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006706:	89a3      	ldrhlt	r3, [r4, #12]
 8006708:	181b      	addge	r3, r3, r0
 800670a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800670e:	bfac      	ite	ge
 8006710:	6563      	strge	r3, [r4, #84]	; 0x54
 8006712:	81a3      	strhlt	r3, [r4, #12]
 8006714:	bd10      	pop	{r4, pc}

08006716 <__swrite>:
 8006716:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800671a:	461f      	mov	r7, r3
 800671c:	898b      	ldrh	r3, [r1, #12]
 800671e:	4605      	mov	r5, r0
 8006720:	05db      	lsls	r3, r3, #23
 8006722:	460c      	mov	r4, r1
 8006724:	4616      	mov	r6, r2
 8006726:	d505      	bpl.n	8006734 <__swrite+0x1e>
 8006728:	2302      	movs	r3, #2
 800672a:	2200      	movs	r2, #0
 800672c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006730:	f000 f8b6 	bl	80068a0 <_lseek_r>
 8006734:	89a3      	ldrh	r3, [r4, #12]
 8006736:	4632      	mov	r2, r6
 8006738:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800673c:	81a3      	strh	r3, [r4, #12]
 800673e:	4628      	mov	r0, r5
 8006740:	463b      	mov	r3, r7
 8006742:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006746:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800674a:	f000 b835 	b.w	80067b8 <_write_r>

0800674e <__sseek>:
 800674e:	b510      	push	{r4, lr}
 8006750:	460c      	mov	r4, r1
 8006752:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006756:	f000 f8a3 	bl	80068a0 <_lseek_r>
 800675a:	1c43      	adds	r3, r0, #1
 800675c:	89a3      	ldrh	r3, [r4, #12]
 800675e:	bf15      	itete	ne
 8006760:	6560      	strne	r0, [r4, #84]	; 0x54
 8006762:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006766:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800676a:	81a3      	strheq	r3, [r4, #12]
 800676c:	bf18      	it	ne
 800676e:	81a3      	strhne	r3, [r4, #12]
 8006770:	bd10      	pop	{r4, pc}

08006772 <__sclose>:
 8006772:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006776:	f000 b84f 	b.w	8006818 <_close_r>

0800677a <strncmp>:
 800677a:	b510      	push	{r4, lr}
 800677c:	b16a      	cbz	r2, 800679a <strncmp+0x20>
 800677e:	3901      	subs	r1, #1
 8006780:	1884      	adds	r4, r0, r2
 8006782:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006786:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800678a:	4293      	cmp	r3, r2
 800678c:	d103      	bne.n	8006796 <strncmp+0x1c>
 800678e:	42a0      	cmp	r0, r4
 8006790:	d001      	beq.n	8006796 <strncmp+0x1c>
 8006792:	2b00      	cmp	r3, #0
 8006794:	d1f5      	bne.n	8006782 <strncmp+0x8>
 8006796:	1a98      	subs	r0, r3, r2
 8006798:	bd10      	pop	{r4, pc}
 800679a:	4610      	mov	r0, r2
 800679c:	e7fc      	b.n	8006798 <strncmp+0x1e>

0800679e <__ascii_wctomb>:
 800679e:	4603      	mov	r3, r0
 80067a0:	4608      	mov	r0, r1
 80067a2:	b141      	cbz	r1, 80067b6 <__ascii_wctomb+0x18>
 80067a4:	2aff      	cmp	r2, #255	; 0xff
 80067a6:	d904      	bls.n	80067b2 <__ascii_wctomb+0x14>
 80067a8:	228a      	movs	r2, #138	; 0x8a
 80067aa:	f04f 30ff 	mov.w	r0, #4294967295
 80067ae:	601a      	str	r2, [r3, #0]
 80067b0:	4770      	bx	lr
 80067b2:	2001      	movs	r0, #1
 80067b4:	700a      	strb	r2, [r1, #0]
 80067b6:	4770      	bx	lr

080067b8 <_write_r>:
 80067b8:	b538      	push	{r3, r4, r5, lr}
 80067ba:	4604      	mov	r4, r0
 80067bc:	4608      	mov	r0, r1
 80067be:	4611      	mov	r1, r2
 80067c0:	2200      	movs	r2, #0
 80067c2:	4d05      	ldr	r5, [pc, #20]	; (80067d8 <_write_r+0x20>)
 80067c4:	602a      	str	r2, [r5, #0]
 80067c6:	461a      	mov	r2, r3
 80067c8:	f7fb fcac 	bl	8002124 <_write>
 80067cc:	1c43      	adds	r3, r0, #1
 80067ce:	d102      	bne.n	80067d6 <_write_r+0x1e>
 80067d0:	682b      	ldr	r3, [r5, #0]
 80067d2:	b103      	cbz	r3, 80067d6 <_write_r+0x1e>
 80067d4:	6023      	str	r3, [r4, #0]
 80067d6:	bd38      	pop	{r3, r4, r5, pc}
 80067d8:	20000888 	.word	0x20000888

080067dc <__assert_func>:
 80067dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80067de:	4614      	mov	r4, r2
 80067e0:	461a      	mov	r2, r3
 80067e2:	4b09      	ldr	r3, [pc, #36]	; (8006808 <__assert_func+0x2c>)
 80067e4:	4605      	mov	r5, r0
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	68d8      	ldr	r0, [r3, #12]
 80067ea:	b14c      	cbz	r4, 8006800 <__assert_func+0x24>
 80067ec:	4b07      	ldr	r3, [pc, #28]	; (800680c <__assert_func+0x30>)
 80067ee:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80067f2:	9100      	str	r1, [sp, #0]
 80067f4:	462b      	mov	r3, r5
 80067f6:	4906      	ldr	r1, [pc, #24]	; (8006810 <__assert_func+0x34>)
 80067f8:	f000 f81e 	bl	8006838 <fiprintf>
 80067fc:	f000 fa18 	bl	8006c30 <abort>
 8006800:	4b04      	ldr	r3, [pc, #16]	; (8006814 <__assert_func+0x38>)
 8006802:	461c      	mov	r4, r3
 8006804:	e7f3      	b.n	80067ee <__assert_func+0x12>
 8006806:	bf00      	nop
 8006808:	20000000 	.word	0x20000000
 800680c:	080078ad 	.word	0x080078ad
 8006810:	080078ba 	.word	0x080078ba
 8006814:	080078e8 	.word	0x080078e8

08006818 <_close_r>:
 8006818:	b538      	push	{r3, r4, r5, lr}
 800681a:	2300      	movs	r3, #0
 800681c:	4d05      	ldr	r5, [pc, #20]	; (8006834 <_close_r+0x1c>)
 800681e:	4604      	mov	r4, r0
 8006820:	4608      	mov	r0, r1
 8006822:	602b      	str	r3, [r5, #0]
 8006824:	f7fb fd52 	bl	80022cc <_close>
 8006828:	1c43      	adds	r3, r0, #1
 800682a:	d102      	bne.n	8006832 <_close_r+0x1a>
 800682c:	682b      	ldr	r3, [r5, #0]
 800682e:	b103      	cbz	r3, 8006832 <_close_r+0x1a>
 8006830:	6023      	str	r3, [r4, #0]
 8006832:	bd38      	pop	{r3, r4, r5, pc}
 8006834:	20000888 	.word	0x20000888

08006838 <fiprintf>:
 8006838:	b40e      	push	{r1, r2, r3}
 800683a:	b503      	push	{r0, r1, lr}
 800683c:	4601      	mov	r1, r0
 800683e:	ab03      	add	r3, sp, #12
 8006840:	4805      	ldr	r0, [pc, #20]	; (8006858 <fiprintf+0x20>)
 8006842:	f853 2b04 	ldr.w	r2, [r3], #4
 8006846:	6800      	ldr	r0, [r0, #0]
 8006848:	9301      	str	r3, [sp, #4]
 800684a:	f000 f8af 	bl	80069ac <_vfiprintf_r>
 800684e:	b002      	add	sp, #8
 8006850:	f85d eb04 	ldr.w	lr, [sp], #4
 8006854:	b003      	add	sp, #12
 8006856:	4770      	bx	lr
 8006858:	20000000 	.word	0x20000000

0800685c <_fstat_r>:
 800685c:	b538      	push	{r3, r4, r5, lr}
 800685e:	2300      	movs	r3, #0
 8006860:	4d06      	ldr	r5, [pc, #24]	; (800687c <_fstat_r+0x20>)
 8006862:	4604      	mov	r4, r0
 8006864:	4608      	mov	r0, r1
 8006866:	4611      	mov	r1, r2
 8006868:	602b      	str	r3, [r5, #0]
 800686a:	f7fb fd3a 	bl	80022e2 <_fstat>
 800686e:	1c43      	adds	r3, r0, #1
 8006870:	d102      	bne.n	8006878 <_fstat_r+0x1c>
 8006872:	682b      	ldr	r3, [r5, #0]
 8006874:	b103      	cbz	r3, 8006878 <_fstat_r+0x1c>
 8006876:	6023      	str	r3, [r4, #0]
 8006878:	bd38      	pop	{r3, r4, r5, pc}
 800687a:	bf00      	nop
 800687c:	20000888 	.word	0x20000888

08006880 <_isatty_r>:
 8006880:	b538      	push	{r3, r4, r5, lr}
 8006882:	2300      	movs	r3, #0
 8006884:	4d05      	ldr	r5, [pc, #20]	; (800689c <_isatty_r+0x1c>)
 8006886:	4604      	mov	r4, r0
 8006888:	4608      	mov	r0, r1
 800688a:	602b      	str	r3, [r5, #0]
 800688c:	f7fb fd38 	bl	8002300 <_isatty>
 8006890:	1c43      	adds	r3, r0, #1
 8006892:	d102      	bne.n	800689a <_isatty_r+0x1a>
 8006894:	682b      	ldr	r3, [r5, #0]
 8006896:	b103      	cbz	r3, 800689a <_isatty_r+0x1a>
 8006898:	6023      	str	r3, [r4, #0]
 800689a:	bd38      	pop	{r3, r4, r5, pc}
 800689c:	20000888 	.word	0x20000888

080068a0 <_lseek_r>:
 80068a0:	b538      	push	{r3, r4, r5, lr}
 80068a2:	4604      	mov	r4, r0
 80068a4:	4608      	mov	r0, r1
 80068a6:	4611      	mov	r1, r2
 80068a8:	2200      	movs	r2, #0
 80068aa:	4d05      	ldr	r5, [pc, #20]	; (80068c0 <_lseek_r+0x20>)
 80068ac:	602a      	str	r2, [r5, #0]
 80068ae:	461a      	mov	r2, r3
 80068b0:	f7fb fd30 	bl	8002314 <_lseek>
 80068b4:	1c43      	adds	r3, r0, #1
 80068b6:	d102      	bne.n	80068be <_lseek_r+0x1e>
 80068b8:	682b      	ldr	r3, [r5, #0]
 80068ba:	b103      	cbz	r3, 80068be <_lseek_r+0x1e>
 80068bc:	6023      	str	r3, [r4, #0]
 80068be:	bd38      	pop	{r3, r4, r5, pc}
 80068c0:	20000888 	.word	0x20000888

080068c4 <memmove>:
 80068c4:	4288      	cmp	r0, r1
 80068c6:	b510      	push	{r4, lr}
 80068c8:	eb01 0402 	add.w	r4, r1, r2
 80068cc:	d902      	bls.n	80068d4 <memmove+0x10>
 80068ce:	4284      	cmp	r4, r0
 80068d0:	4623      	mov	r3, r4
 80068d2:	d807      	bhi.n	80068e4 <memmove+0x20>
 80068d4:	1e43      	subs	r3, r0, #1
 80068d6:	42a1      	cmp	r1, r4
 80068d8:	d008      	beq.n	80068ec <memmove+0x28>
 80068da:	f811 2b01 	ldrb.w	r2, [r1], #1
 80068de:	f803 2f01 	strb.w	r2, [r3, #1]!
 80068e2:	e7f8      	b.n	80068d6 <memmove+0x12>
 80068e4:	4601      	mov	r1, r0
 80068e6:	4402      	add	r2, r0
 80068e8:	428a      	cmp	r2, r1
 80068ea:	d100      	bne.n	80068ee <memmove+0x2a>
 80068ec:	bd10      	pop	{r4, pc}
 80068ee:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80068f2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80068f6:	e7f7      	b.n	80068e8 <memmove+0x24>

080068f8 <__malloc_lock>:
 80068f8:	4801      	ldr	r0, [pc, #4]	; (8006900 <__malloc_lock+0x8>)
 80068fa:	f7fe bf8e 	b.w	800581a <__retarget_lock_acquire_recursive>
 80068fe:	bf00      	nop
 8006900:	20000881 	.word	0x20000881

08006904 <__malloc_unlock>:
 8006904:	4801      	ldr	r0, [pc, #4]	; (800690c <__malloc_unlock+0x8>)
 8006906:	f7fe bf89 	b.w	800581c <__retarget_lock_release_recursive>
 800690a:	bf00      	nop
 800690c:	20000881 	.word	0x20000881

08006910 <_realloc_r>:
 8006910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006912:	4607      	mov	r7, r0
 8006914:	4614      	mov	r4, r2
 8006916:	460e      	mov	r6, r1
 8006918:	b921      	cbnz	r1, 8006924 <_realloc_r+0x14>
 800691a:	4611      	mov	r1, r2
 800691c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006920:	f7ff bd1c 	b.w	800635c <_malloc_r>
 8006924:	b922      	cbnz	r2, 8006930 <_realloc_r+0x20>
 8006926:	f7ff fccd 	bl	80062c4 <_free_r>
 800692a:	4625      	mov	r5, r4
 800692c:	4628      	mov	r0, r5
 800692e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006930:	f000 f985 	bl	8006c3e <_malloc_usable_size_r>
 8006934:	42a0      	cmp	r0, r4
 8006936:	d20f      	bcs.n	8006958 <_realloc_r+0x48>
 8006938:	4621      	mov	r1, r4
 800693a:	4638      	mov	r0, r7
 800693c:	f7ff fd0e 	bl	800635c <_malloc_r>
 8006940:	4605      	mov	r5, r0
 8006942:	2800      	cmp	r0, #0
 8006944:	d0f2      	beq.n	800692c <_realloc_r+0x1c>
 8006946:	4631      	mov	r1, r6
 8006948:	4622      	mov	r2, r4
 800694a:	f7fb fd7f 	bl	800244c <memcpy>
 800694e:	4631      	mov	r1, r6
 8006950:	4638      	mov	r0, r7
 8006952:	f7ff fcb7 	bl	80062c4 <_free_r>
 8006956:	e7e9      	b.n	800692c <_realloc_r+0x1c>
 8006958:	4635      	mov	r5, r6
 800695a:	e7e7      	b.n	800692c <_realloc_r+0x1c>

0800695c <__sfputc_r>:
 800695c:	6893      	ldr	r3, [r2, #8]
 800695e:	b410      	push	{r4}
 8006960:	3b01      	subs	r3, #1
 8006962:	2b00      	cmp	r3, #0
 8006964:	6093      	str	r3, [r2, #8]
 8006966:	da07      	bge.n	8006978 <__sfputc_r+0x1c>
 8006968:	6994      	ldr	r4, [r2, #24]
 800696a:	42a3      	cmp	r3, r4
 800696c:	db01      	blt.n	8006972 <__sfputc_r+0x16>
 800696e:	290a      	cmp	r1, #10
 8006970:	d102      	bne.n	8006978 <__sfputc_r+0x1c>
 8006972:	bc10      	pop	{r4}
 8006974:	f7fd baf2 	b.w	8003f5c <__swbuf_r>
 8006978:	6813      	ldr	r3, [r2, #0]
 800697a:	1c58      	adds	r0, r3, #1
 800697c:	6010      	str	r0, [r2, #0]
 800697e:	7019      	strb	r1, [r3, #0]
 8006980:	4608      	mov	r0, r1
 8006982:	bc10      	pop	{r4}
 8006984:	4770      	bx	lr

08006986 <__sfputs_r>:
 8006986:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006988:	4606      	mov	r6, r0
 800698a:	460f      	mov	r7, r1
 800698c:	4614      	mov	r4, r2
 800698e:	18d5      	adds	r5, r2, r3
 8006990:	42ac      	cmp	r4, r5
 8006992:	d101      	bne.n	8006998 <__sfputs_r+0x12>
 8006994:	2000      	movs	r0, #0
 8006996:	e007      	b.n	80069a8 <__sfputs_r+0x22>
 8006998:	463a      	mov	r2, r7
 800699a:	4630      	mov	r0, r6
 800699c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80069a0:	f7ff ffdc 	bl	800695c <__sfputc_r>
 80069a4:	1c43      	adds	r3, r0, #1
 80069a6:	d1f3      	bne.n	8006990 <__sfputs_r+0xa>
 80069a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080069ac <_vfiprintf_r>:
 80069ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069b0:	460d      	mov	r5, r1
 80069b2:	4614      	mov	r4, r2
 80069b4:	4698      	mov	r8, r3
 80069b6:	4606      	mov	r6, r0
 80069b8:	b09d      	sub	sp, #116	; 0x74
 80069ba:	b118      	cbz	r0, 80069c4 <_vfiprintf_r+0x18>
 80069bc:	6983      	ldr	r3, [r0, #24]
 80069be:	b90b      	cbnz	r3, 80069c4 <_vfiprintf_r+0x18>
 80069c0:	f7fe fb22 	bl	8005008 <__sinit>
 80069c4:	4b89      	ldr	r3, [pc, #548]	; (8006bec <_vfiprintf_r+0x240>)
 80069c6:	429d      	cmp	r5, r3
 80069c8:	d11b      	bne.n	8006a02 <_vfiprintf_r+0x56>
 80069ca:	6875      	ldr	r5, [r6, #4]
 80069cc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80069ce:	07d9      	lsls	r1, r3, #31
 80069d0:	d405      	bmi.n	80069de <_vfiprintf_r+0x32>
 80069d2:	89ab      	ldrh	r3, [r5, #12]
 80069d4:	059a      	lsls	r2, r3, #22
 80069d6:	d402      	bmi.n	80069de <_vfiprintf_r+0x32>
 80069d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80069da:	f7fe ff1e 	bl	800581a <__retarget_lock_acquire_recursive>
 80069de:	89ab      	ldrh	r3, [r5, #12]
 80069e0:	071b      	lsls	r3, r3, #28
 80069e2:	d501      	bpl.n	80069e8 <_vfiprintf_r+0x3c>
 80069e4:	692b      	ldr	r3, [r5, #16]
 80069e6:	b9eb      	cbnz	r3, 8006a24 <_vfiprintf_r+0x78>
 80069e8:	4629      	mov	r1, r5
 80069ea:	4630      	mov	r0, r6
 80069ec:	f7fd fb08 	bl	8004000 <__swsetup_r>
 80069f0:	b1c0      	cbz	r0, 8006a24 <_vfiprintf_r+0x78>
 80069f2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80069f4:	07dc      	lsls	r4, r3, #31
 80069f6:	d50e      	bpl.n	8006a16 <_vfiprintf_r+0x6a>
 80069f8:	f04f 30ff 	mov.w	r0, #4294967295
 80069fc:	b01d      	add	sp, #116	; 0x74
 80069fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a02:	4b7b      	ldr	r3, [pc, #492]	; (8006bf0 <_vfiprintf_r+0x244>)
 8006a04:	429d      	cmp	r5, r3
 8006a06:	d101      	bne.n	8006a0c <_vfiprintf_r+0x60>
 8006a08:	68b5      	ldr	r5, [r6, #8]
 8006a0a:	e7df      	b.n	80069cc <_vfiprintf_r+0x20>
 8006a0c:	4b79      	ldr	r3, [pc, #484]	; (8006bf4 <_vfiprintf_r+0x248>)
 8006a0e:	429d      	cmp	r5, r3
 8006a10:	bf08      	it	eq
 8006a12:	68f5      	ldreq	r5, [r6, #12]
 8006a14:	e7da      	b.n	80069cc <_vfiprintf_r+0x20>
 8006a16:	89ab      	ldrh	r3, [r5, #12]
 8006a18:	0598      	lsls	r0, r3, #22
 8006a1a:	d4ed      	bmi.n	80069f8 <_vfiprintf_r+0x4c>
 8006a1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006a1e:	f7fe fefd 	bl	800581c <__retarget_lock_release_recursive>
 8006a22:	e7e9      	b.n	80069f8 <_vfiprintf_r+0x4c>
 8006a24:	2300      	movs	r3, #0
 8006a26:	9309      	str	r3, [sp, #36]	; 0x24
 8006a28:	2320      	movs	r3, #32
 8006a2a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006a2e:	2330      	movs	r3, #48	; 0x30
 8006a30:	f04f 0901 	mov.w	r9, #1
 8006a34:	f8cd 800c 	str.w	r8, [sp, #12]
 8006a38:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8006bf8 <_vfiprintf_r+0x24c>
 8006a3c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006a40:	4623      	mov	r3, r4
 8006a42:	469a      	mov	sl, r3
 8006a44:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006a48:	b10a      	cbz	r2, 8006a4e <_vfiprintf_r+0xa2>
 8006a4a:	2a25      	cmp	r2, #37	; 0x25
 8006a4c:	d1f9      	bne.n	8006a42 <_vfiprintf_r+0x96>
 8006a4e:	ebba 0b04 	subs.w	fp, sl, r4
 8006a52:	d00b      	beq.n	8006a6c <_vfiprintf_r+0xc0>
 8006a54:	465b      	mov	r3, fp
 8006a56:	4622      	mov	r2, r4
 8006a58:	4629      	mov	r1, r5
 8006a5a:	4630      	mov	r0, r6
 8006a5c:	f7ff ff93 	bl	8006986 <__sfputs_r>
 8006a60:	3001      	adds	r0, #1
 8006a62:	f000 80aa 	beq.w	8006bba <_vfiprintf_r+0x20e>
 8006a66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006a68:	445a      	add	r2, fp
 8006a6a:	9209      	str	r2, [sp, #36]	; 0x24
 8006a6c:	f89a 3000 	ldrb.w	r3, [sl]
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	f000 80a2 	beq.w	8006bba <_vfiprintf_r+0x20e>
 8006a76:	2300      	movs	r3, #0
 8006a78:	f04f 32ff 	mov.w	r2, #4294967295
 8006a7c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006a80:	f10a 0a01 	add.w	sl, sl, #1
 8006a84:	9304      	str	r3, [sp, #16]
 8006a86:	9307      	str	r3, [sp, #28]
 8006a88:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006a8c:	931a      	str	r3, [sp, #104]	; 0x68
 8006a8e:	4654      	mov	r4, sl
 8006a90:	2205      	movs	r2, #5
 8006a92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006a96:	4858      	ldr	r0, [pc, #352]	; (8006bf8 <_vfiprintf_r+0x24c>)
 8006a98:	f7fe ff40 	bl	800591c <memchr>
 8006a9c:	9a04      	ldr	r2, [sp, #16]
 8006a9e:	b9d8      	cbnz	r0, 8006ad8 <_vfiprintf_r+0x12c>
 8006aa0:	06d1      	lsls	r1, r2, #27
 8006aa2:	bf44      	itt	mi
 8006aa4:	2320      	movmi	r3, #32
 8006aa6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006aaa:	0713      	lsls	r3, r2, #28
 8006aac:	bf44      	itt	mi
 8006aae:	232b      	movmi	r3, #43	; 0x2b
 8006ab0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006ab4:	f89a 3000 	ldrb.w	r3, [sl]
 8006ab8:	2b2a      	cmp	r3, #42	; 0x2a
 8006aba:	d015      	beq.n	8006ae8 <_vfiprintf_r+0x13c>
 8006abc:	4654      	mov	r4, sl
 8006abe:	2000      	movs	r0, #0
 8006ac0:	f04f 0c0a 	mov.w	ip, #10
 8006ac4:	9a07      	ldr	r2, [sp, #28]
 8006ac6:	4621      	mov	r1, r4
 8006ac8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006acc:	3b30      	subs	r3, #48	; 0x30
 8006ace:	2b09      	cmp	r3, #9
 8006ad0:	d94e      	bls.n	8006b70 <_vfiprintf_r+0x1c4>
 8006ad2:	b1b0      	cbz	r0, 8006b02 <_vfiprintf_r+0x156>
 8006ad4:	9207      	str	r2, [sp, #28]
 8006ad6:	e014      	b.n	8006b02 <_vfiprintf_r+0x156>
 8006ad8:	eba0 0308 	sub.w	r3, r0, r8
 8006adc:	fa09 f303 	lsl.w	r3, r9, r3
 8006ae0:	4313      	orrs	r3, r2
 8006ae2:	46a2      	mov	sl, r4
 8006ae4:	9304      	str	r3, [sp, #16]
 8006ae6:	e7d2      	b.n	8006a8e <_vfiprintf_r+0xe2>
 8006ae8:	9b03      	ldr	r3, [sp, #12]
 8006aea:	1d19      	adds	r1, r3, #4
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	9103      	str	r1, [sp, #12]
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	bfbb      	ittet	lt
 8006af4:	425b      	neglt	r3, r3
 8006af6:	f042 0202 	orrlt.w	r2, r2, #2
 8006afa:	9307      	strge	r3, [sp, #28]
 8006afc:	9307      	strlt	r3, [sp, #28]
 8006afe:	bfb8      	it	lt
 8006b00:	9204      	strlt	r2, [sp, #16]
 8006b02:	7823      	ldrb	r3, [r4, #0]
 8006b04:	2b2e      	cmp	r3, #46	; 0x2e
 8006b06:	d10c      	bne.n	8006b22 <_vfiprintf_r+0x176>
 8006b08:	7863      	ldrb	r3, [r4, #1]
 8006b0a:	2b2a      	cmp	r3, #42	; 0x2a
 8006b0c:	d135      	bne.n	8006b7a <_vfiprintf_r+0x1ce>
 8006b0e:	9b03      	ldr	r3, [sp, #12]
 8006b10:	3402      	adds	r4, #2
 8006b12:	1d1a      	adds	r2, r3, #4
 8006b14:	681b      	ldr	r3, [r3, #0]
 8006b16:	9203      	str	r2, [sp, #12]
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	bfb8      	it	lt
 8006b1c:	f04f 33ff 	movlt.w	r3, #4294967295
 8006b20:	9305      	str	r3, [sp, #20]
 8006b22:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006c08 <_vfiprintf_r+0x25c>
 8006b26:	2203      	movs	r2, #3
 8006b28:	4650      	mov	r0, sl
 8006b2a:	7821      	ldrb	r1, [r4, #0]
 8006b2c:	f7fe fef6 	bl	800591c <memchr>
 8006b30:	b140      	cbz	r0, 8006b44 <_vfiprintf_r+0x198>
 8006b32:	2340      	movs	r3, #64	; 0x40
 8006b34:	eba0 000a 	sub.w	r0, r0, sl
 8006b38:	fa03 f000 	lsl.w	r0, r3, r0
 8006b3c:	9b04      	ldr	r3, [sp, #16]
 8006b3e:	3401      	adds	r4, #1
 8006b40:	4303      	orrs	r3, r0
 8006b42:	9304      	str	r3, [sp, #16]
 8006b44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b48:	2206      	movs	r2, #6
 8006b4a:	482c      	ldr	r0, [pc, #176]	; (8006bfc <_vfiprintf_r+0x250>)
 8006b4c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006b50:	f7fe fee4 	bl	800591c <memchr>
 8006b54:	2800      	cmp	r0, #0
 8006b56:	d03f      	beq.n	8006bd8 <_vfiprintf_r+0x22c>
 8006b58:	4b29      	ldr	r3, [pc, #164]	; (8006c00 <_vfiprintf_r+0x254>)
 8006b5a:	bb1b      	cbnz	r3, 8006ba4 <_vfiprintf_r+0x1f8>
 8006b5c:	9b03      	ldr	r3, [sp, #12]
 8006b5e:	3307      	adds	r3, #7
 8006b60:	f023 0307 	bic.w	r3, r3, #7
 8006b64:	3308      	adds	r3, #8
 8006b66:	9303      	str	r3, [sp, #12]
 8006b68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b6a:	443b      	add	r3, r7
 8006b6c:	9309      	str	r3, [sp, #36]	; 0x24
 8006b6e:	e767      	b.n	8006a40 <_vfiprintf_r+0x94>
 8006b70:	460c      	mov	r4, r1
 8006b72:	2001      	movs	r0, #1
 8006b74:	fb0c 3202 	mla	r2, ip, r2, r3
 8006b78:	e7a5      	b.n	8006ac6 <_vfiprintf_r+0x11a>
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	f04f 0c0a 	mov.w	ip, #10
 8006b80:	4619      	mov	r1, r3
 8006b82:	3401      	adds	r4, #1
 8006b84:	9305      	str	r3, [sp, #20]
 8006b86:	4620      	mov	r0, r4
 8006b88:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006b8c:	3a30      	subs	r2, #48	; 0x30
 8006b8e:	2a09      	cmp	r2, #9
 8006b90:	d903      	bls.n	8006b9a <_vfiprintf_r+0x1ee>
 8006b92:	2b00      	cmp	r3, #0
 8006b94:	d0c5      	beq.n	8006b22 <_vfiprintf_r+0x176>
 8006b96:	9105      	str	r1, [sp, #20]
 8006b98:	e7c3      	b.n	8006b22 <_vfiprintf_r+0x176>
 8006b9a:	4604      	mov	r4, r0
 8006b9c:	2301      	movs	r3, #1
 8006b9e:	fb0c 2101 	mla	r1, ip, r1, r2
 8006ba2:	e7f0      	b.n	8006b86 <_vfiprintf_r+0x1da>
 8006ba4:	ab03      	add	r3, sp, #12
 8006ba6:	9300      	str	r3, [sp, #0]
 8006ba8:	462a      	mov	r2, r5
 8006baa:	4630      	mov	r0, r6
 8006bac:	4b15      	ldr	r3, [pc, #84]	; (8006c04 <_vfiprintf_r+0x258>)
 8006bae:	a904      	add	r1, sp, #16
 8006bb0:	f7fb fd00 	bl	80025b4 <_printf_float>
 8006bb4:	4607      	mov	r7, r0
 8006bb6:	1c78      	adds	r0, r7, #1
 8006bb8:	d1d6      	bne.n	8006b68 <_vfiprintf_r+0x1bc>
 8006bba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006bbc:	07d9      	lsls	r1, r3, #31
 8006bbe:	d405      	bmi.n	8006bcc <_vfiprintf_r+0x220>
 8006bc0:	89ab      	ldrh	r3, [r5, #12]
 8006bc2:	059a      	lsls	r2, r3, #22
 8006bc4:	d402      	bmi.n	8006bcc <_vfiprintf_r+0x220>
 8006bc6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006bc8:	f7fe fe28 	bl	800581c <__retarget_lock_release_recursive>
 8006bcc:	89ab      	ldrh	r3, [r5, #12]
 8006bce:	065b      	lsls	r3, r3, #25
 8006bd0:	f53f af12 	bmi.w	80069f8 <_vfiprintf_r+0x4c>
 8006bd4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006bd6:	e711      	b.n	80069fc <_vfiprintf_r+0x50>
 8006bd8:	ab03      	add	r3, sp, #12
 8006bda:	9300      	str	r3, [sp, #0]
 8006bdc:	462a      	mov	r2, r5
 8006bde:	4630      	mov	r0, r6
 8006be0:	4b08      	ldr	r3, [pc, #32]	; (8006c04 <_vfiprintf_r+0x258>)
 8006be2:	a904      	add	r1, sp, #16
 8006be4:	f7fb ff82 	bl	8002aec <_printf_i>
 8006be8:	e7e4      	b.n	8006bb4 <_vfiprintf_r+0x208>
 8006bea:	bf00      	nop
 8006bec:	08007680 	.word	0x08007680
 8006bf0:	080076a0 	.word	0x080076a0
 8006bf4:	08007660 	.word	0x08007660
 8006bf8:	0800789c 	.word	0x0800789c
 8006bfc:	080078a6 	.word	0x080078a6
 8006c00:	080025b5 	.word	0x080025b5
 8006c04:	08006987 	.word	0x08006987
 8006c08:	080078a2 	.word	0x080078a2

08006c0c <_read_r>:
 8006c0c:	b538      	push	{r3, r4, r5, lr}
 8006c0e:	4604      	mov	r4, r0
 8006c10:	4608      	mov	r0, r1
 8006c12:	4611      	mov	r1, r2
 8006c14:	2200      	movs	r2, #0
 8006c16:	4d05      	ldr	r5, [pc, #20]	; (8006c2c <_read_r+0x20>)
 8006c18:	602a      	str	r2, [r5, #0]
 8006c1a:	461a      	mov	r2, r3
 8006c1c:	f7fb fb39 	bl	8002292 <_read>
 8006c20:	1c43      	adds	r3, r0, #1
 8006c22:	d102      	bne.n	8006c2a <_read_r+0x1e>
 8006c24:	682b      	ldr	r3, [r5, #0]
 8006c26:	b103      	cbz	r3, 8006c2a <_read_r+0x1e>
 8006c28:	6023      	str	r3, [r4, #0]
 8006c2a:	bd38      	pop	{r3, r4, r5, pc}
 8006c2c:	20000888 	.word	0x20000888

08006c30 <abort>:
 8006c30:	2006      	movs	r0, #6
 8006c32:	b508      	push	{r3, lr}
 8006c34:	f000 f834 	bl	8006ca0 <raise>
 8006c38:	2001      	movs	r0, #1
 8006c3a:	f7fb fb20 	bl	800227e <_exit>

08006c3e <_malloc_usable_size_r>:
 8006c3e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006c42:	1f18      	subs	r0, r3, #4
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	bfbc      	itt	lt
 8006c48:	580b      	ldrlt	r3, [r1, r0]
 8006c4a:	18c0      	addlt	r0, r0, r3
 8006c4c:	4770      	bx	lr

08006c4e <_raise_r>:
 8006c4e:	291f      	cmp	r1, #31
 8006c50:	b538      	push	{r3, r4, r5, lr}
 8006c52:	4604      	mov	r4, r0
 8006c54:	460d      	mov	r5, r1
 8006c56:	d904      	bls.n	8006c62 <_raise_r+0x14>
 8006c58:	2316      	movs	r3, #22
 8006c5a:	6003      	str	r3, [r0, #0]
 8006c5c:	f04f 30ff 	mov.w	r0, #4294967295
 8006c60:	bd38      	pop	{r3, r4, r5, pc}
 8006c62:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8006c64:	b112      	cbz	r2, 8006c6c <_raise_r+0x1e>
 8006c66:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006c6a:	b94b      	cbnz	r3, 8006c80 <_raise_r+0x32>
 8006c6c:	4620      	mov	r0, r4
 8006c6e:	f000 f831 	bl	8006cd4 <_getpid_r>
 8006c72:	462a      	mov	r2, r5
 8006c74:	4601      	mov	r1, r0
 8006c76:	4620      	mov	r0, r4
 8006c78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006c7c:	f000 b818 	b.w	8006cb0 <_kill_r>
 8006c80:	2b01      	cmp	r3, #1
 8006c82:	d00a      	beq.n	8006c9a <_raise_r+0x4c>
 8006c84:	1c59      	adds	r1, r3, #1
 8006c86:	d103      	bne.n	8006c90 <_raise_r+0x42>
 8006c88:	2316      	movs	r3, #22
 8006c8a:	6003      	str	r3, [r0, #0]
 8006c8c:	2001      	movs	r0, #1
 8006c8e:	e7e7      	b.n	8006c60 <_raise_r+0x12>
 8006c90:	2400      	movs	r4, #0
 8006c92:	4628      	mov	r0, r5
 8006c94:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006c98:	4798      	blx	r3
 8006c9a:	2000      	movs	r0, #0
 8006c9c:	e7e0      	b.n	8006c60 <_raise_r+0x12>
	...

08006ca0 <raise>:
 8006ca0:	4b02      	ldr	r3, [pc, #8]	; (8006cac <raise+0xc>)
 8006ca2:	4601      	mov	r1, r0
 8006ca4:	6818      	ldr	r0, [r3, #0]
 8006ca6:	f7ff bfd2 	b.w	8006c4e <_raise_r>
 8006caa:	bf00      	nop
 8006cac:	20000000 	.word	0x20000000

08006cb0 <_kill_r>:
 8006cb0:	b538      	push	{r3, r4, r5, lr}
 8006cb2:	2300      	movs	r3, #0
 8006cb4:	4d06      	ldr	r5, [pc, #24]	; (8006cd0 <_kill_r+0x20>)
 8006cb6:	4604      	mov	r4, r0
 8006cb8:	4608      	mov	r0, r1
 8006cba:	4611      	mov	r1, r2
 8006cbc:	602b      	str	r3, [r5, #0]
 8006cbe:	f7fb face 	bl	800225e <_kill>
 8006cc2:	1c43      	adds	r3, r0, #1
 8006cc4:	d102      	bne.n	8006ccc <_kill_r+0x1c>
 8006cc6:	682b      	ldr	r3, [r5, #0]
 8006cc8:	b103      	cbz	r3, 8006ccc <_kill_r+0x1c>
 8006cca:	6023      	str	r3, [r4, #0]
 8006ccc:	bd38      	pop	{r3, r4, r5, pc}
 8006cce:	bf00      	nop
 8006cd0:	20000888 	.word	0x20000888

08006cd4 <_getpid_r>:
 8006cd4:	f7fb babc 	b.w	8002250 <_getpid>

08006cd8 <_init>:
 8006cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cda:	bf00      	nop
 8006cdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cde:	bc08      	pop	{r3}
 8006ce0:	469e      	mov	lr, r3
 8006ce2:	4770      	bx	lr

08006ce4 <_fini>:
 8006ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ce6:	bf00      	nop
 8006ce8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cea:	bc08      	pop	{r3}
 8006cec:	469e      	mov	lr, r3
 8006cee:	4770      	bx	lr
