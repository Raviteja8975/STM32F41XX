
stm32f103_bare_metal_pwm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000056cc  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000328  08005800  08005800  00015800  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005b28  08005b28  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08005b28  08005b28  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005b28  08005b28  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005b28  08005b28  00015b28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005b2c  08005b2c  00015b2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08005b30  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000458  200001d4  08005d04  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000062c  08005d04  0002062c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004ef4  00000000  00000000  000201fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000e57  00000000  00000000  000250f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000280  00000000  00000000  00025f48  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000001e8  00000000  00000000  000261c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00011bce  00000000  00000000  000263b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00003dfd  00000000  00000000  00037f7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0005947d  00000000  00000000  0003bd7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000951f8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001558  00000000  00000000  00095274  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001d4 	.word	0x200001d4
 800014c:	00000000 	.word	0x00000000
 8000150:	080057e4 	.word	0x080057e4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001d8 	.word	0x200001d8
 800016c:	080057e4 	.word	0x080057e4

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002be:	f1a4 0401 	sub.w	r4, r4, #1
 80002c2:	d1e9      	bne.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	; 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000c44:	f1a2 0201 	sub.w	r2, r2, #1
 8000c48:	d1ed      	bne.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000df6:	2afd      	cmp	r2, #253	; 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	; 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	; 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	; 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <adc_init>:
 *
 * 3) ADC Channel configuration
 *   --> Sampling Time of ADC Channel and Sequence of Channels in Regular Groups
 */
void adc_init()
{
 8001044:	b480      	push	{r7}
 8001046:	af00      	add	r7, sp, #0

//*** adc clock and pin configuration *****/
	RCC->APB2ENR|= RCC_APB2ENR_ADC1EN ; // Enable RCC Clock for ADC1
 8001048:	4b31      	ldr	r3, [pc, #196]	; (8001110 <adc_init+0xcc>)
 800104a:	699b      	ldr	r3, [r3, #24]
 800104c:	4a30      	ldr	r2, [pc, #192]	; (8001110 <adc_init+0xcc>)
 800104e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001052:	6193      	str	r3, [r2, #24]
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001054:	4b2e      	ldr	r3, [pc, #184]	; (8001110 <adc_init+0xcc>)
 8001056:	699b      	ldr	r3, [r3, #24]
 8001058:	4a2d      	ldr	r2, [pc, #180]	; (8001110 <adc_init+0xcc>)
 800105a:	f043 0304 	orr.w	r3, r3, #4
 800105e:	6193      	str	r3, [r2, #24]
	RCC->CFGR|= RCC_CFGR_ADCPRE_DIV4; //ADC PRESCALOR SET TO 4
 8001060:	4b2b      	ldr	r3, [pc, #172]	; (8001110 <adc_init+0xcc>)
 8001062:	685b      	ldr	r3, [r3, #4]
 8001064:	4a2a      	ldr	r2, [pc, #168]	; (8001110 <adc_init+0xcc>)
 8001066:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800106a:	6053      	str	r3, [r2, #4]


	GPIOA->CRL&= ~(GPIO_CRL_MODE1_0 | GPIO_CRL_MODE1_1);    //PA1 channel 1
 800106c:	4b29      	ldr	r3, [pc, #164]	; (8001114 <adc_init+0xd0>)
 800106e:	681b      	ldr	r3, [r3, #0]
 8001070:	4a28      	ldr	r2, [pc, #160]	; (8001114 <adc_init+0xd0>)
 8001072:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001076:	6013      	str	r3, [r2, #0]
	GPIOA->CRL&= ~(GPIO_CRL_CNF1_0 | GPIO_CRL_CNF1_1);
 8001078:	4b26      	ldr	r3, [pc, #152]	; (8001114 <adc_init+0xd0>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	4a25      	ldr	r2, [pc, #148]	; (8001114 <adc_init+0xd0>)
 800107e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001082:	6013      	str	r3, [r2, #0]
//	GPIOA->CRL&= ~(GPIO_CRL_MODE0_0 | GPIO_CRL_MODE0_1);   //PA0   channel 0
//	GPIOA->CRL&= ~(GPIO_CRL_CNF0_0 | GPIO_CRL_CNF0_1);


//***** adc peripheral configuration ******/
    ADC1->CR2&= ~ADC_CR2_ALIGN; // RIGHT aligned selected  TP BE CHECK
 8001084:	4b24      	ldr	r3, [pc, #144]	; (8001118 <adc_init+0xd4>)
 8001086:	689b      	ldr	r3, [r3, #8]
 8001088:	4a23      	ldr	r2, [pc, #140]	; (8001118 <adc_init+0xd4>)
 800108a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800108e:	6093      	str	r3, [r2, #8]
    ADC1->CR2|= (ADC_CR2_EXTSEL_0 | ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_2);   //Externel  Triger source for Regular group
 8001090:	4b21      	ldr	r3, [pc, #132]	; (8001118 <adc_init+0xd4>)
 8001092:	689b      	ldr	r3, [r3, #8]
 8001094:	4a20      	ldr	r2, [pc, #128]	; (8001118 <adc_init+0xd4>)
 8001096:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 800109a:	6093      	str	r3, [r2, #8]
   ADC1->CR2&= ~ADC_CR2_CONT; // Single conversion mode selected, CONTINOUS MODE DISABLED if : CONT = 1 Continous conversion mode will be selected
 800109c:	4b1e      	ldr	r3, [pc, #120]	; (8001118 <adc_init+0xd4>)
 800109e:	689b      	ldr	r3, [r3, #8]
 80010a0:	4a1d      	ldr	r2, [pc, #116]	; (8001118 <adc_init+0xd4>)
 80010a2:	f023 0302 	bic.w	r3, r3, #2
 80010a6:	6093      	str	r3, [r2, #8]
  // ADC1->CR2|= ADC_CR2_CONT; // Continous mode selected


    ADC1->CR1 &= ~(ADC_CR1_SCAN); // SCAN DISABLED, if using scan mode then dma must be enab;ed
 80010a8:	4b1b      	ldr	r3, [pc, #108]	; (8001118 <adc_init+0xd4>)
 80010aa:	685b      	ldr	r3, [r3, #4]
 80010ac:	4a1a      	ldr	r2, [pc, #104]	; (8001118 <adc_init+0xd4>)
 80010ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80010b2:	6053      	str	r3, [r2, #4]
    ADC1->CR1 &= ~(ADC_CR1_JDISCEN | ADC_CR1_DISCEN); // Discontinous mode disabled for both injected and regular groups
 80010b4:	4b18      	ldr	r3, [pc, #96]	; (8001118 <adc_init+0xd4>)
 80010b6:	685b      	ldr	r3, [r3, #4]
 80010b8:	4a17      	ldr	r2, [pc, #92]	; (8001118 <adc_init+0xd4>)
 80010ba:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 80010be:	6053      	str	r3, [r2, #4]
    ADC1->CR1 &= ~(ADC_CR1_DISCNUM_2 | ADC_CR1_DISCNUM_1 | ADC_CR1_DISCNUM_2 ); // no channels are configured in discontinous way.                                                 // if  discontinous mode is enabled then number of
 80010c0:	4b15      	ldr	r3, [pc, #84]	; (8001118 <adc_init+0xd4>)
 80010c2:	685b      	ldr	r3, [r3, #4]
 80010c4:	4a14      	ldr	r2, [pc, #80]	; (8001118 <adc_init+0xd4>)
 80010c6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80010ca:	6053      	str	r3, [r2, #4]
                                                       //conversions to be done by discontinous mode has to be configured
                                                      // DISNUM bits
    ADC1->CR1 &= ~(ADC_CR1_DUALMOD_0 | ADC_CR1_DUALMOD_1 | ADC_CR1_DUALMOD_2); // INDEPENDENT MODE SELECTED
 80010cc:	4b12      	ldr	r3, [pc, #72]	; (8001118 <adc_init+0xd4>)
 80010ce:	685b      	ldr	r3, [r3, #4]
 80010d0:	4a11      	ldr	r2, [pc, #68]	; (8001118 <adc_init+0xd4>)
 80010d2:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 80010d6:	6053      	str	r3, [r2, #4]
    ADC1->CR1 &= ~(ADC_CR1_AWDEN | ADC_CR1_JAWDEN);  // Analog watchdog disabled for both groups: regular and ibnjected
 80010d8:	4b0f      	ldr	r3, [pc, #60]	; (8001118 <adc_init+0xd4>)
 80010da:	685b      	ldr	r3, [r3, #4]
 80010dc:	4a0e      	ldr	r2, [pc, #56]	; (8001118 <adc_init+0xd4>)
 80010de:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80010e2:	6053      	str	r3, [r2, #4]
   // ADC1->SQR1 &= ~(ADC_SQR1_L_0 | ADC_SQR1_L_1 | ADC_SQR1_L_2 | ADC_SQR1_L_3); // 1 channel length is selected for regular group
    ADC1->SQR1 |= (ADC_SQR1_L_3); // 2 channel length is selected for regular group
 80010e4:	4b0c      	ldr	r3, [pc, #48]	; (8001118 <adc_init+0xd4>)
 80010e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010e8:	4a0b      	ldr	r2, [pc, #44]	; (8001118 <adc_init+0xd4>)
 80010ea:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80010ee:	62d3      	str	r3, [r2, #44]	; 0x2c
     * Say if we have Selected 2 As length of ADC in SQR1 Register,and want to use 2 channels Channel 0 and 1 of ADC
     * then we will set bits in SQR3 for specifying the sequence of those two channels.
     *
     *
     */
    ADC1->SQR3 |= ADC_SQR3_SQ1_0; //1 ST SEQUENCE IN REGULAR GROUP IS CONFIGURED FOR ADC CHANNEL 1(PA1)
 80010f0:	4b09      	ldr	r3, [pc, #36]	; (8001118 <adc_init+0xd4>)
 80010f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010f4:	4a08      	ldr	r2, [pc, #32]	; (8001118 <adc_init+0xd4>)
 80010f6:	f043 0301 	orr.w	r3, r3, #1
 80010fa:	6353      	str	r3, [r2, #52]	; 0x34




   // ADC1->SMPR2&= ~ADC_SMPR2_SMP0; // ADC channel:0 Sample Time selected as 1.5 cycles  // TOBE CHECKED
    ADC1->SMPR2&= ~ADC_SMPR2_SMP1; // ADC channel:1 Sample Time selected as 1.5 cycles  // TOBE CHECKED
 80010fc:	4b06      	ldr	r3, [pc, #24]	; (8001118 <adc_init+0xd4>)
 80010fe:	691b      	ldr	r3, [r3, #16]
 8001100:	4a05      	ldr	r2, [pc, #20]	; (8001118 <adc_init+0xd4>)
 8001102:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8001106:	6113      	str	r3, [r2, #16]

}
 8001108:	bf00      	nop
 800110a:	46bd      	mov	sp, r7
 800110c:	bc80      	pop	{r7}
 800110e:	4770      	bx	lr
 8001110:	40021000 	.word	0x40021000
 8001114:	40010800 	.word	0x40010800
 8001118:	40012400 	.word	0x40012400

0800111c <adc_convertPOL_START>:

/*
 * This Function start The ADC Conversion and We wait to get the ADC value by Polling, and then return the ADC Value
 */
uint16_t adc_convertPOL_START()
{
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
	uint16_t adc_data;
	ADC1->CR2&= ~ADC_CR2_ADON; // ADC disabled first and voltage regulator shuld be enabled before enabling corresponing ADC
 8001122:	4b17      	ldr	r3, [pc, #92]	; (8001180 <adc_convertPOL_START+0x64>)
 8001124:	689b      	ldr	r3, [r3, #8]
 8001126:	4a16      	ldr	r2, [pc, #88]	; (8001180 <adc_convertPOL_START+0x64>)
 8001128:	f023 0301 	bic.w	r3, r3, #1
 800112c:	6093      	str	r3, [r2, #8]
	ADC1->CR2|= ADC_CR2_ADON; //ADC Enabled, before enabling should check that adc is disabled.
 800112e:	4b14      	ldr	r3, [pc, #80]	; (8001180 <adc_convertPOL_START+0x64>)
 8001130:	689b      	ldr	r3, [r3, #8]
 8001132:	4a13      	ldr	r2, [pc, #76]	; (8001180 <adc_convertPOL_START+0x64>)
 8001134:	f043 0301 	orr.w	r3, r3, #1
 8001138:	6093      	str	r3, [r2, #8]

	//delay_us(2); // wait for 2 us

	ADC1->SR &= ~ADC_SR_EOC; //Clear regular group conversion flag  (To ensure of no unknown state from potential previous ADC operations) */
 800113a:	4b11      	ldr	r3, [pc, #68]	; (8001180 <adc_convertPOL_START+0x64>)
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	4a10      	ldr	r2, [pc, #64]	; (8001180 <adc_convertPOL_START+0x64>)
 8001140:	f023 0302 	bic.w	r3, r3, #2
 8001144:	6013      	str	r3, [r2, #0]
	 ADC1->CR2|= ADC_CR2_EXTTRIG; // externel event trigger for conversion is enabled , always enabled
 8001146:	4b0e      	ldr	r3, [pc, #56]	; (8001180 <adc_convertPOL_START+0x64>)
 8001148:	689b      	ldr	r3, [r3, #8]
 800114a:	4a0d      	ldr	r2, [pc, #52]	; (8001180 <adc_convertPOL_START+0x64>)
 800114c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001150:	6093      	str	r3, [r2, #8]
	 ADC1->CR2|= ADC_CR2_SWSTART; // Start ADC Conversion of regular group
 8001152:	4b0b      	ldr	r3, [pc, #44]	; (8001180 <adc_convertPOL_START+0x64>)
 8001154:	689b      	ldr	r3, [r3, #8]
 8001156:	4a0a      	ldr	r2, [pc, #40]	; (8001180 <adc_convertPOL_START+0x64>)
 8001158:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800115c:	6093      	str	r3, [r2, #8]

	while(!(ADC1->SR & ADC_SR_EOC)); // wait till a group channel converstion has completed
 800115e:	bf00      	nop
 8001160:	4b07      	ldr	r3, [pc, #28]	; (8001180 <adc_convertPOL_START+0x64>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	f003 0302 	and.w	r3, r3, #2
 8001168:	2b00      	cmp	r3, #0
 800116a:	d0f9      	beq.n	8001160 <adc_convertPOL_START+0x44>
	                                 //clear the EOC bit by reading DR register
	adc_data = ADC1->DR;
 800116c:	4b04      	ldr	r3, [pc, #16]	; (8001180 <adc_convertPOL_START+0x64>)
 800116e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001170:	80fb      	strh	r3, [r7, #6]
    return adc_data;
 8001172:	88fb      	ldrh	r3, [r7, #6]


}
 8001174:	4618      	mov	r0, r3
 8001176:	370c      	adds	r7, #12
 8001178:	46bd      	mov	sp, r7
 800117a:	bc80      	pop	{r7}
 800117c:	4770      	bx	lr
 800117e:	bf00      	nop
 8001180:	40012400 	.word	0x40012400

08001184 <GB_uart_pin_conf2>:


//************************STM32- UART2 functions*******************//
//PA3- RX, PA2-TX
void GB_uart_pin_conf2()
{
 8001184:	b480      	push	{r7}
 8001186:	af00      	add	r7, sp, #0
	// enable bus clock
	 RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001188:	4b10      	ldr	r3, [pc, #64]	; (80011cc <GB_uart_pin_conf2+0x48>)
 800118a:	69db      	ldr	r3, [r3, #28]
 800118c:	4a0f      	ldr	r2, [pc, #60]	; (80011cc <GB_uart_pin_conf2+0x48>)
 800118e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001192:	61d3      	str	r3, [r2, #28]
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001194:	4b0d      	ldr	r3, [pc, #52]	; (80011cc <GB_uart_pin_conf2+0x48>)
 8001196:	699b      	ldr	r3, [r3, #24]
 8001198:	4a0c      	ldr	r2, [pc, #48]	; (80011cc <GB_uart_pin_conf2+0x48>)
 800119a:	f043 0304 	orr.w	r3, r3, #4
 800119e:	6193      	str	r3, [r2, #24]

     //TX pin as alternate push pull
	 /* PA2 as output*/
	 GPIOA->CRL |= (GPIO_CRL_MODE2_1 | GPIO_CRL_MODE2_0);
 80011a0:	4b0b      	ldr	r3, [pc, #44]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011a2:	681b      	ldr	r3, [r3, #0]
 80011a4:	4a0a      	ldr	r2, [pc, #40]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011a6:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80011aa:	6013      	str	r3, [r2, #0]
	 GPIOA->CRL |= (GPIO_CRL_CNF2_1);
 80011ac:	4b08      	ldr	r3, [pc, #32]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	4a07      	ldr	r2, [pc, #28]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011b2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80011b6:	6013      	str	r3, [r2, #0]
	 GPIOA->CRL &= ~(GPIO_CRL_CNF2_0);
 80011b8:	4b05      	ldr	r3, [pc, #20]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	4a04      	ldr	r2, [pc, #16]	; (80011d0 <GB_uart_pin_conf2+0x4c>)
 80011be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80011c2:	6013      	str	r3, [r2, #0]
	 /*
	   * PIN PA3 is the RX pin and it has to be set to input &FLOATING
	   * this is the rest value of the pin so we dont do anything to it
	   *
	   * */
}
 80011c4:	bf00      	nop
 80011c6:	46bd      	mov	sp, r7
 80011c8:	bc80      	pop	{r7}
 80011ca:	4770      	bx	lr
 80011cc:	40021000 	.word	0x40021000
 80011d0:	40010800 	.word	0x40010800

080011d4 <GB_uart_boud_rate2>:

void GB_uart_boud_rate2()
{
 80011d4:	b480      	push	{r7}
 80011d6:	af00      	add	r7, sp, #0
	//usartdiv = 0d208.33
	//DIV_Fraction = 0.33*16 = 0d5.28 = 0d5(Nearest whole number) = 0x5
	//DIV_Mantissa = 0d208 = 0xd0
	//USART2->BRR =  ( ( uartdiv / 16 ) << USART_BRR_DIV_Mantissa_Pos );
	//USART2->BRR =  ( ( uartdiv % 16 ) << USART_BRR_DIV_Fraction_Pos ) ;
     USART2->BRR = 0x116;
 80011d8:	4b03      	ldr	r3, [pc, #12]	; (80011e8 <GB_uart_boud_rate2+0x14>)
 80011da:	f44f 728b 	mov.w	r2, #278	; 0x116
 80011de:	609a      	str	r2, [r3, #8]
}
 80011e0:	bf00      	nop
 80011e2:	46bd      	mov	sp, r7
 80011e4:	bc80      	pop	{r7}
 80011e6:	4770      	bx	lr
 80011e8:	40004400 	.word	0x40004400

080011ec <GB_uart_init2>:
void GB_uart_init2()
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	af00      	add	r7, sp, #0

	GB_uart_pin_conf2();
 80011f0:	f7ff ffc8 	bl	8001184 <GB_uart_pin_conf2>
	//Alternate pin register
	/* no remap rx tx pins, for UART at pa2(tx) and pa3(rx)*/
    USART2->CR1 = 0x0000;
 80011f4:	4b12      	ldr	r3, [pc, #72]	; (8001240 <GB_uart_init2+0x54>)
 80011f6:	2200      	movs	r2, #0
 80011f8:	60da      	str	r2, [r3, #12]
	//enable UART and configure stop byte
	USART2->CR1 |= USART_CR1_UE;
 80011fa:	4b11      	ldr	r3, [pc, #68]	; (8001240 <GB_uart_init2+0x54>)
 80011fc:	68db      	ldr	r3, [r3, #12]
 80011fe:	4a10      	ldr	r2, [pc, #64]	; (8001240 <GB_uart_init2+0x54>)
 8001200:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001204:	60d3      	str	r3, [r2, #12]
	USART2->CR1 &= ~USART_CR1_M;
 8001206:	4b0e      	ldr	r3, [pc, #56]	; (8001240 <GB_uart_init2+0x54>)
 8001208:	68db      	ldr	r3, [r3, #12]
 800120a:	4a0d      	ldr	r2, [pc, #52]	; (8001240 <GB_uart_init2+0x54>)
 800120c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001210:	60d3      	str	r3, [r2, #12]

	 //enable RXNE interrupts on USART SIDE
	USART2->CR1 |= USART_CR1_RXNEIE;
 8001212:	4b0b      	ldr	r3, [pc, #44]	; (8001240 <GB_uart_init2+0x54>)
 8001214:	68db      	ldr	r3, [r3, #12]
 8001216:	4a0a      	ldr	r2, [pc, #40]	; (8001240 <GB_uart_init2+0x54>)
 8001218:	f043 0320 	orr.w	r3, r3, #32
 800121c:	60d3      	str	r3, [r2, #12]

	//enable transmitter
	USART2->CR1 |= USART_CR1_TE;
 800121e:	4b08      	ldr	r3, [pc, #32]	; (8001240 <GB_uart_init2+0x54>)
 8001220:	68db      	ldr	r3, [r3, #12]
 8001222:	4a07      	ldr	r2, [pc, #28]	; (8001240 <GB_uart_init2+0x54>)
 8001224:	f043 0308 	orr.w	r3, r3, #8
 8001228:	60d3      	str	r3, [r2, #12]
	//enable receiver
	USART2->CR1 |= USART_CR1_RE;
 800122a:	4b05      	ldr	r3, [pc, #20]	; (8001240 <GB_uart_init2+0x54>)
 800122c:	68db      	ldr	r3, [r3, #12]
 800122e:	4a04      	ldr	r2, [pc, #16]	; (8001240 <GB_uart_init2+0x54>)
 8001230:	f043 0304 	orr.w	r3, r3, #4
 8001234:	60d3      	str	r3, [r2, #12]


    GB_uart_boud_rate2();
 8001236:	f7ff ffcd 	bl	80011d4 <GB_uart_boud_rate2>


}
 800123a:	bf00      	nop
 800123c:	bd80      	pop	{r7, pc}
 800123e:	bf00      	nop
 8001240:	40004400 	.word	0x40004400

08001244 <GB_UART_TxChar2>:
void GB_UART_TxChar2(uint32_t gb_byte)
{
 8001244:	b480      	push	{r7}
 8001246:	b083      	sub	sp, #12
 8001248:	af00      	add	r7, sp, #0
 800124a:	6078      	str	r0, [r7, #4]
	while(!(USART2->SR & USART_SR_TXE));
 800124c:	bf00      	nop
 800124e:	4b07      	ldr	r3, [pc, #28]	; (800126c <GB_UART_TxChar2+0x28>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001256:	2b00      	cmp	r3, #0
 8001258:	d0f9      	beq.n	800124e <GB_UART_TxChar2+0xa>
	USART2->DR = gb_byte;
 800125a:	4a04      	ldr	r2, [pc, #16]	; (800126c <GB_UART_TxChar2+0x28>)
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	6053      	str	r3, [r2, #4]

}
 8001260:	bf00      	nop
 8001262:	370c      	adds	r7, #12
 8001264:	46bd      	mov	sp, r7
 8001266:	bc80      	pop	{r7}
 8001268:	4770      	bx	lr
 800126a:	bf00      	nop
 800126c:	40004400 	.word	0x40004400

08001270 <GB_printString2>:

void GB_printString2(const char *gb_myString)      /////to print any string
{
 8001270:	b580      	push	{r7, lr}
 8001272:	b082      	sub	sp, #8
 8001274:	af00      	add	r7, sp, #0
 8001276:	6078      	str	r0, [r7, #4]
	while (*gb_myString)
 8001278:	e006      	b.n	8001288 <GB_printString2+0x18>
	GB_UART_TxChar2(*gb_myString++);
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	1c5a      	adds	r2, r3, #1
 800127e:	607a      	str	r2, [r7, #4]
 8001280:	781b      	ldrb	r3, [r3, #0]
 8001282:	4618      	mov	r0, r3
 8001284:	f7ff ffde 	bl	8001244 <GB_UART_TxChar2>
	while (*gb_myString)
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	781b      	ldrb	r3, [r3, #0]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d1f4      	bne.n	800127a <GB_printString2+0xa>
	while(!(USART2->SR & USART_SR_TC));
 8001290:	bf00      	nop
 8001292:	4b05      	ldr	r3, [pc, #20]	; (80012a8 <GB_printString2+0x38>)
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800129a:	2b00      	cmp	r3, #0
 800129c:	d0f9      	beq.n	8001292 <GB_printString2+0x22>

}
 800129e:	bf00      	nop
 80012a0:	3708      	adds	r7, #8
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bd80      	pop	{r7, pc}
 80012a6:	bf00      	nop
 80012a8:	40004400 	.word	0x40004400

080012ac <GB_float_value2>:
	while(!(USART2->SR & USART_SR_RXNE));
}


void GB_float_value2(float gb_value)
{
 80012ac:	b590      	push	{r4, r7, lr}
 80012ae:	b087      	sub	sp, #28
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
	char gb_float_buff[10];
	sprintf(gb_float_buff,"%f",gb_value);
 80012b4:	6878      	ldr	r0, [r7, #4]
 80012b6:	f7ff f8c7 	bl	8000448 <__aeabi_f2d>
 80012ba:	4603      	mov	r3, r0
 80012bc:	460c      	mov	r4, r1
 80012be:	f107 000c 	add.w	r0, r7, #12
 80012c2:	461a      	mov	r2, r3
 80012c4:	4623      	mov	r3, r4
 80012c6:	4906      	ldr	r1, [pc, #24]	; (80012e0 <GB_float_value2+0x34>)
 80012c8:	f001 fb84 	bl	80029d4 <siprintf>
	GB_printString2(gb_float_buff);
 80012cc:	f107 030c 	add.w	r3, r7, #12
 80012d0:	4618      	mov	r0, r3
 80012d2:	f7ff ffcd 	bl	8001270 <GB_printString2>

}
 80012d6:	bf00      	nop
 80012d8:	371c      	adds	r7, #28
 80012da:	46bd      	mov	sp, r7
 80012dc:	bd90      	pop	{r4, r7, pc}
 80012de:	bf00      	nop
 80012e0:	08005800 	.word	0x08005800

080012e4 <gb_i2c2_pin_config>:
#include <gb_i2c.h>
#include "stm32f1xx.h"
#include "stdio.h"
//PB10-SCL,PB11-SDA
void gb_i2c2_pin_config()
{
 80012e4:	b480      	push	{r7}
 80012e6:	af00      	add	r7, sp, #0


	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 80012e8:	4b13      	ldr	r3, [pc, #76]	; (8001338 <gb_i2c2_pin_config+0x54>)
 80012ea:	699b      	ldr	r3, [r3, #24]
 80012ec:	4a12      	ldr	r2, [pc, #72]	; (8001338 <gb_i2c2_pin_config+0x54>)
 80012ee:	f043 0308 	orr.w	r3, r3, #8
 80012f2:	6193      	str	r3, [r2, #24]
	RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 80012f4:	4b10      	ldr	r3, [pc, #64]	; (8001338 <gb_i2c2_pin_config+0x54>)
 80012f6:	69db      	ldr	r3, [r3, #28]
 80012f8:	4a0f      	ldr	r2, [pc, #60]	; (8001338 <gb_i2c2_pin_config+0x54>)
 80012fa:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80012fe:	61d3      	str	r3, [r2, #28]


	//PB10 SCL will be set as alternate function open drain
	GPIOB->CRH |= GPIO_CRH_MODE10_0 | GPIO_CRH_MODE10_1;      //Output Mode
 8001300:	4b0e      	ldr	r3, [pc, #56]	; (800133c <gb_i2c2_pin_config+0x58>)
 8001302:	685b      	ldr	r3, [r3, #4]
 8001304:	4a0d      	ldr	r2, [pc, #52]	; (800133c <gb_i2c2_pin_config+0x58>)
 8001306:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800130a:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |= GPIO_CRH_CNF10_1 | GPIO_CRH_CNF10_0;         //Alternate Function
 800130c:	4b0b      	ldr	r3, [pc, #44]	; (800133c <gb_i2c2_pin_config+0x58>)
 800130e:	685b      	ldr	r3, [r3, #4]
 8001310:	4a0a      	ldr	r2, [pc, #40]	; (800133c <gb_i2c2_pin_config+0x58>)
 8001312:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 8001316:	6053      	str	r3, [r2, #4]

 //PB11 SDA will be set as alternate function open drain
	GPIOB->CRH |= GPIO_CRH_MODE11_0 | GPIO_CRH_MODE11_1;     //Output Mode
 8001318:	4b08      	ldr	r3, [pc, #32]	; (800133c <gb_i2c2_pin_config+0x58>)
 800131a:	685b      	ldr	r3, [r3, #4]
 800131c:	4a07      	ldr	r2, [pc, #28]	; (800133c <gb_i2c2_pin_config+0x58>)
 800131e:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001322:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |= GPIO_CRH_CNF11_1 | GPIO_CRH_CNF11_0;         //Alternate Function
 8001324:	4b05      	ldr	r3, [pc, #20]	; (800133c <gb_i2c2_pin_config+0x58>)
 8001326:	685b      	ldr	r3, [r3, #4]
 8001328:	4a04      	ldr	r2, [pc, #16]	; (800133c <gb_i2c2_pin_config+0x58>)
 800132a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800132e:	6053      	str	r3, [r2, #4]

}
 8001330:	bf00      	nop
 8001332:	46bd      	mov	sp, r7
 8001334:	bc80      	pop	{r7}
 8001336:	4770      	bx	lr
 8001338:	40021000 	.word	0x40021000
 800133c:	40010c00 	.word	0x40010c00

08001340 <gb_i2c_master_init>:
uint32_t gb_read_reg =0;
void gb_i2c_master_init()
{
 8001340:	b580      	push	{r7, lr}
 8001342:	af00      	add	r7, sp, #0
	gb_i2c2_pin_config();
 8001344:	f7ff ffce 	bl	80012e4 <gb_i2c2_pin_config>

	// configure i2c_cr2 register for peripheral input clock: FREQ[] bits //
I2C2->CR2 = 0x20; //we have to set FREQ according to the frequency of our core
 8001348:	4b09      	ldr	r3, [pc, #36]	; (8001370 <gb_i2c_master_init+0x30>)
 800134a:	2220      	movs	r2, #32
 800134c:	605a      	str	r2, [r3, #4]
                  //that is 32MHZ in our case 0x20 = 32

//configure i2c_clock control register i2c_ccr
I2C2->CCR = 0x140;
 800134e:	4b08      	ldr	r3, [pc, #32]	; (8001370 <gb_i2c_master_init+0x30>)
 8001350:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001354:	61da      	str	r2, [r3, #28]

	//configure i2c_trise register(i2c_trise)
I2C2->TRISE = 0x21;
 8001356:	4b06      	ldr	r3, [pc, #24]	; (8001370 <gb_i2c_master_init+0x30>)
 8001358:	2221      	movs	r2, #33	; 0x21
 800135a:	621a      	str	r2, [r3, #32]
	//program the i2c_cr1 register to enable the peripheral

	I2C2->CR1 |= I2C_CR1_PE;
 800135c:	4b04      	ldr	r3, [pc, #16]	; (8001370 <gb_i2c_master_init+0x30>)
 800135e:	681b      	ldr	r3, [r3, #0]
 8001360:	4a03      	ldr	r2, [pc, #12]	; (8001370 <gb_i2c_master_init+0x30>)
 8001362:	f043 0301 	orr.w	r3, r3, #1
 8001366:	6013      	str	r3, [r2, #0]

	if((I2C2->SR2 & I2C_SR2_BUSY) == 1)
 8001368:	4b01      	ldr	r3, [pc, #4]	; (8001370 <gb_i2c_master_init+0x30>)
 800136a:	699b      	ldr	r3, [r3, #24]
		gb_i2c_master_stop_generation();


}
 800136c:	bf00      	nop
 800136e:	bd80      	pop	{r7, pc}
 8001370:	40005800 	.word	0x40005800

08001374 <gb_i2c_start_condition_w>:
//when system  generates start signal , interface automatically switches to master mode
//MSL bit will tell whether entered in master mode or not
//SB bit to be in while loop for successful transmission of start bit

void gb_i2c_start_condition_w() //EV5
{
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0
	//generate the start condition for starting the communication
		I2C2->CR1 |= I2C_CR1_START;
 8001378:	4b0a      	ldr	r3, [pc, #40]	; (80013a4 <gb_i2c_start_condition_w+0x30>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	4a09      	ldr	r2, [pc, #36]	; (80013a4 <gb_i2c_start_condition_w+0x30>)
 800137e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001382:	6013      	str	r3, [r2, #0]
		while(!(I2C2->SR1 & I2C_SR1_SB));  // wait to get transfered to master mode
 8001384:	bf00      	nop
 8001386:	4b07      	ldr	r3, [pc, #28]	; (80013a4 <gb_i2c_start_condition_w+0x30>)
 8001388:	695b      	ldr	r3, [r3, #20]
 800138a:	f003 0301 	and.w	r3, r3, #1
 800138e:	2b00      	cmp	r3, #0
 8001390:	d0f9      	beq.n	8001386 <gb_i2c_start_condition_w+0x12>
		gb_read_reg = I2C2->SR1;
 8001392:	4b04      	ldr	r3, [pc, #16]	; (80013a4 <gb_i2c_start_condition_w+0x30>)
 8001394:	695b      	ldr	r3, [r3, #20]
 8001396:	4a04      	ldr	r2, [pc, #16]	; (80013a8 <gb_i2c_start_condition_w+0x34>)
 8001398:	6013      	str	r3, [r2, #0]
}
 800139a:	bf00      	nop
 800139c:	46bd      	mov	sp, r7
 800139e:	bc80      	pop	{r7}
 80013a0:	4770      	bx	lr
 80013a2:	bf00      	nop
 80013a4:	40005800 	.word	0x40005800
 80013a8:	200001f0 	.word	0x200001f0

080013ac <gb_i2c_start_condition_r>:
void gb_i2c_start_condition_r() //EV5
{
 80013ac:	b480      	push	{r7}
 80013ae:	af00      	add	r7, sp, #0
	I2C2->CR1 |= I2C_CR1_ACK;
 80013b0:	4b0d      	ldr	r3, [pc, #52]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	4a0c      	ldr	r2, [pc, #48]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013b6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80013ba:	6013      	str	r3, [r2, #0]
	//generate the start condition for starting the communication
		I2C2->CR1 |= I2C_CR1_START;
 80013bc:	4b0a      	ldr	r3, [pc, #40]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	4a09      	ldr	r2, [pc, #36]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80013c6:	6013      	str	r3, [r2, #0]
		while(!(I2C2->SR1 & I2C_SR1_SB));  // wait to get transfered to master mode
 80013c8:	bf00      	nop
 80013ca:	4b07      	ldr	r3, [pc, #28]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013cc:	695b      	ldr	r3, [r3, #20]
 80013ce:	f003 0301 	and.w	r3, r3, #1
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d0f9      	beq.n	80013ca <gb_i2c_start_condition_r+0x1e>
		gb_read_reg = I2C2->SR1;
 80013d6:	4b04      	ldr	r3, [pc, #16]	; (80013e8 <gb_i2c_start_condition_r+0x3c>)
 80013d8:	695b      	ldr	r3, [r3, #20]
 80013da:	4a04      	ldr	r2, [pc, #16]	; (80013ec <gb_i2c_start_condition_r+0x40>)
 80013dc:	6013      	str	r3, [r2, #0]
}
 80013de:	bf00      	nop
 80013e0:	46bd      	mov	sp, r7
 80013e2:	bc80      	pop	{r7}
 80013e4:	4770      	bx	lr
 80013e6:	bf00      	nop
 80013e8:	40005800 	.word	0x40005800
 80013ec:	200001f0 	.word	0x200001f0

080013f0 <gb_i2c_address_send_w>:
 * In 7-bit addressing mode,
– To enter Transmitter mode, a master sends the slave address with LSB reset.
– To enter Receiver mode, a master sends the slave address with LSB set.
 * */
void gb_i2c_address_send_w(uint8_t gb_slave_address)//EV6
{
 80013f0:	b480      	push	{r7}
 80013f2:	b083      	sub	sp, #12
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	4603      	mov	r3, r0
 80013f8:	71fb      	strb	r3, [r7, #7]


	I2C2->DR = gb_slave_address;//Write slave address on I2C data bus
 80013fa:	4a0f      	ldr	r2, [pc, #60]	; (8001438 <gb_i2c_address_send_w+0x48>)
 80013fc:	79fb      	ldrb	r3, [r7, #7]
 80013fe:	6113      	str	r3, [r2, #16]
	while(!(I2C2->SR1 & I2C_SR1_TXE));
 8001400:	bf00      	nop
 8001402:	4b0d      	ldr	r3, [pc, #52]	; (8001438 <gb_i2c_address_send_w+0x48>)
 8001404:	695b      	ldr	r3, [r3, #20]
 8001406:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800140a:	2b00      	cmp	r3, #0
 800140c:	d0f9      	beq.n	8001402 <gb_i2c_address_send_w+0x12>
	while(!(I2C2->SR1 & I2C_SR1_ADDR));  // Wait till address byte is being transmitted: ADDR bit set on succesful transmission of address
 800140e:	bf00      	nop
 8001410:	4b09      	ldr	r3, [pc, #36]	; (8001438 <gb_i2c_address_send_w+0x48>)
 8001412:	695b      	ldr	r3, [r3, #20]
 8001414:	f003 0302 	and.w	r3, r3, #2
 8001418:	2b00      	cmp	r3, #0
 800141a:	d0f9      	beq.n	8001410 <gb_i2c_address_send_w+0x20>

	//Clearing the ADDR bit
	gb_read_reg = I2C2->SR1;
 800141c:	4b06      	ldr	r3, [pc, #24]	; (8001438 <gb_i2c_address_send_w+0x48>)
 800141e:	695b      	ldr	r3, [r3, #20]
 8001420:	4a06      	ldr	r2, [pc, #24]	; (800143c <gb_i2c_address_send_w+0x4c>)
 8001422:	6013      	str	r3, [r2, #0]
	gb_read_reg = I2C2->SR2;
 8001424:	4b04      	ldr	r3, [pc, #16]	; (8001438 <gb_i2c_address_send_w+0x48>)
 8001426:	699b      	ldr	r3, [r3, #24]
 8001428:	4a04      	ldr	r2, [pc, #16]	; (800143c <gb_i2c_address_send_w+0x4c>)
 800142a:	6013      	str	r3, [r2, #0]

	//while(!(I2C2->SR1 & I2C_SR1_TXE)); //(EV8_1)wait for data register to get empty on transmission of data
}
 800142c:	bf00      	nop
 800142e:	370c      	adds	r7, #12
 8001430:	46bd      	mov	sp, r7
 8001432:	bc80      	pop	{r7}
 8001434:	4770      	bx	lr
 8001436:	bf00      	nop
 8001438:	40005800 	.word	0x40005800
 800143c:	200001f0 	.word	0x200001f0

08001440 <gb_i2c_master_send_byte>:
void gb_i2c_master_send_byte(uint8_t gb_data)//EV8
{
 8001440:	b480      	push	{r7}
 8001442:	b083      	sub	sp, #12
 8001444:	af00      	add	r7, sp, #0
 8001446:	4603      	mov	r3, r0
 8001448:	71fb      	strb	r3, [r7, #7]
	I2C2->DR = gb_data; // send data byte on data register
 800144a:	4a07      	ldr	r2, [pc, #28]	; (8001468 <gb_i2c_master_send_byte+0x28>)
 800144c:	79fb      	ldrb	r3, [r7, #7]
 800144e:	6113      	str	r3, [r2, #16]
	while(!(I2C2->SR1 & I2C_SR1_TXE));  //wait for data register to get empty on transmission of data
 8001450:	bf00      	nop
 8001452:	4b05      	ldr	r3, [pc, #20]	; (8001468 <gb_i2c_master_send_byte+0x28>)
 8001454:	695b      	ldr	r3, [r3, #20]
 8001456:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800145a:	2b00      	cmp	r3, #0
 800145c:	d0f9      	beq.n	8001452 <gb_i2c_master_send_byte+0x12>
}
 800145e:	bf00      	nop
 8001460:	370c      	adds	r7, #12
 8001462:	46bd      	mov	sp, r7
 8001464:	bc80      	pop	{r7}
 8001466:	4770      	bx	lr
 8001468:	40005800 	.word	0x40005800

0800146c <gb_i2c_address_send_r>:


int gb_i2c_address_send_r(uint8_t gb_slave_address)//EV6
{
 800146c:	b480      	push	{r7}
 800146e:	b083      	sub	sp, #12
 8001470:	af00      	add	r7, sp, #0
 8001472:	4603      	mov	r3, r0
 8001474:	71fb      	strb	r3, [r7, #7]

	//I2C2->CR1 |= I2C_CR1_ACK;
	I2C2->DR = gb_slave_address;//Write slave address on I2C data bus
 8001476:	4a0d      	ldr	r2, [pc, #52]	; (80014ac <gb_i2c_address_send_r+0x40>)
 8001478:	79fb      	ldrb	r3, [r7, #7]
 800147a:	6113      	str	r3, [r2, #16]
	//while(!(I2C2->SR1 & I2C_SR1_TXE));
	while(!(I2C2->SR1 & I2C_SR1_ADDR))
 800147c:	e001      	b.n	8001482 <gb_i2c_address_send_r+0x16>

	{
		if((I2C2->SR1 & I2C_SR1_AF) == 1)
 800147e:	4b0b      	ldr	r3, [pc, #44]	; (80014ac <gb_i2c_address_send_r+0x40>)
 8001480:	695b      	ldr	r3, [r3, #20]
	while(!(I2C2->SR1 & I2C_SR1_ADDR))
 8001482:	4b0a      	ldr	r3, [pc, #40]	; (80014ac <gb_i2c_address_send_r+0x40>)
 8001484:	695b      	ldr	r3, [r3, #20]
 8001486:	f003 0302 	and.w	r3, r3, #2
 800148a:	2b00      	cmp	r3, #0
 800148c:	d0f7      	beq.n	800147e <gb_i2c_address_send_r+0x12>
	}

	// Wait till address byte is being transmitted: ADDR bit set on succesful transmission of address

	//Clearing the ADDR bit(EV6)
	gb_read_reg = I2C2->SR1;
 800148e:	4b07      	ldr	r3, [pc, #28]	; (80014ac <gb_i2c_address_send_r+0x40>)
 8001490:	695b      	ldr	r3, [r3, #20]
 8001492:	4a07      	ldr	r2, [pc, #28]	; (80014b0 <gb_i2c_address_send_r+0x44>)
 8001494:	6013      	str	r3, [r2, #0]
	gb_read_reg = I2C2->SR2;
 8001496:	4b05      	ldr	r3, [pc, #20]	; (80014ac <gb_i2c_address_send_r+0x40>)
 8001498:	699b      	ldr	r3, [r3, #24]
 800149a:	4a05      	ldr	r2, [pc, #20]	; (80014b0 <gb_i2c_address_send_r+0x44>)
 800149c:	6013      	str	r3, [r2, #0]
}
 800149e:	bf00      	nop
 80014a0:	4618      	mov	r0, r3
 80014a2:	370c      	adds	r7, #12
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bc80      	pop	{r7}
 80014a8:	4770      	bx	lr
 80014aa:	bf00      	nop
 80014ac:	40005800 	.word	0x40005800
 80014b0:	200001f0 	.word	0x200001f0

080014b4 <gb_i2c_master_receive_2_bytes>:


}
//for receiving 2 bytes
void gb_i2c_master_receive_2_bytes(uint8_t *gb_data1, uint8_t *gb_data2)
{
 80014b4:	b480      	push	{r7}
 80014b6:	b083      	sub	sp, #12
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
 80014bc:	6039      	str	r1, [r7, #0]
	//uint8_t data;
	I2C2->CR1 |= I2C_CR1_POS;
 80014be:	4b14      	ldr	r3, [pc, #80]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	4a13      	ldr	r2, [pc, #76]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014c4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80014c8:	6013      	str	r3, [r2, #0]

	I2C2->CR1 &= ~I2C_CR1_ACK;
 80014ca:	4b11      	ldr	r3, [pc, #68]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	4a10      	ldr	r2, [pc, #64]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014d0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80014d4:	6013      	str	r3, [r2, #0]

	//while(!(I2C2->SR1 & I2C_SR1_RXNE));
	while(!(I2C2->SR1 & I2C_SR1_BTF));
 80014d6:	bf00      	nop
 80014d8:	4b0d      	ldr	r3, [pc, #52]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014da:	695b      	ldr	r3, [r3, #20]
 80014dc:	f003 0304 	and.w	r3, r3, #4
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d0f9      	beq.n	80014d8 <gb_i2c_master_receive_2_bytes+0x24>
	I2C2->CR1 |= I2C_CR1_STOP;
 80014e4:	4b0a      	ldr	r3, [pc, #40]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a09      	ldr	r2, [pc, #36]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014ea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80014ee:	6013      	str	r3, [r2, #0]
	*gb_data1 = I2C2->DR;
 80014f0:	4b07      	ldr	r3, [pc, #28]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014f2:	691b      	ldr	r3, [r3, #16]
 80014f4:	b2da      	uxtb	r2, r3
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	701a      	strb	r2, [r3, #0]
	*gb_data2 = I2C2->DR;
 80014fa:	4b05      	ldr	r3, [pc, #20]	; (8001510 <gb_i2c_master_receive_2_bytes+0x5c>)
 80014fc:	691b      	ldr	r3, [r3, #16]
 80014fe:	b2da      	uxtb	r2, r3
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	701a      	strb	r2, [r3, #0]
//	 GB_printString2("\n");
	//if(!(I2C2->SR1 & I2C_SR1_BTF)); // check whether data byte transmission is done or not: BTF is set
	//read_reg = I2C2->SR1;

	//return data;
}
 8001504:	bf00      	nop
 8001506:	370c      	adds	r7, #12
 8001508:	46bd      	mov	sp, r7
 800150a:	bc80      	pop	{r7}
 800150c:	4770      	bx	lr
 800150e:	bf00      	nop
 8001510:	40005800 	.word	0x40005800

08001514 <gb_i2c_master_stop_generation>:

	return data;
}

void gb_i2c_master_stop_generation()
{
 8001514:	b480      	push	{r7}
 8001516:	af00      	add	r7, sp, #0
	I2C2->CR1 |= I2C_CR1_STOP;
 8001518:	4b04      	ldr	r3, [pc, #16]	; (800152c <gb_i2c_master_stop_generation+0x18>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	4a03      	ldr	r2, [pc, #12]	; (800152c <gb_i2c_master_stop_generation+0x18>)
 800151e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001522:	6013      	str	r3, [r2, #0]

}
 8001524:	bf00      	nop
 8001526:	46bd      	mov	sp, r7
 8001528:	bc80      	pop	{r7}
 800152a:	4770      	bx	lr
 800152c:	40005800 	.word	0x40005800

08001530 <ina219_init>:
/*
 * INA219 Initialise Function , for Setting  Configuration and Calibration register
 * as mentioned in above calculations
 */
void ina219_init()
{
 8001530:	b580      	push	{r7, lr}
 8001532:	b082      	sub	sp, #8
 8001534:	af00      	add	r7, sp, #0
	gb_i2c_master_init();
 8001536:	f7ff ff03 	bl	8001340 <gb_i2c_master_init>



	CR_LSB = 0.0001;  // Current_LSB value is used to calculate Current after reading Current Register (0x04)
 800153a:	4b20      	ldr	r3, [pc, #128]	; (80015bc <ina219_init+0x8c>)
 800153c:	4a20      	ldr	r2, [pc, #128]	; (80015c0 <ina219_init+0x90>)
 800153e:	601a      	str	r2, [r3, #0]
	PW_LSB = 0.002;   // Power_LSB value is used to calibrate Power after reading Power Register (0x03)
 8001540:	4b20      	ldr	r3, [pc, #128]	; (80015c4 <ina219_init+0x94>)
 8001542:	4a21      	ldr	r2, [pc, #132]	; (80015c8 <ina219_init+0x98>)
 8001544:	601a      	str	r2, [r3, #0]


	uint16_t ina219_calvalue = 4096;   // CALIBRATION Register = 4096 from Calculation above
 8001546:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800154a:	80fb      	strh	r3, [r7, #6]
	uint8_t ina219_cal_temp;
	ina219_cal_temp = (uint16_t)ina219_calvalue;  // 1st byte having hibyte data(15-8 bits)
 800154c:	88fb      	ldrh	r3, [r7, #6]
 800154e:	717b      	strb	r3, [r7, #5]
	ina219_calvalue >>= 8; // 2nd byte having lobyte data(0-7 bits)
 8001550:	88fb      	ldrh	r3, [r7, #6]
 8001552:	0a1b      	lsrs	r3, r3, #8
 8001554:	80fb      	strh	r3, [r7, #6]

	uint16_t ina219_confvalue = INA219_CONFIG_BVOLTAGERANGE_32V |
 8001556:	f643 139f 	movw	r3, #14751	; 0x399f
 800155a:	807b      	strh	r3, [r7, #2]
	INA219_CONFIG_GAIN_8_320MV | INA219_CONFIG_BADCRES_12BIT |
	INA219_CONFIG_SADCRES_12BIT_1S_532US |
	INA219_CONFIG_MODE_SANDBVOLT_CONTINUOUS;
	uint8_t ina219_conf_temp;
	ina219_conf_temp = (uint8_t)ina219_confvalue; // 1st byte having hibyte data(15-8 bits)
 800155c:	887b      	ldrh	r3, [r7, #2]
 800155e:	707b      	strb	r3, [r7, #1]
	ina219_confvalue >>= 8;  // 2nd byte having lobyte data(0-7 bits)
 8001560:	887b      	ldrh	r3, [r7, #2]
 8001562:	0a1b      	lsrs	r3, r3, #8
 8001564:	807b      	strh	r3, [r7, #2]


	gb_i2c_start_condition_w(); // Start Condition For Writing
 8001566:	f7ff ff05 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA); // INA219 I2C address is sent with Write bit
 800156a:	2080      	movs	r0, #128	; 0x80
 800156c:	f7ff ff40 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_CAL); // Sent Address of Calibration Register
 8001570:	2005      	movs	r0, #5
 8001572:	f7ff ff65 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_send_byte((uint8_t)ina219_calvalue); // Calibration High Byte is sent
 8001576:	88fb      	ldrh	r3, [r7, #6]
 8001578:	b2db      	uxtb	r3, r3
 800157a:	4618      	mov	r0, r3
 800157c:	f7ff ff60 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_send_byte(ina219_cal_temp); //Calibration Low Byte is sent
 8001580:	797b      	ldrb	r3, [r7, #5]
 8001582:	4618      	mov	r0, r3
 8001584:	f7ff ff5c 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 8001588:	f7ff ffc4 	bl	8001514 <gb_i2c_master_stop_generation>

	gb_i2c_start_condition_w();   // Start Condition For Writing
 800158c:	f7ff fef2 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA);   // INA219 I2C address is sent with Write bit
 8001590:	2080      	movs	r0, #128	; 0x80
 8001592:	f7ff ff2d 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_CONF);   // Sent Address of Configuration Register
 8001596:	2000      	movs	r0, #0
 8001598:	f7ff ff52 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_send_byte((uint8_t)ina219_confvalue);  // CONFIGURATION High Byte is sent
 800159c:	887b      	ldrh	r3, [r7, #2]
 800159e:	b2db      	uxtb	r3, r3
 80015a0:	4618      	mov	r0, r3
 80015a2:	f7ff ff4d 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_send_byte(ina219_conf_temp);  // CONFIGURATION LOW Byte is sent
 80015a6:	787b      	ldrb	r3, [r7, #1]
 80015a8:	4618      	mov	r0, r3
 80015aa:	f7ff ff49 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 80015ae:	f7ff ffb1 	bl	8001514 <gb_i2c_master_stop_generation>

}
 80015b2:	bf00      	nop
 80015b4:	3708      	adds	r7, #8
 80015b6:	46bd      	mov	sp, r7
 80015b8:	bd80      	pop	{r7, pc}
 80015ba:	bf00      	nop
 80015bc:	200001f4 	.word	0x200001f4
 80015c0:	38d1b717 	.word	0x38d1b717
 80015c4:	200001f8 	.word	0x200001f8
 80015c8:	3b03126f 	.word	0x3b03126f
 80015cc:	00000000 	.word	0x00000000

080015d0 <ina219_busvoltage>:
 * -->Bus Voltage Readings are given from [15:3] bytes, as [1:0] bits are Conversion Ready bit and Math Overflow Flag bit and [2] bit is reserved
 * --> so we will left shift the 16 bit value of 0x02 register by 3 bytes
 * --> And then Multiply the raw Bus Voltage Reading[15:3] by 4.
 */
void ina219_busvoltage()
{
 80015d0:	b590      	push	{r4, r7, lr}
 80015d2:	b085      	sub	sp, #20
 80015d4:	af00      	add	r7, sp, #0


	uint16_t ret; // Variable for Storing the  16 bit value
    uint8_t high_byte = 0;
 80015d6:	2300      	movs	r3, #0
 80015d8:	71fb      	strb	r3, [r7, #7]
    uint8_t low_byte = 0;
 80015da:	2300      	movs	r3, #0
 80015dc:	71bb      	strb	r3, [r7, #6]

	gb_i2c_start_condition_w();  // Start Condition For Writing
 80015de:	f7ff fec9 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA);   // INA219 I2C address is sent with Write bit
 80015e2:	2080      	movs	r0, #128	; 0x80
 80015e4:	f7ff ff04 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_BV); // Sent Address of Bus Voltage Register
 80015e8:	2002      	movs	r0, #2
 80015ea:	f7ff ff29 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation();  // STOP Condition is generated
 80015ee:	f7ff ff91 	bl	8001514 <gb_i2c_master_stop_generation>


	gb_i2c_start_condition_r(); // Start Condition For Reading
 80015f2:	f7ff fedb 	bl	80013ac <gb_i2c_start_condition_r>
	gb_i2c_address_send_r(ina219_RA); // INA219 I2C address is sent with Read bit
 80015f6:	2081      	movs	r0, #129	; 0x81
 80015f8:	f7ff ff38 	bl	800146c <gb_i2c_address_send_r>
	gb_i2c_master_receive_2_bytes(&high_byte,&low_byte);  // Reading High and Low Bytes
 80015fc:	1dba      	adds	r2, r7, #6
 80015fe:	1dfb      	adds	r3, r7, #7
 8001600:	4611      	mov	r1, r2
 8001602:	4618      	mov	r0, r3
 8001604:	f7ff ff56 	bl	80014b4 <gb_i2c_master_receive_2_bytes>
	gb_i2c_master_stop_generation();
 8001608:	f7ff ff84 	bl	8001514 <gb_i2c_master_stop_generation>



	ret = high_byte;
 800160c:	79fb      	ldrb	r3, [r7, #7]
 800160e:	81fb      	strh	r3, [r7, #14]
	ret <<= 8; // left shift the High Bytes by 8.
 8001610:	89fb      	ldrh	r3, [r7, #14]
 8001612:	021b      	lsls	r3, r3, #8
 8001614:	81fb      	strh	r3, [r7, #14]
	ret |= low_byte; // OR Operation on Left shifted MSB bits and LSB 8bits to get the Final 16 bit Value
 8001616:	79bb      	ldrb	r3, [r7, #6]
 8001618:	b29a      	uxth	r2, r3
 800161a:	89fb      	ldrh	r3, [r7, #14]
 800161c:	4313      	orrs	r3, r2
 800161e:	81fb      	strh	r3, [r7, #14]

	uint16_t temp;
	float BV;
	temp = ret;
 8001620:	89fb      	ldrh	r3, [r7, #14]
 8001622:	81bb      	strh	r3, [r7, #12]
	temp >>= 3;  // Shift to the right 3 to drop CNVR and OVF
 8001624:	89bb      	ldrh	r3, [r7, #12]
 8001626:	08db      	lsrs	r3, r3, #3
 8001628:	81bb      	strh	r3, [r7, #12]
	BV =  temp * 0.004; //and multiply by LSB
 800162a:	89bb      	ldrh	r3, [r7, #12]
 800162c:	4618      	mov	r0, r3
 800162e:	f7fe fef9 	bl	8000424 <__aeabi_i2d>
 8001632:	a30b      	add	r3, pc, #44	; (adr r3, 8001660 <ina219_busvoltage+0x90>)
 8001634:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001638:	f7fe ff5e 	bl	80004f8 <__aeabi_dmul>
 800163c:	4603      	mov	r3, r0
 800163e:	460c      	mov	r4, r1
 8001640:	4618      	mov	r0, r3
 8001642:	4621      	mov	r1, r4
 8001644:	f7ff fa50 	bl	8000ae8 <__aeabi_d2f>
 8001648:	4603      	mov	r3, r0
 800164a:	60bb      	str	r3, [r7, #8]
	GB_float_value2(BV); // Print The Float value
 800164c:	68b8      	ldr	r0, [r7, #8]
 800164e:	f7ff fe2d 	bl	80012ac <GB_float_value2>

}
 8001652:	bf00      	nop
 8001654:	3714      	adds	r7, #20
 8001656:	46bd      	mov	sp, r7
 8001658:	bd90      	pop	{r4, r7, pc}
 800165a:	bf00      	nop
 800165c:	f3af 8000 	nop.w
 8001660:	d2f1a9fc 	.word	0xd2f1a9fc
 8001664:	3f70624d 	.word	0x3f70624d

08001668 <ina219_shuntvoltage>:
 * Function for reading the Shunt Voltage Value from Shunt Voltage Register(0x01) of INA219
 * -->First sent the Address of Shunt Voltage Register and then Read the 16 bits from that register
 * -->Shunt Voltage Readings are Read and Obtained 16 bit value is multiplied by 0.01
 */
void ina219_shuntvoltage()
{
 8001668:	b590      	push	{r4, r7, lr}
 800166a:	b085      	sub	sp, #20
 800166c:	af00      	add	r7, sp, #0
	uint16_t ret;  // Variable for Storing the  16 bit value
	uint8_t high_byte = 0;
 800166e:	2300      	movs	r3, #0
 8001670:	71fb      	strb	r3, [r7, #7]
	uint8_t low_byte = 0;
 8001672:	2300      	movs	r3, #0
 8001674:	71bb      	strb	r3, [r7, #6]
	gb_i2c_start_condition_w(); // Start Condition For Writing
 8001676:	f7ff fe7d 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA);// INA219 I2C address is sent with Write bit
 800167a:	2080      	movs	r0, #128	; 0x80
 800167c:	f7ff feb8 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_SV);  // Sent Address of Shunt Voltage Register
 8001680:	2001      	movs	r0, #1
 8001682:	f7ff fedd 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation();  // STOP Condition is generated
 8001686:	f7ff ff45 	bl	8001514 <gb_i2c_master_stop_generation>


	gb_i2c_start_condition_r();  // Start Condition For Reading
 800168a:	f7ff fe8f 	bl	80013ac <gb_i2c_start_condition_r>
	gb_i2c_address_send_r(ina219_RA);  // INA219 I2C address is sent with Read bit
 800168e:	2081      	movs	r0, #129	; 0x81
 8001690:	f7ff feec 	bl	800146c <gb_i2c_address_send_r>
	gb_i2c_master_receive_2_bytes(&high_byte,&low_byte);  // Reading High and Low Bytes
 8001694:	1dba      	adds	r2, r7, #6
 8001696:	1dfb      	adds	r3, r7, #7
 8001698:	4611      	mov	r1, r2
 800169a:	4618      	mov	r0, r3
 800169c:	f7ff ff0a 	bl	80014b4 <gb_i2c_master_receive_2_bytes>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 80016a0:	f7ff ff38 	bl	8001514 <gb_i2c_master_stop_generation>
	ret = high_byte;
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	81fb      	strh	r3, [r7, #14]
	ret <<= 8; // left shift the High Bytes by 8.
 80016a8:	89fb      	ldrh	r3, [r7, #14]
 80016aa:	021b      	lsls	r3, r3, #8
 80016ac:	81fb      	strh	r3, [r7, #14]
	ret |= low_byte; // OR Operation on Left shifted MSB bits and LSB 8bits to get the Final 16 bit Value
 80016ae:	79bb      	ldrb	r3, [r7, #6]
 80016b0:	b29a      	uxth	r2, r3
 80016b2:	89fb      	ldrh	r3, [r7, #14]
 80016b4:	4313      	orrs	r3, r2
 80016b6:	81fb      	strh	r3, [r7, #14]

	float SV;
	SV =  ret * 0.01;
 80016b8:	89fb      	ldrh	r3, [r7, #14]
 80016ba:	4618      	mov	r0, r3
 80016bc:	f7fe feb2 	bl	8000424 <__aeabi_i2d>
 80016c0:	a309      	add	r3, pc, #36	; (adr r3, 80016e8 <ina219_shuntvoltage+0x80>)
 80016c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016c6:	f7fe ff17 	bl	80004f8 <__aeabi_dmul>
 80016ca:	4603      	mov	r3, r0
 80016cc:	460c      	mov	r4, r1
 80016ce:	4618      	mov	r0, r3
 80016d0:	4621      	mov	r1, r4
 80016d2:	f7ff fa09 	bl	8000ae8 <__aeabi_d2f>
 80016d6:	4603      	mov	r3, r0
 80016d8:	60bb      	str	r3, [r7, #8]

	GB_float_value2(SV);
 80016da:	68b8      	ldr	r0, [r7, #8]
 80016dc:	f7ff fde6 	bl	80012ac <GB_float_value2>


}
 80016e0:	bf00      	nop
 80016e2:	3714      	adds	r7, #20
 80016e4:	46bd      	mov	sp, r7
 80016e6:	bd90      	pop	{r4, r7, pc}
 80016e8:	47ae147b 	.word	0x47ae147b
 80016ec:	3f847ae1 	.word	0x3f847ae1

080016f0 <ina219_shuntcurrent>:
 * Function for reading the Shunt Current Value from Shunt Current Register(0x04) of INA219
 * -->First sent the Address of Shunt Current  Register and then Read the 16 bits from that register
 * -->Shunt Current Readings are Read and Obtained 16 bit value is multiplied by Current_LSB(0.0001) and then Multiplied to 1000 for making it convert to mA
 */
void ina219_shuntcurrent()
{
 80016f0:	b580      	push	{r7, lr}
 80016f2:	b084      	sub	sp, #16
 80016f4:	af00      	add	r7, sp, #0
	uint16_t ret;  // Variable for Storing the  16 bit value
	uint8_t high_byte = 0;
 80016f6:	2300      	movs	r3, #0
 80016f8:	71fb      	strb	r3, [r7, #7]
	uint8_t low_byte = 0;
 80016fa:	2300      	movs	r3, #0
 80016fc:	71bb      	strb	r3, [r7, #6]
	gb_i2c_start_condition_w();  // Start Condition For Writing
 80016fe:	f7ff fe39 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA);  // INA219 I2C address is sent with Write bit
 8001702:	2080      	movs	r0, #128	; 0x80
 8001704:	f7ff fe74 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_CR);  // Sent Address of Shunt Current Register
 8001708:	2004      	movs	r0, #4
 800170a:	f7ff fe99 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation();    // STOP Condition is generated
 800170e:	f7ff ff01 	bl	8001514 <gb_i2c_master_stop_generation>


	gb_i2c_start_condition_r();    // Start Condition For Reading
 8001712:	f7ff fe4b 	bl	80013ac <gb_i2c_start_condition_r>
	gb_i2c_address_send_r(ina219_RA);  // INA219 I2C address is sent with Read bit
 8001716:	2081      	movs	r0, #129	; 0x81
 8001718:	f7ff fea8 	bl	800146c <gb_i2c_address_send_r>
	gb_i2c_master_receive_2_bytes(&high_byte,&low_byte);  // Reading High and Low Bytes
 800171c:	1dba      	adds	r2, r7, #6
 800171e:	1dfb      	adds	r3, r7, #7
 8001720:	4611      	mov	r1, r2
 8001722:	4618      	mov	r0, r3
 8001724:	f7ff fec6 	bl	80014b4 <gb_i2c_master_receive_2_bytes>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 8001728:	f7ff fef4 	bl	8001514 <gb_i2c_master_stop_generation>
	ret = high_byte;
 800172c:	79fb      	ldrb	r3, [r7, #7]
 800172e:	81fb      	strh	r3, [r7, #14]
	ret <<= 8; // left shift the High Bytes by 8.
 8001730:	89fb      	ldrh	r3, [r7, #14]
 8001732:	021b      	lsls	r3, r3, #8
 8001734:	81fb      	strh	r3, [r7, #14]
	ret |= low_byte; // OR Operation on Left shifted MSB bits and LSB 8bits to get the Final 16 bit Value
 8001736:	79bb      	ldrb	r3, [r7, #6]
 8001738:	b29a      	uxth	r2, r3
 800173a:	89fb      	ldrh	r3, [r7, #14]
 800173c:	4313      	orrs	r3, r2
 800173e:	81fb      	strh	r3, [r7, #14]

	float CR;
	CR =  ret * CR_LSB * 1000;
 8001740:	89fb      	ldrh	r3, [r7, #14]
 8001742:	4618      	mov	r0, r3
 8001744:	f7ff fada 	bl	8000cfc <__aeabi_i2f>
 8001748:	4602      	mov	r2, r0
 800174a:	4b0a      	ldr	r3, [pc, #40]	; (8001774 <ina219_shuntcurrent+0x84>)
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	4619      	mov	r1, r3
 8001750:	4610      	mov	r0, r2
 8001752:	f7ff fb27 	bl	8000da4 <__aeabi_fmul>
 8001756:	4603      	mov	r3, r0
 8001758:	4907      	ldr	r1, [pc, #28]	; (8001778 <ina219_shuntcurrent+0x88>)
 800175a:	4618      	mov	r0, r3
 800175c:	f7ff fb22 	bl	8000da4 <__aeabi_fmul>
 8001760:	4603      	mov	r3, r0
 8001762:	60bb      	str	r3, [r7, #8]

	GB_float_value2(CR);
 8001764:	68b8      	ldr	r0, [r7, #8]
 8001766:	f7ff fda1 	bl	80012ac <GB_float_value2>


}
 800176a:	bf00      	nop
 800176c:	3710      	adds	r7, #16
 800176e:	46bd      	mov	sp, r7
 8001770:	bd80      	pop	{r7, pc}
 8001772:	bf00      	nop
 8001774:	200001f4 	.word	0x200001f4
 8001778:	447a0000 	.word	0x447a0000

0800177c <ina219_Loadpower>:
 * Function for reading the Power Consumed by Load  Value from Power Register(0x03) of INA219
 * -->First sent the Address of Power Register and then Read the 16 bits from that register
 * -->Power Readings are Read and Obtained 16 bit value is multiplied by Power_LSB(0.002) and then Multiplied to 1000 for making it convert to mW
 */
void ina219_Loadpower()
{
 800177c:	b580      	push	{r7, lr}
 800177e:	b084      	sub	sp, #16
 8001780:	af00      	add	r7, sp, #0
	uint16_t ret;  // Variable for Storing the  16 bit value
	uint8_t high_byte = 0;
 8001782:	2300      	movs	r3, #0
 8001784:	71fb      	strb	r3, [r7, #7]
	uint8_t low_byte = 0;
 8001786:	2300      	movs	r3, #0
 8001788:	71bb      	strb	r3, [r7, #6]
	gb_i2c_start_condition_w();  // Start Condition For Writing
 800178a:	f7ff fdf3 	bl	8001374 <gb_i2c_start_condition_w>
	gb_i2c_address_send_w(ina219_WA);  // INA219 I2C address is sent with Write bit
 800178e:	2080      	movs	r0, #128	; 0x80
 8001790:	f7ff fe2e 	bl	80013f0 <gb_i2c_address_send_w>
	gb_i2c_master_send_byte(ina219_PW); // Sent Address of Power Register
 8001794:	2003      	movs	r0, #3
 8001796:	f7ff fe53 	bl	8001440 <gb_i2c_master_send_byte>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 800179a:	f7ff febb 	bl	8001514 <gb_i2c_master_stop_generation>


	gb_i2c_start_condition_r();  // Start Condition For Reading
 800179e:	f7ff fe05 	bl	80013ac <gb_i2c_start_condition_r>
	gb_i2c_address_send_r(ina219_RA); // INA219 I2C address is sent with Read bit
 80017a2:	2081      	movs	r0, #129	; 0x81
 80017a4:	f7ff fe62 	bl	800146c <gb_i2c_address_send_r>
	gb_i2c_master_receive_2_bytes(&high_byte,&low_byte);  // Reading High and Low Bytes
 80017a8:	1dba      	adds	r2, r7, #6
 80017aa:	1dfb      	adds	r3, r7, #7
 80017ac:	4611      	mov	r1, r2
 80017ae:	4618      	mov	r0, r3
 80017b0:	f7ff fe80 	bl	80014b4 <gb_i2c_master_receive_2_bytes>
	gb_i2c_master_stop_generation(); // STOP Condition is generated
 80017b4:	f7ff feae 	bl	8001514 <gb_i2c_master_stop_generation>
	ret = high_byte;
 80017b8:	79fb      	ldrb	r3, [r7, #7]
 80017ba:	81fb      	strh	r3, [r7, #14]
	ret <<= 8; // left shift the High Bytes by 8.
 80017bc:	89fb      	ldrh	r3, [r7, #14]
 80017be:	021b      	lsls	r3, r3, #8
 80017c0:	81fb      	strh	r3, [r7, #14]
	ret |= low_byte; // OR Operation on Left shifted MSB bits and LSB 8bits to get the Final 16 bit Value
 80017c2:	79bb      	ldrb	r3, [r7, #6]
 80017c4:	b29a      	uxth	r2, r3
 80017c6:	89fb      	ldrh	r3, [r7, #14]
 80017c8:	4313      	orrs	r3, r2
 80017ca:	81fb      	strh	r3, [r7, #14]

	float PW;
	PW =  ret * PW_LSB * 1000;
 80017cc:	89fb      	ldrh	r3, [r7, #14]
 80017ce:	4618      	mov	r0, r3
 80017d0:	f7ff fa94 	bl	8000cfc <__aeabi_i2f>
 80017d4:	4602      	mov	r2, r0
 80017d6:	4b0a      	ldr	r3, [pc, #40]	; (8001800 <ina219_Loadpower+0x84>)
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	4619      	mov	r1, r3
 80017dc:	4610      	mov	r0, r2
 80017de:	f7ff fae1 	bl	8000da4 <__aeabi_fmul>
 80017e2:	4603      	mov	r3, r0
 80017e4:	4907      	ldr	r1, [pc, #28]	; (8001804 <ina219_Loadpower+0x88>)
 80017e6:	4618      	mov	r0, r3
 80017e8:	f7ff fadc 	bl	8000da4 <__aeabi_fmul>
 80017ec:	4603      	mov	r3, r0
 80017ee:	60bb      	str	r3, [r7, #8]

	GB_float_value2(PW);
 80017f0:	68b8      	ldr	r0, [r7, #8]
 80017f2:	f7ff fd5b 	bl	80012ac <GB_float_value2>


}
 80017f6:	bf00      	nop
 80017f8:	3710      	adds	r7, #16
 80017fa:	46bd      	mov	sp, r7
 80017fc:	bd80      	pop	{r7, pc}
 80017fe:	bf00      	nop
 8001800:	200001f8 	.word	0x200001f8
 8001804:	447a0000 	.word	0x447a0000

08001808 <main>:
/**********************	STM32 Timer PWM device driver ************************************
 **********************Subscribe to Gettobyte ***********************************************
 *********************** Kunal Gupta ******************************************************
 */
int main(void)
{
 8001808:	b598      	push	{r3, r4, r7, lr}
 800180a:	af00      	add	r7, sp, #0

	system_clk();
 800180c:	f000 f8a6 	bl	800195c <system_clk>
    pwm_init();
 8001810:	f000 f9c0 	bl	8001b94 <pwm_init>
    SystemCoreClockUpdate();
 8001814:	f000 f930 	bl	8001a78 <SystemCoreClockUpdate>
 	//int a = SystemCoreClock ;
    adc_init();
 8001818:	f7ff fc14 	bl	8001044 <adc_init>

  GB_uart_init2();
 800181c:	f7ff fce6 	bl	80011ec <GB_uart_init2>
  GB_printString2("ADC Driver");
 8001820:	482f      	ldr	r0, [pc, #188]	; (80018e0 <main+0xd8>)
 8001822:	f7ff fd25 	bl	8001270 <GB_printString2>
  ina219_init();
 8001826:	f7ff fe83 	bl	8001530 <ina219_init>
//delay_ms(1000);
  //GB_printString2("\n");
//TIM2->CCR1 = 30000;
	// GB_printString2("ADC Driver");

adc = adc_convertPOL_START();
 800182a:	f7ff fc77 	bl	800111c <adc_convertPOL_START>
 800182e:	4603      	mov	r3, r0
 8001830:	461a      	mov	r2, r3
 8001832:	4b2c      	ldr	r3, [pc, #176]	; (80018e4 <main+0xdc>)
 8001834:	801a      	strh	r2, [r3, #0]
	map_value = adc * 1.22;
 8001836:	4b2b      	ldr	r3, [pc, #172]	; (80018e4 <main+0xdc>)
 8001838:	881b      	ldrh	r3, [r3, #0]
 800183a:	4618      	mov	r0, r3
 800183c:	f7fe fdf2 	bl	8000424 <__aeabi_i2d>
 8001840:	a325      	add	r3, pc, #148	; (adr r3, 80018d8 <main+0xd0>)
 8001842:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001846:	f7fe fe57 	bl	80004f8 <__aeabi_dmul>
 800184a:	4603      	mov	r3, r0
 800184c:	460c      	mov	r4, r1
 800184e:	4618      	mov	r0, r3
 8001850:	4621      	mov	r1, r4
 8001852:	f7ff f929 	bl	8000aa8 <__aeabi_d2uiz>
 8001856:	4602      	mov	r2, r0
 8001858:	4b23      	ldr	r3, [pc, #140]	; (80018e8 <main+0xe0>)
 800185a:	601a      	str	r2, [r3, #0]
TIM2->CCR1 = map_value;
 800185c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001860:	4b21      	ldr	r3, [pc, #132]	; (80018e8 <main+0xe0>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	6353      	str	r3, [r2, #52]	; 0x34
//	GB_decimel2(map_value);
//	GB_printString2("\n");

//TIM2->CCR1 = map_value;

GB_printString2("Bus Voltage: ");
 8001866:	4821      	ldr	r0, [pc, #132]	; (80018ec <main+0xe4>)
 8001868:	f7ff fd02 	bl	8001270 <GB_printString2>
		ina219_busvoltage();
 800186c:	f7ff feb0 	bl	80015d0 <ina219_busvoltage>
		GB_printString2("V\n");
 8001870:	481f      	ldr	r0, [pc, #124]	; (80018f0 <main+0xe8>)
 8001872:	f7ff fcfd 	bl	8001270 <GB_printString2>

		GB_printString2("Shunt Voltage: ");
 8001876:	481f      	ldr	r0, [pc, #124]	; (80018f4 <main+0xec>)
 8001878:	f7ff fcfa 	bl	8001270 <GB_printString2>
		ina219_shuntvoltage();
 800187c:	f7ff fef4 	bl	8001668 <ina219_shuntvoltage>
		GB_printString2("mV\n");
 8001880:	481d      	ldr	r0, [pc, #116]	; (80018f8 <main+0xf0>)
 8001882:	f7ff fcf5 	bl	8001270 <GB_printString2>

		GB_printString2("Shunt Current: ");
 8001886:	481d      	ldr	r0, [pc, #116]	; (80018fc <main+0xf4>)
 8001888:	f7ff fcf2 	bl	8001270 <GB_printString2>
		ina219_shuntcurrent();
 800188c:	f7ff ff30 	bl	80016f0 <ina219_shuntcurrent>
		GB_printString2("mA\n");
 8001890:	481b      	ldr	r0, [pc, #108]	; (8001900 <main+0xf8>)
 8001892:	f7ff fced 	bl	8001270 <GB_printString2>

		GB_printString2("Load Power : ");
 8001896:	481b      	ldr	r0, [pc, #108]	; (8001904 <main+0xfc>)
 8001898:	f7ff fcea 	bl	8001270 <GB_printString2>
		ina219_Loadpower();
 800189c:	f7ff ff6e 	bl	800177c <ina219_Loadpower>
		GB_printString2("mW\n");
 80018a0:	4819      	ldr	r0, [pc, #100]	; (8001908 <main+0x100>)
 80018a2:	f7ff fce5 	bl	8001270 <GB_printString2>


		GB_printString2("\n");
 80018a6:	4819      	ldr	r0, [pc, #100]	; (800190c <main+0x104>)
 80018a8:	f7ff fce2 	bl	8001270 <GB_printString2>
		GB_printString2("\n");
 80018ac:	4817      	ldr	r0, [pc, #92]	; (800190c <main+0x104>)
 80018ae:	f7ff fcdf 	bl	8001270 <GB_printString2>
		GB_printString2("\n");
 80018b2:	4816      	ldr	r0, [pc, #88]	; (800190c <main+0x104>)
 80018b4:	f7ff fcdc 	bl	8001270 <GB_printString2>
	 for (l = 0; l < 900000; l++);
 80018b8:	4b15      	ldr	r3, [pc, #84]	; (8001910 <main+0x108>)
 80018ba:	2200      	movs	r2, #0
 80018bc:	601a      	str	r2, [r3, #0]
 80018be:	e004      	b.n	80018ca <main+0xc2>
 80018c0:	4b13      	ldr	r3, [pc, #76]	; (8001910 <main+0x108>)
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	3301      	adds	r3, #1
 80018c6:	4a12      	ldr	r2, [pc, #72]	; (8001910 <main+0x108>)
 80018c8:	6013      	str	r3, [r2, #0]
 80018ca:	4b11      	ldr	r3, [pc, #68]	; (8001910 <main+0x108>)
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	4a11      	ldr	r2, [pc, #68]	; (8001914 <main+0x10c>)
 80018d0:	4293      	cmp	r3, r2
 80018d2:	d9f5      	bls.n	80018c0 <main+0xb8>
adc = adc_convertPOL_START();
 80018d4:	e7a9      	b.n	800182a <main+0x22>
 80018d6:	bf00      	nop
 80018d8:	b851eb85 	.word	0xb851eb85
 80018dc:	3ff3851e 	.word	0x3ff3851e
 80018e0:	08005804 	.word	0x08005804
 80018e4:	200001fc 	.word	0x200001fc
 80018e8:	20000200 	.word	0x20000200
 80018ec:	08005810 	.word	0x08005810
 80018f0:	08005820 	.word	0x08005820
 80018f4:	08005824 	.word	0x08005824
 80018f8:	08005834 	.word	0x08005834
 80018fc:	08005838 	.word	0x08005838
 8001900:	08005848 	.word	0x08005848
 8001904:	0800584c 	.word	0x0800584c
 8001908:	0800585c 	.word	0x0800585c
 800190c:	08005860 	.word	0x08005860
 8001910:	20000210 	.word	0x20000210
 8001914:	000dbb9f 	.word	0x000dbb9f

08001918 <MCO_pin_conf>:
 * 5) Enable the PLL source and wait for it to become stable
 * 6) Enable the Clock source and wait for it to be set
 */

void MCO_pin_conf()
{
 8001918:	b480      	push	{r7}
 800191a:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 800191c:	4b0d      	ldr	r3, [pc, #52]	; (8001954 <MCO_pin_conf+0x3c>)
 800191e:	699b      	ldr	r3, [r3, #24]
 8001920:	4a0c      	ldr	r2, [pc, #48]	; (8001954 <MCO_pin_conf+0x3c>)
 8001922:	f043 0304 	orr.w	r3, r3, #4
 8001926:	6193      	str	r3, [r2, #24]
				 GPIOA->CRH &= ~(GPIO_CRH_MODE8 | GPIO_CRH_CNF8);
 8001928:	4b0b      	ldr	r3, [pc, #44]	; (8001958 <MCO_pin_conf+0x40>)
 800192a:	685b      	ldr	r3, [r3, #4]
 800192c:	4a0a      	ldr	r2, [pc, #40]	; (8001958 <MCO_pin_conf+0x40>)
 800192e:	f023 030f 	bic.w	r3, r3, #15
 8001932:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO PIN MODE AS OUTPUT MAX SPEED 50MHZ
				 GPIOA->CRH |= ( GPIO_CRH_MODE8_1 | GPIO_CRH_MODE8_0);
 8001934:	4b08      	ldr	r3, [pc, #32]	; (8001958 <MCO_pin_conf+0x40>)
 8001936:	685b      	ldr	r3, [r3, #4]
 8001938:	4a07      	ldr	r2, [pc, #28]	; (8001958 <MCO_pin_conf+0x40>)
 800193a:	f043 0303 	orr.w	r3, r3, #3
 800193e:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO OUTPUT MODE AS alternate function push-pull
				 GPIOA->CRH |= ((GPIO_CRH_CNF8_1) | ~(GPIO_CRH_CNF8_0));
 8001940:	4b05      	ldr	r3, [pc, #20]	; (8001958 <MCO_pin_conf+0x40>)
 8001942:	685b      	ldr	r3, [r3, #4]
 8001944:	4a04      	ldr	r2, [pc, #16]	; (8001958 <MCO_pin_conf+0x40>)
 8001946:	f063 0304 	orn	r3, r3, #4
 800194a:	6053      	str	r3, [r2, #4]
}
 800194c:	bf00      	nop
 800194e:	46bd      	mov	sp, r7
 8001950:	bc80      	pop	{r7}
 8001952:	4770      	bx	lr
 8001954:	40021000 	.word	0x40021000
 8001958:	40010800 	.word	0x40010800

0800195c <system_clk>:

void system_clk()
{
 800195c:	b580      	push	{r7, lr}
 800195e:	af00      	add	r7, sp, #0
	//ENABLE HSE & WAIT FOR HSE TO BECOME READY
	RCC->CR |= RCC_CR_HSEON ;   // HSE IS 8MHZ
 8001960:	4b25      	ldr	r3, [pc, #148]	; (80019f8 <system_clk+0x9c>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	4a24      	ldr	r2, [pc, #144]	; (80019f8 <system_clk+0x9c>)
 8001966:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800196a:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY))
 800196c:	bf00      	nop
 800196e:	4b22      	ldr	r3, [pc, #136]	; (80019f8 <system_clk+0x9c>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001976:	2b00      	cmp	r3, #0
 8001978:	d0f9      	beq.n	800196e <system_clk+0x12>
		 ;
	//configure flash prefetch and the latency related
	FLASH->ACR |= FLASH_ACR_PRFTBE|FLASH_ACR_LATENCY_1;
 800197a:	4b20      	ldr	r3, [pc, #128]	; (80019fc <system_clk+0xa0>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	4a1f      	ldr	r2, [pc, #124]	; (80019fc <system_clk+0xa0>)
 8001980:	f043 0312 	orr.w	r3, r3, #18
 8001984:	6013      	str	r3, [r2, #0]
	// CONFIGURE PLL AND Buses(AHB,APB1,APB2)
	//PLL SOURCE: HERE  HSE IS USED AS SOURCE
	RCC->CFGR |= RCC_CFGR_PLLSRC;
 8001986:	4b1c      	ldr	r3, [pc, #112]	; (80019f8 <system_clk+0x9c>)
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	4a1b      	ldr	r2, [pc, #108]	; (80019f8 <system_clk+0x9c>)
 800198c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001990:	6053      	str	r3, [r2, #4]
	//HSE DEVIDER FOR PLL(IF HSE IS USED AS SOURCE FOR PLL) : NOT DIVIDING CLOCK
	RCC->CFGR |= RCC_CFGR_PLLXTPRE_HSE ;  // SO INPUT TO PLL IS 8MHZ
 8001992:	4b19      	ldr	r3, [pc, #100]	; (80019f8 <system_clk+0x9c>)
 8001994:	4a18      	ldr	r2, [pc, #96]	; (80019f8 <system_clk+0x9c>)
 8001996:	685b      	ldr	r3, [r3, #4]
 8001998:	6053      	str	r3, [r2, #4]
	//PLL MULTIPLIER: HERE I AM MULTIPLYING HSE OUTPUT WITH 4
	RCC->CFGR |= RCC_CFGR_PLLMULL4; //SO OUTPUT FROM PLL IS 32MHZ
 800199a:	4b17      	ldr	r3, [pc, #92]	; (80019f8 <system_clk+0x9c>)
 800199c:	685b      	ldr	r3, [r3, #4]
 800199e:	4a16      	ldr	r2, [pc, #88]	; (80019f8 <system_clk+0x9c>)
 80019a0:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80019a4:	6053      	str	r3, [r2, #4]
	//BUS CLOCK CONFIGURE(APB1,APB2,AHB): NOT DIVIDING
	RCC->CFGR |= (RCC_CFGR_PPRE1_DIV1 | RCC_CFGR_PPRE2_DIV1 | RCC_CFGR_HPRE_DIV1);  // all buses runs at 32MHZ
 80019a6:	4b14      	ldr	r3, [pc, #80]	; (80019f8 <system_clk+0x9c>)
 80019a8:	4a13      	ldr	r2, [pc, #76]	; (80019f8 <system_clk+0x9c>)
 80019aa:	685b      	ldr	r3, [r3, #4]
 80019ac:	6053      	str	r3, [r2, #4]
	//ENABLE THE PLL
	RCC->CR |= RCC_CR_PLLON;
 80019ae:	4b12      	ldr	r3, [pc, #72]	; (80019f8 <system_clk+0x9c>)
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	4a11      	ldr	r2, [pc, #68]	; (80019f8 <system_clk+0x9c>)
 80019b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80019b8:	6013      	str	r3, [r2, #0]
	//WAIT FOR PLL TO SET
	while(!(RCC->CR & RCC_CR_PLLRDY))
 80019ba:	bf00      	nop
 80019bc:	4b0e      	ldr	r3, [pc, #56]	; (80019f8 <system_clk+0x9c>)
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d0f9      	beq.n	80019bc <system_clk+0x60>
			;

	 //ENABLE SYSTEMCLK AND WAIT
	 RCC->CFGR |= RCC_CFGR_SW_PLL;
 80019c8:	4b0b      	ldr	r3, [pc, #44]	; (80019f8 <system_clk+0x9c>)
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	4a0a      	ldr	r2, [pc, #40]	; (80019f8 <system_clk+0x9c>)
 80019ce:	f043 0302 	orr.w	r3, r3, #2
 80019d2:	6053      	str	r3, [r2, #4]
	 while(!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 80019d4:	bf00      	nop
 80019d6:	4b08      	ldr	r3, [pc, #32]	; (80019f8 <system_clk+0x9c>)
 80019d8:	685b      	ldr	r3, [r3, #4]
 80019da:	f003 0308 	and.w	r3, r3, #8
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d0f9      	beq.n	80019d6 <system_clk+0x7a>
	 		 ;

	 MCO_pin_conf();
 80019e2:	f7ff ff99 	bl	8001918 <MCO_pin_conf>
	 //CLOCK OUTPUT ON MCO PIN
	 RCC->CFGR |= RCC_CFGR_MCO_SYSCLK;
 80019e6:	4b04      	ldr	r3, [pc, #16]	; (80019f8 <system_clk+0x9c>)
 80019e8:	685b      	ldr	r3, [r3, #4]
 80019ea:	4a03      	ldr	r2, [pc, #12]	; (80019f8 <system_clk+0x9c>)
 80019ec:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80019f0:	6053      	str	r3, [r2, #4]
}
 80019f2:	bf00      	nop
 80019f4:	bd80      	pop	{r7, pc}
 80019f6:	bf00      	nop
 80019f8:	40021000 	.word	0x40021000
 80019fc:	40022000 	.word	0x40022000

08001a00 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b086      	sub	sp, #24
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a08:	4a14      	ldr	r2, [pc, #80]	; (8001a5c <_sbrk+0x5c>)
 8001a0a:	4b15      	ldr	r3, [pc, #84]	; (8001a60 <_sbrk+0x60>)
 8001a0c:	1ad3      	subs	r3, r2, r3
 8001a0e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a10:	697b      	ldr	r3, [r7, #20]
 8001a12:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a14:	4b13      	ldr	r3, [pc, #76]	; (8001a64 <_sbrk+0x64>)
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	d102      	bne.n	8001a22 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a1c:	4b11      	ldr	r3, [pc, #68]	; (8001a64 <_sbrk+0x64>)
 8001a1e:	4a12      	ldr	r2, [pc, #72]	; (8001a68 <_sbrk+0x68>)
 8001a20:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a22:	4b10      	ldr	r3, [pc, #64]	; (8001a64 <_sbrk+0x64>)
 8001a24:	681a      	ldr	r2, [r3, #0]
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	4413      	add	r3, r2
 8001a2a:	693a      	ldr	r2, [r7, #16]
 8001a2c:	429a      	cmp	r2, r3
 8001a2e:	d207      	bcs.n	8001a40 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a30:	f000 f96a 	bl	8001d08 <__errno>
 8001a34:	4602      	mov	r2, r0
 8001a36:	230c      	movs	r3, #12
 8001a38:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8001a3a:	f04f 33ff 	mov.w	r3, #4294967295
 8001a3e:	e009      	b.n	8001a54 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a40:	4b08      	ldr	r3, [pc, #32]	; (8001a64 <_sbrk+0x64>)
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a46:	4b07      	ldr	r3, [pc, #28]	; (8001a64 <_sbrk+0x64>)
 8001a48:	681a      	ldr	r2, [r3, #0]
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	4413      	add	r3, r2
 8001a4e:	4a05      	ldr	r2, [pc, #20]	; (8001a64 <_sbrk+0x64>)
 8001a50:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a52:	68fb      	ldr	r3, [r7, #12]
}
 8001a54:	4618      	mov	r0, r3
 8001a56:	3718      	adds	r7, #24
 8001a58:	46bd      	mov	sp, r7
 8001a5a:	bd80      	pop	{r7, pc}
 8001a5c:	20005000 	.word	0x20005000
 8001a60:	00000400 	.word	0x00000400
 8001a64:	20000204 	.word	0x20000204
 8001a68:	20000630 	.word	0x20000630

08001a6c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001a6c:	b480      	push	{r7}
 8001a6e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001a70:	bf00      	nop
 8001a72:	46bd      	mov	sp, r7
 8001a74:	bc80      	pop	{r7}
 8001a76:	4770      	bx	lr

08001a78 <SystemCoreClockUpdate>:
  *           value for HSE crystal.
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate (void)
{
 8001a78:	b480      	push	{r7}
 8001a7a:	b085      	sub	sp, #20
 8001a7c:	af00      	add	r7, sp, #0
  uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
 8001a7e:	2300      	movs	r3, #0
 8001a80:	60fb      	str	r3, [r7, #12]
 8001a82:	2300      	movs	r3, #0
 8001a84:	60bb      	str	r3, [r7, #8]
 8001a86:	2300      	movs	r3, #0
 8001a88:	607b      	str	r3, [r7, #4]
#if defined(STM32F100xB) || defined(STM32F100xE)
  uint32_t prediv1factor = 0U;
#endif /* STM32F100xB or STM32F100xE */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001a8a:	4b2c      	ldr	r3, [pc, #176]	; (8001b3c <SystemCoreClockUpdate+0xc4>)
 8001a8c:	685b      	ldr	r3, [r3, #4]
 8001a8e:	f003 030c 	and.w	r3, r3, #12
 8001a92:	60fb      	str	r3, [r7, #12]
  
  switch (tmp)
 8001a94:	68fb      	ldr	r3, [r7, #12]
 8001a96:	2b04      	cmp	r3, #4
 8001a98:	d007      	beq.n	8001aaa <SystemCoreClockUpdate+0x32>
 8001a9a:	2b08      	cmp	r3, #8
 8001a9c:	d009      	beq.n	8001ab2 <SystemCoreClockUpdate+0x3a>
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	d133      	bne.n	8001b0a <SystemCoreClockUpdate+0x92>
  {
    case 0x00U:  /* HSI used as system clock */
      SystemCoreClock = HSI_VALUE;
 8001aa2:	4b27      	ldr	r3, [pc, #156]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001aa4:	4a27      	ldr	r2, [pc, #156]	; (8001b44 <SystemCoreClockUpdate+0xcc>)
 8001aa6:	601a      	str	r2, [r3, #0]
      break;
 8001aa8:	e033      	b.n	8001b12 <SystemCoreClockUpdate+0x9a>
    case 0x04U:  /* HSE used as system clock */
      SystemCoreClock = HSE_VALUE;
 8001aaa:	4b25      	ldr	r3, [pc, #148]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001aac:	4a25      	ldr	r2, [pc, #148]	; (8001b44 <SystemCoreClockUpdate+0xcc>)
 8001aae:	601a      	str	r2, [r3, #0]
      break;
 8001ab0:	e02f      	b.n	8001b12 <SystemCoreClockUpdate+0x9a>
    case 0x08U:  /* PLL used as system clock */

      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 8001ab2:	4b22      	ldr	r3, [pc, #136]	; (8001b3c <SystemCoreClockUpdate+0xc4>)
 8001ab4:	685b      	ldr	r3, [r3, #4]
 8001ab6:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8001aba:	60bb      	str	r3, [r7, #8]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 8001abc:	4b1f      	ldr	r3, [pc, #124]	; (8001b3c <SystemCoreClockUpdate+0xc4>)
 8001abe:	685b      	ldr	r3, [r3, #4]
 8001ac0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ac4:	607b      	str	r3, [r7, #4]
      
#if !defined(STM32F105xC) && !defined(STM32F107xC)      
      pllmull = ( pllmull >> 18U) + 2U;
 8001ac6:	68bb      	ldr	r3, [r7, #8]
 8001ac8:	0c9b      	lsrs	r3, r3, #18
 8001aca:	3302      	adds	r3, #2
 8001acc:	60bb      	str	r3, [r7, #8]
      
      if (pllsource == 0x00U)
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	2b00      	cmp	r3, #0
 8001ad2:	d106      	bne.n	8001ae2 <SystemCoreClockUpdate+0x6a>
      {
        /* HSI oscillator clock divided by 2 selected as PLL clock entry */
        SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 8001ad4:	68bb      	ldr	r3, [r7, #8]
 8001ad6:	4a1c      	ldr	r2, [pc, #112]	; (8001b48 <SystemCoreClockUpdate+0xd0>)
 8001ad8:	fb02 f303 	mul.w	r3, r2, r3
 8001adc:	4a18      	ldr	r2, [pc, #96]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001ade:	6013      	str	r3, [r2, #0]
          pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
          SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
        }
      }
#endif /* STM32F105xC */ 
      break;
 8001ae0:	e017      	b.n	8001b12 <SystemCoreClockUpdate+0x9a>
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 8001ae2:	4b16      	ldr	r3, [pc, #88]	; (8001b3c <SystemCoreClockUpdate+0xc4>)
 8001ae4:	685b      	ldr	r3, [r3, #4]
 8001ae6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d006      	beq.n	8001afc <SystemCoreClockUpdate+0x84>
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 8001aee:	68bb      	ldr	r3, [r7, #8]
 8001af0:	4a15      	ldr	r2, [pc, #84]	; (8001b48 <SystemCoreClockUpdate+0xd0>)
 8001af2:	fb02 f303 	mul.w	r3, r2, r3
 8001af6:	4a12      	ldr	r2, [pc, #72]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001af8:	6013      	str	r3, [r2, #0]
      break;
 8001afa:	e00a      	b.n	8001b12 <SystemCoreClockUpdate+0x9a>
          SystemCoreClock = HSE_VALUE * pllmull;
 8001afc:	68bb      	ldr	r3, [r7, #8]
 8001afe:	4a11      	ldr	r2, [pc, #68]	; (8001b44 <SystemCoreClockUpdate+0xcc>)
 8001b00:	fb02 f303 	mul.w	r3, r2, r3
 8001b04:	4a0e      	ldr	r2, [pc, #56]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001b06:	6013      	str	r3, [r2, #0]
      break;
 8001b08:	e003      	b.n	8001b12 <SystemCoreClockUpdate+0x9a>

    default:
      SystemCoreClock = HSI_VALUE;
 8001b0a:	4b0d      	ldr	r3, [pc, #52]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001b0c:	4a0d      	ldr	r2, [pc, #52]	; (8001b44 <SystemCoreClockUpdate+0xcc>)
 8001b0e:	601a      	str	r2, [r3, #0]
      break;
 8001b10:	bf00      	nop
  }
  
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 8001b12:	4b0a      	ldr	r3, [pc, #40]	; (8001b3c <SystemCoreClockUpdate+0xc4>)
 8001b14:	685b      	ldr	r3, [r3, #4]
 8001b16:	091b      	lsrs	r3, r3, #4
 8001b18:	f003 030f 	and.w	r3, r3, #15
 8001b1c:	4a0b      	ldr	r2, [pc, #44]	; (8001b4c <SystemCoreClockUpdate+0xd4>)
 8001b1e:	5cd3      	ldrb	r3, [r2, r3]
 8001b20:	60fb      	str	r3, [r7, #12]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
 8001b22:	4b07      	ldr	r3, [pc, #28]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001b24:	681a      	ldr	r2, [r3, #0]
 8001b26:	68fb      	ldr	r3, [r7, #12]
 8001b28:	fa22 f303 	lsr.w	r3, r2, r3
 8001b2c:	4a04      	ldr	r2, [pc, #16]	; (8001b40 <SystemCoreClockUpdate+0xc8>)
 8001b2e:	6013      	str	r3, [r2, #0]
}
 8001b30:	bf00      	nop
 8001b32:	3714      	adds	r7, #20
 8001b34:	46bd      	mov	sp, r7
 8001b36:	bc80      	pop	{r7}
 8001b38:	4770      	bx	lr
 8001b3a:	bf00      	nop
 8001b3c:	40021000 	.word	0x40021000
 8001b40:	20000000 	.word	0x20000000
 8001b44:	007a1200 	.word	0x007a1200
 8001b48:	003d0900 	.word	0x003d0900
 8001b4c:	08005864 	.word	0x08005864

08001b50 <T2C1_pin_conf>:

#include "stm32f1xx.h"
#include "t_pwm.h"
//PA0
void T2C1_pin_conf()
{
 8001b50:	b480      	push	{r7}
 8001b52:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001b54:	4b0d      	ldr	r3, [pc, #52]	; (8001b8c <T2C1_pin_conf+0x3c>)
 8001b56:	699b      	ldr	r3, [r3, #24]
 8001b58:	4a0c      	ldr	r2, [pc, #48]	; (8001b8c <T2C1_pin_conf+0x3c>)
 8001b5a:	f043 0304 	orr.w	r3, r3, #4
 8001b5e:	6193      	str	r3, [r2, #24]
	 GPIOA->CRL &= ~(GPIO_CRL_MODE0 | GPIO_CRL_CNF0);
 8001b60:	4b0b      	ldr	r3, [pc, #44]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	4a0a      	ldr	r2, [pc, #40]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b66:	f023 030f 	bic.w	r3, r3, #15
 8001b6a:	6013      	str	r3, [r2, #0]
	 //CONFIGURE GPIO PIN MODE AS OUTPUT MAX SPEED 50MHZ
	 GPIOA->CRL |= ( GPIO_CRL_MODE0_1 | GPIO_CRL_MODE0_0);
 8001b6c:	4b08      	ldr	r3, [pc, #32]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	4a07      	ldr	r2, [pc, #28]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b72:	f043 0303 	orr.w	r3, r3, #3
 8001b76:	6013      	str	r3, [r2, #0]
	 //CONFIGURE GPIO OUTPUT MODE AS alternate function push-pull
	 GPIOA->CRL |= ((GPIO_CRL_CNF0_1) | ~(GPIO_CRL_CNF0_0));
 8001b78:	4b05      	ldr	r3, [pc, #20]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	4a04      	ldr	r2, [pc, #16]	; (8001b90 <T2C1_pin_conf+0x40>)
 8001b7e:	f063 0304 	orn	r3, r3, #4
 8001b82:	6013      	str	r3, [r2, #0]
}
 8001b84:	bf00      	nop
 8001b86:	46bd      	mov	sp, r7
 8001b88:	bc80      	pop	{r7}
 8001b8a:	4770      	bx	lr
 8001b8c:	40021000 	.word	0x40021000
 8001b90:	40010800 	.word	0x40010800

08001b94 <pwm_init>:

6) enable the counter
 */

void pwm_init()
{
 8001b94:	b580      	push	{r7, lr}
 8001b96:	af00      	add	r7, sp, #0
	// Start by making sure the timer's 'counter' is off
		TIM2->CR1 &= ~(TIM_CR1_CEN);
 8001b98:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001ba2:	f023 0301 	bic.w	r3, r3, #1
 8001ba6:	6013      	str	r3, [r2, #0]
		TIM2->SR &= ~(TIM_SR_UIF);
 8001ba8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001bac:	691b      	ldr	r3, [r3, #16]
 8001bae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001bb2:	f023 0301 	bic.w	r3, r3, #1
 8001bb6:	6113      	str	r3, [r2, #16]

		//RESET THE TIMER2 BUS
		RCC->APB1RSTR |=  (RCC_APB1RSTR_TIM2RST);
 8001bb8:	4b3d      	ldr	r3, [pc, #244]	; (8001cb0 <pwm_init+0x11c>)
 8001bba:	691b      	ldr	r3, [r3, #16]
 8001bbc:	4a3c      	ldr	r2, [pc, #240]	; (8001cb0 <pwm_init+0x11c>)
 8001bbe:	f043 0301 	orr.w	r3, r3, #1
 8001bc2:	6113      	str	r3, [r2, #16]
		RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM2RST);
 8001bc4:	4b3a      	ldr	r3, [pc, #232]	; (8001cb0 <pwm_init+0x11c>)
 8001bc6:	691b      	ldr	r3, [r3, #16]
 8001bc8:	4a39      	ldr	r2, [pc, #228]	; (8001cb0 <pwm_init+0x11c>)
 8001bca:	f023 0301 	bic.w	r3, r3, #1
 8001bce:	6113      	str	r3, [r2, #16]

		//enable Timer2channel 1 gpio periperial
		T2C1_pin_conf();
 8001bd0:	f7ff ffbe 	bl	8001b50 <T2C1_pin_conf>
		//Enable Timer2 peripheral clock
	    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001bd4:	4b36      	ldr	r3, [pc, #216]	; (8001cb0 <pwm_init+0x11c>)
 8001bd6:	69db      	ldr	r3, [r3, #28]
 8001bd8:	4a35      	ldr	r2, [pc, #212]	; (8001cb0 <pwm_init+0x11c>)
 8001bda:	f043 0301 	orr.w	r3, r3, #1
 8001bde:	61d3      	str	r3, [r2, #28]

	    //enable the preload for CCR1 register -OC1PE bits
	    TIM2->CCMR1 |= TIM_CCMR1_OC1PE;
 8001be0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001be4:	699b      	ldr	r3, [r3, #24]
 8001be6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001bea:	f043 0308 	orr.w	r3, r3, #8
 8001bee:	6193      	str	r3, [r2, #24]
	    //enable the preload for ARR register
	    TIM2->CR1 |= TIM_CR1_ARPE;
 8001bf0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001bfa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001bfe:	6013      	str	r3, [r2, #0]

	    //Set channel1 as output for PWM mode
	    TIM2->CCMR1 &= ~TIM_CCMR1_CC1S;
 8001c00:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c04:	699b      	ldr	r3, [r3, #24]
 8001c06:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c0a:	f023 0303 	bic.w	r3, r3, #3
 8001c0e:	6193      	str	r3, [r2, #24]
	    //enable the channel 1 of TIM2
	 	TIM2->CCER |= TIM_CCER_CC1E;
 8001c10:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c14:	6a1b      	ldr	r3, [r3, #32]
 8001c16:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c1a:	f043 0301 	orr.w	r3, r3, #1
 8001c1e:	6213      	str	r3, [r2, #32]
/******************* assigning values to ARR,PSC,CCR1***************/
	    TIM2-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
 8001c20:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c2a:	f043 0302 	orr.w	r3, r3, #2
 8001c2e:	6013      	str	r3, [r2, #0]

	    //Timer prescaler value
	     TIM2->PSC = 32;
 8001c30:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c34:	2220      	movs	r2, #32
 8001c36:	629a      	str	r2, [r3, #40]	; 0x28
	     //Timer Auto reload register value - this decides the frequency of my signal
	     TIM2->ARR = 5000;
 8001c38:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c3c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c40:	62da      	str	r2, [r3, #44]	; 0x2c
	     //timer output compare register for channel 1 upto which my counter will count: this decides the duty cycle of my signal
	    TIM2->CCR1 = 4500;
 8001c42:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c46:	f241 1294 	movw	r2, #4500	; 0x1194
 8001c4a:	635a      	str	r2, [r3, #52]	; 0x34

	     TIM2-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 8001c4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c56:	f023 0302 	bic.w	r3, r3, #2
 8001c5a:	6013      	str	r3, [r2, #0]
	     //Enable the update generation for updating the shadow register with preload register contents with new values
	      TIM2->EGR |= TIM_EGR_UG;
 8001c5c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c60:	695b      	ldr	r3, [r3, #20]
 8001c62:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c66:	f043 0301 	orr.w	r3, r3, #1
 8001c6a:	6153      	str	r3, [r2, #20]
	      //Clear the UIF flag as that is set when UG bit is set in EGR to update the content of my register
	      TIM2->SR &= ~(TIM_SR_UIF);
 8001c6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c70:	691b      	ldr	r3, [r3, #16]
 8001c72:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c76:	f023 0301 	bic.w	r3, r3, #1
 8001c7a:	6113      	str	r3, [r2, #16]

/*** Setting the output mode of the output signal,its polarity and enabling the corresponding channel ********/

	      //This bits selects which output mode is selected :set the pwm mode 1 on channel1- OC1M bits
	      TIM2->CCMR1 |= (1<<6)|(1<<5);
 8001c7c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c80:	699b      	ldr	r3, [r3, #24]
 8001c82:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c86:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8001c8a:	6193      	str	r3, [r2, #24]
	     // output signal polarity of channel 1 - active high
	      TIM2->CCER &= ~(TIM_CCER_CC1P);
 8001c8c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c90:	6a1b      	ldr	r3, [r3, #32]
 8001c92:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c96:	f023 0302 	bic.w	r3, r3, #2
 8001c9a:	6213      	str	r3, [r2, #32]
	      //set the p
	      //enable the counter
	      TIM2->CR1 |= TIM_CR1_CEN;
 8001c9c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001ca6:	f043 0301 	orr.w	r3, r3, #1
 8001caa:	6013      	str	r3, [r2, #0]


}
 8001cac:	bf00      	nop
 8001cae:	bd80      	pop	{r7, pc}
 8001cb0:	40021000 	.word	0x40021000

08001cb4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001cb4:	480d      	ldr	r0, [pc, #52]	; (8001cec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001cb6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001cb8:	f7ff fed8 	bl	8001a6c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001cbc:	480c      	ldr	r0, [pc, #48]	; (8001cf0 <LoopForever+0x6>)
  ldr r1, =_edata
 8001cbe:	490d      	ldr	r1, [pc, #52]	; (8001cf4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001cc0:	4a0d      	ldr	r2, [pc, #52]	; (8001cf8 <LoopForever+0xe>)
  movs r3, #0
 8001cc2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001cc4:	e002      	b.n	8001ccc <LoopCopyDataInit>

08001cc6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001cc6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001cc8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001cca:	3304      	adds	r3, #4

08001ccc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001ccc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001cce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001cd0:	d3f9      	bcc.n	8001cc6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001cd2:	4a0a      	ldr	r2, [pc, #40]	; (8001cfc <LoopForever+0x12>)
  ldr r4, =_ebss
 8001cd4:	4c0a      	ldr	r4, [pc, #40]	; (8001d00 <LoopForever+0x16>)
  movs r3, #0
 8001cd6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001cd8:	e001      	b.n	8001cde <LoopFillZerobss>

08001cda <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001cda:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001cdc:	3204      	adds	r2, #4

08001cde <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001cde:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001ce0:	d3fb      	bcc.n	8001cda <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001ce2:	f000 f817 	bl	8001d14 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001ce6:	f7ff fd8f 	bl	8001808 <main>

08001cea <LoopForever>:

LoopForever:
    b LoopForever
 8001cea:	e7fe      	b.n	8001cea <LoopForever>
  ldr   r0, =_estack
 8001cec:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8001cf0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001cf4:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8001cf8:	08005b30 	.word	0x08005b30
  ldr r2, =_sbss
 8001cfc:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8001d00:	2000062c 	.word	0x2000062c

08001d04 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001d04:	e7fe      	b.n	8001d04 <ADC1_2_IRQHandler>
	...

08001d08 <__errno>:
 8001d08:	4b01      	ldr	r3, [pc, #4]	; (8001d10 <__errno+0x8>)
 8001d0a:	6818      	ldr	r0, [r3, #0]
 8001d0c:	4770      	bx	lr
 8001d0e:	bf00      	nop
 8001d10:	20000004 	.word	0x20000004

08001d14 <__libc_init_array>:
 8001d14:	b570      	push	{r4, r5, r6, lr}
 8001d16:	2500      	movs	r5, #0
 8001d18:	4e0c      	ldr	r6, [pc, #48]	; (8001d4c <__libc_init_array+0x38>)
 8001d1a:	4c0d      	ldr	r4, [pc, #52]	; (8001d50 <__libc_init_array+0x3c>)
 8001d1c:	1ba4      	subs	r4, r4, r6
 8001d1e:	10a4      	asrs	r4, r4, #2
 8001d20:	42a5      	cmp	r5, r4
 8001d22:	d109      	bne.n	8001d38 <__libc_init_array+0x24>
 8001d24:	f003 fd5e 	bl	80057e4 <_init>
 8001d28:	2500      	movs	r5, #0
 8001d2a:	4e0a      	ldr	r6, [pc, #40]	; (8001d54 <__libc_init_array+0x40>)
 8001d2c:	4c0a      	ldr	r4, [pc, #40]	; (8001d58 <__libc_init_array+0x44>)
 8001d2e:	1ba4      	subs	r4, r4, r6
 8001d30:	10a4      	asrs	r4, r4, #2
 8001d32:	42a5      	cmp	r5, r4
 8001d34:	d105      	bne.n	8001d42 <__libc_init_array+0x2e>
 8001d36:	bd70      	pop	{r4, r5, r6, pc}
 8001d38:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001d3c:	4798      	blx	r3
 8001d3e:	3501      	adds	r5, #1
 8001d40:	e7ee      	b.n	8001d20 <__libc_init_array+0xc>
 8001d42:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001d46:	4798      	blx	r3
 8001d48:	3501      	adds	r5, #1
 8001d4a:	e7f2      	b.n	8001d32 <__libc_init_array+0x1e>
 8001d4c:	08005b28 	.word	0x08005b28
 8001d50:	08005b28 	.word	0x08005b28
 8001d54:	08005b28 	.word	0x08005b28
 8001d58:	08005b2c 	.word	0x08005b2c

08001d5c <memset>:
 8001d5c:	4603      	mov	r3, r0
 8001d5e:	4402      	add	r2, r0
 8001d60:	4293      	cmp	r3, r2
 8001d62:	d100      	bne.n	8001d66 <memset+0xa>
 8001d64:	4770      	bx	lr
 8001d66:	f803 1b01 	strb.w	r1, [r3], #1
 8001d6a:	e7f9      	b.n	8001d60 <memset+0x4>

08001d6c <__cvt>:
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d72:	461e      	mov	r6, r3
 8001d74:	bfbb      	ittet	lt
 8001d76:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001d7a:	461e      	movlt	r6, r3
 8001d7c:	2300      	movge	r3, #0
 8001d7e:	232d      	movlt	r3, #45	; 0x2d
 8001d80:	b088      	sub	sp, #32
 8001d82:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001d84:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001d88:	f027 0720 	bic.w	r7, r7, #32
 8001d8c:	2f46      	cmp	r7, #70	; 0x46
 8001d8e:	4614      	mov	r4, r2
 8001d90:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001d92:	700b      	strb	r3, [r1, #0]
 8001d94:	d004      	beq.n	8001da0 <__cvt+0x34>
 8001d96:	2f45      	cmp	r7, #69	; 0x45
 8001d98:	d100      	bne.n	8001d9c <__cvt+0x30>
 8001d9a:	3501      	adds	r5, #1
 8001d9c:	2302      	movs	r3, #2
 8001d9e:	e000      	b.n	8001da2 <__cvt+0x36>
 8001da0:	2303      	movs	r3, #3
 8001da2:	aa07      	add	r2, sp, #28
 8001da4:	9204      	str	r2, [sp, #16]
 8001da6:	aa06      	add	r2, sp, #24
 8001da8:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001dac:	e9cd 3500 	strd	r3, r5, [sp]
 8001db0:	4622      	mov	r2, r4
 8001db2:	4633      	mov	r3, r6
 8001db4:	f001 fd7c 	bl	80038b0 <_dtoa_r>
 8001db8:	2f47      	cmp	r7, #71	; 0x47
 8001dba:	4680      	mov	r8, r0
 8001dbc:	d102      	bne.n	8001dc4 <__cvt+0x58>
 8001dbe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001dc0:	07db      	lsls	r3, r3, #31
 8001dc2:	d526      	bpl.n	8001e12 <__cvt+0xa6>
 8001dc4:	2f46      	cmp	r7, #70	; 0x46
 8001dc6:	eb08 0905 	add.w	r9, r8, r5
 8001dca:	d111      	bne.n	8001df0 <__cvt+0x84>
 8001dcc:	f898 3000 	ldrb.w	r3, [r8]
 8001dd0:	2b30      	cmp	r3, #48	; 0x30
 8001dd2:	d10a      	bne.n	8001dea <__cvt+0x7e>
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	4620      	mov	r0, r4
 8001dda:	4631      	mov	r1, r6
 8001ddc:	f7fe fdf4 	bl	80009c8 <__aeabi_dcmpeq>
 8001de0:	b918      	cbnz	r0, 8001dea <__cvt+0x7e>
 8001de2:	f1c5 0501 	rsb	r5, r5, #1
 8001de6:	f8ca 5000 	str.w	r5, [sl]
 8001dea:	f8da 3000 	ldr.w	r3, [sl]
 8001dee:	4499      	add	r9, r3
 8001df0:	2200      	movs	r2, #0
 8001df2:	2300      	movs	r3, #0
 8001df4:	4620      	mov	r0, r4
 8001df6:	4631      	mov	r1, r6
 8001df8:	f7fe fde6 	bl	80009c8 <__aeabi_dcmpeq>
 8001dfc:	b938      	cbnz	r0, 8001e0e <__cvt+0xa2>
 8001dfe:	2230      	movs	r2, #48	; 0x30
 8001e00:	9b07      	ldr	r3, [sp, #28]
 8001e02:	454b      	cmp	r3, r9
 8001e04:	d205      	bcs.n	8001e12 <__cvt+0xa6>
 8001e06:	1c59      	adds	r1, r3, #1
 8001e08:	9107      	str	r1, [sp, #28]
 8001e0a:	701a      	strb	r2, [r3, #0]
 8001e0c:	e7f8      	b.n	8001e00 <__cvt+0x94>
 8001e0e:	f8cd 901c 	str.w	r9, [sp, #28]
 8001e12:	4640      	mov	r0, r8
 8001e14:	9b07      	ldr	r3, [sp, #28]
 8001e16:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001e18:	eba3 0308 	sub.w	r3, r3, r8
 8001e1c:	6013      	str	r3, [r2, #0]
 8001e1e:	b008      	add	sp, #32
 8001e20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001e24 <__exponent>:
 8001e24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e26:	2900      	cmp	r1, #0
 8001e28:	bfb4      	ite	lt
 8001e2a:	232d      	movlt	r3, #45	; 0x2d
 8001e2c:	232b      	movge	r3, #43	; 0x2b
 8001e2e:	4604      	mov	r4, r0
 8001e30:	bfb8      	it	lt
 8001e32:	4249      	neglt	r1, r1
 8001e34:	2909      	cmp	r1, #9
 8001e36:	f804 2b02 	strb.w	r2, [r4], #2
 8001e3a:	7043      	strb	r3, [r0, #1]
 8001e3c:	dd21      	ble.n	8001e82 <__exponent+0x5e>
 8001e3e:	f10d 0307 	add.w	r3, sp, #7
 8001e42:	461f      	mov	r7, r3
 8001e44:	260a      	movs	r6, #10
 8001e46:	fb91 f5f6 	sdiv	r5, r1, r6
 8001e4a:	fb06 1115 	mls	r1, r6, r5, r1
 8001e4e:	2d09      	cmp	r5, #9
 8001e50:	f101 0130 	add.w	r1, r1, #48	; 0x30
 8001e54:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001e58:	f103 32ff 	add.w	r2, r3, #4294967295
 8001e5c:	4629      	mov	r1, r5
 8001e5e:	dc09      	bgt.n	8001e74 <__exponent+0x50>
 8001e60:	3130      	adds	r1, #48	; 0x30
 8001e62:	3b02      	subs	r3, #2
 8001e64:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001e68:	42bb      	cmp	r3, r7
 8001e6a:	4622      	mov	r2, r4
 8001e6c:	d304      	bcc.n	8001e78 <__exponent+0x54>
 8001e6e:	1a10      	subs	r0, r2, r0
 8001e70:	b003      	add	sp, #12
 8001e72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e74:	4613      	mov	r3, r2
 8001e76:	e7e6      	b.n	8001e46 <__exponent+0x22>
 8001e78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001e7c:	f804 2b01 	strb.w	r2, [r4], #1
 8001e80:	e7f2      	b.n	8001e68 <__exponent+0x44>
 8001e82:	2330      	movs	r3, #48	; 0x30
 8001e84:	4419      	add	r1, r3
 8001e86:	7083      	strb	r3, [r0, #2]
 8001e88:	1d02      	adds	r2, r0, #4
 8001e8a:	70c1      	strb	r1, [r0, #3]
 8001e8c:	e7ef      	b.n	8001e6e <__exponent+0x4a>
	...

08001e90 <_printf_float>:
 8001e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e94:	b091      	sub	sp, #68	; 0x44
 8001e96:	460c      	mov	r4, r1
 8001e98:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001e9a:	4693      	mov	fp, r2
 8001e9c:	461e      	mov	r6, r3
 8001e9e:	4605      	mov	r5, r0
 8001ea0:	f002 fde8 	bl	8004a74 <_localeconv_r>
 8001ea4:	6803      	ldr	r3, [r0, #0]
 8001ea6:	4618      	mov	r0, r3
 8001ea8:	9309      	str	r3, [sp, #36]	; 0x24
 8001eaa:	f7fe f961 	bl	8000170 <strlen>
 8001eae:	2300      	movs	r3, #0
 8001eb0:	930e      	str	r3, [sp, #56]	; 0x38
 8001eb2:	683b      	ldr	r3, [r7, #0]
 8001eb4:	900a      	str	r0, [sp, #40]	; 0x28
 8001eb6:	3307      	adds	r3, #7
 8001eb8:	f023 0307 	bic.w	r3, r3, #7
 8001ebc:	f103 0208 	add.w	r2, r3, #8
 8001ec0:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001ec4:	f8d4 a000 	ldr.w	sl, [r4]
 8001ec8:	603a      	str	r2, [r7, #0]
 8001eca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ece:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001ed2:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001ed6:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001eda:	930b      	str	r3, [sp, #44]	; 0x2c
 8001edc:	f04f 32ff 	mov.w	r2, #4294967295
 8001ee0:	4ba6      	ldr	r3, [pc, #664]	; (800217c <_printf_float+0x2ec>)
 8001ee2:	4638      	mov	r0, r7
 8001ee4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001ee6:	f7fe fda1 	bl	8000a2c <__aeabi_dcmpun>
 8001eea:	bb68      	cbnz	r0, 8001f48 <_printf_float+0xb8>
 8001eec:	f04f 32ff 	mov.w	r2, #4294967295
 8001ef0:	4ba2      	ldr	r3, [pc, #648]	; (800217c <_printf_float+0x2ec>)
 8001ef2:	4638      	mov	r0, r7
 8001ef4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001ef6:	f7fe fd7b 	bl	80009f0 <__aeabi_dcmple>
 8001efa:	bb28      	cbnz	r0, 8001f48 <_printf_float+0xb8>
 8001efc:	2200      	movs	r2, #0
 8001efe:	2300      	movs	r3, #0
 8001f00:	4638      	mov	r0, r7
 8001f02:	4649      	mov	r1, r9
 8001f04:	f7fe fd6a 	bl	80009dc <__aeabi_dcmplt>
 8001f08:	b110      	cbz	r0, 8001f10 <_printf_float+0x80>
 8001f0a:	232d      	movs	r3, #45	; 0x2d
 8001f0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f10:	4f9b      	ldr	r7, [pc, #620]	; (8002180 <_printf_float+0x2f0>)
 8001f12:	4b9c      	ldr	r3, [pc, #624]	; (8002184 <_printf_float+0x2f4>)
 8001f14:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001f18:	bf98      	it	ls
 8001f1a:	461f      	movls	r7, r3
 8001f1c:	2303      	movs	r3, #3
 8001f1e:	f04f 0900 	mov.w	r9, #0
 8001f22:	6123      	str	r3, [r4, #16]
 8001f24:	f02a 0304 	bic.w	r3, sl, #4
 8001f28:	6023      	str	r3, [r4, #0]
 8001f2a:	9600      	str	r6, [sp, #0]
 8001f2c:	465b      	mov	r3, fp
 8001f2e:	aa0f      	add	r2, sp, #60	; 0x3c
 8001f30:	4621      	mov	r1, r4
 8001f32:	4628      	mov	r0, r5
 8001f34:	f000 f9e2 	bl	80022fc <_printf_common>
 8001f38:	3001      	adds	r0, #1
 8001f3a:	f040 8090 	bne.w	800205e <_printf_float+0x1ce>
 8001f3e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f42:	b011      	add	sp, #68	; 0x44
 8001f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f48:	463a      	mov	r2, r7
 8001f4a:	464b      	mov	r3, r9
 8001f4c:	4638      	mov	r0, r7
 8001f4e:	4649      	mov	r1, r9
 8001f50:	f7fe fd6c 	bl	8000a2c <__aeabi_dcmpun>
 8001f54:	b110      	cbz	r0, 8001f5c <_printf_float+0xcc>
 8001f56:	4f8c      	ldr	r7, [pc, #560]	; (8002188 <_printf_float+0x2f8>)
 8001f58:	4b8c      	ldr	r3, [pc, #560]	; (800218c <_printf_float+0x2fc>)
 8001f5a:	e7db      	b.n	8001f14 <_printf_float+0x84>
 8001f5c:	6863      	ldr	r3, [r4, #4]
 8001f5e:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001f62:	1c59      	adds	r1, r3, #1
 8001f64:	a80d      	add	r0, sp, #52	; 0x34
 8001f66:	a90e      	add	r1, sp, #56	; 0x38
 8001f68:	d140      	bne.n	8001fec <_printf_float+0x15c>
 8001f6a:	2306      	movs	r3, #6
 8001f6c:	6063      	str	r3, [r4, #4]
 8001f6e:	f04f 0c00 	mov.w	ip, #0
 8001f72:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001f76:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001f7a:	6863      	ldr	r3, [r4, #4]
 8001f7c:	6022      	str	r2, [r4, #0]
 8001f7e:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001f82:	9300      	str	r3, [sp, #0]
 8001f84:	463a      	mov	r2, r7
 8001f86:	464b      	mov	r3, r9
 8001f88:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001f8c:	4628      	mov	r0, r5
 8001f8e:	f7ff feed 	bl	8001d6c <__cvt>
 8001f92:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001f96:	2b47      	cmp	r3, #71	; 0x47
 8001f98:	4607      	mov	r7, r0
 8001f9a:	d109      	bne.n	8001fb0 <_printf_float+0x120>
 8001f9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001f9e:	1cd8      	adds	r0, r3, #3
 8001fa0:	db02      	blt.n	8001fa8 <_printf_float+0x118>
 8001fa2:	6862      	ldr	r2, [r4, #4]
 8001fa4:	4293      	cmp	r3, r2
 8001fa6:	dd47      	ble.n	8002038 <_printf_float+0x1a8>
 8001fa8:	f1a8 0802 	sub.w	r8, r8, #2
 8001fac:	fa5f f888 	uxtb.w	r8, r8
 8001fb0:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001fb4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001fb6:	d824      	bhi.n	8002002 <_printf_float+0x172>
 8001fb8:	3901      	subs	r1, #1
 8001fba:	4642      	mov	r2, r8
 8001fbc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001fc0:	910d      	str	r1, [sp, #52]	; 0x34
 8001fc2:	f7ff ff2f 	bl	8001e24 <__exponent>
 8001fc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001fc8:	4681      	mov	r9, r0
 8001fca:	1813      	adds	r3, r2, r0
 8001fcc:	2a01      	cmp	r2, #1
 8001fce:	6123      	str	r3, [r4, #16]
 8001fd0:	dc02      	bgt.n	8001fd8 <_printf_float+0x148>
 8001fd2:	6822      	ldr	r2, [r4, #0]
 8001fd4:	07d1      	lsls	r1, r2, #31
 8001fd6:	d501      	bpl.n	8001fdc <_printf_float+0x14c>
 8001fd8:	3301      	adds	r3, #1
 8001fda:	6123      	str	r3, [r4, #16]
 8001fdc:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d0a2      	beq.n	8001f2a <_printf_float+0x9a>
 8001fe4:	232d      	movs	r3, #45	; 0x2d
 8001fe6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001fea:	e79e      	b.n	8001f2a <_printf_float+0x9a>
 8001fec:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001ff0:	f000 816e 	beq.w	80022d0 <_printf_float+0x440>
 8001ff4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001ff8:	d1b9      	bne.n	8001f6e <_printf_float+0xde>
 8001ffa:	2b00      	cmp	r3, #0
 8001ffc:	d1b7      	bne.n	8001f6e <_printf_float+0xde>
 8001ffe:	2301      	movs	r3, #1
 8002000:	e7b4      	b.n	8001f6c <_printf_float+0xdc>
 8002002:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8002006:	d119      	bne.n	800203c <_printf_float+0x1ac>
 8002008:	2900      	cmp	r1, #0
 800200a:	6863      	ldr	r3, [r4, #4]
 800200c:	dd0c      	ble.n	8002028 <_printf_float+0x198>
 800200e:	6121      	str	r1, [r4, #16]
 8002010:	b913      	cbnz	r3, 8002018 <_printf_float+0x188>
 8002012:	6822      	ldr	r2, [r4, #0]
 8002014:	07d2      	lsls	r2, r2, #31
 8002016:	d502      	bpl.n	800201e <_printf_float+0x18e>
 8002018:	3301      	adds	r3, #1
 800201a:	440b      	add	r3, r1
 800201c:	6123      	str	r3, [r4, #16]
 800201e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002020:	f04f 0900 	mov.w	r9, #0
 8002024:	65a3      	str	r3, [r4, #88]	; 0x58
 8002026:	e7d9      	b.n	8001fdc <_printf_float+0x14c>
 8002028:	b913      	cbnz	r3, 8002030 <_printf_float+0x1a0>
 800202a:	6822      	ldr	r2, [r4, #0]
 800202c:	07d0      	lsls	r0, r2, #31
 800202e:	d501      	bpl.n	8002034 <_printf_float+0x1a4>
 8002030:	3302      	adds	r3, #2
 8002032:	e7f3      	b.n	800201c <_printf_float+0x18c>
 8002034:	2301      	movs	r3, #1
 8002036:	e7f1      	b.n	800201c <_printf_float+0x18c>
 8002038:	f04f 0867 	mov.w	r8, #103	; 0x67
 800203c:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8002040:	4293      	cmp	r3, r2
 8002042:	db05      	blt.n	8002050 <_printf_float+0x1c0>
 8002044:	6822      	ldr	r2, [r4, #0]
 8002046:	6123      	str	r3, [r4, #16]
 8002048:	07d1      	lsls	r1, r2, #31
 800204a:	d5e8      	bpl.n	800201e <_printf_float+0x18e>
 800204c:	3301      	adds	r3, #1
 800204e:	e7e5      	b.n	800201c <_printf_float+0x18c>
 8002050:	2b00      	cmp	r3, #0
 8002052:	bfcc      	ite	gt
 8002054:	2301      	movgt	r3, #1
 8002056:	f1c3 0302 	rsble	r3, r3, #2
 800205a:	4413      	add	r3, r2
 800205c:	e7de      	b.n	800201c <_printf_float+0x18c>
 800205e:	6823      	ldr	r3, [r4, #0]
 8002060:	055a      	lsls	r2, r3, #21
 8002062:	d407      	bmi.n	8002074 <_printf_float+0x1e4>
 8002064:	6923      	ldr	r3, [r4, #16]
 8002066:	463a      	mov	r2, r7
 8002068:	4659      	mov	r1, fp
 800206a:	4628      	mov	r0, r5
 800206c:	47b0      	blx	r6
 800206e:	3001      	adds	r0, #1
 8002070:	d129      	bne.n	80020c6 <_printf_float+0x236>
 8002072:	e764      	b.n	8001f3e <_printf_float+0xae>
 8002074:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8002078:	f240 80d7 	bls.w	800222a <_printf_float+0x39a>
 800207c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002080:	2200      	movs	r2, #0
 8002082:	2300      	movs	r3, #0
 8002084:	f7fe fca0 	bl	80009c8 <__aeabi_dcmpeq>
 8002088:	b388      	cbz	r0, 80020ee <_printf_float+0x25e>
 800208a:	2301      	movs	r3, #1
 800208c:	4a40      	ldr	r2, [pc, #256]	; (8002190 <_printf_float+0x300>)
 800208e:	4659      	mov	r1, fp
 8002090:	4628      	mov	r0, r5
 8002092:	47b0      	blx	r6
 8002094:	3001      	adds	r0, #1
 8002096:	f43f af52 	beq.w	8001f3e <_printf_float+0xae>
 800209a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800209e:	429a      	cmp	r2, r3
 80020a0:	db02      	blt.n	80020a8 <_printf_float+0x218>
 80020a2:	6823      	ldr	r3, [r4, #0]
 80020a4:	07d8      	lsls	r0, r3, #31
 80020a6:	d50e      	bpl.n	80020c6 <_printf_float+0x236>
 80020a8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80020ac:	4659      	mov	r1, fp
 80020ae:	4628      	mov	r0, r5
 80020b0:	47b0      	blx	r6
 80020b2:	3001      	adds	r0, #1
 80020b4:	f43f af43 	beq.w	8001f3e <_printf_float+0xae>
 80020b8:	2700      	movs	r7, #0
 80020ba:	f104 081a 	add.w	r8, r4, #26
 80020be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80020c0:	3b01      	subs	r3, #1
 80020c2:	42bb      	cmp	r3, r7
 80020c4:	dc09      	bgt.n	80020da <_printf_float+0x24a>
 80020c6:	6823      	ldr	r3, [r4, #0]
 80020c8:	079f      	lsls	r7, r3, #30
 80020ca:	f100 80fd 	bmi.w	80022c8 <_printf_float+0x438>
 80020ce:	68e0      	ldr	r0, [r4, #12]
 80020d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80020d2:	4298      	cmp	r0, r3
 80020d4:	bfb8      	it	lt
 80020d6:	4618      	movlt	r0, r3
 80020d8:	e733      	b.n	8001f42 <_printf_float+0xb2>
 80020da:	2301      	movs	r3, #1
 80020dc:	4642      	mov	r2, r8
 80020de:	4659      	mov	r1, fp
 80020e0:	4628      	mov	r0, r5
 80020e2:	47b0      	blx	r6
 80020e4:	3001      	adds	r0, #1
 80020e6:	f43f af2a 	beq.w	8001f3e <_printf_float+0xae>
 80020ea:	3701      	adds	r7, #1
 80020ec:	e7e7      	b.n	80020be <_printf_float+0x22e>
 80020ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	dc2b      	bgt.n	800214c <_printf_float+0x2bc>
 80020f4:	2301      	movs	r3, #1
 80020f6:	4a26      	ldr	r2, [pc, #152]	; (8002190 <_printf_float+0x300>)
 80020f8:	4659      	mov	r1, fp
 80020fa:	4628      	mov	r0, r5
 80020fc:	47b0      	blx	r6
 80020fe:	3001      	adds	r0, #1
 8002100:	f43f af1d 	beq.w	8001f3e <_printf_float+0xae>
 8002104:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002106:	b923      	cbnz	r3, 8002112 <_printf_float+0x282>
 8002108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800210a:	b913      	cbnz	r3, 8002112 <_printf_float+0x282>
 800210c:	6823      	ldr	r3, [r4, #0]
 800210e:	07d9      	lsls	r1, r3, #31
 8002110:	d5d9      	bpl.n	80020c6 <_printf_float+0x236>
 8002112:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002116:	4659      	mov	r1, fp
 8002118:	4628      	mov	r0, r5
 800211a:	47b0      	blx	r6
 800211c:	3001      	adds	r0, #1
 800211e:	f43f af0e 	beq.w	8001f3e <_printf_float+0xae>
 8002122:	f04f 0800 	mov.w	r8, #0
 8002126:	f104 091a 	add.w	r9, r4, #26
 800212a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800212c:	425b      	negs	r3, r3
 800212e:	4543      	cmp	r3, r8
 8002130:	dc01      	bgt.n	8002136 <_printf_float+0x2a6>
 8002132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002134:	e797      	b.n	8002066 <_printf_float+0x1d6>
 8002136:	2301      	movs	r3, #1
 8002138:	464a      	mov	r2, r9
 800213a:	4659      	mov	r1, fp
 800213c:	4628      	mov	r0, r5
 800213e:	47b0      	blx	r6
 8002140:	3001      	adds	r0, #1
 8002142:	f43f aefc 	beq.w	8001f3e <_printf_float+0xae>
 8002146:	f108 0801 	add.w	r8, r8, #1
 800214a:	e7ee      	b.n	800212a <_printf_float+0x29a>
 800214c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800214e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002150:	429a      	cmp	r2, r3
 8002152:	bfa8      	it	ge
 8002154:	461a      	movge	r2, r3
 8002156:	2a00      	cmp	r2, #0
 8002158:	4690      	mov	r8, r2
 800215a:	dd07      	ble.n	800216c <_printf_float+0x2dc>
 800215c:	4613      	mov	r3, r2
 800215e:	4659      	mov	r1, fp
 8002160:	463a      	mov	r2, r7
 8002162:	4628      	mov	r0, r5
 8002164:	47b0      	blx	r6
 8002166:	3001      	adds	r0, #1
 8002168:	f43f aee9 	beq.w	8001f3e <_printf_float+0xae>
 800216c:	f104 031a 	add.w	r3, r4, #26
 8002170:	f04f 0a00 	mov.w	sl, #0
 8002174:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8002178:	930b      	str	r3, [sp, #44]	; 0x2c
 800217a:	e015      	b.n	80021a8 <_printf_float+0x318>
 800217c:	7fefffff 	.word	0x7fefffff
 8002180:	08005878 	.word	0x08005878
 8002184:	08005874 	.word	0x08005874
 8002188:	08005880 	.word	0x08005880
 800218c:	0800587c 	.word	0x0800587c
 8002190:	08005884 	.word	0x08005884
 8002194:	2301      	movs	r3, #1
 8002196:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002198:	4659      	mov	r1, fp
 800219a:	4628      	mov	r0, r5
 800219c:	47b0      	blx	r6
 800219e:	3001      	adds	r0, #1
 80021a0:	f43f aecd 	beq.w	8001f3e <_printf_float+0xae>
 80021a4:	f10a 0a01 	add.w	sl, sl, #1
 80021a8:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 80021ac:	eba9 0308 	sub.w	r3, r9, r8
 80021b0:	4553      	cmp	r3, sl
 80021b2:	dcef      	bgt.n	8002194 <_printf_float+0x304>
 80021b4:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80021b8:	429a      	cmp	r2, r3
 80021ba:	444f      	add	r7, r9
 80021bc:	db14      	blt.n	80021e8 <_printf_float+0x358>
 80021be:	6823      	ldr	r3, [r4, #0]
 80021c0:	07da      	lsls	r2, r3, #31
 80021c2:	d411      	bmi.n	80021e8 <_printf_float+0x358>
 80021c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80021c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80021c8:	eba3 0209 	sub.w	r2, r3, r9
 80021cc:	eba3 0901 	sub.w	r9, r3, r1
 80021d0:	4591      	cmp	r9, r2
 80021d2:	bfa8      	it	ge
 80021d4:	4691      	movge	r9, r2
 80021d6:	f1b9 0f00 	cmp.w	r9, #0
 80021da:	dc0d      	bgt.n	80021f8 <_printf_float+0x368>
 80021dc:	2700      	movs	r7, #0
 80021de:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80021e2:	f104 081a 	add.w	r8, r4, #26
 80021e6:	e018      	b.n	800221a <_printf_float+0x38a>
 80021e8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80021ec:	4659      	mov	r1, fp
 80021ee:	4628      	mov	r0, r5
 80021f0:	47b0      	blx	r6
 80021f2:	3001      	adds	r0, #1
 80021f4:	d1e6      	bne.n	80021c4 <_printf_float+0x334>
 80021f6:	e6a2      	b.n	8001f3e <_printf_float+0xae>
 80021f8:	464b      	mov	r3, r9
 80021fa:	463a      	mov	r2, r7
 80021fc:	4659      	mov	r1, fp
 80021fe:	4628      	mov	r0, r5
 8002200:	47b0      	blx	r6
 8002202:	3001      	adds	r0, #1
 8002204:	d1ea      	bne.n	80021dc <_printf_float+0x34c>
 8002206:	e69a      	b.n	8001f3e <_printf_float+0xae>
 8002208:	2301      	movs	r3, #1
 800220a:	4642      	mov	r2, r8
 800220c:	4659      	mov	r1, fp
 800220e:	4628      	mov	r0, r5
 8002210:	47b0      	blx	r6
 8002212:	3001      	adds	r0, #1
 8002214:	f43f ae93 	beq.w	8001f3e <_printf_float+0xae>
 8002218:	3701      	adds	r7, #1
 800221a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800221e:	1a9b      	subs	r3, r3, r2
 8002220:	eba3 0309 	sub.w	r3, r3, r9
 8002224:	42bb      	cmp	r3, r7
 8002226:	dcef      	bgt.n	8002208 <_printf_float+0x378>
 8002228:	e74d      	b.n	80020c6 <_printf_float+0x236>
 800222a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800222c:	2a01      	cmp	r2, #1
 800222e:	dc01      	bgt.n	8002234 <_printf_float+0x3a4>
 8002230:	07db      	lsls	r3, r3, #31
 8002232:	d538      	bpl.n	80022a6 <_printf_float+0x416>
 8002234:	2301      	movs	r3, #1
 8002236:	463a      	mov	r2, r7
 8002238:	4659      	mov	r1, fp
 800223a:	4628      	mov	r0, r5
 800223c:	47b0      	blx	r6
 800223e:	3001      	adds	r0, #1
 8002240:	f43f ae7d 	beq.w	8001f3e <_printf_float+0xae>
 8002244:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002248:	4659      	mov	r1, fp
 800224a:	4628      	mov	r0, r5
 800224c:	47b0      	blx	r6
 800224e:	3001      	adds	r0, #1
 8002250:	f107 0701 	add.w	r7, r7, #1
 8002254:	f43f ae73 	beq.w	8001f3e <_printf_float+0xae>
 8002258:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800225c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800225e:	2200      	movs	r2, #0
 8002260:	f103 38ff 	add.w	r8, r3, #4294967295
 8002264:	2300      	movs	r3, #0
 8002266:	f7fe fbaf 	bl	80009c8 <__aeabi_dcmpeq>
 800226a:	b9c0      	cbnz	r0, 800229e <_printf_float+0x40e>
 800226c:	4643      	mov	r3, r8
 800226e:	463a      	mov	r2, r7
 8002270:	4659      	mov	r1, fp
 8002272:	4628      	mov	r0, r5
 8002274:	47b0      	blx	r6
 8002276:	3001      	adds	r0, #1
 8002278:	d10d      	bne.n	8002296 <_printf_float+0x406>
 800227a:	e660      	b.n	8001f3e <_printf_float+0xae>
 800227c:	2301      	movs	r3, #1
 800227e:	4642      	mov	r2, r8
 8002280:	4659      	mov	r1, fp
 8002282:	4628      	mov	r0, r5
 8002284:	47b0      	blx	r6
 8002286:	3001      	adds	r0, #1
 8002288:	f43f ae59 	beq.w	8001f3e <_printf_float+0xae>
 800228c:	3701      	adds	r7, #1
 800228e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002290:	3b01      	subs	r3, #1
 8002292:	42bb      	cmp	r3, r7
 8002294:	dcf2      	bgt.n	800227c <_printf_float+0x3ec>
 8002296:	464b      	mov	r3, r9
 8002298:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800229c:	e6e4      	b.n	8002068 <_printf_float+0x1d8>
 800229e:	2700      	movs	r7, #0
 80022a0:	f104 081a 	add.w	r8, r4, #26
 80022a4:	e7f3      	b.n	800228e <_printf_float+0x3fe>
 80022a6:	2301      	movs	r3, #1
 80022a8:	e7e1      	b.n	800226e <_printf_float+0x3de>
 80022aa:	2301      	movs	r3, #1
 80022ac:	4642      	mov	r2, r8
 80022ae:	4659      	mov	r1, fp
 80022b0:	4628      	mov	r0, r5
 80022b2:	47b0      	blx	r6
 80022b4:	3001      	adds	r0, #1
 80022b6:	f43f ae42 	beq.w	8001f3e <_printf_float+0xae>
 80022ba:	3701      	adds	r7, #1
 80022bc:	68e3      	ldr	r3, [r4, #12]
 80022be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80022c0:	1a9b      	subs	r3, r3, r2
 80022c2:	42bb      	cmp	r3, r7
 80022c4:	dcf1      	bgt.n	80022aa <_printf_float+0x41a>
 80022c6:	e702      	b.n	80020ce <_printf_float+0x23e>
 80022c8:	2700      	movs	r7, #0
 80022ca:	f104 0819 	add.w	r8, r4, #25
 80022ce:	e7f5      	b.n	80022bc <_printf_float+0x42c>
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	f43f ae94 	beq.w	8001ffe <_printf_float+0x16e>
 80022d6:	f04f 0c00 	mov.w	ip, #0
 80022da:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 80022de:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 80022e2:	6022      	str	r2, [r4, #0]
 80022e4:	e9cd 0803 	strd	r0, r8, [sp, #12]
 80022e8:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80022ec:	9300      	str	r3, [sp, #0]
 80022ee:	463a      	mov	r2, r7
 80022f0:	464b      	mov	r3, r9
 80022f2:	4628      	mov	r0, r5
 80022f4:	f7ff fd3a 	bl	8001d6c <__cvt>
 80022f8:	4607      	mov	r7, r0
 80022fa:	e64f      	b.n	8001f9c <_printf_float+0x10c>

080022fc <_printf_common>:
 80022fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002300:	4691      	mov	r9, r2
 8002302:	461f      	mov	r7, r3
 8002304:	688a      	ldr	r2, [r1, #8]
 8002306:	690b      	ldr	r3, [r1, #16]
 8002308:	4606      	mov	r6, r0
 800230a:	4293      	cmp	r3, r2
 800230c:	bfb8      	it	lt
 800230e:	4613      	movlt	r3, r2
 8002310:	f8c9 3000 	str.w	r3, [r9]
 8002314:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002318:	460c      	mov	r4, r1
 800231a:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800231e:	b112      	cbz	r2, 8002326 <_printf_common+0x2a>
 8002320:	3301      	adds	r3, #1
 8002322:	f8c9 3000 	str.w	r3, [r9]
 8002326:	6823      	ldr	r3, [r4, #0]
 8002328:	0699      	lsls	r1, r3, #26
 800232a:	bf42      	ittt	mi
 800232c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002330:	3302      	addmi	r3, #2
 8002332:	f8c9 3000 	strmi.w	r3, [r9]
 8002336:	6825      	ldr	r5, [r4, #0]
 8002338:	f015 0506 	ands.w	r5, r5, #6
 800233c:	d107      	bne.n	800234e <_printf_common+0x52>
 800233e:	f104 0a19 	add.w	sl, r4, #25
 8002342:	68e3      	ldr	r3, [r4, #12]
 8002344:	f8d9 2000 	ldr.w	r2, [r9]
 8002348:	1a9b      	subs	r3, r3, r2
 800234a:	42ab      	cmp	r3, r5
 800234c:	dc29      	bgt.n	80023a2 <_printf_common+0xa6>
 800234e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8002352:	6822      	ldr	r2, [r4, #0]
 8002354:	3300      	adds	r3, #0
 8002356:	bf18      	it	ne
 8002358:	2301      	movne	r3, #1
 800235a:	0692      	lsls	r2, r2, #26
 800235c:	d42e      	bmi.n	80023bc <_printf_common+0xc0>
 800235e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002362:	4639      	mov	r1, r7
 8002364:	4630      	mov	r0, r6
 8002366:	47c0      	blx	r8
 8002368:	3001      	adds	r0, #1
 800236a:	d021      	beq.n	80023b0 <_printf_common+0xb4>
 800236c:	6823      	ldr	r3, [r4, #0]
 800236e:	68e5      	ldr	r5, [r4, #12]
 8002370:	f003 0306 	and.w	r3, r3, #6
 8002374:	2b04      	cmp	r3, #4
 8002376:	bf18      	it	ne
 8002378:	2500      	movne	r5, #0
 800237a:	f8d9 2000 	ldr.w	r2, [r9]
 800237e:	f04f 0900 	mov.w	r9, #0
 8002382:	bf08      	it	eq
 8002384:	1aad      	subeq	r5, r5, r2
 8002386:	68a3      	ldr	r3, [r4, #8]
 8002388:	6922      	ldr	r2, [r4, #16]
 800238a:	bf08      	it	eq
 800238c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002390:	4293      	cmp	r3, r2
 8002392:	bfc4      	itt	gt
 8002394:	1a9b      	subgt	r3, r3, r2
 8002396:	18ed      	addgt	r5, r5, r3
 8002398:	341a      	adds	r4, #26
 800239a:	454d      	cmp	r5, r9
 800239c:	d11a      	bne.n	80023d4 <_printf_common+0xd8>
 800239e:	2000      	movs	r0, #0
 80023a0:	e008      	b.n	80023b4 <_printf_common+0xb8>
 80023a2:	2301      	movs	r3, #1
 80023a4:	4652      	mov	r2, sl
 80023a6:	4639      	mov	r1, r7
 80023a8:	4630      	mov	r0, r6
 80023aa:	47c0      	blx	r8
 80023ac:	3001      	adds	r0, #1
 80023ae:	d103      	bne.n	80023b8 <_printf_common+0xbc>
 80023b0:	f04f 30ff 	mov.w	r0, #4294967295
 80023b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023b8:	3501      	adds	r5, #1
 80023ba:	e7c2      	b.n	8002342 <_printf_common+0x46>
 80023bc:	2030      	movs	r0, #48	; 0x30
 80023be:	18e1      	adds	r1, r4, r3
 80023c0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80023c4:	1c5a      	adds	r2, r3, #1
 80023c6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80023ca:	4422      	add	r2, r4
 80023cc:	3302      	adds	r3, #2
 80023ce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80023d2:	e7c4      	b.n	800235e <_printf_common+0x62>
 80023d4:	2301      	movs	r3, #1
 80023d6:	4622      	mov	r2, r4
 80023d8:	4639      	mov	r1, r7
 80023da:	4630      	mov	r0, r6
 80023dc:	47c0      	blx	r8
 80023de:	3001      	adds	r0, #1
 80023e0:	d0e6      	beq.n	80023b0 <_printf_common+0xb4>
 80023e2:	f109 0901 	add.w	r9, r9, #1
 80023e6:	e7d8      	b.n	800239a <_printf_common+0x9e>

080023e8 <_printf_i>:
 80023e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80023ec:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80023f0:	460c      	mov	r4, r1
 80023f2:	7e09      	ldrb	r1, [r1, #24]
 80023f4:	b085      	sub	sp, #20
 80023f6:	296e      	cmp	r1, #110	; 0x6e
 80023f8:	4617      	mov	r7, r2
 80023fa:	4606      	mov	r6, r0
 80023fc:	4698      	mov	r8, r3
 80023fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002400:	f000 80b3 	beq.w	800256a <_printf_i+0x182>
 8002404:	d822      	bhi.n	800244c <_printf_i+0x64>
 8002406:	2963      	cmp	r1, #99	; 0x63
 8002408:	d036      	beq.n	8002478 <_printf_i+0x90>
 800240a:	d80a      	bhi.n	8002422 <_printf_i+0x3a>
 800240c:	2900      	cmp	r1, #0
 800240e:	f000 80b9 	beq.w	8002584 <_printf_i+0x19c>
 8002412:	2958      	cmp	r1, #88	; 0x58
 8002414:	f000 8083 	beq.w	800251e <_printf_i+0x136>
 8002418:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800241c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002420:	e032      	b.n	8002488 <_printf_i+0xa0>
 8002422:	2964      	cmp	r1, #100	; 0x64
 8002424:	d001      	beq.n	800242a <_printf_i+0x42>
 8002426:	2969      	cmp	r1, #105	; 0x69
 8002428:	d1f6      	bne.n	8002418 <_printf_i+0x30>
 800242a:	6820      	ldr	r0, [r4, #0]
 800242c:	6813      	ldr	r3, [r2, #0]
 800242e:	0605      	lsls	r5, r0, #24
 8002430:	f103 0104 	add.w	r1, r3, #4
 8002434:	d52a      	bpl.n	800248c <_printf_i+0xa4>
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	6011      	str	r1, [r2, #0]
 800243a:	2b00      	cmp	r3, #0
 800243c:	da03      	bge.n	8002446 <_printf_i+0x5e>
 800243e:	222d      	movs	r2, #45	; 0x2d
 8002440:	425b      	negs	r3, r3
 8002442:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002446:	486f      	ldr	r0, [pc, #444]	; (8002604 <_printf_i+0x21c>)
 8002448:	220a      	movs	r2, #10
 800244a:	e039      	b.n	80024c0 <_printf_i+0xd8>
 800244c:	2973      	cmp	r1, #115	; 0x73
 800244e:	f000 809d 	beq.w	800258c <_printf_i+0x1a4>
 8002452:	d808      	bhi.n	8002466 <_printf_i+0x7e>
 8002454:	296f      	cmp	r1, #111	; 0x6f
 8002456:	d020      	beq.n	800249a <_printf_i+0xb2>
 8002458:	2970      	cmp	r1, #112	; 0x70
 800245a:	d1dd      	bne.n	8002418 <_printf_i+0x30>
 800245c:	6823      	ldr	r3, [r4, #0]
 800245e:	f043 0320 	orr.w	r3, r3, #32
 8002462:	6023      	str	r3, [r4, #0]
 8002464:	e003      	b.n	800246e <_printf_i+0x86>
 8002466:	2975      	cmp	r1, #117	; 0x75
 8002468:	d017      	beq.n	800249a <_printf_i+0xb2>
 800246a:	2978      	cmp	r1, #120	; 0x78
 800246c:	d1d4      	bne.n	8002418 <_printf_i+0x30>
 800246e:	2378      	movs	r3, #120	; 0x78
 8002470:	4865      	ldr	r0, [pc, #404]	; (8002608 <_printf_i+0x220>)
 8002472:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002476:	e055      	b.n	8002524 <_printf_i+0x13c>
 8002478:	6813      	ldr	r3, [r2, #0]
 800247a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800247e:	1d19      	adds	r1, r3, #4
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	6011      	str	r1, [r2, #0]
 8002484:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002488:	2301      	movs	r3, #1
 800248a:	e08c      	b.n	80025a6 <_printf_i+0x1be>
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002492:	6011      	str	r1, [r2, #0]
 8002494:	bf18      	it	ne
 8002496:	b21b      	sxthne	r3, r3
 8002498:	e7cf      	b.n	800243a <_printf_i+0x52>
 800249a:	6813      	ldr	r3, [r2, #0]
 800249c:	6825      	ldr	r5, [r4, #0]
 800249e:	1d18      	adds	r0, r3, #4
 80024a0:	6010      	str	r0, [r2, #0]
 80024a2:	0628      	lsls	r0, r5, #24
 80024a4:	d501      	bpl.n	80024aa <_printf_i+0xc2>
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	e002      	b.n	80024b0 <_printf_i+0xc8>
 80024aa:	0668      	lsls	r0, r5, #25
 80024ac:	d5fb      	bpl.n	80024a6 <_printf_i+0xbe>
 80024ae:	881b      	ldrh	r3, [r3, #0]
 80024b0:	296f      	cmp	r1, #111	; 0x6f
 80024b2:	bf14      	ite	ne
 80024b4:	220a      	movne	r2, #10
 80024b6:	2208      	moveq	r2, #8
 80024b8:	4852      	ldr	r0, [pc, #328]	; (8002604 <_printf_i+0x21c>)
 80024ba:	2100      	movs	r1, #0
 80024bc:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80024c0:	6865      	ldr	r5, [r4, #4]
 80024c2:	2d00      	cmp	r5, #0
 80024c4:	60a5      	str	r5, [r4, #8]
 80024c6:	f2c0 8095 	blt.w	80025f4 <_printf_i+0x20c>
 80024ca:	6821      	ldr	r1, [r4, #0]
 80024cc:	f021 0104 	bic.w	r1, r1, #4
 80024d0:	6021      	str	r1, [r4, #0]
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d13d      	bne.n	8002552 <_printf_i+0x16a>
 80024d6:	2d00      	cmp	r5, #0
 80024d8:	f040 808e 	bne.w	80025f8 <_printf_i+0x210>
 80024dc:	4665      	mov	r5, ip
 80024de:	2a08      	cmp	r2, #8
 80024e0:	d10b      	bne.n	80024fa <_printf_i+0x112>
 80024e2:	6823      	ldr	r3, [r4, #0]
 80024e4:	07db      	lsls	r3, r3, #31
 80024e6:	d508      	bpl.n	80024fa <_printf_i+0x112>
 80024e8:	6923      	ldr	r3, [r4, #16]
 80024ea:	6862      	ldr	r2, [r4, #4]
 80024ec:	429a      	cmp	r2, r3
 80024ee:	bfde      	ittt	le
 80024f0:	2330      	movle	r3, #48	; 0x30
 80024f2:	f805 3c01 	strble.w	r3, [r5, #-1]
 80024f6:	f105 35ff 	addle.w	r5, r5, #4294967295
 80024fa:	ebac 0305 	sub.w	r3, ip, r5
 80024fe:	6123      	str	r3, [r4, #16]
 8002500:	f8cd 8000 	str.w	r8, [sp]
 8002504:	463b      	mov	r3, r7
 8002506:	aa03      	add	r2, sp, #12
 8002508:	4621      	mov	r1, r4
 800250a:	4630      	mov	r0, r6
 800250c:	f7ff fef6 	bl	80022fc <_printf_common>
 8002510:	3001      	adds	r0, #1
 8002512:	d14d      	bne.n	80025b0 <_printf_i+0x1c8>
 8002514:	f04f 30ff 	mov.w	r0, #4294967295
 8002518:	b005      	add	sp, #20
 800251a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800251e:	4839      	ldr	r0, [pc, #228]	; (8002604 <_printf_i+0x21c>)
 8002520:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8002524:	6813      	ldr	r3, [r2, #0]
 8002526:	6821      	ldr	r1, [r4, #0]
 8002528:	1d1d      	adds	r5, r3, #4
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	6015      	str	r5, [r2, #0]
 800252e:	060a      	lsls	r2, r1, #24
 8002530:	d50b      	bpl.n	800254a <_printf_i+0x162>
 8002532:	07ca      	lsls	r2, r1, #31
 8002534:	bf44      	itt	mi
 8002536:	f041 0120 	orrmi.w	r1, r1, #32
 800253a:	6021      	strmi	r1, [r4, #0]
 800253c:	b91b      	cbnz	r3, 8002546 <_printf_i+0x15e>
 800253e:	6822      	ldr	r2, [r4, #0]
 8002540:	f022 0220 	bic.w	r2, r2, #32
 8002544:	6022      	str	r2, [r4, #0]
 8002546:	2210      	movs	r2, #16
 8002548:	e7b7      	b.n	80024ba <_printf_i+0xd2>
 800254a:	064d      	lsls	r5, r1, #25
 800254c:	bf48      	it	mi
 800254e:	b29b      	uxthmi	r3, r3
 8002550:	e7ef      	b.n	8002532 <_printf_i+0x14a>
 8002552:	4665      	mov	r5, ip
 8002554:	fbb3 f1f2 	udiv	r1, r3, r2
 8002558:	fb02 3311 	mls	r3, r2, r1, r3
 800255c:	5cc3      	ldrb	r3, [r0, r3]
 800255e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8002562:	460b      	mov	r3, r1
 8002564:	2900      	cmp	r1, #0
 8002566:	d1f5      	bne.n	8002554 <_printf_i+0x16c>
 8002568:	e7b9      	b.n	80024de <_printf_i+0xf6>
 800256a:	6813      	ldr	r3, [r2, #0]
 800256c:	6825      	ldr	r5, [r4, #0]
 800256e:	1d18      	adds	r0, r3, #4
 8002570:	6961      	ldr	r1, [r4, #20]
 8002572:	6010      	str	r0, [r2, #0]
 8002574:	0628      	lsls	r0, r5, #24
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	d501      	bpl.n	800257e <_printf_i+0x196>
 800257a:	6019      	str	r1, [r3, #0]
 800257c:	e002      	b.n	8002584 <_printf_i+0x19c>
 800257e:	066a      	lsls	r2, r5, #25
 8002580:	d5fb      	bpl.n	800257a <_printf_i+0x192>
 8002582:	8019      	strh	r1, [r3, #0]
 8002584:	2300      	movs	r3, #0
 8002586:	4665      	mov	r5, ip
 8002588:	6123      	str	r3, [r4, #16]
 800258a:	e7b9      	b.n	8002500 <_printf_i+0x118>
 800258c:	6813      	ldr	r3, [r2, #0]
 800258e:	1d19      	adds	r1, r3, #4
 8002590:	6011      	str	r1, [r2, #0]
 8002592:	681d      	ldr	r5, [r3, #0]
 8002594:	6862      	ldr	r2, [r4, #4]
 8002596:	2100      	movs	r1, #0
 8002598:	4628      	mov	r0, r5
 800259a:	f002 fa93 	bl	8004ac4 <memchr>
 800259e:	b108      	cbz	r0, 80025a4 <_printf_i+0x1bc>
 80025a0:	1b40      	subs	r0, r0, r5
 80025a2:	6060      	str	r0, [r4, #4]
 80025a4:	6863      	ldr	r3, [r4, #4]
 80025a6:	6123      	str	r3, [r4, #16]
 80025a8:	2300      	movs	r3, #0
 80025aa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80025ae:	e7a7      	b.n	8002500 <_printf_i+0x118>
 80025b0:	6923      	ldr	r3, [r4, #16]
 80025b2:	462a      	mov	r2, r5
 80025b4:	4639      	mov	r1, r7
 80025b6:	4630      	mov	r0, r6
 80025b8:	47c0      	blx	r8
 80025ba:	3001      	adds	r0, #1
 80025bc:	d0aa      	beq.n	8002514 <_printf_i+0x12c>
 80025be:	6823      	ldr	r3, [r4, #0]
 80025c0:	079b      	lsls	r3, r3, #30
 80025c2:	d413      	bmi.n	80025ec <_printf_i+0x204>
 80025c4:	68e0      	ldr	r0, [r4, #12]
 80025c6:	9b03      	ldr	r3, [sp, #12]
 80025c8:	4298      	cmp	r0, r3
 80025ca:	bfb8      	it	lt
 80025cc:	4618      	movlt	r0, r3
 80025ce:	e7a3      	b.n	8002518 <_printf_i+0x130>
 80025d0:	2301      	movs	r3, #1
 80025d2:	464a      	mov	r2, r9
 80025d4:	4639      	mov	r1, r7
 80025d6:	4630      	mov	r0, r6
 80025d8:	47c0      	blx	r8
 80025da:	3001      	adds	r0, #1
 80025dc:	d09a      	beq.n	8002514 <_printf_i+0x12c>
 80025de:	3501      	adds	r5, #1
 80025e0:	68e3      	ldr	r3, [r4, #12]
 80025e2:	9a03      	ldr	r2, [sp, #12]
 80025e4:	1a9b      	subs	r3, r3, r2
 80025e6:	42ab      	cmp	r3, r5
 80025e8:	dcf2      	bgt.n	80025d0 <_printf_i+0x1e8>
 80025ea:	e7eb      	b.n	80025c4 <_printf_i+0x1dc>
 80025ec:	2500      	movs	r5, #0
 80025ee:	f104 0919 	add.w	r9, r4, #25
 80025f2:	e7f5      	b.n	80025e0 <_printf_i+0x1f8>
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d1ac      	bne.n	8002552 <_printf_i+0x16a>
 80025f8:	7803      	ldrb	r3, [r0, #0]
 80025fa:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80025fe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002602:	e76c      	b.n	80024de <_printf_i+0xf6>
 8002604:	08005886 	.word	0x08005886
 8002608:	08005897 	.word	0x08005897

0800260c <_scanf_float>:
 800260c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002610:	469a      	mov	sl, r3
 8002612:	688b      	ldr	r3, [r1, #8]
 8002614:	4616      	mov	r6, r2
 8002616:	1e5a      	subs	r2, r3, #1
 8002618:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800261c:	bf88      	it	hi
 800261e:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 8002622:	b087      	sub	sp, #28
 8002624:	bf85      	ittet	hi
 8002626:	189b      	addhi	r3, r3, r2
 8002628:	9301      	strhi	r3, [sp, #4]
 800262a:	2300      	movls	r3, #0
 800262c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002630:	4688      	mov	r8, r1
 8002632:	f04f 0b00 	mov.w	fp, #0
 8002636:	bf8c      	ite	hi
 8002638:	608b      	strhi	r3, [r1, #8]
 800263a:	9301      	strls	r3, [sp, #4]
 800263c:	680b      	ldr	r3, [r1, #0]
 800263e:	4607      	mov	r7, r0
 8002640:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002644:	f848 3b1c 	str.w	r3, [r8], #28
 8002648:	460c      	mov	r4, r1
 800264a:	4645      	mov	r5, r8
 800264c:	465a      	mov	r2, fp
 800264e:	46d9      	mov	r9, fp
 8002650:	e9cd bb03 	strd	fp, fp, [sp, #12]
 8002654:	f8cd b008 	str.w	fp, [sp, #8]
 8002658:	68a1      	ldr	r1, [r4, #8]
 800265a:	b181      	cbz	r1, 800267e <_scanf_float+0x72>
 800265c:	6833      	ldr	r3, [r6, #0]
 800265e:	781b      	ldrb	r3, [r3, #0]
 8002660:	2b49      	cmp	r3, #73	; 0x49
 8002662:	d071      	beq.n	8002748 <_scanf_float+0x13c>
 8002664:	d84d      	bhi.n	8002702 <_scanf_float+0xf6>
 8002666:	2b39      	cmp	r3, #57	; 0x39
 8002668:	d840      	bhi.n	80026ec <_scanf_float+0xe0>
 800266a:	2b31      	cmp	r3, #49	; 0x31
 800266c:	f080 8088 	bcs.w	8002780 <_scanf_float+0x174>
 8002670:	2b2d      	cmp	r3, #45	; 0x2d
 8002672:	f000 8090 	beq.w	8002796 <_scanf_float+0x18a>
 8002676:	d815      	bhi.n	80026a4 <_scanf_float+0x98>
 8002678:	2b2b      	cmp	r3, #43	; 0x2b
 800267a:	f000 808c 	beq.w	8002796 <_scanf_float+0x18a>
 800267e:	f1b9 0f00 	cmp.w	r9, #0
 8002682:	d003      	beq.n	800268c <_scanf_float+0x80>
 8002684:	6823      	ldr	r3, [r4, #0]
 8002686:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800268a:	6023      	str	r3, [r4, #0]
 800268c:	3a01      	subs	r2, #1
 800268e:	2a01      	cmp	r2, #1
 8002690:	f200 80ea 	bhi.w	8002868 <_scanf_float+0x25c>
 8002694:	4545      	cmp	r5, r8
 8002696:	f200 80dc 	bhi.w	8002852 <_scanf_float+0x246>
 800269a:	2601      	movs	r6, #1
 800269c:	4630      	mov	r0, r6
 800269e:	b007      	add	sp, #28
 80026a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026a4:	2b2e      	cmp	r3, #46	; 0x2e
 80026a6:	f000 809f 	beq.w	80027e8 <_scanf_float+0x1dc>
 80026aa:	2b30      	cmp	r3, #48	; 0x30
 80026ac:	d1e7      	bne.n	800267e <_scanf_float+0x72>
 80026ae:	6820      	ldr	r0, [r4, #0]
 80026b0:	f410 7f80 	tst.w	r0, #256	; 0x100
 80026b4:	d064      	beq.n	8002780 <_scanf_float+0x174>
 80026b6:	9b01      	ldr	r3, [sp, #4]
 80026b8:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 80026bc:	6020      	str	r0, [r4, #0]
 80026be:	f109 0901 	add.w	r9, r9, #1
 80026c2:	b11b      	cbz	r3, 80026cc <_scanf_float+0xc0>
 80026c4:	3b01      	subs	r3, #1
 80026c6:	3101      	adds	r1, #1
 80026c8:	9301      	str	r3, [sp, #4]
 80026ca:	60a1      	str	r1, [r4, #8]
 80026cc:	68a3      	ldr	r3, [r4, #8]
 80026ce:	3b01      	subs	r3, #1
 80026d0:	60a3      	str	r3, [r4, #8]
 80026d2:	6923      	ldr	r3, [r4, #16]
 80026d4:	3301      	adds	r3, #1
 80026d6:	6123      	str	r3, [r4, #16]
 80026d8:	6873      	ldr	r3, [r6, #4]
 80026da:	3b01      	subs	r3, #1
 80026dc:	2b00      	cmp	r3, #0
 80026de:	6073      	str	r3, [r6, #4]
 80026e0:	f340 80ac 	ble.w	800283c <_scanf_float+0x230>
 80026e4:	6833      	ldr	r3, [r6, #0]
 80026e6:	3301      	adds	r3, #1
 80026e8:	6033      	str	r3, [r6, #0]
 80026ea:	e7b5      	b.n	8002658 <_scanf_float+0x4c>
 80026ec:	2b45      	cmp	r3, #69	; 0x45
 80026ee:	f000 8085 	beq.w	80027fc <_scanf_float+0x1f0>
 80026f2:	2b46      	cmp	r3, #70	; 0x46
 80026f4:	d06a      	beq.n	80027cc <_scanf_float+0x1c0>
 80026f6:	2b41      	cmp	r3, #65	; 0x41
 80026f8:	d1c1      	bne.n	800267e <_scanf_float+0x72>
 80026fa:	2a01      	cmp	r2, #1
 80026fc:	d1bf      	bne.n	800267e <_scanf_float+0x72>
 80026fe:	2202      	movs	r2, #2
 8002700:	e046      	b.n	8002790 <_scanf_float+0x184>
 8002702:	2b65      	cmp	r3, #101	; 0x65
 8002704:	d07a      	beq.n	80027fc <_scanf_float+0x1f0>
 8002706:	d818      	bhi.n	800273a <_scanf_float+0x12e>
 8002708:	2b54      	cmp	r3, #84	; 0x54
 800270a:	d066      	beq.n	80027da <_scanf_float+0x1ce>
 800270c:	d811      	bhi.n	8002732 <_scanf_float+0x126>
 800270e:	2b4e      	cmp	r3, #78	; 0x4e
 8002710:	d1b5      	bne.n	800267e <_scanf_float+0x72>
 8002712:	2a00      	cmp	r2, #0
 8002714:	d146      	bne.n	80027a4 <_scanf_float+0x198>
 8002716:	f1b9 0f00 	cmp.w	r9, #0
 800271a:	d145      	bne.n	80027a8 <_scanf_float+0x19c>
 800271c:	6821      	ldr	r1, [r4, #0]
 800271e:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002722:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002726:	d13f      	bne.n	80027a8 <_scanf_float+0x19c>
 8002728:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 800272c:	6021      	str	r1, [r4, #0]
 800272e:	2201      	movs	r2, #1
 8002730:	e02e      	b.n	8002790 <_scanf_float+0x184>
 8002732:	2b59      	cmp	r3, #89	; 0x59
 8002734:	d01e      	beq.n	8002774 <_scanf_float+0x168>
 8002736:	2b61      	cmp	r3, #97	; 0x61
 8002738:	e7de      	b.n	80026f8 <_scanf_float+0xec>
 800273a:	2b6e      	cmp	r3, #110	; 0x6e
 800273c:	d0e9      	beq.n	8002712 <_scanf_float+0x106>
 800273e:	d815      	bhi.n	800276c <_scanf_float+0x160>
 8002740:	2b66      	cmp	r3, #102	; 0x66
 8002742:	d043      	beq.n	80027cc <_scanf_float+0x1c0>
 8002744:	2b69      	cmp	r3, #105	; 0x69
 8002746:	d19a      	bne.n	800267e <_scanf_float+0x72>
 8002748:	f1bb 0f00 	cmp.w	fp, #0
 800274c:	d138      	bne.n	80027c0 <_scanf_float+0x1b4>
 800274e:	f1b9 0f00 	cmp.w	r9, #0
 8002752:	d197      	bne.n	8002684 <_scanf_float+0x78>
 8002754:	6821      	ldr	r1, [r4, #0]
 8002756:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 800275a:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 800275e:	d195      	bne.n	800268c <_scanf_float+0x80>
 8002760:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002764:	6021      	str	r1, [r4, #0]
 8002766:	f04f 0b01 	mov.w	fp, #1
 800276a:	e011      	b.n	8002790 <_scanf_float+0x184>
 800276c:	2b74      	cmp	r3, #116	; 0x74
 800276e:	d034      	beq.n	80027da <_scanf_float+0x1ce>
 8002770:	2b79      	cmp	r3, #121	; 0x79
 8002772:	d184      	bne.n	800267e <_scanf_float+0x72>
 8002774:	f1bb 0f07 	cmp.w	fp, #7
 8002778:	d181      	bne.n	800267e <_scanf_float+0x72>
 800277a:	f04f 0b08 	mov.w	fp, #8
 800277e:	e007      	b.n	8002790 <_scanf_float+0x184>
 8002780:	eb12 0f0b 	cmn.w	r2, fp
 8002784:	f47f af7b 	bne.w	800267e <_scanf_float+0x72>
 8002788:	6821      	ldr	r1, [r4, #0]
 800278a:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 800278e:	6021      	str	r1, [r4, #0]
 8002790:	702b      	strb	r3, [r5, #0]
 8002792:	3501      	adds	r5, #1
 8002794:	e79a      	b.n	80026cc <_scanf_float+0xc0>
 8002796:	6821      	ldr	r1, [r4, #0]
 8002798:	0608      	lsls	r0, r1, #24
 800279a:	f57f af70 	bpl.w	800267e <_scanf_float+0x72>
 800279e:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80027a2:	e7f4      	b.n	800278e <_scanf_float+0x182>
 80027a4:	2a02      	cmp	r2, #2
 80027a6:	d047      	beq.n	8002838 <_scanf_float+0x22c>
 80027a8:	f1bb 0f01 	cmp.w	fp, #1
 80027ac:	d003      	beq.n	80027b6 <_scanf_float+0x1aa>
 80027ae:	f1bb 0f04 	cmp.w	fp, #4
 80027b2:	f47f af64 	bne.w	800267e <_scanf_float+0x72>
 80027b6:	f10b 0b01 	add.w	fp, fp, #1
 80027ba:	fa5f fb8b 	uxtb.w	fp, fp
 80027be:	e7e7      	b.n	8002790 <_scanf_float+0x184>
 80027c0:	f1bb 0f03 	cmp.w	fp, #3
 80027c4:	d0f7      	beq.n	80027b6 <_scanf_float+0x1aa>
 80027c6:	f1bb 0f05 	cmp.w	fp, #5
 80027ca:	e7f2      	b.n	80027b2 <_scanf_float+0x1a6>
 80027cc:	f1bb 0f02 	cmp.w	fp, #2
 80027d0:	f47f af55 	bne.w	800267e <_scanf_float+0x72>
 80027d4:	f04f 0b03 	mov.w	fp, #3
 80027d8:	e7da      	b.n	8002790 <_scanf_float+0x184>
 80027da:	f1bb 0f06 	cmp.w	fp, #6
 80027de:	f47f af4e 	bne.w	800267e <_scanf_float+0x72>
 80027e2:	f04f 0b07 	mov.w	fp, #7
 80027e6:	e7d3      	b.n	8002790 <_scanf_float+0x184>
 80027e8:	6821      	ldr	r1, [r4, #0]
 80027ea:	0588      	lsls	r0, r1, #22
 80027ec:	f57f af47 	bpl.w	800267e <_scanf_float+0x72>
 80027f0:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 80027f4:	6021      	str	r1, [r4, #0]
 80027f6:	f8cd 9008 	str.w	r9, [sp, #8]
 80027fa:	e7c9      	b.n	8002790 <_scanf_float+0x184>
 80027fc:	6821      	ldr	r1, [r4, #0]
 80027fe:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 8002802:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002806:	d006      	beq.n	8002816 <_scanf_float+0x20a>
 8002808:	0548      	lsls	r0, r1, #21
 800280a:	f57f af38 	bpl.w	800267e <_scanf_float+0x72>
 800280e:	f1b9 0f00 	cmp.w	r9, #0
 8002812:	f43f af3b 	beq.w	800268c <_scanf_float+0x80>
 8002816:	0588      	lsls	r0, r1, #22
 8002818:	bf58      	it	pl
 800281a:	9802      	ldrpl	r0, [sp, #8]
 800281c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002820:	bf58      	it	pl
 8002822:	eba9 0000 	subpl.w	r0, r9, r0
 8002826:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 800282a:	bf58      	it	pl
 800282c:	e9cd 0503 	strdpl	r0, r5, [sp, #12]
 8002830:	6021      	str	r1, [r4, #0]
 8002832:	f04f 0900 	mov.w	r9, #0
 8002836:	e7ab      	b.n	8002790 <_scanf_float+0x184>
 8002838:	2203      	movs	r2, #3
 800283a:	e7a9      	b.n	8002790 <_scanf_float+0x184>
 800283c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002840:	4631      	mov	r1, r6
 8002842:	4638      	mov	r0, r7
 8002844:	9205      	str	r2, [sp, #20]
 8002846:	4798      	blx	r3
 8002848:	9a05      	ldr	r2, [sp, #20]
 800284a:	2800      	cmp	r0, #0
 800284c:	f43f af04 	beq.w	8002658 <_scanf_float+0x4c>
 8002850:	e715      	b.n	800267e <_scanf_float+0x72>
 8002852:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002856:	4632      	mov	r2, r6
 8002858:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 800285c:	4638      	mov	r0, r7
 800285e:	4798      	blx	r3
 8002860:	6923      	ldr	r3, [r4, #16]
 8002862:	3b01      	subs	r3, #1
 8002864:	6123      	str	r3, [r4, #16]
 8002866:	e715      	b.n	8002694 <_scanf_float+0x88>
 8002868:	f10b 33ff 	add.w	r3, fp, #4294967295
 800286c:	2b06      	cmp	r3, #6
 800286e:	d80a      	bhi.n	8002886 <_scanf_float+0x27a>
 8002870:	f1bb 0f02 	cmp.w	fp, #2
 8002874:	d967      	bls.n	8002946 <_scanf_float+0x33a>
 8002876:	f1ab 0b03 	sub.w	fp, fp, #3
 800287a:	fa5f fb8b 	uxtb.w	fp, fp
 800287e:	eba5 0b0b 	sub.w	fp, r5, fp
 8002882:	455d      	cmp	r5, fp
 8002884:	d14a      	bne.n	800291c <_scanf_float+0x310>
 8002886:	6823      	ldr	r3, [r4, #0]
 8002888:	05da      	lsls	r2, r3, #23
 800288a:	d51f      	bpl.n	80028cc <_scanf_float+0x2c0>
 800288c:	055b      	lsls	r3, r3, #21
 800288e:	d467      	bmi.n	8002960 <_scanf_float+0x354>
 8002890:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8002894:	6923      	ldr	r3, [r4, #16]
 8002896:	2965      	cmp	r1, #101	; 0x65
 8002898:	f103 33ff 	add.w	r3, r3, #4294967295
 800289c:	f105 3bff 	add.w	fp, r5, #4294967295
 80028a0:	6123      	str	r3, [r4, #16]
 80028a2:	d00d      	beq.n	80028c0 <_scanf_float+0x2b4>
 80028a4:	2945      	cmp	r1, #69	; 0x45
 80028a6:	d00b      	beq.n	80028c0 <_scanf_float+0x2b4>
 80028a8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80028ac:	4632      	mov	r2, r6
 80028ae:	4638      	mov	r0, r7
 80028b0:	4798      	blx	r3
 80028b2:	6923      	ldr	r3, [r4, #16]
 80028b4:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 80028b8:	3b01      	subs	r3, #1
 80028ba:	f1a5 0b02 	sub.w	fp, r5, #2
 80028be:	6123      	str	r3, [r4, #16]
 80028c0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80028c4:	4632      	mov	r2, r6
 80028c6:	4638      	mov	r0, r7
 80028c8:	4798      	blx	r3
 80028ca:	465d      	mov	r5, fp
 80028cc:	6826      	ldr	r6, [r4, #0]
 80028ce:	f016 0610 	ands.w	r6, r6, #16
 80028d2:	d176      	bne.n	80029c2 <_scanf_float+0x3b6>
 80028d4:	702e      	strb	r6, [r5, #0]
 80028d6:	6823      	ldr	r3, [r4, #0]
 80028d8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80028dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80028e0:	d141      	bne.n	8002966 <_scanf_float+0x35a>
 80028e2:	9b02      	ldr	r3, [sp, #8]
 80028e4:	eba9 0303 	sub.w	r3, r9, r3
 80028e8:	425a      	negs	r2, r3
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d148      	bne.n	8002980 <_scanf_float+0x374>
 80028ee:	4641      	mov	r1, r8
 80028f0:	2200      	movs	r2, #0
 80028f2:	4638      	mov	r0, r7
 80028f4:	f000 feb0 	bl	8003658 <_strtod_r>
 80028f8:	6825      	ldr	r5, [r4, #0]
 80028fa:	4680      	mov	r8, r0
 80028fc:	f015 0f02 	tst.w	r5, #2
 8002900:	4689      	mov	r9, r1
 8002902:	f8da 3000 	ldr.w	r3, [sl]
 8002906:	d046      	beq.n	8002996 <_scanf_float+0x38a>
 8002908:	1d1a      	adds	r2, r3, #4
 800290a:	f8ca 2000 	str.w	r2, [sl]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	e9c3 8900 	strd	r8, r9, [r3]
 8002914:	68e3      	ldr	r3, [r4, #12]
 8002916:	3301      	adds	r3, #1
 8002918:	60e3      	str	r3, [r4, #12]
 800291a:	e6bf      	b.n	800269c <_scanf_float+0x90>
 800291c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002920:	4632      	mov	r2, r6
 8002922:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002926:	4638      	mov	r0, r7
 8002928:	4798      	blx	r3
 800292a:	6923      	ldr	r3, [r4, #16]
 800292c:	3b01      	subs	r3, #1
 800292e:	6123      	str	r3, [r4, #16]
 8002930:	e7a7      	b.n	8002882 <_scanf_float+0x276>
 8002932:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002936:	4632      	mov	r2, r6
 8002938:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 800293c:	4638      	mov	r0, r7
 800293e:	4798      	blx	r3
 8002940:	6923      	ldr	r3, [r4, #16]
 8002942:	3b01      	subs	r3, #1
 8002944:	6123      	str	r3, [r4, #16]
 8002946:	4545      	cmp	r5, r8
 8002948:	d8f3      	bhi.n	8002932 <_scanf_float+0x326>
 800294a:	e6a6      	b.n	800269a <_scanf_float+0x8e>
 800294c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002950:	4632      	mov	r2, r6
 8002952:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002956:	4638      	mov	r0, r7
 8002958:	4798      	blx	r3
 800295a:	6923      	ldr	r3, [r4, #16]
 800295c:	3b01      	subs	r3, #1
 800295e:	6123      	str	r3, [r4, #16]
 8002960:	4545      	cmp	r5, r8
 8002962:	d8f3      	bhi.n	800294c <_scanf_float+0x340>
 8002964:	e699      	b.n	800269a <_scanf_float+0x8e>
 8002966:	9b03      	ldr	r3, [sp, #12]
 8002968:	2b00      	cmp	r3, #0
 800296a:	d0c0      	beq.n	80028ee <_scanf_float+0x2e2>
 800296c:	9904      	ldr	r1, [sp, #16]
 800296e:	230a      	movs	r3, #10
 8002970:	4632      	mov	r2, r6
 8002972:	3101      	adds	r1, #1
 8002974:	4638      	mov	r0, r7
 8002976:	f000 fefb 	bl	8003770 <_strtol_r>
 800297a:	9b03      	ldr	r3, [sp, #12]
 800297c:	9d04      	ldr	r5, [sp, #16]
 800297e:	1ac2      	subs	r2, r0, r3
 8002980:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002984:	429d      	cmp	r5, r3
 8002986:	bf28      	it	cs
 8002988:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 800298c:	490e      	ldr	r1, [pc, #56]	; (80029c8 <_scanf_float+0x3bc>)
 800298e:	4628      	mov	r0, r5
 8002990:	f000 f820 	bl	80029d4 <siprintf>
 8002994:	e7ab      	b.n	80028ee <_scanf_float+0x2e2>
 8002996:	1d1f      	adds	r7, r3, #4
 8002998:	f015 0504 	ands.w	r5, r5, #4
 800299c:	f8ca 7000 	str.w	r7, [sl]
 80029a0:	d1b5      	bne.n	800290e <_scanf_float+0x302>
 80029a2:	681f      	ldr	r7, [r3, #0]
 80029a4:	4602      	mov	r2, r0
 80029a6:	460b      	mov	r3, r1
 80029a8:	f7fe f840 	bl	8000a2c <__aeabi_dcmpun>
 80029ac:	b120      	cbz	r0, 80029b8 <_scanf_float+0x3ac>
 80029ae:	4628      	mov	r0, r5
 80029b0:	f000 f80c 	bl	80029cc <nanf>
 80029b4:	6038      	str	r0, [r7, #0]
 80029b6:	e7ad      	b.n	8002914 <_scanf_float+0x308>
 80029b8:	4640      	mov	r0, r8
 80029ba:	4649      	mov	r1, r9
 80029bc:	f7fe f894 	bl	8000ae8 <__aeabi_d2f>
 80029c0:	e7f8      	b.n	80029b4 <_scanf_float+0x3a8>
 80029c2:	2600      	movs	r6, #0
 80029c4:	e66a      	b.n	800269c <_scanf_float+0x90>
 80029c6:	bf00      	nop
 80029c8:	080058a8 	.word	0x080058a8

080029cc <nanf>:
 80029cc:	4800      	ldr	r0, [pc, #0]	; (80029d0 <nanf+0x4>)
 80029ce:	4770      	bx	lr
 80029d0:	7fc00000 	.word	0x7fc00000

080029d4 <siprintf>:
 80029d4:	b40e      	push	{r1, r2, r3}
 80029d6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80029da:	b500      	push	{lr}
 80029dc:	b09c      	sub	sp, #112	; 0x70
 80029de:	ab1d      	add	r3, sp, #116	; 0x74
 80029e0:	9002      	str	r0, [sp, #8]
 80029e2:	9006      	str	r0, [sp, #24]
 80029e4:	9107      	str	r1, [sp, #28]
 80029e6:	9104      	str	r1, [sp, #16]
 80029e8:	4808      	ldr	r0, [pc, #32]	; (8002a0c <siprintf+0x38>)
 80029ea:	4909      	ldr	r1, [pc, #36]	; (8002a10 <siprintf+0x3c>)
 80029ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80029f0:	9105      	str	r1, [sp, #20]
 80029f2:	6800      	ldr	r0, [r0, #0]
 80029f4:	a902      	add	r1, sp, #8
 80029f6:	9301      	str	r3, [sp, #4]
 80029f8:	f002 fd84 	bl	8005504 <_svfiprintf_r>
 80029fc:	2200      	movs	r2, #0
 80029fe:	9b02      	ldr	r3, [sp, #8]
 8002a00:	701a      	strb	r2, [r3, #0]
 8002a02:	b01c      	add	sp, #112	; 0x70
 8002a04:	f85d eb04 	ldr.w	lr, [sp], #4
 8002a08:	b003      	add	sp, #12
 8002a0a:	4770      	bx	lr
 8002a0c:	20000004 	.word	0x20000004
 8002a10:	ffff0208 	.word	0xffff0208

08002a14 <sulp>:
 8002a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a18:	460f      	mov	r7, r1
 8002a1a:	4690      	mov	r8, r2
 8002a1c:	f002 fb36 	bl	800508c <__ulp>
 8002a20:	4604      	mov	r4, r0
 8002a22:	460d      	mov	r5, r1
 8002a24:	f1b8 0f00 	cmp.w	r8, #0
 8002a28:	d011      	beq.n	8002a4e <sulp+0x3a>
 8002a2a:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002a2e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002a32:	2b00      	cmp	r3, #0
 8002a34:	dd0b      	ble.n	8002a4e <sulp+0x3a>
 8002a36:	2400      	movs	r4, #0
 8002a38:	051b      	lsls	r3, r3, #20
 8002a3a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002a3e:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002a42:	4622      	mov	r2, r4
 8002a44:	462b      	mov	r3, r5
 8002a46:	f7fd fd57 	bl	80004f8 <__aeabi_dmul>
 8002a4a:	4604      	mov	r4, r0
 8002a4c:	460d      	mov	r5, r1
 8002a4e:	4620      	mov	r0, r4
 8002a50:	4629      	mov	r1, r5
 8002a52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08002a58 <_strtod_l>:
 8002a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a5c:	461f      	mov	r7, r3
 8002a5e:	2300      	movs	r3, #0
 8002a60:	b0a1      	sub	sp, #132	; 0x84
 8002a62:	4683      	mov	fp, r0
 8002a64:	4638      	mov	r0, r7
 8002a66:	460e      	mov	r6, r1
 8002a68:	9217      	str	r2, [sp, #92]	; 0x5c
 8002a6a:	931c      	str	r3, [sp, #112]	; 0x70
 8002a6c:	f001 ffff 	bl	8004a6e <__localeconv_l>
 8002a70:	4680      	mov	r8, r0
 8002a72:	6800      	ldr	r0, [r0, #0]
 8002a74:	f7fd fb7c 	bl	8000170 <strlen>
 8002a78:	f04f 0900 	mov.w	r9, #0
 8002a7c:	4604      	mov	r4, r0
 8002a7e:	f04f 0a00 	mov.w	sl, #0
 8002a82:	961b      	str	r6, [sp, #108]	; 0x6c
 8002a84:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002a86:	781a      	ldrb	r2, [r3, #0]
 8002a88:	2a0d      	cmp	r2, #13
 8002a8a:	d832      	bhi.n	8002af2 <_strtod_l+0x9a>
 8002a8c:	2a09      	cmp	r2, #9
 8002a8e:	d236      	bcs.n	8002afe <_strtod_l+0xa6>
 8002a90:	2a00      	cmp	r2, #0
 8002a92:	d03e      	beq.n	8002b12 <_strtod_l+0xba>
 8002a94:	2300      	movs	r3, #0
 8002a96:	930d      	str	r3, [sp, #52]	; 0x34
 8002a98:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8002a9a:	782b      	ldrb	r3, [r5, #0]
 8002a9c:	2b30      	cmp	r3, #48	; 0x30
 8002a9e:	f040 80ac 	bne.w	8002bfa <_strtod_l+0x1a2>
 8002aa2:	786b      	ldrb	r3, [r5, #1]
 8002aa4:	2b58      	cmp	r3, #88	; 0x58
 8002aa6:	d001      	beq.n	8002aac <_strtod_l+0x54>
 8002aa8:	2b78      	cmp	r3, #120	; 0x78
 8002aaa:	d167      	bne.n	8002b7c <_strtod_l+0x124>
 8002aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002aae:	9702      	str	r7, [sp, #8]
 8002ab0:	9301      	str	r3, [sp, #4]
 8002ab2:	ab1c      	add	r3, sp, #112	; 0x70
 8002ab4:	9300      	str	r3, [sp, #0]
 8002ab6:	4a89      	ldr	r2, [pc, #548]	; (8002cdc <_strtod_l+0x284>)
 8002ab8:	ab1d      	add	r3, sp, #116	; 0x74
 8002aba:	a91b      	add	r1, sp, #108	; 0x6c
 8002abc:	4658      	mov	r0, fp
 8002abe:	f001 fcfb 	bl	80044b8 <__gethex>
 8002ac2:	f010 0407 	ands.w	r4, r0, #7
 8002ac6:	4606      	mov	r6, r0
 8002ac8:	d005      	beq.n	8002ad6 <_strtod_l+0x7e>
 8002aca:	2c06      	cmp	r4, #6
 8002acc:	d12b      	bne.n	8002b26 <_strtod_l+0xce>
 8002ace:	2300      	movs	r3, #0
 8002ad0:	3501      	adds	r5, #1
 8002ad2:	951b      	str	r5, [sp, #108]	; 0x6c
 8002ad4:	930d      	str	r3, [sp, #52]	; 0x34
 8002ad6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002ad8:	2b00      	cmp	r3, #0
 8002ada:	f040 85a6 	bne.w	800362a <_strtod_l+0xbd2>
 8002ade:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002ae0:	b1e3      	cbz	r3, 8002b1c <_strtod_l+0xc4>
 8002ae2:	464a      	mov	r2, r9
 8002ae4:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8002ae8:	4610      	mov	r0, r2
 8002aea:	4619      	mov	r1, r3
 8002aec:	b021      	add	sp, #132	; 0x84
 8002aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002af2:	2a2b      	cmp	r2, #43	; 0x2b
 8002af4:	d015      	beq.n	8002b22 <_strtod_l+0xca>
 8002af6:	2a2d      	cmp	r2, #45	; 0x2d
 8002af8:	d004      	beq.n	8002b04 <_strtod_l+0xac>
 8002afa:	2a20      	cmp	r2, #32
 8002afc:	d1ca      	bne.n	8002a94 <_strtod_l+0x3c>
 8002afe:	3301      	adds	r3, #1
 8002b00:	931b      	str	r3, [sp, #108]	; 0x6c
 8002b02:	e7bf      	b.n	8002a84 <_strtod_l+0x2c>
 8002b04:	2201      	movs	r2, #1
 8002b06:	920d      	str	r2, [sp, #52]	; 0x34
 8002b08:	1c5a      	adds	r2, r3, #1
 8002b0a:	921b      	str	r2, [sp, #108]	; 0x6c
 8002b0c:	785b      	ldrb	r3, [r3, #1]
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d1c2      	bne.n	8002a98 <_strtod_l+0x40>
 8002b12:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002b14:	961b      	str	r6, [sp, #108]	; 0x6c
 8002b16:	2b00      	cmp	r3, #0
 8002b18:	f040 8585 	bne.w	8003626 <_strtod_l+0xbce>
 8002b1c:	464a      	mov	r2, r9
 8002b1e:	4653      	mov	r3, sl
 8002b20:	e7e2      	b.n	8002ae8 <_strtod_l+0x90>
 8002b22:	2200      	movs	r2, #0
 8002b24:	e7ef      	b.n	8002b06 <_strtod_l+0xae>
 8002b26:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8002b28:	b13a      	cbz	r2, 8002b3a <_strtod_l+0xe2>
 8002b2a:	2135      	movs	r1, #53	; 0x35
 8002b2c:	a81e      	add	r0, sp, #120	; 0x78
 8002b2e:	f002 fba0 	bl	8005272 <__copybits>
 8002b32:	991c      	ldr	r1, [sp, #112]	; 0x70
 8002b34:	4658      	mov	r0, fp
 8002b36:	f002 f812 	bl	8004b5e <_Bfree>
 8002b3a:	3c01      	subs	r4, #1
 8002b3c:	2c04      	cmp	r4, #4
 8002b3e:	d806      	bhi.n	8002b4e <_strtod_l+0xf6>
 8002b40:	e8df f004 	tbb	[pc, r4]
 8002b44:	1714030a 	.word	0x1714030a
 8002b48:	0a          	.byte	0x0a
 8002b49:	00          	.byte	0x00
 8002b4a:	e9dd 9a1e 	ldrd	r9, sl, [sp, #120]	; 0x78
 8002b4e:	0731      	lsls	r1, r6, #28
 8002b50:	d5c1      	bpl.n	8002ad6 <_strtod_l+0x7e>
 8002b52:	f04a 4a00 	orr.w	sl, sl, #2147483648	; 0x80000000
 8002b56:	e7be      	b.n	8002ad6 <_strtod_l+0x7e>
 8002b58:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8002b5a:	e9dd 931e 	ldrd	r9, r3, [sp, #120]	; 0x78
 8002b5e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002b62:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002b66:	ea43 5a02 	orr.w	sl, r3, r2, lsl #20
 8002b6a:	e7f0      	b.n	8002b4e <_strtod_l+0xf6>
 8002b6c:	f8df a170 	ldr.w	sl, [pc, #368]	; 8002ce0 <_strtod_l+0x288>
 8002b70:	e7ed      	b.n	8002b4e <_strtod_l+0xf6>
 8002b72:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8002b76:	f04f 39ff 	mov.w	r9, #4294967295
 8002b7a:	e7e8      	b.n	8002b4e <_strtod_l+0xf6>
 8002b7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002b7e:	1c5a      	adds	r2, r3, #1
 8002b80:	921b      	str	r2, [sp, #108]	; 0x6c
 8002b82:	785b      	ldrb	r3, [r3, #1]
 8002b84:	2b30      	cmp	r3, #48	; 0x30
 8002b86:	d0f9      	beq.n	8002b7c <_strtod_l+0x124>
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d0a4      	beq.n	8002ad6 <_strtod_l+0x7e>
 8002b8c:	2301      	movs	r3, #1
 8002b8e:	2500      	movs	r5, #0
 8002b90:	220a      	movs	r2, #10
 8002b92:	9307      	str	r3, [sp, #28]
 8002b94:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002b96:	9506      	str	r5, [sp, #24]
 8002b98:	9308      	str	r3, [sp, #32]
 8002b9a:	9504      	str	r5, [sp, #16]
 8002b9c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8002b9e:	7807      	ldrb	r7, [r0, #0]
 8002ba0:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8002ba4:	b2d9      	uxtb	r1, r3
 8002ba6:	2909      	cmp	r1, #9
 8002ba8:	d929      	bls.n	8002bfe <_strtod_l+0x1a6>
 8002baa:	4622      	mov	r2, r4
 8002bac:	f8d8 1000 	ldr.w	r1, [r8]
 8002bb0:	f002 fdb0 	bl	8005714 <strncmp>
 8002bb4:	2800      	cmp	r0, #0
 8002bb6:	d031      	beq.n	8002c1c <_strtod_l+0x1c4>
 8002bb8:	2000      	movs	r0, #0
 8002bba:	463b      	mov	r3, r7
 8002bbc:	4602      	mov	r2, r0
 8002bbe:	9c04      	ldr	r4, [sp, #16]
 8002bc0:	9005      	str	r0, [sp, #20]
 8002bc2:	2b65      	cmp	r3, #101	; 0x65
 8002bc4:	d001      	beq.n	8002bca <_strtod_l+0x172>
 8002bc6:	2b45      	cmp	r3, #69	; 0x45
 8002bc8:	d114      	bne.n	8002bf4 <_strtod_l+0x19c>
 8002bca:	b924      	cbnz	r4, 8002bd6 <_strtod_l+0x17e>
 8002bcc:	b910      	cbnz	r0, 8002bd4 <_strtod_l+0x17c>
 8002bce:	9b07      	ldr	r3, [sp, #28]
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d09e      	beq.n	8002b12 <_strtod_l+0xba>
 8002bd4:	2400      	movs	r4, #0
 8002bd6:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8002bd8:	1c73      	adds	r3, r6, #1
 8002bda:	931b      	str	r3, [sp, #108]	; 0x6c
 8002bdc:	7873      	ldrb	r3, [r6, #1]
 8002bde:	2b2b      	cmp	r3, #43	; 0x2b
 8002be0:	d078      	beq.n	8002cd4 <_strtod_l+0x27c>
 8002be2:	2b2d      	cmp	r3, #45	; 0x2d
 8002be4:	d070      	beq.n	8002cc8 <_strtod_l+0x270>
 8002be6:	f04f 0c00 	mov.w	ip, #0
 8002bea:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 8002bee:	2f09      	cmp	r7, #9
 8002bf0:	d97c      	bls.n	8002cec <_strtod_l+0x294>
 8002bf2:	961b      	str	r6, [sp, #108]	; 0x6c
 8002bf4:	f04f 0e00 	mov.w	lr, #0
 8002bf8:	e09a      	b.n	8002d30 <_strtod_l+0x2d8>
 8002bfa:	2300      	movs	r3, #0
 8002bfc:	e7c7      	b.n	8002b8e <_strtod_l+0x136>
 8002bfe:	9904      	ldr	r1, [sp, #16]
 8002c00:	3001      	adds	r0, #1
 8002c02:	2908      	cmp	r1, #8
 8002c04:	bfd7      	itett	le
 8002c06:	9906      	ldrle	r1, [sp, #24]
 8002c08:	fb02 3505 	mlagt	r5, r2, r5, r3
 8002c0c:	fb02 3301 	mlale	r3, r2, r1, r3
 8002c10:	9306      	strle	r3, [sp, #24]
 8002c12:	9b04      	ldr	r3, [sp, #16]
 8002c14:	901b      	str	r0, [sp, #108]	; 0x6c
 8002c16:	3301      	adds	r3, #1
 8002c18:	9304      	str	r3, [sp, #16]
 8002c1a:	e7bf      	b.n	8002b9c <_strtod_l+0x144>
 8002c1c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002c1e:	191a      	adds	r2, r3, r4
 8002c20:	921b      	str	r2, [sp, #108]	; 0x6c
 8002c22:	9a04      	ldr	r2, [sp, #16]
 8002c24:	5d1b      	ldrb	r3, [r3, r4]
 8002c26:	2a00      	cmp	r2, #0
 8002c28:	d037      	beq.n	8002c9a <_strtod_l+0x242>
 8002c2a:	4602      	mov	r2, r0
 8002c2c:	9c04      	ldr	r4, [sp, #16]
 8002c2e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8002c32:	2909      	cmp	r1, #9
 8002c34:	d913      	bls.n	8002c5e <_strtod_l+0x206>
 8002c36:	2101      	movs	r1, #1
 8002c38:	9105      	str	r1, [sp, #20]
 8002c3a:	e7c2      	b.n	8002bc2 <_strtod_l+0x16a>
 8002c3c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002c3e:	3001      	adds	r0, #1
 8002c40:	1c5a      	adds	r2, r3, #1
 8002c42:	921b      	str	r2, [sp, #108]	; 0x6c
 8002c44:	785b      	ldrb	r3, [r3, #1]
 8002c46:	2b30      	cmp	r3, #48	; 0x30
 8002c48:	d0f8      	beq.n	8002c3c <_strtod_l+0x1e4>
 8002c4a:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8002c4e:	2a08      	cmp	r2, #8
 8002c50:	f200 84f0 	bhi.w	8003634 <_strtod_l+0xbdc>
 8002c54:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002c56:	9208      	str	r2, [sp, #32]
 8002c58:	4602      	mov	r2, r0
 8002c5a:	2000      	movs	r0, #0
 8002c5c:	4604      	mov	r4, r0
 8002c5e:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 8002c62:	f100 0101 	add.w	r1, r0, #1
 8002c66:	d012      	beq.n	8002c8e <_strtod_l+0x236>
 8002c68:	440a      	add	r2, r1
 8002c6a:	270a      	movs	r7, #10
 8002c6c:	4621      	mov	r1, r4
 8002c6e:	eb00 0c04 	add.w	ip, r0, r4
 8002c72:	458c      	cmp	ip, r1
 8002c74:	d113      	bne.n	8002c9e <_strtod_l+0x246>
 8002c76:	1821      	adds	r1, r4, r0
 8002c78:	2908      	cmp	r1, #8
 8002c7a:	f104 0401 	add.w	r4, r4, #1
 8002c7e:	4404      	add	r4, r0
 8002c80:	dc19      	bgt.n	8002cb6 <_strtod_l+0x25e>
 8002c82:	210a      	movs	r1, #10
 8002c84:	9b06      	ldr	r3, [sp, #24]
 8002c86:	fb01 e303 	mla	r3, r1, r3, lr
 8002c8a:	9306      	str	r3, [sp, #24]
 8002c8c:	2100      	movs	r1, #0
 8002c8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002c90:	1c58      	adds	r0, r3, #1
 8002c92:	901b      	str	r0, [sp, #108]	; 0x6c
 8002c94:	785b      	ldrb	r3, [r3, #1]
 8002c96:	4608      	mov	r0, r1
 8002c98:	e7c9      	b.n	8002c2e <_strtod_l+0x1d6>
 8002c9a:	9804      	ldr	r0, [sp, #16]
 8002c9c:	e7d3      	b.n	8002c46 <_strtod_l+0x1ee>
 8002c9e:	2908      	cmp	r1, #8
 8002ca0:	f101 0101 	add.w	r1, r1, #1
 8002ca4:	dc03      	bgt.n	8002cae <_strtod_l+0x256>
 8002ca6:	9b06      	ldr	r3, [sp, #24]
 8002ca8:	437b      	muls	r3, r7
 8002caa:	9306      	str	r3, [sp, #24]
 8002cac:	e7e1      	b.n	8002c72 <_strtod_l+0x21a>
 8002cae:	2910      	cmp	r1, #16
 8002cb0:	bfd8      	it	le
 8002cb2:	437d      	mulle	r5, r7
 8002cb4:	e7dd      	b.n	8002c72 <_strtod_l+0x21a>
 8002cb6:	2c10      	cmp	r4, #16
 8002cb8:	bfdc      	itt	le
 8002cba:	210a      	movle	r1, #10
 8002cbc:	fb01 e505 	mlale	r5, r1, r5, lr
 8002cc0:	e7e4      	b.n	8002c8c <_strtod_l+0x234>
 8002cc2:	2301      	movs	r3, #1
 8002cc4:	9305      	str	r3, [sp, #20]
 8002cc6:	e781      	b.n	8002bcc <_strtod_l+0x174>
 8002cc8:	f04f 0c01 	mov.w	ip, #1
 8002ccc:	1cb3      	adds	r3, r6, #2
 8002cce:	931b      	str	r3, [sp, #108]	; 0x6c
 8002cd0:	78b3      	ldrb	r3, [r6, #2]
 8002cd2:	e78a      	b.n	8002bea <_strtod_l+0x192>
 8002cd4:	f04f 0c00 	mov.w	ip, #0
 8002cd8:	e7f8      	b.n	8002ccc <_strtod_l+0x274>
 8002cda:	bf00      	nop
 8002cdc:	080058b0 	.word	0x080058b0
 8002ce0:	7ff00000 	.word	0x7ff00000
 8002ce4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002ce6:	1c5f      	adds	r7, r3, #1
 8002ce8:	971b      	str	r7, [sp, #108]	; 0x6c
 8002cea:	785b      	ldrb	r3, [r3, #1]
 8002cec:	2b30      	cmp	r3, #48	; 0x30
 8002cee:	d0f9      	beq.n	8002ce4 <_strtod_l+0x28c>
 8002cf0:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 8002cf4:	2f08      	cmp	r7, #8
 8002cf6:	f63f af7d 	bhi.w	8002bf4 <_strtod_l+0x19c>
 8002cfa:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8002cfe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d00:	9309      	str	r3, [sp, #36]	; 0x24
 8002d02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d04:	1c5f      	adds	r7, r3, #1
 8002d06:	971b      	str	r7, [sp, #108]	; 0x6c
 8002d08:	785b      	ldrb	r3, [r3, #1]
 8002d0a:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 8002d0e:	f1b8 0f09 	cmp.w	r8, #9
 8002d12:	d937      	bls.n	8002d84 <_strtod_l+0x32c>
 8002d14:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002d16:	1a7f      	subs	r7, r7, r1
 8002d18:	2f08      	cmp	r7, #8
 8002d1a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8002d1e:	dc37      	bgt.n	8002d90 <_strtod_l+0x338>
 8002d20:	45be      	cmp	lr, r7
 8002d22:	bfa8      	it	ge
 8002d24:	46be      	movge	lr, r7
 8002d26:	f1bc 0f00 	cmp.w	ip, #0
 8002d2a:	d001      	beq.n	8002d30 <_strtod_l+0x2d8>
 8002d2c:	f1ce 0e00 	rsb	lr, lr, #0
 8002d30:	2c00      	cmp	r4, #0
 8002d32:	d151      	bne.n	8002dd8 <_strtod_l+0x380>
 8002d34:	2800      	cmp	r0, #0
 8002d36:	f47f aece 	bne.w	8002ad6 <_strtod_l+0x7e>
 8002d3a:	9a07      	ldr	r2, [sp, #28]
 8002d3c:	2a00      	cmp	r2, #0
 8002d3e:	f47f aeca 	bne.w	8002ad6 <_strtod_l+0x7e>
 8002d42:	9a05      	ldr	r2, [sp, #20]
 8002d44:	2a00      	cmp	r2, #0
 8002d46:	f47f aee4 	bne.w	8002b12 <_strtod_l+0xba>
 8002d4a:	2b4e      	cmp	r3, #78	; 0x4e
 8002d4c:	d027      	beq.n	8002d9e <_strtod_l+0x346>
 8002d4e:	dc21      	bgt.n	8002d94 <_strtod_l+0x33c>
 8002d50:	2b49      	cmp	r3, #73	; 0x49
 8002d52:	f47f aede 	bne.w	8002b12 <_strtod_l+0xba>
 8002d56:	49a4      	ldr	r1, [pc, #656]	; (8002fe8 <_strtod_l+0x590>)
 8002d58:	a81b      	add	r0, sp, #108	; 0x6c
 8002d5a:	f001 fde1 	bl	8004920 <__match>
 8002d5e:	2800      	cmp	r0, #0
 8002d60:	f43f aed7 	beq.w	8002b12 <_strtod_l+0xba>
 8002d64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d66:	49a1      	ldr	r1, [pc, #644]	; (8002fec <_strtod_l+0x594>)
 8002d68:	3b01      	subs	r3, #1
 8002d6a:	a81b      	add	r0, sp, #108	; 0x6c
 8002d6c:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d6e:	f001 fdd7 	bl	8004920 <__match>
 8002d72:	b910      	cbnz	r0, 8002d7a <_strtod_l+0x322>
 8002d74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d76:	3301      	adds	r3, #1
 8002d78:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d7a:	f8df a284 	ldr.w	sl, [pc, #644]	; 8003000 <_strtod_l+0x5a8>
 8002d7e:	f04f 0900 	mov.w	r9, #0
 8002d82:	e6a8      	b.n	8002ad6 <_strtod_l+0x7e>
 8002d84:	210a      	movs	r1, #10
 8002d86:	fb01 3e0e 	mla	lr, r1, lr, r3
 8002d8a:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8002d8e:	e7b8      	b.n	8002d02 <_strtod_l+0x2aa>
 8002d90:	46be      	mov	lr, r7
 8002d92:	e7c8      	b.n	8002d26 <_strtod_l+0x2ce>
 8002d94:	2b69      	cmp	r3, #105	; 0x69
 8002d96:	d0de      	beq.n	8002d56 <_strtod_l+0x2fe>
 8002d98:	2b6e      	cmp	r3, #110	; 0x6e
 8002d9a:	f47f aeba 	bne.w	8002b12 <_strtod_l+0xba>
 8002d9e:	4994      	ldr	r1, [pc, #592]	; (8002ff0 <_strtod_l+0x598>)
 8002da0:	a81b      	add	r0, sp, #108	; 0x6c
 8002da2:	f001 fdbd 	bl	8004920 <__match>
 8002da6:	2800      	cmp	r0, #0
 8002da8:	f43f aeb3 	beq.w	8002b12 <_strtod_l+0xba>
 8002dac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002dae:	781b      	ldrb	r3, [r3, #0]
 8002db0:	2b28      	cmp	r3, #40	; 0x28
 8002db2:	d10e      	bne.n	8002dd2 <_strtod_l+0x37a>
 8002db4:	aa1e      	add	r2, sp, #120	; 0x78
 8002db6:	498f      	ldr	r1, [pc, #572]	; (8002ff4 <_strtod_l+0x59c>)
 8002db8:	a81b      	add	r0, sp, #108	; 0x6c
 8002dba:	f001 fdc5 	bl	8004948 <__hexnan>
 8002dbe:	2805      	cmp	r0, #5
 8002dc0:	d107      	bne.n	8002dd2 <_strtod_l+0x37a>
 8002dc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002dc4:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 8002dc8:	f043 4aff 	orr.w	sl, r3, #2139095040	; 0x7f800000
 8002dcc:	f44a 0ae0 	orr.w	sl, sl, #7340032	; 0x700000
 8002dd0:	e681      	b.n	8002ad6 <_strtod_l+0x7e>
 8002dd2:	f8df a234 	ldr.w	sl, [pc, #564]	; 8003008 <_strtod_l+0x5b0>
 8002dd6:	e7d2      	b.n	8002d7e <_strtod_l+0x326>
 8002dd8:	ebae 0302 	sub.w	r3, lr, r2
 8002ddc:	9307      	str	r3, [sp, #28]
 8002dde:	9b04      	ldr	r3, [sp, #16]
 8002de0:	9806      	ldr	r0, [sp, #24]
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	bf08      	it	eq
 8002de6:	4623      	moveq	r3, r4
 8002de8:	2c10      	cmp	r4, #16
 8002dea:	9304      	str	r3, [sp, #16]
 8002dec:	46a0      	mov	r8, r4
 8002dee:	bfa8      	it	ge
 8002df0:	f04f 0810 	movge.w	r8, #16
 8002df4:	f7fd fb06 	bl	8000404 <__aeabi_ui2d>
 8002df8:	2c09      	cmp	r4, #9
 8002dfa:	4681      	mov	r9, r0
 8002dfc:	468a      	mov	sl, r1
 8002dfe:	dc13      	bgt.n	8002e28 <_strtod_l+0x3d0>
 8002e00:	9b07      	ldr	r3, [sp, #28]
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	f43f ae67 	beq.w	8002ad6 <_strtod_l+0x7e>
 8002e08:	9b07      	ldr	r3, [sp, #28]
 8002e0a:	dd7e      	ble.n	8002f0a <_strtod_l+0x4b2>
 8002e0c:	2b16      	cmp	r3, #22
 8002e0e:	dc65      	bgt.n	8002edc <_strtod_l+0x484>
 8002e10:	4a79      	ldr	r2, [pc, #484]	; (8002ff8 <_strtod_l+0x5a0>)
 8002e12:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 8002e16:	464a      	mov	r2, r9
 8002e18:	e9de 0100 	ldrd	r0, r1, [lr]
 8002e1c:	4653      	mov	r3, sl
 8002e1e:	f7fd fb6b 	bl	80004f8 <__aeabi_dmul>
 8002e22:	4681      	mov	r9, r0
 8002e24:	468a      	mov	sl, r1
 8002e26:	e656      	b.n	8002ad6 <_strtod_l+0x7e>
 8002e28:	4b73      	ldr	r3, [pc, #460]	; (8002ff8 <_strtod_l+0x5a0>)
 8002e2a:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8002e2e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8002e32:	f7fd fb61 	bl	80004f8 <__aeabi_dmul>
 8002e36:	4606      	mov	r6, r0
 8002e38:	4628      	mov	r0, r5
 8002e3a:	460f      	mov	r7, r1
 8002e3c:	f7fd fae2 	bl	8000404 <__aeabi_ui2d>
 8002e40:	4602      	mov	r2, r0
 8002e42:	460b      	mov	r3, r1
 8002e44:	4630      	mov	r0, r6
 8002e46:	4639      	mov	r1, r7
 8002e48:	f7fd f9a0 	bl	800018c <__adddf3>
 8002e4c:	2c0f      	cmp	r4, #15
 8002e4e:	4681      	mov	r9, r0
 8002e50:	468a      	mov	sl, r1
 8002e52:	ddd5      	ble.n	8002e00 <_strtod_l+0x3a8>
 8002e54:	9b07      	ldr	r3, [sp, #28]
 8002e56:	eba4 0808 	sub.w	r8, r4, r8
 8002e5a:	4498      	add	r8, r3
 8002e5c:	f1b8 0f00 	cmp.w	r8, #0
 8002e60:	f340 809a 	ble.w	8002f98 <_strtod_l+0x540>
 8002e64:	f018 030f 	ands.w	r3, r8, #15
 8002e68:	d00a      	beq.n	8002e80 <_strtod_l+0x428>
 8002e6a:	4963      	ldr	r1, [pc, #396]	; (8002ff8 <_strtod_l+0x5a0>)
 8002e6c:	464a      	mov	r2, r9
 8002e6e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002e72:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002e76:	4653      	mov	r3, sl
 8002e78:	f7fd fb3e 	bl	80004f8 <__aeabi_dmul>
 8002e7c:	4681      	mov	r9, r0
 8002e7e:	468a      	mov	sl, r1
 8002e80:	f038 080f 	bics.w	r8, r8, #15
 8002e84:	d077      	beq.n	8002f76 <_strtod_l+0x51e>
 8002e86:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8002e8a:	dd4b      	ble.n	8002f24 <_strtod_l+0x4cc>
 8002e8c:	f04f 0800 	mov.w	r8, #0
 8002e90:	f8cd 8010 	str.w	r8, [sp, #16]
 8002e94:	f8cd 8020 	str.w	r8, [sp, #32]
 8002e98:	f8cd 8018 	str.w	r8, [sp, #24]
 8002e9c:	2322      	movs	r3, #34	; 0x22
 8002e9e:	f04f 0900 	mov.w	r9, #0
 8002ea2:	f8df a15c 	ldr.w	sl, [pc, #348]	; 8003000 <_strtod_l+0x5a8>
 8002ea6:	f8cb 3000 	str.w	r3, [fp]
 8002eaa:	9b08      	ldr	r3, [sp, #32]
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	f43f ae12 	beq.w	8002ad6 <_strtod_l+0x7e>
 8002eb2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8002eb4:	4658      	mov	r0, fp
 8002eb6:	f001 fe52 	bl	8004b5e <_Bfree>
 8002eba:	9906      	ldr	r1, [sp, #24]
 8002ebc:	4658      	mov	r0, fp
 8002ebe:	f001 fe4e 	bl	8004b5e <_Bfree>
 8002ec2:	9904      	ldr	r1, [sp, #16]
 8002ec4:	4658      	mov	r0, fp
 8002ec6:	f001 fe4a 	bl	8004b5e <_Bfree>
 8002eca:	9908      	ldr	r1, [sp, #32]
 8002ecc:	4658      	mov	r0, fp
 8002ece:	f001 fe46 	bl	8004b5e <_Bfree>
 8002ed2:	4641      	mov	r1, r8
 8002ed4:	4658      	mov	r0, fp
 8002ed6:	f001 fe42 	bl	8004b5e <_Bfree>
 8002eda:	e5fc      	b.n	8002ad6 <_strtod_l+0x7e>
 8002edc:	9a07      	ldr	r2, [sp, #28]
 8002ede:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8002ee2:	4293      	cmp	r3, r2
 8002ee4:	dbb6      	blt.n	8002e54 <_strtod_l+0x3fc>
 8002ee6:	4d44      	ldr	r5, [pc, #272]	; (8002ff8 <_strtod_l+0x5a0>)
 8002ee8:	f1c4 040f 	rsb	r4, r4, #15
 8002eec:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8002ef0:	464a      	mov	r2, r9
 8002ef2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002ef6:	4653      	mov	r3, sl
 8002ef8:	f7fd fafe 	bl	80004f8 <__aeabi_dmul>
 8002efc:	9b07      	ldr	r3, [sp, #28]
 8002efe:	1b1c      	subs	r4, r3, r4
 8002f00:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8002f04:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002f08:	e789      	b.n	8002e1e <_strtod_l+0x3c6>
 8002f0a:	f113 0f16 	cmn.w	r3, #22
 8002f0e:	dba1      	blt.n	8002e54 <_strtod_l+0x3fc>
 8002f10:	4a39      	ldr	r2, [pc, #228]	; (8002ff8 <_strtod_l+0x5a0>)
 8002f12:	4648      	mov	r0, r9
 8002f14:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 8002f18:	e9d2 2300 	ldrd	r2, r3, [r2]
 8002f1c:	4651      	mov	r1, sl
 8002f1e:	f7fd fc15 	bl	800074c <__aeabi_ddiv>
 8002f22:	e77e      	b.n	8002e22 <_strtod_l+0x3ca>
 8002f24:	2300      	movs	r3, #0
 8002f26:	4648      	mov	r0, r9
 8002f28:	4651      	mov	r1, sl
 8002f2a:	461d      	mov	r5, r3
 8002f2c:	4e33      	ldr	r6, [pc, #204]	; (8002ffc <_strtod_l+0x5a4>)
 8002f2e:	ea4f 1828 	mov.w	r8, r8, asr #4
 8002f32:	f1b8 0f01 	cmp.w	r8, #1
 8002f36:	dc21      	bgt.n	8002f7c <_strtod_l+0x524>
 8002f38:	b10b      	cbz	r3, 8002f3e <_strtod_l+0x4e6>
 8002f3a:	4681      	mov	r9, r0
 8002f3c:	468a      	mov	sl, r1
 8002f3e:	4b2f      	ldr	r3, [pc, #188]	; (8002ffc <_strtod_l+0x5a4>)
 8002f40:	f1aa 7a54 	sub.w	sl, sl, #55574528	; 0x3500000
 8002f44:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8002f48:	464a      	mov	r2, r9
 8002f4a:	e9d5 0100 	ldrd	r0, r1, [r5]
 8002f4e:	4653      	mov	r3, sl
 8002f50:	f7fd fad2 	bl	80004f8 <__aeabi_dmul>
 8002f54:	4b2a      	ldr	r3, [pc, #168]	; (8003000 <_strtod_l+0x5a8>)
 8002f56:	460a      	mov	r2, r1
 8002f58:	400b      	ands	r3, r1
 8002f5a:	492a      	ldr	r1, [pc, #168]	; (8003004 <_strtod_l+0x5ac>)
 8002f5c:	4681      	mov	r9, r0
 8002f5e:	428b      	cmp	r3, r1
 8002f60:	d894      	bhi.n	8002e8c <_strtod_l+0x434>
 8002f62:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8002f66:	428b      	cmp	r3, r1
 8002f68:	bf86      	itte	hi
 8002f6a:	f04f 39ff 	movhi.w	r9, #4294967295
 8002f6e:	f8df a09c 	ldrhi.w	sl, [pc, #156]	; 800300c <_strtod_l+0x5b4>
 8002f72:	f102 7a54 	addls.w	sl, r2, #55574528	; 0x3500000
 8002f76:	2300      	movs	r3, #0
 8002f78:	9305      	str	r3, [sp, #20]
 8002f7a:	e07b      	b.n	8003074 <_strtod_l+0x61c>
 8002f7c:	f018 0f01 	tst.w	r8, #1
 8002f80:	d006      	beq.n	8002f90 <_strtod_l+0x538>
 8002f82:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 8002f86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f8a:	f7fd fab5 	bl	80004f8 <__aeabi_dmul>
 8002f8e:	2301      	movs	r3, #1
 8002f90:	3501      	adds	r5, #1
 8002f92:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002f96:	e7cc      	b.n	8002f32 <_strtod_l+0x4da>
 8002f98:	d0ed      	beq.n	8002f76 <_strtod_l+0x51e>
 8002f9a:	f1c8 0800 	rsb	r8, r8, #0
 8002f9e:	f018 020f 	ands.w	r2, r8, #15
 8002fa2:	d00a      	beq.n	8002fba <_strtod_l+0x562>
 8002fa4:	4b14      	ldr	r3, [pc, #80]	; (8002ff8 <_strtod_l+0x5a0>)
 8002fa6:	4648      	mov	r0, r9
 8002fa8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002fac:	4651      	mov	r1, sl
 8002fae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fb2:	f7fd fbcb 	bl	800074c <__aeabi_ddiv>
 8002fb6:	4681      	mov	r9, r0
 8002fb8:	468a      	mov	sl, r1
 8002fba:	ea5f 1828 	movs.w	r8, r8, asr #4
 8002fbe:	d0da      	beq.n	8002f76 <_strtod_l+0x51e>
 8002fc0:	f1b8 0f1f 	cmp.w	r8, #31
 8002fc4:	dd24      	ble.n	8003010 <_strtod_l+0x5b8>
 8002fc6:	f04f 0800 	mov.w	r8, #0
 8002fca:	f8cd 8010 	str.w	r8, [sp, #16]
 8002fce:	f8cd 8020 	str.w	r8, [sp, #32]
 8002fd2:	f8cd 8018 	str.w	r8, [sp, #24]
 8002fd6:	2322      	movs	r3, #34	; 0x22
 8002fd8:	f04f 0900 	mov.w	r9, #0
 8002fdc:	f04f 0a00 	mov.w	sl, #0
 8002fe0:	f8cb 3000 	str.w	r3, [fp]
 8002fe4:	e761      	b.n	8002eaa <_strtod_l+0x452>
 8002fe6:	bf00      	nop
 8002fe8:	08005879 	.word	0x08005879
 8002fec:	08005903 	.word	0x08005903
 8002ff0:	08005881 	.word	0x08005881
 8002ff4:	080058c4 	.word	0x080058c4
 8002ff8:	08005940 	.word	0x08005940
 8002ffc:	08005918 	.word	0x08005918
 8003000:	7ff00000 	.word	0x7ff00000
 8003004:	7ca00000 	.word	0x7ca00000
 8003008:	fff80000 	.word	0xfff80000
 800300c:	7fefffff 	.word	0x7fefffff
 8003010:	f018 0310 	ands.w	r3, r8, #16
 8003014:	bf18      	it	ne
 8003016:	236a      	movne	r3, #106	; 0x6a
 8003018:	4648      	mov	r0, r9
 800301a:	9305      	str	r3, [sp, #20]
 800301c:	4651      	mov	r1, sl
 800301e:	2300      	movs	r3, #0
 8003020:	4da1      	ldr	r5, [pc, #644]	; (80032a8 <_strtod_l+0x850>)
 8003022:	f1b8 0f00 	cmp.w	r8, #0
 8003026:	f300 8113 	bgt.w	8003250 <_strtod_l+0x7f8>
 800302a:	b10b      	cbz	r3, 8003030 <_strtod_l+0x5d8>
 800302c:	4681      	mov	r9, r0
 800302e:	468a      	mov	sl, r1
 8003030:	9b05      	ldr	r3, [sp, #20]
 8003032:	b1bb      	cbz	r3, 8003064 <_strtod_l+0x60c>
 8003034:	f3ca 530a 	ubfx	r3, sl, #20, #11
 8003038:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800303c:	2b00      	cmp	r3, #0
 800303e:	4651      	mov	r1, sl
 8003040:	dd10      	ble.n	8003064 <_strtod_l+0x60c>
 8003042:	2b1f      	cmp	r3, #31
 8003044:	f340 8110 	ble.w	8003268 <_strtod_l+0x810>
 8003048:	2b34      	cmp	r3, #52	; 0x34
 800304a:	bfd8      	it	le
 800304c:	f04f 32ff 	movle.w	r2, #4294967295
 8003050:	f04f 0900 	mov.w	r9, #0
 8003054:	bfcf      	iteee	gt
 8003056:	f04f 7a5c 	movgt.w	sl, #57671680	; 0x3700000
 800305a:	3b20      	suble	r3, #32
 800305c:	fa02 f303 	lslle.w	r3, r2, r3
 8003060:	ea03 0a01 	andle.w	sl, r3, r1
 8003064:	2200      	movs	r2, #0
 8003066:	2300      	movs	r3, #0
 8003068:	4648      	mov	r0, r9
 800306a:	4651      	mov	r1, sl
 800306c:	f7fd fcac 	bl	80009c8 <__aeabi_dcmpeq>
 8003070:	2800      	cmp	r0, #0
 8003072:	d1a8      	bne.n	8002fc6 <_strtod_l+0x56e>
 8003074:	9b06      	ldr	r3, [sp, #24]
 8003076:	9a04      	ldr	r2, [sp, #16]
 8003078:	9300      	str	r3, [sp, #0]
 800307a:	9908      	ldr	r1, [sp, #32]
 800307c:	4623      	mov	r3, r4
 800307e:	4658      	mov	r0, fp
 8003080:	f001 fdbf 	bl	8004c02 <__s2b>
 8003084:	9008      	str	r0, [sp, #32]
 8003086:	2800      	cmp	r0, #0
 8003088:	f43f af00 	beq.w	8002e8c <_strtod_l+0x434>
 800308c:	9a07      	ldr	r2, [sp, #28]
 800308e:	9b07      	ldr	r3, [sp, #28]
 8003090:	2a00      	cmp	r2, #0
 8003092:	f1c3 0300 	rsb	r3, r3, #0
 8003096:	bfa8      	it	ge
 8003098:	2300      	movge	r3, #0
 800309a:	f04f 0800 	mov.w	r8, #0
 800309e:	930e      	str	r3, [sp, #56]	; 0x38
 80030a0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80030a4:	9316      	str	r3, [sp, #88]	; 0x58
 80030a6:	f8cd 8010 	str.w	r8, [sp, #16]
 80030aa:	9b08      	ldr	r3, [sp, #32]
 80030ac:	4658      	mov	r0, fp
 80030ae:	6859      	ldr	r1, [r3, #4]
 80030b0:	f001 fd21 	bl	8004af6 <_Balloc>
 80030b4:	9006      	str	r0, [sp, #24]
 80030b6:	2800      	cmp	r0, #0
 80030b8:	f43f aef0 	beq.w	8002e9c <_strtod_l+0x444>
 80030bc:	9b08      	ldr	r3, [sp, #32]
 80030be:	300c      	adds	r0, #12
 80030c0:	691a      	ldr	r2, [r3, #16]
 80030c2:	f103 010c 	add.w	r1, r3, #12
 80030c6:	3202      	adds	r2, #2
 80030c8:	0092      	lsls	r2, r2, #2
 80030ca:	f001 fd09 	bl	8004ae0 <memcpy>
 80030ce:	ab1e      	add	r3, sp, #120	; 0x78
 80030d0:	9301      	str	r3, [sp, #4]
 80030d2:	ab1d      	add	r3, sp, #116	; 0x74
 80030d4:	9300      	str	r3, [sp, #0]
 80030d6:	464a      	mov	r2, r9
 80030d8:	4653      	mov	r3, sl
 80030da:	4658      	mov	r0, fp
 80030dc:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
 80030e0:	f002 f84a 	bl	8005178 <__d2b>
 80030e4:	901c      	str	r0, [sp, #112]	; 0x70
 80030e6:	2800      	cmp	r0, #0
 80030e8:	f43f aed8 	beq.w	8002e9c <_strtod_l+0x444>
 80030ec:	2101      	movs	r1, #1
 80030ee:	4658      	mov	r0, fp
 80030f0:	f001 fe13 	bl	8004d1a <__i2b>
 80030f4:	9004      	str	r0, [sp, #16]
 80030f6:	4603      	mov	r3, r0
 80030f8:	2800      	cmp	r0, #0
 80030fa:	f43f aecf 	beq.w	8002e9c <_strtod_l+0x444>
 80030fe:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8003100:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003102:	2d00      	cmp	r5, #0
 8003104:	bfab      	itete	ge
 8003106:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003108:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 800310a:	18ee      	addge	r6, r5, r3
 800310c:	1b5c      	sublt	r4, r3, r5
 800310e:	9b05      	ldr	r3, [sp, #20]
 8003110:	bfa8      	it	ge
 8003112:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8003114:	eba5 0503 	sub.w	r5, r5, r3
 8003118:	4415      	add	r5, r2
 800311a:	4b64      	ldr	r3, [pc, #400]	; (80032ac <_strtod_l+0x854>)
 800311c:	f105 35ff 	add.w	r5, r5, #4294967295
 8003120:	bfb8      	it	lt
 8003122:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003124:	429d      	cmp	r5, r3
 8003126:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800312a:	f280 80af 	bge.w	800328c <_strtod_l+0x834>
 800312e:	1b5b      	subs	r3, r3, r5
 8003130:	2b1f      	cmp	r3, #31
 8003132:	eba2 0203 	sub.w	r2, r2, r3
 8003136:	f04f 0701 	mov.w	r7, #1
 800313a:	f300 809c 	bgt.w	8003276 <_strtod_l+0x81e>
 800313e:	2500      	movs	r5, #0
 8003140:	fa07 f303 	lsl.w	r3, r7, r3
 8003144:	930f      	str	r3, [sp, #60]	; 0x3c
 8003146:	18b7      	adds	r7, r6, r2
 8003148:	9b05      	ldr	r3, [sp, #20]
 800314a:	42be      	cmp	r6, r7
 800314c:	4414      	add	r4, r2
 800314e:	441c      	add	r4, r3
 8003150:	4633      	mov	r3, r6
 8003152:	bfa8      	it	ge
 8003154:	463b      	movge	r3, r7
 8003156:	42a3      	cmp	r3, r4
 8003158:	bfa8      	it	ge
 800315a:	4623      	movge	r3, r4
 800315c:	2b00      	cmp	r3, #0
 800315e:	bfc2      	ittt	gt
 8003160:	1aff      	subgt	r7, r7, r3
 8003162:	1ae4      	subgt	r4, r4, r3
 8003164:	1af6      	subgt	r6, r6, r3
 8003166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003168:	b1bb      	cbz	r3, 800319a <_strtod_l+0x742>
 800316a:	461a      	mov	r2, r3
 800316c:	9904      	ldr	r1, [sp, #16]
 800316e:	4658      	mov	r0, fp
 8003170:	f001 fe72 	bl	8004e58 <__pow5mult>
 8003174:	9004      	str	r0, [sp, #16]
 8003176:	2800      	cmp	r0, #0
 8003178:	f43f ae90 	beq.w	8002e9c <_strtod_l+0x444>
 800317c:	4601      	mov	r1, r0
 800317e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003180:	4658      	mov	r0, fp
 8003182:	f001 fdd3 	bl	8004d2c <__multiply>
 8003186:	9009      	str	r0, [sp, #36]	; 0x24
 8003188:	2800      	cmp	r0, #0
 800318a:	f43f ae87 	beq.w	8002e9c <_strtod_l+0x444>
 800318e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003190:	4658      	mov	r0, fp
 8003192:	f001 fce4 	bl	8004b5e <_Bfree>
 8003196:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003198:	931c      	str	r3, [sp, #112]	; 0x70
 800319a:	2f00      	cmp	r7, #0
 800319c:	dc7a      	bgt.n	8003294 <_strtod_l+0x83c>
 800319e:	9b07      	ldr	r3, [sp, #28]
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	dd08      	ble.n	80031b6 <_strtod_l+0x75e>
 80031a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80031a6:	9906      	ldr	r1, [sp, #24]
 80031a8:	4658      	mov	r0, fp
 80031aa:	f001 fe55 	bl	8004e58 <__pow5mult>
 80031ae:	9006      	str	r0, [sp, #24]
 80031b0:	2800      	cmp	r0, #0
 80031b2:	f43f ae73 	beq.w	8002e9c <_strtod_l+0x444>
 80031b6:	2c00      	cmp	r4, #0
 80031b8:	dd08      	ble.n	80031cc <_strtod_l+0x774>
 80031ba:	4622      	mov	r2, r4
 80031bc:	9906      	ldr	r1, [sp, #24]
 80031be:	4658      	mov	r0, fp
 80031c0:	f001 fe98 	bl	8004ef4 <__lshift>
 80031c4:	9006      	str	r0, [sp, #24]
 80031c6:	2800      	cmp	r0, #0
 80031c8:	f43f ae68 	beq.w	8002e9c <_strtod_l+0x444>
 80031cc:	2e00      	cmp	r6, #0
 80031ce:	dd08      	ble.n	80031e2 <_strtod_l+0x78a>
 80031d0:	4632      	mov	r2, r6
 80031d2:	9904      	ldr	r1, [sp, #16]
 80031d4:	4658      	mov	r0, fp
 80031d6:	f001 fe8d 	bl	8004ef4 <__lshift>
 80031da:	9004      	str	r0, [sp, #16]
 80031dc:	2800      	cmp	r0, #0
 80031de:	f43f ae5d 	beq.w	8002e9c <_strtod_l+0x444>
 80031e2:	9a06      	ldr	r2, [sp, #24]
 80031e4:	991c      	ldr	r1, [sp, #112]	; 0x70
 80031e6:	4658      	mov	r0, fp
 80031e8:	f001 fef2 	bl	8004fd0 <__mdiff>
 80031ec:	4680      	mov	r8, r0
 80031ee:	2800      	cmp	r0, #0
 80031f0:	f43f ae54 	beq.w	8002e9c <_strtod_l+0x444>
 80031f4:	2400      	movs	r4, #0
 80031f6:	68c3      	ldr	r3, [r0, #12]
 80031f8:	9904      	ldr	r1, [sp, #16]
 80031fa:	60c4      	str	r4, [r0, #12]
 80031fc:	930c      	str	r3, [sp, #48]	; 0x30
 80031fe:	f001 fecd 	bl	8004f9c <__mcmp>
 8003202:	42a0      	cmp	r0, r4
 8003204:	da54      	bge.n	80032b0 <_strtod_l+0x858>
 8003206:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003208:	b9f3      	cbnz	r3, 8003248 <_strtod_l+0x7f0>
 800320a:	f1b9 0f00 	cmp.w	r9, #0
 800320e:	d11b      	bne.n	8003248 <_strtod_l+0x7f0>
 8003210:	f3ca 0313 	ubfx	r3, sl, #0, #20
 8003214:	b9c3      	cbnz	r3, 8003248 <_strtod_l+0x7f0>
 8003216:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800321a:	0d1b      	lsrs	r3, r3, #20
 800321c:	051b      	lsls	r3, r3, #20
 800321e:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003222:	d911      	bls.n	8003248 <_strtod_l+0x7f0>
 8003224:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8003228:	b91b      	cbnz	r3, 8003232 <_strtod_l+0x7da>
 800322a:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800322e:	2b01      	cmp	r3, #1
 8003230:	dd0a      	ble.n	8003248 <_strtod_l+0x7f0>
 8003232:	4641      	mov	r1, r8
 8003234:	2201      	movs	r2, #1
 8003236:	4658      	mov	r0, fp
 8003238:	f001 fe5c 	bl	8004ef4 <__lshift>
 800323c:	9904      	ldr	r1, [sp, #16]
 800323e:	4680      	mov	r8, r0
 8003240:	f001 feac 	bl	8004f9c <__mcmp>
 8003244:	2800      	cmp	r0, #0
 8003246:	dc68      	bgt.n	800331a <_strtod_l+0x8c2>
 8003248:	9b05      	ldr	r3, [sp, #20]
 800324a:	2b00      	cmp	r3, #0
 800324c:	d172      	bne.n	8003334 <_strtod_l+0x8dc>
 800324e:	e630      	b.n	8002eb2 <_strtod_l+0x45a>
 8003250:	f018 0f01 	tst.w	r8, #1
 8003254:	d004      	beq.n	8003260 <_strtod_l+0x808>
 8003256:	e9d5 2300 	ldrd	r2, r3, [r5]
 800325a:	f7fd f94d 	bl	80004f8 <__aeabi_dmul>
 800325e:	2301      	movs	r3, #1
 8003260:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003264:	3508      	adds	r5, #8
 8003266:	e6dc      	b.n	8003022 <_strtod_l+0x5ca>
 8003268:	f04f 32ff 	mov.w	r2, #4294967295
 800326c:	fa02 f303 	lsl.w	r3, r2, r3
 8003270:	ea03 0909 	and.w	r9, r3, r9
 8003274:	e6f6      	b.n	8003064 <_strtod_l+0x60c>
 8003276:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800327a:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800327e:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003282:	35e2      	adds	r5, #226	; 0xe2
 8003284:	fa07 f505 	lsl.w	r5, r7, r5
 8003288:	970f      	str	r7, [sp, #60]	; 0x3c
 800328a:	e75c      	b.n	8003146 <_strtod_l+0x6ee>
 800328c:	2301      	movs	r3, #1
 800328e:	2500      	movs	r5, #0
 8003290:	930f      	str	r3, [sp, #60]	; 0x3c
 8003292:	e758      	b.n	8003146 <_strtod_l+0x6ee>
 8003294:	463a      	mov	r2, r7
 8003296:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003298:	4658      	mov	r0, fp
 800329a:	f001 fe2b 	bl	8004ef4 <__lshift>
 800329e:	901c      	str	r0, [sp, #112]	; 0x70
 80032a0:	2800      	cmp	r0, #0
 80032a2:	f47f af7c 	bne.w	800319e <_strtod_l+0x746>
 80032a6:	e5f9      	b.n	8002e9c <_strtod_l+0x444>
 80032a8:	080058d8 	.word	0x080058d8
 80032ac:	fffffc02 	.word	0xfffffc02
 80032b0:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80032b4:	f040 8089 	bne.w	80033ca <_strtod_l+0x972>
 80032b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80032ba:	f3ca 0313 	ubfx	r3, sl, #0, #20
 80032be:	b342      	cbz	r2, 8003312 <_strtod_l+0x8ba>
 80032c0:	4aaf      	ldr	r2, [pc, #700]	; (8003580 <_strtod_l+0xb28>)
 80032c2:	4293      	cmp	r3, r2
 80032c4:	d156      	bne.n	8003374 <_strtod_l+0x91c>
 80032c6:	9b05      	ldr	r3, [sp, #20]
 80032c8:	4648      	mov	r0, r9
 80032ca:	b1eb      	cbz	r3, 8003308 <_strtod_l+0x8b0>
 80032cc:	4653      	mov	r3, sl
 80032ce:	4aad      	ldr	r2, [pc, #692]	; (8003584 <_strtod_l+0xb2c>)
 80032d0:	f04f 31ff 	mov.w	r1, #4294967295
 80032d4:	401a      	ands	r2, r3
 80032d6:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 80032da:	d818      	bhi.n	800330e <_strtod_l+0x8b6>
 80032dc:	0d12      	lsrs	r2, r2, #20
 80032de:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80032e2:	fa01 f303 	lsl.w	r3, r1, r3
 80032e6:	4298      	cmp	r0, r3
 80032e8:	d144      	bne.n	8003374 <_strtod_l+0x91c>
 80032ea:	4ba7      	ldr	r3, [pc, #668]	; (8003588 <_strtod_l+0xb30>)
 80032ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80032ee:	429a      	cmp	r2, r3
 80032f0:	d102      	bne.n	80032f8 <_strtod_l+0x8a0>
 80032f2:	3001      	adds	r0, #1
 80032f4:	f43f add2 	beq.w	8002e9c <_strtod_l+0x444>
 80032f8:	4ba2      	ldr	r3, [pc, #648]	; (8003584 <_strtod_l+0xb2c>)
 80032fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80032fc:	f04f 0900 	mov.w	r9, #0
 8003300:	401a      	ands	r2, r3
 8003302:	f502 1a80 	add.w	sl, r2, #1048576	; 0x100000
 8003306:	e79f      	b.n	8003248 <_strtod_l+0x7f0>
 8003308:	f04f 33ff 	mov.w	r3, #4294967295
 800330c:	e7eb      	b.n	80032e6 <_strtod_l+0x88e>
 800330e:	460b      	mov	r3, r1
 8003310:	e7e9      	b.n	80032e6 <_strtod_l+0x88e>
 8003312:	bb7b      	cbnz	r3, 8003374 <_strtod_l+0x91c>
 8003314:	f1b9 0f00 	cmp.w	r9, #0
 8003318:	d12c      	bne.n	8003374 <_strtod_l+0x91c>
 800331a:	9905      	ldr	r1, [sp, #20]
 800331c:	4653      	mov	r3, sl
 800331e:	4a99      	ldr	r2, [pc, #612]	; (8003584 <_strtod_l+0xb2c>)
 8003320:	b1f1      	cbz	r1, 8003360 <_strtod_l+0x908>
 8003322:	ea02 010a 	and.w	r1, r2, sl
 8003326:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800332a:	dc19      	bgt.n	8003360 <_strtod_l+0x908>
 800332c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003330:	f77f ae51 	ble.w	8002fd6 <_strtod_l+0x57e>
 8003334:	2300      	movs	r3, #0
 8003336:	4a95      	ldr	r2, [pc, #596]	; (800358c <_strtod_l+0xb34>)
 8003338:	4648      	mov	r0, r9
 800333a:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 800333e:	4651      	mov	r1, sl
 8003340:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003344:	f7fd f8d8 	bl	80004f8 <__aeabi_dmul>
 8003348:	4681      	mov	r9, r0
 800334a:	468a      	mov	sl, r1
 800334c:	2900      	cmp	r1, #0
 800334e:	f47f adb0 	bne.w	8002eb2 <_strtod_l+0x45a>
 8003352:	2800      	cmp	r0, #0
 8003354:	f47f adad 	bne.w	8002eb2 <_strtod_l+0x45a>
 8003358:	2322      	movs	r3, #34	; 0x22
 800335a:	f8cb 3000 	str.w	r3, [fp]
 800335e:	e5a8      	b.n	8002eb2 <_strtod_l+0x45a>
 8003360:	4013      	ands	r3, r2
 8003362:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003366:	ea6f 5a13 	mvn.w	sl, r3, lsr #20
 800336a:	f04f 39ff 	mov.w	r9, #4294967295
 800336e:	ea6f 5a0a 	mvn.w	sl, sl, lsl #20
 8003372:	e769      	b.n	8003248 <_strtod_l+0x7f0>
 8003374:	b19d      	cbz	r5, 800339e <_strtod_l+0x946>
 8003376:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003378:	421d      	tst	r5, r3
 800337a:	f43f af65 	beq.w	8003248 <_strtod_l+0x7f0>
 800337e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003380:	9a05      	ldr	r2, [sp, #20]
 8003382:	4648      	mov	r0, r9
 8003384:	4651      	mov	r1, sl
 8003386:	b173      	cbz	r3, 80033a6 <_strtod_l+0x94e>
 8003388:	f7ff fb44 	bl	8002a14 <sulp>
 800338c:	4602      	mov	r2, r0
 800338e:	460b      	mov	r3, r1
 8003390:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003394:	f7fc fefa 	bl	800018c <__adddf3>
 8003398:	4681      	mov	r9, r0
 800339a:	468a      	mov	sl, r1
 800339c:	e754      	b.n	8003248 <_strtod_l+0x7f0>
 800339e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80033a0:	ea13 0f09 	tst.w	r3, r9
 80033a4:	e7e9      	b.n	800337a <_strtod_l+0x922>
 80033a6:	f7ff fb35 	bl	8002a14 <sulp>
 80033aa:	4602      	mov	r2, r0
 80033ac:	460b      	mov	r3, r1
 80033ae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80033b2:	f7fc fee9 	bl	8000188 <__aeabi_dsub>
 80033b6:	2200      	movs	r2, #0
 80033b8:	2300      	movs	r3, #0
 80033ba:	4681      	mov	r9, r0
 80033bc:	468a      	mov	sl, r1
 80033be:	f7fd fb03 	bl	80009c8 <__aeabi_dcmpeq>
 80033c2:	2800      	cmp	r0, #0
 80033c4:	f47f ae07 	bne.w	8002fd6 <_strtod_l+0x57e>
 80033c8:	e73e      	b.n	8003248 <_strtod_l+0x7f0>
 80033ca:	9904      	ldr	r1, [sp, #16]
 80033cc:	4640      	mov	r0, r8
 80033ce:	f001 ff22 	bl	8005216 <__ratio>
 80033d2:	2200      	movs	r2, #0
 80033d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033d8:	4606      	mov	r6, r0
 80033da:	460f      	mov	r7, r1
 80033dc:	f7fd fb08 	bl	80009f0 <__aeabi_dcmple>
 80033e0:	2800      	cmp	r0, #0
 80033e2:	d075      	beq.n	80034d0 <_strtod_l+0xa78>
 80033e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033e6:	2b00      	cmp	r3, #0
 80033e8:	d047      	beq.n	800347a <_strtod_l+0xa22>
 80033ea:	2600      	movs	r6, #0
 80033ec:	4f68      	ldr	r7, [pc, #416]	; (8003590 <_strtod_l+0xb38>)
 80033ee:	4d68      	ldr	r5, [pc, #416]	; (8003590 <_strtod_l+0xb38>)
 80033f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033f2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80033f6:	0d1b      	lsrs	r3, r3, #20
 80033f8:	051b      	lsls	r3, r3, #20
 80033fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80033fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80033fe:	4b65      	ldr	r3, [pc, #404]	; (8003594 <_strtod_l+0xb3c>)
 8003400:	429a      	cmp	r2, r3
 8003402:	f040 80cf 	bne.w	80035a4 <_strtod_l+0xb4c>
 8003406:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800340a:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 800340e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003410:	4648      	mov	r0, r9
 8003412:	f1a3 7a54 	sub.w	sl, r3, #55574528	; 0x3500000
 8003416:	4651      	mov	r1, sl
 8003418:	f001 fe38 	bl	800508c <__ulp>
 800341c:	4602      	mov	r2, r0
 800341e:	460b      	mov	r3, r1
 8003420:	4630      	mov	r0, r6
 8003422:	4639      	mov	r1, r7
 8003424:	f7fd f868 	bl	80004f8 <__aeabi_dmul>
 8003428:	464a      	mov	r2, r9
 800342a:	4653      	mov	r3, sl
 800342c:	f7fc feae 	bl	800018c <__adddf3>
 8003430:	460b      	mov	r3, r1
 8003432:	4954      	ldr	r1, [pc, #336]	; (8003584 <_strtod_l+0xb2c>)
 8003434:	4a58      	ldr	r2, [pc, #352]	; (8003598 <_strtod_l+0xb40>)
 8003436:	4019      	ands	r1, r3
 8003438:	4291      	cmp	r1, r2
 800343a:	4681      	mov	r9, r0
 800343c:	d95e      	bls.n	80034fc <_strtod_l+0xaa4>
 800343e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003440:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003444:	4293      	cmp	r3, r2
 8003446:	d103      	bne.n	8003450 <_strtod_l+0x9f8>
 8003448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800344a:	3301      	adds	r3, #1
 800344c:	f43f ad26 	beq.w	8002e9c <_strtod_l+0x444>
 8003450:	f04f 39ff 	mov.w	r9, #4294967295
 8003454:	f8df a130 	ldr.w	sl, [pc, #304]	; 8003588 <_strtod_l+0xb30>
 8003458:	991c      	ldr	r1, [sp, #112]	; 0x70
 800345a:	4658      	mov	r0, fp
 800345c:	f001 fb7f 	bl	8004b5e <_Bfree>
 8003460:	9906      	ldr	r1, [sp, #24]
 8003462:	4658      	mov	r0, fp
 8003464:	f001 fb7b 	bl	8004b5e <_Bfree>
 8003468:	9904      	ldr	r1, [sp, #16]
 800346a:	4658      	mov	r0, fp
 800346c:	f001 fb77 	bl	8004b5e <_Bfree>
 8003470:	4641      	mov	r1, r8
 8003472:	4658      	mov	r0, fp
 8003474:	f001 fb73 	bl	8004b5e <_Bfree>
 8003478:	e617      	b.n	80030aa <_strtod_l+0x652>
 800347a:	f1b9 0f00 	cmp.w	r9, #0
 800347e:	d119      	bne.n	80034b4 <_strtod_l+0xa5c>
 8003480:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003482:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003486:	b9e3      	cbnz	r3, 80034c2 <_strtod_l+0xa6a>
 8003488:	2200      	movs	r2, #0
 800348a:	4b41      	ldr	r3, [pc, #260]	; (8003590 <_strtod_l+0xb38>)
 800348c:	4630      	mov	r0, r6
 800348e:	4639      	mov	r1, r7
 8003490:	f7fd faa4 	bl	80009dc <__aeabi_dcmplt>
 8003494:	b9c8      	cbnz	r0, 80034ca <_strtod_l+0xa72>
 8003496:	2200      	movs	r2, #0
 8003498:	4b40      	ldr	r3, [pc, #256]	; (800359c <_strtod_l+0xb44>)
 800349a:	4630      	mov	r0, r6
 800349c:	4639      	mov	r1, r7
 800349e:	f7fd f82b 	bl	80004f8 <__aeabi_dmul>
 80034a2:	4604      	mov	r4, r0
 80034a4:	460d      	mov	r5, r1
 80034a6:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80034aa:	9418      	str	r4, [sp, #96]	; 0x60
 80034ac:	9319      	str	r3, [sp, #100]	; 0x64
 80034ae:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 80034b2:	e79d      	b.n	80033f0 <_strtod_l+0x998>
 80034b4:	f1b9 0f01 	cmp.w	r9, #1
 80034b8:	d103      	bne.n	80034c2 <_strtod_l+0xa6a>
 80034ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034bc:	2b00      	cmp	r3, #0
 80034be:	f43f ad8a 	beq.w	8002fd6 <_strtod_l+0x57e>
 80034c2:	2600      	movs	r6, #0
 80034c4:	4f36      	ldr	r7, [pc, #216]	; (80035a0 <_strtod_l+0xb48>)
 80034c6:	2400      	movs	r4, #0
 80034c8:	e791      	b.n	80033ee <_strtod_l+0x996>
 80034ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80034cc:	4d33      	ldr	r5, [pc, #204]	; (800359c <_strtod_l+0xb44>)
 80034ce:	e7ea      	b.n	80034a6 <_strtod_l+0xa4e>
 80034d0:	4b32      	ldr	r3, [pc, #200]	; (800359c <_strtod_l+0xb44>)
 80034d2:	2200      	movs	r2, #0
 80034d4:	4630      	mov	r0, r6
 80034d6:	4639      	mov	r1, r7
 80034d8:	f7fd f80e 	bl	80004f8 <__aeabi_dmul>
 80034dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80034de:	4604      	mov	r4, r0
 80034e0:	460d      	mov	r5, r1
 80034e2:	b933      	cbnz	r3, 80034f2 <_strtod_l+0xa9a>
 80034e4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80034e8:	9010      	str	r0, [sp, #64]	; 0x40
 80034ea:	9311      	str	r3, [sp, #68]	; 0x44
 80034ec:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80034f0:	e77e      	b.n	80033f0 <_strtod_l+0x998>
 80034f2:	4602      	mov	r2, r0
 80034f4:	460b      	mov	r3, r1
 80034f6:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80034fa:	e7f7      	b.n	80034ec <_strtod_l+0xa94>
 80034fc:	f103 7a54 	add.w	sl, r3, #55574528	; 0x3500000
 8003500:	9b05      	ldr	r3, [sp, #20]
 8003502:	2b00      	cmp	r3, #0
 8003504:	d1a8      	bne.n	8003458 <_strtod_l+0xa00>
 8003506:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800350a:	0d1b      	lsrs	r3, r3, #20
 800350c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800350e:	051b      	lsls	r3, r3, #20
 8003510:	429a      	cmp	r2, r3
 8003512:	4656      	mov	r6, sl
 8003514:	d1a0      	bne.n	8003458 <_strtod_l+0xa00>
 8003516:	4629      	mov	r1, r5
 8003518:	4620      	mov	r0, r4
 800351a:	f7fd fa9d 	bl	8000a58 <__aeabi_d2iz>
 800351e:	f7fc ff81 	bl	8000424 <__aeabi_i2d>
 8003522:	460b      	mov	r3, r1
 8003524:	4602      	mov	r2, r0
 8003526:	4629      	mov	r1, r5
 8003528:	4620      	mov	r0, r4
 800352a:	f7fc fe2d 	bl	8000188 <__aeabi_dsub>
 800352e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003530:	4604      	mov	r4, r0
 8003532:	460d      	mov	r5, r1
 8003534:	b933      	cbnz	r3, 8003544 <_strtod_l+0xaec>
 8003536:	f1b9 0f00 	cmp.w	r9, #0
 800353a:	d103      	bne.n	8003544 <_strtod_l+0xaec>
 800353c:	f3ca 0613 	ubfx	r6, sl, #0, #20
 8003540:	2e00      	cmp	r6, #0
 8003542:	d06a      	beq.n	800361a <_strtod_l+0xbc2>
 8003544:	a30a      	add	r3, pc, #40	; (adr r3, 8003570 <_strtod_l+0xb18>)
 8003546:	e9d3 2300 	ldrd	r2, r3, [r3]
 800354a:	4620      	mov	r0, r4
 800354c:	4629      	mov	r1, r5
 800354e:	f7fd fa45 	bl	80009dc <__aeabi_dcmplt>
 8003552:	2800      	cmp	r0, #0
 8003554:	f47f acad 	bne.w	8002eb2 <_strtod_l+0x45a>
 8003558:	a307      	add	r3, pc, #28	; (adr r3, 8003578 <_strtod_l+0xb20>)
 800355a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800355e:	4620      	mov	r0, r4
 8003560:	4629      	mov	r1, r5
 8003562:	f7fd fa59 	bl	8000a18 <__aeabi_dcmpgt>
 8003566:	2800      	cmp	r0, #0
 8003568:	f43f af76 	beq.w	8003458 <_strtod_l+0xa00>
 800356c:	e4a1      	b.n	8002eb2 <_strtod_l+0x45a>
 800356e:	bf00      	nop
 8003570:	94a03595 	.word	0x94a03595
 8003574:	3fdfffff 	.word	0x3fdfffff
 8003578:	35afe535 	.word	0x35afe535
 800357c:	3fe00000 	.word	0x3fe00000
 8003580:	000fffff 	.word	0x000fffff
 8003584:	7ff00000 	.word	0x7ff00000
 8003588:	7fefffff 	.word	0x7fefffff
 800358c:	39500000 	.word	0x39500000
 8003590:	3ff00000 	.word	0x3ff00000
 8003594:	7fe00000 	.word	0x7fe00000
 8003598:	7c9fffff 	.word	0x7c9fffff
 800359c:	3fe00000 	.word	0x3fe00000
 80035a0:	bff00000 	.word	0xbff00000
 80035a4:	9b05      	ldr	r3, [sp, #20]
 80035a6:	b313      	cbz	r3, 80035ee <_strtod_l+0xb96>
 80035a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80035aa:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80035ae:	d81e      	bhi.n	80035ee <_strtod_l+0xb96>
 80035b0:	a325      	add	r3, pc, #148	; (adr r3, 8003648 <_strtod_l+0xbf0>)
 80035b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035b6:	4620      	mov	r0, r4
 80035b8:	4629      	mov	r1, r5
 80035ba:	f7fd fa19 	bl	80009f0 <__aeabi_dcmple>
 80035be:	b190      	cbz	r0, 80035e6 <_strtod_l+0xb8e>
 80035c0:	4629      	mov	r1, r5
 80035c2:	4620      	mov	r0, r4
 80035c4:	f7fd fa70 	bl	8000aa8 <__aeabi_d2uiz>
 80035c8:	2800      	cmp	r0, #0
 80035ca:	bf08      	it	eq
 80035cc:	2001      	moveq	r0, #1
 80035ce:	f7fc ff19 	bl	8000404 <__aeabi_ui2d>
 80035d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035d4:	4604      	mov	r4, r0
 80035d6:	460d      	mov	r5, r1
 80035d8:	b9d3      	cbnz	r3, 8003610 <_strtod_l+0xbb8>
 80035da:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80035de:	9012      	str	r0, [sp, #72]	; 0x48
 80035e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80035e2:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 80035e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80035e8:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 80035ec:	1a9f      	subs	r7, r3, r2
 80035ee:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80035f2:	f001 fd4b 	bl	800508c <__ulp>
 80035f6:	4602      	mov	r2, r0
 80035f8:	460b      	mov	r3, r1
 80035fa:	4630      	mov	r0, r6
 80035fc:	4639      	mov	r1, r7
 80035fe:	f7fc ff7b 	bl	80004f8 <__aeabi_dmul>
 8003602:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003606:	f7fc fdc1 	bl	800018c <__adddf3>
 800360a:	4681      	mov	r9, r0
 800360c:	468a      	mov	sl, r1
 800360e:	e777      	b.n	8003500 <_strtod_l+0xaa8>
 8003610:	4602      	mov	r2, r0
 8003612:	460b      	mov	r3, r1
 8003614:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003618:	e7e3      	b.n	80035e2 <_strtod_l+0xb8a>
 800361a:	a30d      	add	r3, pc, #52	; (adr r3, 8003650 <_strtod_l+0xbf8>)
 800361c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003620:	f7fd f9dc 	bl	80009dc <__aeabi_dcmplt>
 8003624:	e79f      	b.n	8003566 <_strtod_l+0xb0e>
 8003626:	2300      	movs	r3, #0
 8003628:	930d      	str	r3, [sp, #52]	; 0x34
 800362a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800362c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800362e:	6013      	str	r3, [r2, #0]
 8003630:	f7ff ba55 	b.w	8002ade <_strtod_l+0x86>
 8003634:	2b65      	cmp	r3, #101	; 0x65
 8003636:	f04f 0200 	mov.w	r2, #0
 800363a:	f43f ab42 	beq.w	8002cc2 <_strtod_l+0x26a>
 800363e:	2101      	movs	r1, #1
 8003640:	4614      	mov	r4, r2
 8003642:	9105      	str	r1, [sp, #20]
 8003644:	f7ff babf 	b.w	8002bc6 <_strtod_l+0x16e>
 8003648:	ffc00000 	.word	0xffc00000
 800364c:	41dfffff 	.word	0x41dfffff
 8003650:	94a03595 	.word	0x94a03595
 8003654:	3fcfffff 	.word	0x3fcfffff

08003658 <_strtod_r>:
 8003658:	4b05      	ldr	r3, [pc, #20]	; (8003670 <_strtod_r+0x18>)
 800365a:	b410      	push	{r4}
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	4c05      	ldr	r4, [pc, #20]	; (8003674 <_strtod_r+0x1c>)
 8003660:	6a1b      	ldr	r3, [r3, #32]
 8003662:	2b00      	cmp	r3, #0
 8003664:	bf08      	it	eq
 8003666:	4623      	moveq	r3, r4
 8003668:	bc10      	pop	{r4}
 800366a:	f7ff b9f5 	b.w	8002a58 <_strtod_l>
 800366e:	bf00      	nop
 8003670:	20000004 	.word	0x20000004
 8003674:	20000068 	.word	0x20000068

08003678 <_strtol_l.isra.0>:
 8003678:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800367c:	4680      	mov	r8, r0
 800367e:	4689      	mov	r9, r1
 8003680:	4692      	mov	sl, r2
 8003682:	461e      	mov	r6, r3
 8003684:	460f      	mov	r7, r1
 8003686:	463d      	mov	r5, r7
 8003688:	9808      	ldr	r0, [sp, #32]
 800368a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800368e:	f001 f9eb 	bl	8004a68 <__locale_ctype_ptr_l>
 8003692:	4420      	add	r0, r4
 8003694:	7843      	ldrb	r3, [r0, #1]
 8003696:	f013 0308 	ands.w	r3, r3, #8
 800369a:	d132      	bne.n	8003702 <_strtol_l.isra.0+0x8a>
 800369c:	2c2d      	cmp	r4, #45	; 0x2d
 800369e:	d132      	bne.n	8003706 <_strtol_l.isra.0+0x8e>
 80036a0:	2201      	movs	r2, #1
 80036a2:	787c      	ldrb	r4, [r7, #1]
 80036a4:	1cbd      	adds	r5, r7, #2
 80036a6:	2e00      	cmp	r6, #0
 80036a8:	d05d      	beq.n	8003766 <_strtol_l.isra.0+0xee>
 80036aa:	2e10      	cmp	r6, #16
 80036ac:	d109      	bne.n	80036c2 <_strtol_l.isra.0+0x4a>
 80036ae:	2c30      	cmp	r4, #48	; 0x30
 80036b0:	d107      	bne.n	80036c2 <_strtol_l.isra.0+0x4a>
 80036b2:	782b      	ldrb	r3, [r5, #0]
 80036b4:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80036b8:	2b58      	cmp	r3, #88	; 0x58
 80036ba:	d14f      	bne.n	800375c <_strtol_l.isra.0+0xe4>
 80036bc:	2610      	movs	r6, #16
 80036be:	786c      	ldrb	r4, [r5, #1]
 80036c0:	3502      	adds	r5, #2
 80036c2:	2a00      	cmp	r2, #0
 80036c4:	bf14      	ite	ne
 80036c6:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 80036ca:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 80036ce:	2700      	movs	r7, #0
 80036d0:	fbb1 fcf6 	udiv	ip, r1, r6
 80036d4:	4638      	mov	r0, r7
 80036d6:	fb06 1e1c 	mls	lr, r6, ip, r1
 80036da:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80036de:	2b09      	cmp	r3, #9
 80036e0:	d817      	bhi.n	8003712 <_strtol_l.isra.0+0x9a>
 80036e2:	461c      	mov	r4, r3
 80036e4:	42a6      	cmp	r6, r4
 80036e6:	dd23      	ble.n	8003730 <_strtol_l.isra.0+0xb8>
 80036e8:	1c7b      	adds	r3, r7, #1
 80036ea:	d007      	beq.n	80036fc <_strtol_l.isra.0+0x84>
 80036ec:	4584      	cmp	ip, r0
 80036ee:	d31c      	bcc.n	800372a <_strtol_l.isra.0+0xb2>
 80036f0:	d101      	bne.n	80036f6 <_strtol_l.isra.0+0x7e>
 80036f2:	45a6      	cmp	lr, r4
 80036f4:	db19      	blt.n	800372a <_strtol_l.isra.0+0xb2>
 80036f6:	2701      	movs	r7, #1
 80036f8:	fb00 4006 	mla	r0, r0, r6, r4
 80036fc:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003700:	e7eb      	b.n	80036da <_strtol_l.isra.0+0x62>
 8003702:	462f      	mov	r7, r5
 8003704:	e7bf      	b.n	8003686 <_strtol_l.isra.0+0xe>
 8003706:	2c2b      	cmp	r4, #43	; 0x2b
 8003708:	bf04      	itt	eq
 800370a:	1cbd      	addeq	r5, r7, #2
 800370c:	787c      	ldrbeq	r4, [r7, #1]
 800370e:	461a      	mov	r2, r3
 8003710:	e7c9      	b.n	80036a6 <_strtol_l.isra.0+0x2e>
 8003712:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 8003716:	2b19      	cmp	r3, #25
 8003718:	d801      	bhi.n	800371e <_strtol_l.isra.0+0xa6>
 800371a:	3c37      	subs	r4, #55	; 0x37
 800371c:	e7e2      	b.n	80036e4 <_strtol_l.isra.0+0x6c>
 800371e:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 8003722:	2b19      	cmp	r3, #25
 8003724:	d804      	bhi.n	8003730 <_strtol_l.isra.0+0xb8>
 8003726:	3c57      	subs	r4, #87	; 0x57
 8003728:	e7dc      	b.n	80036e4 <_strtol_l.isra.0+0x6c>
 800372a:	f04f 37ff 	mov.w	r7, #4294967295
 800372e:	e7e5      	b.n	80036fc <_strtol_l.isra.0+0x84>
 8003730:	1c7b      	adds	r3, r7, #1
 8003732:	d108      	bne.n	8003746 <_strtol_l.isra.0+0xce>
 8003734:	2322      	movs	r3, #34	; 0x22
 8003736:	4608      	mov	r0, r1
 8003738:	f8c8 3000 	str.w	r3, [r8]
 800373c:	f1ba 0f00 	cmp.w	sl, #0
 8003740:	d107      	bne.n	8003752 <_strtol_l.isra.0+0xda>
 8003742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003746:	b102      	cbz	r2, 800374a <_strtol_l.isra.0+0xd2>
 8003748:	4240      	negs	r0, r0
 800374a:	f1ba 0f00 	cmp.w	sl, #0
 800374e:	d0f8      	beq.n	8003742 <_strtol_l.isra.0+0xca>
 8003750:	b10f      	cbz	r7, 8003756 <_strtol_l.isra.0+0xde>
 8003752:	f105 39ff 	add.w	r9, r5, #4294967295
 8003756:	f8ca 9000 	str.w	r9, [sl]
 800375a:	e7f2      	b.n	8003742 <_strtol_l.isra.0+0xca>
 800375c:	2430      	movs	r4, #48	; 0x30
 800375e:	2e00      	cmp	r6, #0
 8003760:	d1af      	bne.n	80036c2 <_strtol_l.isra.0+0x4a>
 8003762:	2608      	movs	r6, #8
 8003764:	e7ad      	b.n	80036c2 <_strtol_l.isra.0+0x4a>
 8003766:	2c30      	cmp	r4, #48	; 0x30
 8003768:	d0a3      	beq.n	80036b2 <_strtol_l.isra.0+0x3a>
 800376a:	260a      	movs	r6, #10
 800376c:	e7a9      	b.n	80036c2 <_strtol_l.isra.0+0x4a>
	...

08003770 <_strtol_r>:
 8003770:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003772:	4c06      	ldr	r4, [pc, #24]	; (800378c <_strtol_r+0x1c>)
 8003774:	4d06      	ldr	r5, [pc, #24]	; (8003790 <_strtol_r+0x20>)
 8003776:	6824      	ldr	r4, [r4, #0]
 8003778:	6a24      	ldr	r4, [r4, #32]
 800377a:	2c00      	cmp	r4, #0
 800377c:	bf08      	it	eq
 800377e:	462c      	moveq	r4, r5
 8003780:	9400      	str	r4, [sp, #0]
 8003782:	f7ff ff79 	bl	8003678 <_strtol_l.isra.0>
 8003786:	b003      	add	sp, #12
 8003788:	bd30      	pop	{r4, r5, pc}
 800378a:	bf00      	nop
 800378c:	20000004 	.word	0x20000004
 8003790:	20000068 	.word	0x20000068

08003794 <quorem>:
 8003794:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003798:	6903      	ldr	r3, [r0, #16]
 800379a:	690c      	ldr	r4, [r1, #16]
 800379c:	4680      	mov	r8, r0
 800379e:	42a3      	cmp	r3, r4
 80037a0:	f2c0 8084 	blt.w	80038ac <quorem+0x118>
 80037a4:	3c01      	subs	r4, #1
 80037a6:	f101 0714 	add.w	r7, r1, #20
 80037aa:	f100 0614 	add.w	r6, r0, #20
 80037ae:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 80037b2:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 80037b6:	3501      	adds	r5, #1
 80037b8:	fbb0 f5f5 	udiv	r5, r0, r5
 80037bc:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 80037c0:	eb06 030c 	add.w	r3, r6, ip
 80037c4:	eb07 090c 	add.w	r9, r7, ip
 80037c8:	9301      	str	r3, [sp, #4]
 80037ca:	b39d      	cbz	r5, 8003834 <quorem+0xa0>
 80037cc:	f04f 0a00 	mov.w	sl, #0
 80037d0:	4638      	mov	r0, r7
 80037d2:	46b6      	mov	lr, r6
 80037d4:	46d3      	mov	fp, sl
 80037d6:	f850 2b04 	ldr.w	r2, [r0], #4
 80037da:	b293      	uxth	r3, r2
 80037dc:	fb05 a303 	mla	r3, r5, r3, sl
 80037e0:	0c12      	lsrs	r2, r2, #16
 80037e2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80037e6:	fb05 a202 	mla	r2, r5, r2, sl
 80037ea:	b29b      	uxth	r3, r3
 80037ec:	ebab 0303 	sub.w	r3, fp, r3
 80037f0:	f8de b000 	ldr.w	fp, [lr]
 80037f4:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80037f8:	fa1f fb8b 	uxth.w	fp, fp
 80037fc:	445b      	add	r3, fp
 80037fe:	fa1f fb82 	uxth.w	fp, r2
 8003802:	f8de 2000 	ldr.w	r2, [lr]
 8003806:	4581      	cmp	r9, r0
 8003808:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800380c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003810:	b29b      	uxth	r3, r3
 8003812:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003816:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800381a:	f84e 3b04 	str.w	r3, [lr], #4
 800381e:	d2da      	bcs.n	80037d6 <quorem+0x42>
 8003820:	f856 300c 	ldr.w	r3, [r6, ip]
 8003824:	b933      	cbnz	r3, 8003834 <quorem+0xa0>
 8003826:	9b01      	ldr	r3, [sp, #4]
 8003828:	3b04      	subs	r3, #4
 800382a:	429e      	cmp	r6, r3
 800382c:	461a      	mov	r2, r3
 800382e:	d331      	bcc.n	8003894 <quorem+0x100>
 8003830:	f8c8 4010 	str.w	r4, [r8, #16]
 8003834:	4640      	mov	r0, r8
 8003836:	f001 fbb1 	bl	8004f9c <__mcmp>
 800383a:	2800      	cmp	r0, #0
 800383c:	db26      	blt.n	800388c <quorem+0xf8>
 800383e:	4630      	mov	r0, r6
 8003840:	f04f 0c00 	mov.w	ip, #0
 8003844:	3501      	adds	r5, #1
 8003846:	f857 1b04 	ldr.w	r1, [r7], #4
 800384a:	f8d0 e000 	ldr.w	lr, [r0]
 800384e:	b28b      	uxth	r3, r1
 8003850:	ebac 0303 	sub.w	r3, ip, r3
 8003854:	fa1f f28e 	uxth.w	r2, lr
 8003858:	4413      	add	r3, r2
 800385a:	0c0a      	lsrs	r2, r1, #16
 800385c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003860:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003864:	b29b      	uxth	r3, r3
 8003866:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800386a:	45b9      	cmp	r9, r7
 800386c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003870:	f840 3b04 	str.w	r3, [r0], #4
 8003874:	d2e7      	bcs.n	8003846 <quorem+0xb2>
 8003876:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800387a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800387e:	b92a      	cbnz	r2, 800388c <quorem+0xf8>
 8003880:	3b04      	subs	r3, #4
 8003882:	429e      	cmp	r6, r3
 8003884:	461a      	mov	r2, r3
 8003886:	d30b      	bcc.n	80038a0 <quorem+0x10c>
 8003888:	f8c8 4010 	str.w	r4, [r8, #16]
 800388c:	4628      	mov	r0, r5
 800388e:	b003      	add	sp, #12
 8003890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003894:	6812      	ldr	r2, [r2, #0]
 8003896:	3b04      	subs	r3, #4
 8003898:	2a00      	cmp	r2, #0
 800389a:	d1c9      	bne.n	8003830 <quorem+0x9c>
 800389c:	3c01      	subs	r4, #1
 800389e:	e7c4      	b.n	800382a <quorem+0x96>
 80038a0:	6812      	ldr	r2, [r2, #0]
 80038a2:	3b04      	subs	r3, #4
 80038a4:	2a00      	cmp	r2, #0
 80038a6:	d1ef      	bne.n	8003888 <quorem+0xf4>
 80038a8:	3c01      	subs	r4, #1
 80038aa:	e7ea      	b.n	8003882 <quorem+0xee>
 80038ac:	2000      	movs	r0, #0
 80038ae:	e7ee      	b.n	800388e <quorem+0xfa>

080038b0 <_dtoa_r>:
 80038b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038b4:	4616      	mov	r6, r2
 80038b6:	461f      	mov	r7, r3
 80038b8:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80038ba:	b095      	sub	sp, #84	; 0x54
 80038bc:	4604      	mov	r4, r0
 80038be:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 80038c2:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80038c6:	b93d      	cbnz	r5, 80038d8 <_dtoa_r+0x28>
 80038c8:	2010      	movs	r0, #16
 80038ca:	f001 f8e1 	bl	8004a90 <malloc>
 80038ce:	6260      	str	r0, [r4, #36]	; 0x24
 80038d0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80038d4:	6005      	str	r5, [r0, #0]
 80038d6:	60c5      	str	r5, [r0, #12]
 80038d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038da:	6819      	ldr	r1, [r3, #0]
 80038dc:	b151      	cbz	r1, 80038f4 <_dtoa_r+0x44>
 80038de:	685a      	ldr	r2, [r3, #4]
 80038e0:	2301      	movs	r3, #1
 80038e2:	4093      	lsls	r3, r2
 80038e4:	604a      	str	r2, [r1, #4]
 80038e6:	608b      	str	r3, [r1, #8]
 80038e8:	4620      	mov	r0, r4
 80038ea:	f001 f938 	bl	8004b5e <_Bfree>
 80038ee:	2200      	movs	r2, #0
 80038f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038f2:	601a      	str	r2, [r3, #0]
 80038f4:	1e3b      	subs	r3, r7, #0
 80038f6:	bfaf      	iteee	ge
 80038f8:	2300      	movge	r3, #0
 80038fa:	2201      	movlt	r2, #1
 80038fc:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003900:	9303      	strlt	r3, [sp, #12]
 8003902:	bfac      	ite	ge
 8003904:	f8c8 3000 	strge.w	r3, [r8]
 8003908:	f8c8 2000 	strlt.w	r2, [r8]
 800390c:	4bae      	ldr	r3, [pc, #696]	; (8003bc8 <_dtoa_r+0x318>)
 800390e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003912:	ea33 0308 	bics.w	r3, r3, r8
 8003916:	d11b      	bne.n	8003950 <_dtoa_r+0xa0>
 8003918:	f242 730f 	movw	r3, #9999	; 0x270f
 800391c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800391e:	6013      	str	r3, [r2, #0]
 8003920:	9b02      	ldr	r3, [sp, #8]
 8003922:	b923      	cbnz	r3, 800392e <_dtoa_r+0x7e>
 8003924:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8003928:	2800      	cmp	r0, #0
 800392a:	f000 8545 	beq.w	80043b8 <_dtoa_r+0xb08>
 800392e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003930:	b953      	cbnz	r3, 8003948 <_dtoa_r+0x98>
 8003932:	4ba6      	ldr	r3, [pc, #664]	; (8003bcc <_dtoa_r+0x31c>)
 8003934:	e021      	b.n	800397a <_dtoa_r+0xca>
 8003936:	4ba6      	ldr	r3, [pc, #664]	; (8003bd0 <_dtoa_r+0x320>)
 8003938:	9306      	str	r3, [sp, #24]
 800393a:	3308      	adds	r3, #8
 800393c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800393e:	6013      	str	r3, [r2, #0]
 8003940:	9806      	ldr	r0, [sp, #24]
 8003942:	b015      	add	sp, #84	; 0x54
 8003944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003948:	4ba0      	ldr	r3, [pc, #640]	; (8003bcc <_dtoa_r+0x31c>)
 800394a:	9306      	str	r3, [sp, #24]
 800394c:	3303      	adds	r3, #3
 800394e:	e7f5      	b.n	800393c <_dtoa_r+0x8c>
 8003950:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003954:	2200      	movs	r2, #0
 8003956:	2300      	movs	r3, #0
 8003958:	4630      	mov	r0, r6
 800395a:	4639      	mov	r1, r7
 800395c:	f7fd f834 	bl	80009c8 <__aeabi_dcmpeq>
 8003960:	4682      	mov	sl, r0
 8003962:	b160      	cbz	r0, 800397e <_dtoa_r+0xce>
 8003964:	2301      	movs	r3, #1
 8003966:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003968:	6013      	str	r3, [r2, #0]
 800396a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800396c:	2b00      	cmp	r3, #0
 800396e:	f000 8520 	beq.w	80043b2 <_dtoa_r+0xb02>
 8003972:	4b98      	ldr	r3, [pc, #608]	; (8003bd4 <_dtoa_r+0x324>)
 8003974:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003976:	6013      	str	r3, [r2, #0]
 8003978:	3b01      	subs	r3, #1
 800397a:	9306      	str	r3, [sp, #24]
 800397c:	e7e0      	b.n	8003940 <_dtoa_r+0x90>
 800397e:	ab12      	add	r3, sp, #72	; 0x48
 8003980:	9301      	str	r3, [sp, #4]
 8003982:	ab13      	add	r3, sp, #76	; 0x4c
 8003984:	9300      	str	r3, [sp, #0]
 8003986:	4632      	mov	r2, r6
 8003988:	463b      	mov	r3, r7
 800398a:	4620      	mov	r0, r4
 800398c:	f001 fbf4 	bl	8005178 <__d2b>
 8003990:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003994:	4683      	mov	fp, r0
 8003996:	2d00      	cmp	r5, #0
 8003998:	d07d      	beq.n	8003a96 <_dtoa_r+0x1e6>
 800399a:	46b0      	mov	r8, r6
 800399c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80039a0:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 80039a4:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 80039a8:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80039ac:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 80039b0:	2200      	movs	r2, #0
 80039b2:	4b89      	ldr	r3, [pc, #548]	; (8003bd8 <_dtoa_r+0x328>)
 80039b4:	4640      	mov	r0, r8
 80039b6:	4649      	mov	r1, r9
 80039b8:	f7fc fbe6 	bl	8000188 <__aeabi_dsub>
 80039bc:	a37c      	add	r3, pc, #496	; (adr r3, 8003bb0 <_dtoa_r+0x300>)
 80039be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039c2:	f7fc fd99 	bl	80004f8 <__aeabi_dmul>
 80039c6:	a37c      	add	r3, pc, #496	; (adr r3, 8003bb8 <_dtoa_r+0x308>)
 80039c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039cc:	f7fc fbde 	bl	800018c <__adddf3>
 80039d0:	4606      	mov	r6, r0
 80039d2:	4628      	mov	r0, r5
 80039d4:	460f      	mov	r7, r1
 80039d6:	f7fc fd25 	bl	8000424 <__aeabi_i2d>
 80039da:	a379      	add	r3, pc, #484	; (adr r3, 8003bc0 <_dtoa_r+0x310>)
 80039dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039e0:	f7fc fd8a 	bl	80004f8 <__aeabi_dmul>
 80039e4:	4602      	mov	r2, r0
 80039e6:	460b      	mov	r3, r1
 80039e8:	4630      	mov	r0, r6
 80039ea:	4639      	mov	r1, r7
 80039ec:	f7fc fbce 	bl	800018c <__adddf3>
 80039f0:	4606      	mov	r6, r0
 80039f2:	460f      	mov	r7, r1
 80039f4:	f7fd f830 	bl	8000a58 <__aeabi_d2iz>
 80039f8:	2200      	movs	r2, #0
 80039fa:	4682      	mov	sl, r0
 80039fc:	2300      	movs	r3, #0
 80039fe:	4630      	mov	r0, r6
 8003a00:	4639      	mov	r1, r7
 8003a02:	f7fc ffeb 	bl	80009dc <__aeabi_dcmplt>
 8003a06:	b148      	cbz	r0, 8003a1c <_dtoa_r+0x16c>
 8003a08:	4650      	mov	r0, sl
 8003a0a:	f7fc fd0b 	bl	8000424 <__aeabi_i2d>
 8003a0e:	4632      	mov	r2, r6
 8003a10:	463b      	mov	r3, r7
 8003a12:	f7fc ffd9 	bl	80009c8 <__aeabi_dcmpeq>
 8003a16:	b908      	cbnz	r0, 8003a1c <_dtoa_r+0x16c>
 8003a18:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003a1c:	f1ba 0f16 	cmp.w	sl, #22
 8003a20:	d85a      	bhi.n	8003ad8 <_dtoa_r+0x228>
 8003a22:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003a26:	496d      	ldr	r1, [pc, #436]	; (8003bdc <_dtoa_r+0x32c>)
 8003a28:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8003a2c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003a30:	f7fc fff2 	bl	8000a18 <__aeabi_dcmpgt>
 8003a34:	2800      	cmp	r0, #0
 8003a36:	d051      	beq.n	8003adc <_dtoa_r+0x22c>
 8003a38:	2300      	movs	r3, #0
 8003a3a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003a3e:	930d      	str	r3, [sp, #52]	; 0x34
 8003a40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003a42:	1b5d      	subs	r5, r3, r5
 8003a44:	1e6b      	subs	r3, r5, #1
 8003a46:	9307      	str	r3, [sp, #28]
 8003a48:	bf43      	ittte	mi
 8003a4a:	2300      	movmi	r3, #0
 8003a4c:	f1c5 0901 	rsbmi	r9, r5, #1
 8003a50:	9307      	strmi	r3, [sp, #28]
 8003a52:	f04f 0900 	movpl.w	r9, #0
 8003a56:	f1ba 0f00 	cmp.w	sl, #0
 8003a5a:	db41      	blt.n	8003ae0 <_dtoa_r+0x230>
 8003a5c:	9b07      	ldr	r3, [sp, #28]
 8003a5e:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8003a62:	4453      	add	r3, sl
 8003a64:	9307      	str	r3, [sp, #28]
 8003a66:	2300      	movs	r3, #0
 8003a68:	9308      	str	r3, [sp, #32]
 8003a6a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003a6c:	2b09      	cmp	r3, #9
 8003a6e:	f200 808f 	bhi.w	8003b90 <_dtoa_r+0x2e0>
 8003a72:	2b05      	cmp	r3, #5
 8003a74:	bfc4      	itt	gt
 8003a76:	3b04      	subgt	r3, #4
 8003a78:	931e      	strgt	r3, [sp, #120]	; 0x78
 8003a7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003a7c:	bfc8      	it	gt
 8003a7e:	2500      	movgt	r5, #0
 8003a80:	f1a3 0302 	sub.w	r3, r3, #2
 8003a84:	bfd8      	it	le
 8003a86:	2501      	movle	r5, #1
 8003a88:	2b03      	cmp	r3, #3
 8003a8a:	f200 808d 	bhi.w	8003ba8 <_dtoa_r+0x2f8>
 8003a8e:	e8df f003 	tbb	[pc, r3]
 8003a92:	7d7b      	.short	0x7d7b
 8003a94:	6f2f      	.short	0x6f2f
 8003a96:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8003a9a:	441d      	add	r5, r3
 8003a9c:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8003aa0:	2820      	cmp	r0, #32
 8003aa2:	dd13      	ble.n	8003acc <_dtoa_r+0x21c>
 8003aa4:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8003aa8:	9b02      	ldr	r3, [sp, #8]
 8003aaa:	fa08 f800 	lsl.w	r8, r8, r0
 8003aae:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8003ab2:	fa23 f000 	lsr.w	r0, r3, r0
 8003ab6:	ea48 0000 	orr.w	r0, r8, r0
 8003aba:	f7fc fca3 	bl	8000404 <__aeabi_ui2d>
 8003abe:	2301      	movs	r3, #1
 8003ac0:	4680      	mov	r8, r0
 8003ac2:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 8003ac6:	3d01      	subs	r5, #1
 8003ac8:	9310      	str	r3, [sp, #64]	; 0x40
 8003aca:	e771      	b.n	80039b0 <_dtoa_r+0x100>
 8003acc:	9b02      	ldr	r3, [sp, #8]
 8003ace:	f1c0 0020 	rsb	r0, r0, #32
 8003ad2:	fa03 f000 	lsl.w	r0, r3, r0
 8003ad6:	e7f0      	b.n	8003aba <_dtoa_r+0x20a>
 8003ad8:	2301      	movs	r3, #1
 8003ada:	e7b0      	b.n	8003a3e <_dtoa_r+0x18e>
 8003adc:	900d      	str	r0, [sp, #52]	; 0x34
 8003ade:	e7af      	b.n	8003a40 <_dtoa_r+0x190>
 8003ae0:	f1ca 0300 	rsb	r3, sl, #0
 8003ae4:	9308      	str	r3, [sp, #32]
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	eba9 090a 	sub.w	r9, r9, sl
 8003aec:	930c      	str	r3, [sp, #48]	; 0x30
 8003aee:	e7bc      	b.n	8003a6a <_dtoa_r+0x1ba>
 8003af0:	2301      	movs	r3, #1
 8003af2:	9309      	str	r3, [sp, #36]	; 0x24
 8003af4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	dd74      	ble.n	8003be4 <_dtoa_r+0x334>
 8003afa:	4698      	mov	r8, r3
 8003afc:	9304      	str	r3, [sp, #16]
 8003afe:	2200      	movs	r2, #0
 8003b00:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003b02:	6072      	str	r2, [r6, #4]
 8003b04:	2204      	movs	r2, #4
 8003b06:	f102 0014 	add.w	r0, r2, #20
 8003b0a:	4298      	cmp	r0, r3
 8003b0c:	6871      	ldr	r1, [r6, #4]
 8003b0e:	d96e      	bls.n	8003bee <_dtoa_r+0x33e>
 8003b10:	4620      	mov	r0, r4
 8003b12:	f000 fff0 	bl	8004af6 <_Balloc>
 8003b16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b18:	6030      	str	r0, [r6, #0]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	f1b8 0f0e 	cmp.w	r8, #14
 8003b20:	9306      	str	r3, [sp, #24]
 8003b22:	f200 80ed 	bhi.w	8003d00 <_dtoa_r+0x450>
 8003b26:	2d00      	cmp	r5, #0
 8003b28:	f000 80ea 	beq.w	8003d00 <_dtoa_r+0x450>
 8003b2c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003b30:	f1ba 0f00 	cmp.w	sl, #0
 8003b34:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8003b38:	dd77      	ble.n	8003c2a <_dtoa_r+0x37a>
 8003b3a:	4a28      	ldr	r2, [pc, #160]	; (8003bdc <_dtoa_r+0x32c>)
 8003b3c:	f00a 030f 	and.w	r3, sl, #15
 8003b40:	ea4f 162a 	mov.w	r6, sl, asr #4
 8003b44:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003b48:	06f0      	lsls	r0, r6, #27
 8003b4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b4e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003b52:	d568      	bpl.n	8003c26 <_dtoa_r+0x376>
 8003b54:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003b58:	4b21      	ldr	r3, [pc, #132]	; (8003be0 <_dtoa_r+0x330>)
 8003b5a:	2503      	movs	r5, #3
 8003b5c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003b60:	f7fc fdf4 	bl	800074c <__aeabi_ddiv>
 8003b64:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003b68:	f006 060f 	and.w	r6, r6, #15
 8003b6c:	4f1c      	ldr	r7, [pc, #112]	; (8003be0 <_dtoa_r+0x330>)
 8003b6e:	e04f      	b.n	8003c10 <_dtoa_r+0x360>
 8003b70:	2301      	movs	r3, #1
 8003b72:	9309      	str	r3, [sp, #36]	; 0x24
 8003b74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003b76:	4453      	add	r3, sl
 8003b78:	f103 0801 	add.w	r8, r3, #1
 8003b7c:	9304      	str	r3, [sp, #16]
 8003b7e:	4643      	mov	r3, r8
 8003b80:	2b01      	cmp	r3, #1
 8003b82:	bfb8      	it	lt
 8003b84:	2301      	movlt	r3, #1
 8003b86:	e7ba      	b.n	8003afe <_dtoa_r+0x24e>
 8003b88:	2300      	movs	r3, #0
 8003b8a:	e7b2      	b.n	8003af2 <_dtoa_r+0x242>
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	e7f0      	b.n	8003b72 <_dtoa_r+0x2c2>
 8003b90:	2501      	movs	r5, #1
 8003b92:	2300      	movs	r3, #0
 8003b94:	9509      	str	r5, [sp, #36]	; 0x24
 8003b96:	931e      	str	r3, [sp, #120]	; 0x78
 8003b98:	f04f 33ff 	mov.w	r3, #4294967295
 8003b9c:	2200      	movs	r2, #0
 8003b9e:	9304      	str	r3, [sp, #16]
 8003ba0:	4698      	mov	r8, r3
 8003ba2:	2312      	movs	r3, #18
 8003ba4:	921f      	str	r2, [sp, #124]	; 0x7c
 8003ba6:	e7aa      	b.n	8003afe <_dtoa_r+0x24e>
 8003ba8:	2301      	movs	r3, #1
 8003baa:	9309      	str	r3, [sp, #36]	; 0x24
 8003bac:	e7f4      	b.n	8003b98 <_dtoa_r+0x2e8>
 8003bae:	bf00      	nop
 8003bb0:	636f4361 	.word	0x636f4361
 8003bb4:	3fd287a7 	.word	0x3fd287a7
 8003bb8:	8b60c8b3 	.word	0x8b60c8b3
 8003bbc:	3fc68a28 	.word	0x3fc68a28
 8003bc0:	509f79fb 	.word	0x509f79fb
 8003bc4:	3fd34413 	.word	0x3fd34413
 8003bc8:	7ff00000 	.word	0x7ff00000
 8003bcc:	08005909 	.word	0x08005909
 8003bd0:	08005900 	.word	0x08005900
 8003bd4:	08005885 	.word	0x08005885
 8003bd8:	3ff80000 	.word	0x3ff80000
 8003bdc:	08005940 	.word	0x08005940
 8003be0:	08005918 	.word	0x08005918
 8003be4:	2301      	movs	r3, #1
 8003be6:	9304      	str	r3, [sp, #16]
 8003be8:	4698      	mov	r8, r3
 8003bea:	461a      	mov	r2, r3
 8003bec:	e7da      	b.n	8003ba4 <_dtoa_r+0x2f4>
 8003bee:	3101      	adds	r1, #1
 8003bf0:	6071      	str	r1, [r6, #4]
 8003bf2:	0052      	lsls	r2, r2, #1
 8003bf4:	e787      	b.n	8003b06 <_dtoa_r+0x256>
 8003bf6:	07f1      	lsls	r1, r6, #31
 8003bf8:	d508      	bpl.n	8003c0c <_dtoa_r+0x35c>
 8003bfa:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003bfe:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003c02:	f7fc fc79 	bl	80004f8 <__aeabi_dmul>
 8003c06:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003c0a:	3501      	adds	r5, #1
 8003c0c:	1076      	asrs	r6, r6, #1
 8003c0e:	3708      	adds	r7, #8
 8003c10:	2e00      	cmp	r6, #0
 8003c12:	d1f0      	bne.n	8003bf6 <_dtoa_r+0x346>
 8003c14:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003c18:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003c1c:	f7fc fd96 	bl	800074c <__aeabi_ddiv>
 8003c20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003c24:	e01b      	b.n	8003c5e <_dtoa_r+0x3ae>
 8003c26:	2502      	movs	r5, #2
 8003c28:	e7a0      	b.n	8003b6c <_dtoa_r+0x2bc>
 8003c2a:	f000 80a4 	beq.w	8003d76 <_dtoa_r+0x4c6>
 8003c2e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003c32:	f1ca 0600 	rsb	r6, sl, #0
 8003c36:	4ba0      	ldr	r3, [pc, #640]	; (8003eb8 <_dtoa_r+0x608>)
 8003c38:	f006 020f 	and.w	r2, r6, #15
 8003c3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003c40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c44:	f7fc fc58 	bl	80004f8 <__aeabi_dmul>
 8003c48:	2502      	movs	r5, #2
 8003c4a:	2300      	movs	r3, #0
 8003c4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003c50:	4f9a      	ldr	r7, [pc, #616]	; (8003ebc <_dtoa_r+0x60c>)
 8003c52:	1136      	asrs	r6, r6, #4
 8003c54:	2e00      	cmp	r6, #0
 8003c56:	f040 8083 	bne.w	8003d60 <_dtoa_r+0x4b0>
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d1e0      	bne.n	8003c20 <_dtoa_r+0x370>
 8003c5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	f000 808a 	beq.w	8003d7a <_dtoa_r+0x4ca>
 8003c66:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003c6a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003c6e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003c72:	2200      	movs	r2, #0
 8003c74:	4b92      	ldr	r3, [pc, #584]	; (8003ec0 <_dtoa_r+0x610>)
 8003c76:	f7fc feb1 	bl	80009dc <__aeabi_dcmplt>
 8003c7a:	2800      	cmp	r0, #0
 8003c7c:	d07d      	beq.n	8003d7a <_dtoa_r+0x4ca>
 8003c7e:	f1b8 0f00 	cmp.w	r8, #0
 8003c82:	d07a      	beq.n	8003d7a <_dtoa_r+0x4ca>
 8003c84:	9b04      	ldr	r3, [sp, #16]
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	dd36      	ble.n	8003cf8 <_dtoa_r+0x448>
 8003c8a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003c8e:	2200      	movs	r2, #0
 8003c90:	4b8c      	ldr	r3, [pc, #560]	; (8003ec4 <_dtoa_r+0x614>)
 8003c92:	f7fc fc31 	bl	80004f8 <__aeabi_dmul>
 8003c96:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003c9a:	9e04      	ldr	r6, [sp, #16]
 8003c9c:	f10a 37ff 	add.w	r7, sl, #4294967295
 8003ca0:	3501      	adds	r5, #1
 8003ca2:	4628      	mov	r0, r5
 8003ca4:	f7fc fbbe 	bl	8000424 <__aeabi_i2d>
 8003ca8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003cac:	f7fc fc24 	bl	80004f8 <__aeabi_dmul>
 8003cb0:	2200      	movs	r2, #0
 8003cb2:	4b85      	ldr	r3, [pc, #532]	; (8003ec8 <_dtoa_r+0x618>)
 8003cb4:	f7fc fa6a 	bl	800018c <__adddf3>
 8003cb8:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8003cbc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003cc0:	950b      	str	r5, [sp, #44]	; 0x2c
 8003cc2:	2e00      	cmp	r6, #0
 8003cc4:	d15c      	bne.n	8003d80 <_dtoa_r+0x4d0>
 8003cc6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003cca:	2200      	movs	r2, #0
 8003ccc:	4b7f      	ldr	r3, [pc, #508]	; (8003ecc <_dtoa_r+0x61c>)
 8003cce:	f7fc fa5b 	bl	8000188 <__aeabi_dsub>
 8003cd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003cd4:	462b      	mov	r3, r5
 8003cd6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003cda:	f7fc fe9d 	bl	8000a18 <__aeabi_dcmpgt>
 8003cde:	2800      	cmp	r0, #0
 8003ce0:	f040 8281 	bne.w	80041e6 <_dtoa_r+0x936>
 8003ce4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003ce8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003cea:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003cee:	f7fc fe75 	bl	80009dc <__aeabi_dcmplt>
 8003cf2:	2800      	cmp	r0, #0
 8003cf4:	f040 8275 	bne.w	80041e2 <_dtoa_r+0x932>
 8003cf8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8003cfc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003d00:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	f2c0 814b 	blt.w	8003f9e <_dtoa_r+0x6ee>
 8003d08:	f1ba 0f0e 	cmp.w	sl, #14
 8003d0c:	f300 8147 	bgt.w	8003f9e <_dtoa_r+0x6ee>
 8003d10:	4b69      	ldr	r3, [pc, #420]	; (8003eb8 <_dtoa_r+0x608>)
 8003d12:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003d16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d1a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003d1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	f280 80d7 	bge.w	8003ed4 <_dtoa_r+0x624>
 8003d26:	f1b8 0f00 	cmp.w	r8, #0
 8003d2a:	f300 80d3 	bgt.w	8003ed4 <_dtoa_r+0x624>
 8003d2e:	f040 8257 	bne.w	80041e0 <_dtoa_r+0x930>
 8003d32:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003d36:	2200      	movs	r2, #0
 8003d38:	4b64      	ldr	r3, [pc, #400]	; (8003ecc <_dtoa_r+0x61c>)
 8003d3a:	f7fc fbdd 	bl	80004f8 <__aeabi_dmul>
 8003d3e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003d42:	f7fc fe5f 	bl	8000a04 <__aeabi_dcmpge>
 8003d46:	4646      	mov	r6, r8
 8003d48:	4647      	mov	r7, r8
 8003d4a:	2800      	cmp	r0, #0
 8003d4c:	f040 822d 	bne.w	80041aa <_dtoa_r+0x8fa>
 8003d50:	9b06      	ldr	r3, [sp, #24]
 8003d52:	9a06      	ldr	r2, [sp, #24]
 8003d54:	1c5d      	adds	r5, r3, #1
 8003d56:	2331      	movs	r3, #49	; 0x31
 8003d58:	f10a 0a01 	add.w	sl, sl, #1
 8003d5c:	7013      	strb	r3, [r2, #0]
 8003d5e:	e228      	b.n	80041b2 <_dtoa_r+0x902>
 8003d60:	07f2      	lsls	r2, r6, #31
 8003d62:	d505      	bpl.n	8003d70 <_dtoa_r+0x4c0>
 8003d64:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003d68:	f7fc fbc6 	bl	80004f8 <__aeabi_dmul>
 8003d6c:	2301      	movs	r3, #1
 8003d6e:	3501      	adds	r5, #1
 8003d70:	1076      	asrs	r6, r6, #1
 8003d72:	3708      	adds	r7, #8
 8003d74:	e76e      	b.n	8003c54 <_dtoa_r+0x3a4>
 8003d76:	2502      	movs	r5, #2
 8003d78:	e771      	b.n	8003c5e <_dtoa_r+0x3ae>
 8003d7a:	4657      	mov	r7, sl
 8003d7c:	4646      	mov	r6, r8
 8003d7e:	e790      	b.n	8003ca2 <_dtoa_r+0x3f2>
 8003d80:	4b4d      	ldr	r3, [pc, #308]	; (8003eb8 <_dtoa_r+0x608>)
 8003d82:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003d86:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8003d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d8c:	2b00      	cmp	r3, #0
 8003d8e:	d048      	beq.n	8003e22 <_dtoa_r+0x572>
 8003d90:	4602      	mov	r2, r0
 8003d92:	460b      	mov	r3, r1
 8003d94:	2000      	movs	r0, #0
 8003d96:	494e      	ldr	r1, [pc, #312]	; (8003ed0 <_dtoa_r+0x620>)
 8003d98:	f7fc fcd8 	bl	800074c <__aeabi_ddiv>
 8003d9c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003da0:	f7fc f9f2 	bl	8000188 <__aeabi_dsub>
 8003da4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003da8:	9d06      	ldr	r5, [sp, #24]
 8003daa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003dae:	f7fc fe53 	bl	8000a58 <__aeabi_d2iz>
 8003db2:	9011      	str	r0, [sp, #68]	; 0x44
 8003db4:	f7fc fb36 	bl	8000424 <__aeabi_i2d>
 8003db8:	4602      	mov	r2, r0
 8003dba:	460b      	mov	r3, r1
 8003dbc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003dc0:	f7fc f9e2 	bl	8000188 <__aeabi_dsub>
 8003dc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003dc6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003dca:	3330      	adds	r3, #48	; 0x30
 8003dcc:	f805 3b01 	strb.w	r3, [r5], #1
 8003dd0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003dd4:	f7fc fe02 	bl	80009dc <__aeabi_dcmplt>
 8003dd8:	2800      	cmp	r0, #0
 8003dda:	d163      	bne.n	8003ea4 <_dtoa_r+0x5f4>
 8003ddc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003de0:	2000      	movs	r0, #0
 8003de2:	4937      	ldr	r1, [pc, #220]	; (8003ec0 <_dtoa_r+0x610>)
 8003de4:	f7fc f9d0 	bl	8000188 <__aeabi_dsub>
 8003de8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003dec:	f7fc fdf6 	bl	80009dc <__aeabi_dcmplt>
 8003df0:	2800      	cmp	r0, #0
 8003df2:	f040 80b5 	bne.w	8003f60 <_dtoa_r+0x6b0>
 8003df6:	9b06      	ldr	r3, [sp, #24]
 8003df8:	1aeb      	subs	r3, r5, r3
 8003dfa:	429e      	cmp	r6, r3
 8003dfc:	f77f af7c 	ble.w	8003cf8 <_dtoa_r+0x448>
 8003e00:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003e04:	2200      	movs	r2, #0
 8003e06:	4b2f      	ldr	r3, [pc, #188]	; (8003ec4 <_dtoa_r+0x614>)
 8003e08:	f7fc fb76 	bl	80004f8 <__aeabi_dmul>
 8003e0c:	2200      	movs	r2, #0
 8003e0e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003e12:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e16:	4b2b      	ldr	r3, [pc, #172]	; (8003ec4 <_dtoa_r+0x614>)
 8003e18:	f7fc fb6e 	bl	80004f8 <__aeabi_dmul>
 8003e1c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e20:	e7c3      	b.n	8003daa <_dtoa_r+0x4fa>
 8003e22:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003e26:	f7fc fb67 	bl	80004f8 <__aeabi_dmul>
 8003e2a:	9b06      	ldr	r3, [sp, #24]
 8003e2c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003e30:	199d      	adds	r5, r3, r6
 8003e32:	461e      	mov	r6, r3
 8003e34:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e38:	f7fc fe0e 	bl	8000a58 <__aeabi_d2iz>
 8003e3c:	9011      	str	r0, [sp, #68]	; 0x44
 8003e3e:	f7fc faf1 	bl	8000424 <__aeabi_i2d>
 8003e42:	4602      	mov	r2, r0
 8003e44:	460b      	mov	r3, r1
 8003e46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e4a:	f7fc f99d 	bl	8000188 <__aeabi_dsub>
 8003e4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003e50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e54:	3330      	adds	r3, #48	; 0x30
 8003e56:	f806 3b01 	strb.w	r3, [r6], #1
 8003e5a:	42ae      	cmp	r6, r5
 8003e5c:	f04f 0200 	mov.w	r2, #0
 8003e60:	d124      	bne.n	8003eac <_dtoa_r+0x5fc>
 8003e62:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003e66:	4b1a      	ldr	r3, [pc, #104]	; (8003ed0 <_dtoa_r+0x620>)
 8003e68:	f7fc f990 	bl	800018c <__adddf3>
 8003e6c:	4602      	mov	r2, r0
 8003e6e:	460b      	mov	r3, r1
 8003e70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e74:	f7fc fdd0 	bl	8000a18 <__aeabi_dcmpgt>
 8003e78:	2800      	cmp	r0, #0
 8003e7a:	d171      	bne.n	8003f60 <_dtoa_r+0x6b0>
 8003e7c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003e80:	2000      	movs	r0, #0
 8003e82:	4913      	ldr	r1, [pc, #76]	; (8003ed0 <_dtoa_r+0x620>)
 8003e84:	f7fc f980 	bl	8000188 <__aeabi_dsub>
 8003e88:	4602      	mov	r2, r0
 8003e8a:	460b      	mov	r3, r1
 8003e8c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e90:	f7fc fda4 	bl	80009dc <__aeabi_dcmplt>
 8003e94:	2800      	cmp	r0, #0
 8003e96:	f43f af2f 	beq.w	8003cf8 <_dtoa_r+0x448>
 8003e9a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003e9e:	1e6a      	subs	r2, r5, #1
 8003ea0:	2b30      	cmp	r3, #48	; 0x30
 8003ea2:	d001      	beq.n	8003ea8 <_dtoa_r+0x5f8>
 8003ea4:	46ba      	mov	sl, r7
 8003ea6:	e04a      	b.n	8003f3e <_dtoa_r+0x68e>
 8003ea8:	4615      	mov	r5, r2
 8003eaa:	e7f6      	b.n	8003e9a <_dtoa_r+0x5ea>
 8003eac:	4b05      	ldr	r3, [pc, #20]	; (8003ec4 <_dtoa_r+0x614>)
 8003eae:	f7fc fb23 	bl	80004f8 <__aeabi_dmul>
 8003eb2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003eb6:	e7bd      	b.n	8003e34 <_dtoa_r+0x584>
 8003eb8:	08005940 	.word	0x08005940
 8003ebc:	08005918 	.word	0x08005918
 8003ec0:	3ff00000 	.word	0x3ff00000
 8003ec4:	40240000 	.word	0x40240000
 8003ec8:	401c0000 	.word	0x401c0000
 8003ecc:	40140000 	.word	0x40140000
 8003ed0:	3fe00000 	.word	0x3fe00000
 8003ed4:	9d06      	ldr	r5, [sp, #24]
 8003ed6:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003eda:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003ede:	4630      	mov	r0, r6
 8003ee0:	4639      	mov	r1, r7
 8003ee2:	f7fc fc33 	bl	800074c <__aeabi_ddiv>
 8003ee6:	f7fc fdb7 	bl	8000a58 <__aeabi_d2iz>
 8003eea:	4681      	mov	r9, r0
 8003eec:	f7fc fa9a 	bl	8000424 <__aeabi_i2d>
 8003ef0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003ef4:	f7fc fb00 	bl	80004f8 <__aeabi_dmul>
 8003ef8:	4602      	mov	r2, r0
 8003efa:	460b      	mov	r3, r1
 8003efc:	4630      	mov	r0, r6
 8003efe:	4639      	mov	r1, r7
 8003f00:	f7fc f942 	bl	8000188 <__aeabi_dsub>
 8003f04:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8003f08:	f805 6b01 	strb.w	r6, [r5], #1
 8003f0c:	9e06      	ldr	r6, [sp, #24]
 8003f0e:	4602      	mov	r2, r0
 8003f10:	1bae      	subs	r6, r5, r6
 8003f12:	45b0      	cmp	r8, r6
 8003f14:	460b      	mov	r3, r1
 8003f16:	d135      	bne.n	8003f84 <_dtoa_r+0x6d4>
 8003f18:	f7fc f938 	bl	800018c <__adddf3>
 8003f1c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003f20:	4606      	mov	r6, r0
 8003f22:	460f      	mov	r7, r1
 8003f24:	f7fc fd78 	bl	8000a18 <__aeabi_dcmpgt>
 8003f28:	b9c8      	cbnz	r0, 8003f5e <_dtoa_r+0x6ae>
 8003f2a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003f2e:	4630      	mov	r0, r6
 8003f30:	4639      	mov	r1, r7
 8003f32:	f7fc fd49 	bl	80009c8 <__aeabi_dcmpeq>
 8003f36:	b110      	cbz	r0, 8003f3e <_dtoa_r+0x68e>
 8003f38:	f019 0f01 	tst.w	r9, #1
 8003f3c:	d10f      	bne.n	8003f5e <_dtoa_r+0x6ae>
 8003f3e:	4659      	mov	r1, fp
 8003f40:	4620      	mov	r0, r4
 8003f42:	f000 fe0c 	bl	8004b5e <_Bfree>
 8003f46:	2300      	movs	r3, #0
 8003f48:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003f4a:	702b      	strb	r3, [r5, #0]
 8003f4c:	f10a 0301 	add.w	r3, sl, #1
 8003f50:	6013      	str	r3, [r2, #0]
 8003f52:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	f43f acf3 	beq.w	8003940 <_dtoa_r+0x90>
 8003f5a:	601d      	str	r5, [r3, #0]
 8003f5c:	e4f0      	b.n	8003940 <_dtoa_r+0x90>
 8003f5e:	4657      	mov	r7, sl
 8003f60:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003f64:	1e6b      	subs	r3, r5, #1
 8003f66:	2a39      	cmp	r2, #57	; 0x39
 8003f68:	d106      	bne.n	8003f78 <_dtoa_r+0x6c8>
 8003f6a:	9a06      	ldr	r2, [sp, #24]
 8003f6c:	429a      	cmp	r2, r3
 8003f6e:	d107      	bne.n	8003f80 <_dtoa_r+0x6d0>
 8003f70:	2330      	movs	r3, #48	; 0x30
 8003f72:	7013      	strb	r3, [r2, #0]
 8003f74:	4613      	mov	r3, r2
 8003f76:	3701      	adds	r7, #1
 8003f78:	781a      	ldrb	r2, [r3, #0]
 8003f7a:	3201      	adds	r2, #1
 8003f7c:	701a      	strb	r2, [r3, #0]
 8003f7e:	e791      	b.n	8003ea4 <_dtoa_r+0x5f4>
 8003f80:	461d      	mov	r5, r3
 8003f82:	e7ed      	b.n	8003f60 <_dtoa_r+0x6b0>
 8003f84:	2200      	movs	r2, #0
 8003f86:	4b99      	ldr	r3, [pc, #612]	; (80041ec <_dtoa_r+0x93c>)
 8003f88:	f7fc fab6 	bl	80004f8 <__aeabi_dmul>
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	2300      	movs	r3, #0
 8003f90:	4606      	mov	r6, r0
 8003f92:	460f      	mov	r7, r1
 8003f94:	f7fc fd18 	bl	80009c8 <__aeabi_dcmpeq>
 8003f98:	2800      	cmp	r0, #0
 8003f9a:	d09e      	beq.n	8003eda <_dtoa_r+0x62a>
 8003f9c:	e7cf      	b.n	8003f3e <_dtoa_r+0x68e>
 8003f9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003fa0:	2a00      	cmp	r2, #0
 8003fa2:	f000 8088 	beq.w	80040b6 <_dtoa_r+0x806>
 8003fa6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003fa8:	2a01      	cmp	r2, #1
 8003faa:	dc6d      	bgt.n	8004088 <_dtoa_r+0x7d8>
 8003fac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003fae:	2a00      	cmp	r2, #0
 8003fb0:	d066      	beq.n	8004080 <_dtoa_r+0x7d0>
 8003fb2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003fb6:	464d      	mov	r5, r9
 8003fb8:	9e08      	ldr	r6, [sp, #32]
 8003fba:	9a07      	ldr	r2, [sp, #28]
 8003fbc:	2101      	movs	r1, #1
 8003fbe:	441a      	add	r2, r3
 8003fc0:	4620      	mov	r0, r4
 8003fc2:	4499      	add	r9, r3
 8003fc4:	9207      	str	r2, [sp, #28]
 8003fc6:	f000 fea8 	bl	8004d1a <__i2b>
 8003fca:	4607      	mov	r7, r0
 8003fcc:	2d00      	cmp	r5, #0
 8003fce:	dd0b      	ble.n	8003fe8 <_dtoa_r+0x738>
 8003fd0:	9b07      	ldr	r3, [sp, #28]
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	dd08      	ble.n	8003fe8 <_dtoa_r+0x738>
 8003fd6:	42ab      	cmp	r3, r5
 8003fd8:	bfa8      	it	ge
 8003fda:	462b      	movge	r3, r5
 8003fdc:	9a07      	ldr	r2, [sp, #28]
 8003fde:	eba9 0903 	sub.w	r9, r9, r3
 8003fe2:	1aed      	subs	r5, r5, r3
 8003fe4:	1ad3      	subs	r3, r2, r3
 8003fe6:	9307      	str	r3, [sp, #28]
 8003fe8:	9b08      	ldr	r3, [sp, #32]
 8003fea:	b1eb      	cbz	r3, 8004028 <_dtoa_r+0x778>
 8003fec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d065      	beq.n	80040be <_dtoa_r+0x80e>
 8003ff2:	b18e      	cbz	r6, 8004018 <_dtoa_r+0x768>
 8003ff4:	4639      	mov	r1, r7
 8003ff6:	4632      	mov	r2, r6
 8003ff8:	4620      	mov	r0, r4
 8003ffa:	f000 ff2d 	bl	8004e58 <__pow5mult>
 8003ffe:	465a      	mov	r2, fp
 8004000:	4601      	mov	r1, r0
 8004002:	4607      	mov	r7, r0
 8004004:	4620      	mov	r0, r4
 8004006:	f000 fe91 	bl	8004d2c <__multiply>
 800400a:	4659      	mov	r1, fp
 800400c:	900a      	str	r0, [sp, #40]	; 0x28
 800400e:	4620      	mov	r0, r4
 8004010:	f000 fda5 	bl	8004b5e <_Bfree>
 8004014:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004016:	469b      	mov	fp, r3
 8004018:	9b08      	ldr	r3, [sp, #32]
 800401a:	1b9a      	subs	r2, r3, r6
 800401c:	d004      	beq.n	8004028 <_dtoa_r+0x778>
 800401e:	4659      	mov	r1, fp
 8004020:	4620      	mov	r0, r4
 8004022:	f000 ff19 	bl	8004e58 <__pow5mult>
 8004026:	4683      	mov	fp, r0
 8004028:	2101      	movs	r1, #1
 800402a:	4620      	mov	r0, r4
 800402c:	f000 fe75 	bl	8004d1a <__i2b>
 8004030:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004032:	4606      	mov	r6, r0
 8004034:	2b00      	cmp	r3, #0
 8004036:	f000 81c6 	beq.w	80043c6 <_dtoa_r+0xb16>
 800403a:	461a      	mov	r2, r3
 800403c:	4601      	mov	r1, r0
 800403e:	4620      	mov	r0, r4
 8004040:	f000 ff0a 	bl	8004e58 <__pow5mult>
 8004044:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004046:	4606      	mov	r6, r0
 8004048:	2b01      	cmp	r3, #1
 800404a:	dc3e      	bgt.n	80040ca <_dtoa_r+0x81a>
 800404c:	9b02      	ldr	r3, [sp, #8]
 800404e:	2b00      	cmp	r3, #0
 8004050:	d137      	bne.n	80040c2 <_dtoa_r+0x812>
 8004052:	9b03      	ldr	r3, [sp, #12]
 8004054:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004058:	2b00      	cmp	r3, #0
 800405a:	d134      	bne.n	80040c6 <_dtoa_r+0x816>
 800405c:	9b03      	ldr	r3, [sp, #12]
 800405e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004062:	0d1b      	lsrs	r3, r3, #20
 8004064:	051b      	lsls	r3, r3, #20
 8004066:	b12b      	cbz	r3, 8004074 <_dtoa_r+0x7c4>
 8004068:	9b07      	ldr	r3, [sp, #28]
 800406a:	f109 0901 	add.w	r9, r9, #1
 800406e:	3301      	adds	r3, #1
 8004070:	9307      	str	r3, [sp, #28]
 8004072:	2301      	movs	r3, #1
 8004074:	9308      	str	r3, [sp, #32]
 8004076:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004078:	2b00      	cmp	r3, #0
 800407a:	d128      	bne.n	80040ce <_dtoa_r+0x81e>
 800407c:	2001      	movs	r0, #1
 800407e:	e02e      	b.n	80040de <_dtoa_r+0x82e>
 8004080:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004082:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004086:	e796      	b.n	8003fb6 <_dtoa_r+0x706>
 8004088:	9b08      	ldr	r3, [sp, #32]
 800408a:	f108 36ff 	add.w	r6, r8, #4294967295
 800408e:	42b3      	cmp	r3, r6
 8004090:	bfb7      	itett	lt
 8004092:	9b08      	ldrlt	r3, [sp, #32]
 8004094:	1b9e      	subge	r6, r3, r6
 8004096:	1af2      	sublt	r2, r6, r3
 8004098:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 800409a:	bfbf      	itttt	lt
 800409c:	9608      	strlt	r6, [sp, #32]
 800409e:	189b      	addlt	r3, r3, r2
 80040a0:	930c      	strlt	r3, [sp, #48]	; 0x30
 80040a2:	2600      	movlt	r6, #0
 80040a4:	f1b8 0f00 	cmp.w	r8, #0
 80040a8:	bfb9      	ittee	lt
 80040aa:	eba9 0508 	sublt.w	r5, r9, r8
 80040ae:	2300      	movlt	r3, #0
 80040b0:	464d      	movge	r5, r9
 80040b2:	4643      	movge	r3, r8
 80040b4:	e781      	b.n	8003fba <_dtoa_r+0x70a>
 80040b6:	9e08      	ldr	r6, [sp, #32]
 80040b8:	464d      	mov	r5, r9
 80040ba:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80040bc:	e786      	b.n	8003fcc <_dtoa_r+0x71c>
 80040be:	9a08      	ldr	r2, [sp, #32]
 80040c0:	e7ad      	b.n	800401e <_dtoa_r+0x76e>
 80040c2:	2300      	movs	r3, #0
 80040c4:	e7d6      	b.n	8004074 <_dtoa_r+0x7c4>
 80040c6:	9b02      	ldr	r3, [sp, #8]
 80040c8:	e7d4      	b.n	8004074 <_dtoa_r+0x7c4>
 80040ca:	2300      	movs	r3, #0
 80040cc:	9308      	str	r3, [sp, #32]
 80040ce:	6933      	ldr	r3, [r6, #16]
 80040d0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80040d4:	6918      	ldr	r0, [r3, #16]
 80040d6:	f000 fdd2 	bl	8004c7e <__hi0bits>
 80040da:	f1c0 0020 	rsb	r0, r0, #32
 80040de:	9b07      	ldr	r3, [sp, #28]
 80040e0:	4418      	add	r0, r3
 80040e2:	f010 001f 	ands.w	r0, r0, #31
 80040e6:	d047      	beq.n	8004178 <_dtoa_r+0x8c8>
 80040e8:	f1c0 0320 	rsb	r3, r0, #32
 80040ec:	2b04      	cmp	r3, #4
 80040ee:	dd3b      	ble.n	8004168 <_dtoa_r+0x8b8>
 80040f0:	9b07      	ldr	r3, [sp, #28]
 80040f2:	f1c0 001c 	rsb	r0, r0, #28
 80040f6:	4481      	add	r9, r0
 80040f8:	4405      	add	r5, r0
 80040fa:	4403      	add	r3, r0
 80040fc:	9307      	str	r3, [sp, #28]
 80040fe:	f1b9 0f00 	cmp.w	r9, #0
 8004102:	dd05      	ble.n	8004110 <_dtoa_r+0x860>
 8004104:	4659      	mov	r1, fp
 8004106:	464a      	mov	r2, r9
 8004108:	4620      	mov	r0, r4
 800410a:	f000 fef3 	bl	8004ef4 <__lshift>
 800410e:	4683      	mov	fp, r0
 8004110:	9b07      	ldr	r3, [sp, #28]
 8004112:	2b00      	cmp	r3, #0
 8004114:	dd05      	ble.n	8004122 <_dtoa_r+0x872>
 8004116:	4631      	mov	r1, r6
 8004118:	461a      	mov	r2, r3
 800411a:	4620      	mov	r0, r4
 800411c:	f000 feea 	bl	8004ef4 <__lshift>
 8004120:	4606      	mov	r6, r0
 8004122:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004124:	b353      	cbz	r3, 800417c <_dtoa_r+0x8cc>
 8004126:	4631      	mov	r1, r6
 8004128:	4658      	mov	r0, fp
 800412a:	f000 ff37 	bl	8004f9c <__mcmp>
 800412e:	2800      	cmp	r0, #0
 8004130:	da24      	bge.n	800417c <_dtoa_r+0x8cc>
 8004132:	2300      	movs	r3, #0
 8004134:	4659      	mov	r1, fp
 8004136:	220a      	movs	r2, #10
 8004138:	4620      	mov	r0, r4
 800413a:	f000 fd27 	bl	8004b8c <__multadd>
 800413e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004140:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004144:	4683      	mov	fp, r0
 8004146:	2b00      	cmp	r3, #0
 8004148:	f000 8144 	beq.w	80043d4 <_dtoa_r+0xb24>
 800414c:	2300      	movs	r3, #0
 800414e:	4639      	mov	r1, r7
 8004150:	220a      	movs	r2, #10
 8004152:	4620      	mov	r0, r4
 8004154:	f000 fd1a 	bl	8004b8c <__multadd>
 8004158:	9b04      	ldr	r3, [sp, #16]
 800415a:	4607      	mov	r7, r0
 800415c:	2b00      	cmp	r3, #0
 800415e:	dc4d      	bgt.n	80041fc <_dtoa_r+0x94c>
 8004160:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004162:	2b02      	cmp	r3, #2
 8004164:	dd4a      	ble.n	80041fc <_dtoa_r+0x94c>
 8004166:	e011      	b.n	800418c <_dtoa_r+0x8dc>
 8004168:	d0c9      	beq.n	80040fe <_dtoa_r+0x84e>
 800416a:	9a07      	ldr	r2, [sp, #28]
 800416c:	331c      	adds	r3, #28
 800416e:	441a      	add	r2, r3
 8004170:	4499      	add	r9, r3
 8004172:	441d      	add	r5, r3
 8004174:	4613      	mov	r3, r2
 8004176:	e7c1      	b.n	80040fc <_dtoa_r+0x84c>
 8004178:	4603      	mov	r3, r0
 800417a:	e7f6      	b.n	800416a <_dtoa_r+0x8ba>
 800417c:	f1b8 0f00 	cmp.w	r8, #0
 8004180:	dc36      	bgt.n	80041f0 <_dtoa_r+0x940>
 8004182:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004184:	2b02      	cmp	r3, #2
 8004186:	dd33      	ble.n	80041f0 <_dtoa_r+0x940>
 8004188:	f8cd 8010 	str.w	r8, [sp, #16]
 800418c:	9b04      	ldr	r3, [sp, #16]
 800418e:	b963      	cbnz	r3, 80041aa <_dtoa_r+0x8fa>
 8004190:	4631      	mov	r1, r6
 8004192:	2205      	movs	r2, #5
 8004194:	4620      	mov	r0, r4
 8004196:	f000 fcf9 	bl	8004b8c <__multadd>
 800419a:	4601      	mov	r1, r0
 800419c:	4606      	mov	r6, r0
 800419e:	4658      	mov	r0, fp
 80041a0:	f000 fefc 	bl	8004f9c <__mcmp>
 80041a4:	2800      	cmp	r0, #0
 80041a6:	f73f add3 	bgt.w	8003d50 <_dtoa_r+0x4a0>
 80041aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80041ac:	9d06      	ldr	r5, [sp, #24]
 80041ae:	ea6f 0a03 	mvn.w	sl, r3
 80041b2:	f04f 0900 	mov.w	r9, #0
 80041b6:	4631      	mov	r1, r6
 80041b8:	4620      	mov	r0, r4
 80041ba:	f000 fcd0 	bl	8004b5e <_Bfree>
 80041be:	2f00      	cmp	r7, #0
 80041c0:	f43f aebd 	beq.w	8003f3e <_dtoa_r+0x68e>
 80041c4:	f1b9 0f00 	cmp.w	r9, #0
 80041c8:	d005      	beq.n	80041d6 <_dtoa_r+0x926>
 80041ca:	45b9      	cmp	r9, r7
 80041cc:	d003      	beq.n	80041d6 <_dtoa_r+0x926>
 80041ce:	4649      	mov	r1, r9
 80041d0:	4620      	mov	r0, r4
 80041d2:	f000 fcc4 	bl	8004b5e <_Bfree>
 80041d6:	4639      	mov	r1, r7
 80041d8:	4620      	mov	r0, r4
 80041da:	f000 fcc0 	bl	8004b5e <_Bfree>
 80041de:	e6ae      	b.n	8003f3e <_dtoa_r+0x68e>
 80041e0:	2600      	movs	r6, #0
 80041e2:	4637      	mov	r7, r6
 80041e4:	e7e1      	b.n	80041aa <_dtoa_r+0x8fa>
 80041e6:	46ba      	mov	sl, r7
 80041e8:	4637      	mov	r7, r6
 80041ea:	e5b1      	b.n	8003d50 <_dtoa_r+0x4a0>
 80041ec:	40240000 	.word	0x40240000
 80041f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041f2:	f8cd 8010 	str.w	r8, [sp, #16]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	f000 80f3 	beq.w	80043e2 <_dtoa_r+0xb32>
 80041fc:	2d00      	cmp	r5, #0
 80041fe:	dd05      	ble.n	800420c <_dtoa_r+0x95c>
 8004200:	4639      	mov	r1, r7
 8004202:	462a      	mov	r2, r5
 8004204:	4620      	mov	r0, r4
 8004206:	f000 fe75 	bl	8004ef4 <__lshift>
 800420a:	4607      	mov	r7, r0
 800420c:	9b08      	ldr	r3, [sp, #32]
 800420e:	2b00      	cmp	r3, #0
 8004210:	d04c      	beq.n	80042ac <_dtoa_r+0x9fc>
 8004212:	6879      	ldr	r1, [r7, #4]
 8004214:	4620      	mov	r0, r4
 8004216:	f000 fc6e 	bl	8004af6 <_Balloc>
 800421a:	4605      	mov	r5, r0
 800421c:	693a      	ldr	r2, [r7, #16]
 800421e:	f107 010c 	add.w	r1, r7, #12
 8004222:	3202      	adds	r2, #2
 8004224:	0092      	lsls	r2, r2, #2
 8004226:	300c      	adds	r0, #12
 8004228:	f000 fc5a 	bl	8004ae0 <memcpy>
 800422c:	2201      	movs	r2, #1
 800422e:	4629      	mov	r1, r5
 8004230:	4620      	mov	r0, r4
 8004232:	f000 fe5f 	bl	8004ef4 <__lshift>
 8004236:	46b9      	mov	r9, r7
 8004238:	4607      	mov	r7, r0
 800423a:	9b06      	ldr	r3, [sp, #24]
 800423c:	9307      	str	r3, [sp, #28]
 800423e:	9b02      	ldr	r3, [sp, #8]
 8004240:	f003 0301 	and.w	r3, r3, #1
 8004244:	9308      	str	r3, [sp, #32]
 8004246:	4631      	mov	r1, r6
 8004248:	4658      	mov	r0, fp
 800424a:	f7ff faa3 	bl	8003794 <quorem>
 800424e:	4649      	mov	r1, r9
 8004250:	4605      	mov	r5, r0
 8004252:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8004256:	4658      	mov	r0, fp
 8004258:	f000 fea0 	bl	8004f9c <__mcmp>
 800425c:	463a      	mov	r2, r7
 800425e:	9002      	str	r0, [sp, #8]
 8004260:	4631      	mov	r1, r6
 8004262:	4620      	mov	r0, r4
 8004264:	f000 feb4 	bl	8004fd0 <__mdiff>
 8004268:	68c3      	ldr	r3, [r0, #12]
 800426a:	4602      	mov	r2, r0
 800426c:	bb03      	cbnz	r3, 80042b0 <_dtoa_r+0xa00>
 800426e:	4601      	mov	r1, r0
 8004270:	9009      	str	r0, [sp, #36]	; 0x24
 8004272:	4658      	mov	r0, fp
 8004274:	f000 fe92 	bl	8004f9c <__mcmp>
 8004278:	4603      	mov	r3, r0
 800427a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800427c:	4611      	mov	r1, r2
 800427e:	4620      	mov	r0, r4
 8004280:	9309      	str	r3, [sp, #36]	; 0x24
 8004282:	f000 fc6c 	bl	8004b5e <_Bfree>
 8004286:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004288:	b9a3      	cbnz	r3, 80042b4 <_dtoa_r+0xa04>
 800428a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800428c:	b992      	cbnz	r2, 80042b4 <_dtoa_r+0xa04>
 800428e:	9a08      	ldr	r2, [sp, #32]
 8004290:	b982      	cbnz	r2, 80042b4 <_dtoa_r+0xa04>
 8004292:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004296:	d029      	beq.n	80042ec <_dtoa_r+0xa3c>
 8004298:	9b02      	ldr	r3, [sp, #8]
 800429a:	2b00      	cmp	r3, #0
 800429c:	dd01      	ble.n	80042a2 <_dtoa_r+0x9f2>
 800429e:	f105 0831 	add.w	r8, r5, #49	; 0x31
 80042a2:	9b07      	ldr	r3, [sp, #28]
 80042a4:	1c5d      	adds	r5, r3, #1
 80042a6:	f883 8000 	strb.w	r8, [r3]
 80042aa:	e784      	b.n	80041b6 <_dtoa_r+0x906>
 80042ac:	4638      	mov	r0, r7
 80042ae:	e7c2      	b.n	8004236 <_dtoa_r+0x986>
 80042b0:	2301      	movs	r3, #1
 80042b2:	e7e3      	b.n	800427c <_dtoa_r+0x9cc>
 80042b4:	9a02      	ldr	r2, [sp, #8]
 80042b6:	2a00      	cmp	r2, #0
 80042b8:	db04      	blt.n	80042c4 <_dtoa_r+0xa14>
 80042ba:	d123      	bne.n	8004304 <_dtoa_r+0xa54>
 80042bc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80042be:	bb0a      	cbnz	r2, 8004304 <_dtoa_r+0xa54>
 80042c0:	9a08      	ldr	r2, [sp, #32]
 80042c2:	b9fa      	cbnz	r2, 8004304 <_dtoa_r+0xa54>
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	ddec      	ble.n	80042a2 <_dtoa_r+0x9f2>
 80042c8:	4659      	mov	r1, fp
 80042ca:	2201      	movs	r2, #1
 80042cc:	4620      	mov	r0, r4
 80042ce:	f000 fe11 	bl	8004ef4 <__lshift>
 80042d2:	4631      	mov	r1, r6
 80042d4:	4683      	mov	fp, r0
 80042d6:	f000 fe61 	bl	8004f9c <__mcmp>
 80042da:	2800      	cmp	r0, #0
 80042dc:	dc03      	bgt.n	80042e6 <_dtoa_r+0xa36>
 80042de:	d1e0      	bne.n	80042a2 <_dtoa_r+0x9f2>
 80042e0:	f018 0f01 	tst.w	r8, #1
 80042e4:	d0dd      	beq.n	80042a2 <_dtoa_r+0x9f2>
 80042e6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80042ea:	d1d8      	bne.n	800429e <_dtoa_r+0x9ee>
 80042ec:	9b07      	ldr	r3, [sp, #28]
 80042ee:	9a07      	ldr	r2, [sp, #28]
 80042f0:	1c5d      	adds	r5, r3, #1
 80042f2:	2339      	movs	r3, #57	; 0x39
 80042f4:	7013      	strb	r3, [r2, #0]
 80042f6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80042fa:	1e6a      	subs	r2, r5, #1
 80042fc:	2b39      	cmp	r3, #57	; 0x39
 80042fe:	d04d      	beq.n	800439c <_dtoa_r+0xaec>
 8004300:	3301      	adds	r3, #1
 8004302:	e052      	b.n	80043aa <_dtoa_r+0xafa>
 8004304:	9a07      	ldr	r2, [sp, #28]
 8004306:	2b00      	cmp	r3, #0
 8004308:	f102 0501 	add.w	r5, r2, #1
 800430c:	dd06      	ble.n	800431c <_dtoa_r+0xa6c>
 800430e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004312:	d0eb      	beq.n	80042ec <_dtoa_r+0xa3c>
 8004314:	f108 0801 	add.w	r8, r8, #1
 8004318:	9b07      	ldr	r3, [sp, #28]
 800431a:	e7c4      	b.n	80042a6 <_dtoa_r+0x9f6>
 800431c:	9b06      	ldr	r3, [sp, #24]
 800431e:	9a04      	ldr	r2, [sp, #16]
 8004320:	1aeb      	subs	r3, r5, r3
 8004322:	4293      	cmp	r3, r2
 8004324:	f805 8c01 	strb.w	r8, [r5, #-1]
 8004328:	d021      	beq.n	800436e <_dtoa_r+0xabe>
 800432a:	4659      	mov	r1, fp
 800432c:	2300      	movs	r3, #0
 800432e:	220a      	movs	r2, #10
 8004330:	4620      	mov	r0, r4
 8004332:	f000 fc2b 	bl	8004b8c <__multadd>
 8004336:	45b9      	cmp	r9, r7
 8004338:	4683      	mov	fp, r0
 800433a:	f04f 0300 	mov.w	r3, #0
 800433e:	f04f 020a 	mov.w	r2, #10
 8004342:	4649      	mov	r1, r9
 8004344:	4620      	mov	r0, r4
 8004346:	d105      	bne.n	8004354 <_dtoa_r+0xaa4>
 8004348:	f000 fc20 	bl	8004b8c <__multadd>
 800434c:	4681      	mov	r9, r0
 800434e:	4607      	mov	r7, r0
 8004350:	9507      	str	r5, [sp, #28]
 8004352:	e778      	b.n	8004246 <_dtoa_r+0x996>
 8004354:	f000 fc1a 	bl	8004b8c <__multadd>
 8004358:	4639      	mov	r1, r7
 800435a:	4681      	mov	r9, r0
 800435c:	2300      	movs	r3, #0
 800435e:	220a      	movs	r2, #10
 8004360:	4620      	mov	r0, r4
 8004362:	f000 fc13 	bl	8004b8c <__multadd>
 8004366:	4607      	mov	r7, r0
 8004368:	e7f2      	b.n	8004350 <_dtoa_r+0xaa0>
 800436a:	f04f 0900 	mov.w	r9, #0
 800436e:	4659      	mov	r1, fp
 8004370:	2201      	movs	r2, #1
 8004372:	4620      	mov	r0, r4
 8004374:	f000 fdbe 	bl	8004ef4 <__lshift>
 8004378:	4631      	mov	r1, r6
 800437a:	4683      	mov	fp, r0
 800437c:	f000 fe0e 	bl	8004f9c <__mcmp>
 8004380:	2800      	cmp	r0, #0
 8004382:	dcb8      	bgt.n	80042f6 <_dtoa_r+0xa46>
 8004384:	d102      	bne.n	800438c <_dtoa_r+0xadc>
 8004386:	f018 0f01 	tst.w	r8, #1
 800438a:	d1b4      	bne.n	80042f6 <_dtoa_r+0xa46>
 800438c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004390:	1e6a      	subs	r2, r5, #1
 8004392:	2b30      	cmp	r3, #48	; 0x30
 8004394:	f47f af0f 	bne.w	80041b6 <_dtoa_r+0x906>
 8004398:	4615      	mov	r5, r2
 800439a:	e7f7      	b.n	800438c <_dtoa_r+0xadc>
 800439c:	9b06      	ldr	r3, [sp, #24]
 800439e:	4293      	cmp	r3, r2
 80043a0:	d105      	bne.n	80043ae <_dtoa_r+0xafe>
 80043a2:	2331      	movs	r3, #49	; 0x31
 80043a4:	9a06      	ldr	r2, [sp, #24]
 80043a6:	f10a 0a01 	add.w	sl, sl, #1
 80043aa:	7013      	strb	r3, [r2, #0]
 80043ac:	e703      	b.n	80041b6 <_dtoa_r+0x906>
 80043ae:	4615      	mov	r5, r2
 80043b0:	e7a1      	b.n	80042f6 <_dtoa_r+0xa46>
 80043b2:	4b17      	ldr	r3, [pc, #92]	; (8004410 <_dtoa_r+0xb60>)
 80043b4:	f7ff bae1 	b.w	800397a <_dtoa_r+0xca>
 80043b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	f47f aabb 	bne.w	8003936 <_dtoa_r+0x86>
 80043c0:	4b14      	ldr	r3, [pc, #80]	; (8004414 <_dtoa_r+0xb64>)
 80043c2:	f7ff bada 	b.w	800397a <_dtoa_r+0xca>
 80043c6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80043c8:	2b01      	cmp	r3, #1
 80043ca:	f77f ae3f 	ble.w	800404c <_dtoa_r+0x79c>
 80043ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80043d0:	9308      	str	r3, [sp, #32]
 80043d2:	e653      	b.n	800407c <_dtoa_r+0x7cc>
 80043d4:	9b04      	ldr	r3, [sp, #16]
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	dc03      	bgt.n	80043e2 <_dtoa_r+0xb32>
 80043da:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80043dc:	2b02      	cmp	r3, #2
 80043de:	f73f aed5 	bgt.w	800418c <_dtoa_r+0x8dc>
 80043e2:	9d06      	ldr	r5, [sp, #24]
 80043e4:	4631      	mov	r1, r6
 80043e6:	4658      	mov	r0, fp
 80043e8:	f7ff f9d4 	bl	8003794 <quorem>
 80043ec:	9b06      	ldr	r3, [sp, #24]
 80043ee:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80043f2:	f805 8b01 	strb.w	r8, [r5], #1
 80043f6:	9a04      	ldr	r2, [sp, #16]
 80043f8:	1aeb      	subs	r3, r5, r3
 80043fa:	429a      	cmp	r2, r3
 80043fc:	ddb5      	ble.n	800436a <_dtoa_r+0xaba>
 80043fe:	4659      	mov	r1, fp
 8004400:	2300      	movs	r3, #0
 8004402:	220a      	movs	r2, #10
 8004404:	4620      	mov	r0, r4
 8004406:	f000 fbc1 	bl	8004b8c <__multadd>
 800440a:	4683      	mov	fp, r0
 800440c:	e7ea      	b.n	80043e4 <_dtoa_r+0xb34>
 800440e:	bf00      	nop
 8004410:	08005884 	.word	0x08005884
 8004414:	08005900 	.word	0x08005900

08004418 <rshift>:
 8004418:	b5f0      	push	{r4, r5, r6, r7, lr}
 800441a:	6906      	ldr	r6, [r0, #16]
 800441c:	114b      	asrs	r3, r1, #5
 800441e:	429e      	cmp	r6, r3
 8004420:	f100 0414 	add.w	r4, r0, #20
 8004424:	dd31      	ble.n	800448a <rshift+0x72>
 8004426:	f011 011f 	ands.w	r1, r1, #31
 800442a:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800442e:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 8004432:	d108      	bne.n	8004446 <rshift+0x2e>
 8004434:	4621      	mov	r1, r4
 8004436:	42b2      	cmp	r2, r6
 8004438:	460b      	mov	r3, r1
 800443a:	d211      	bcs.n	8004460 <rshift+0x48>
 800443c:	f852 3b04 	ldr.w	r3, [r2], #4
 8004440:	f841 3b04 	str.w	r3, [r1], #4
 8004444:	e7f7      	b.n	8004436 <rshift+0x1e>
 8004446:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 800444a:	4623      	mov	r3, r4
 800444c:	f1c1 0c20 	rsb	ip, r1, #32
 8004450:	40cd      	lsrs	r5, r1
 8004452:	3204      	adds	r2, #4
 8004454:	42b2      	cmp	r2, r6
 8004456:	4617      	mov	r7, r2
 8004458:	d30d      	bcc.n	8004476 <rshift+0x5e>
 800445a:	601d      	str	r5, [r3, #0]
 800445c:	b105      	cbz	r5, 8004460 <rshift+0x48>
 800445e:	3304      	adds	r3, #4
 8004460:	42a3      	cmp	r3, r4
 8004462:	eba3 0204 	sub.w	r2, r3, r4
 8004466:	bf08      	it	eq
 8004468:	2300      	moveq	r3, #0
 800446a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800446e:	6102      	str	r2, [r0, #16]
 8004470:	bf08      	it	eq
 8004472:	6143      	streq	r3, [r0, #20]
 8004474:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004476:	683f      	ldr	r7, [r7, #0]
 8004478:	fa07 f70c 	lsl.w	r7, r7, ip
 800447c:	433d      	orrs	r5, r7
 800447e:	f843 5b04 	str.w	r5, [r3], #4
 8004482:	f852 5b04 	ldr.w	r5, [r2], #4
 8004486:	40cd      	lsrs	r5, r1
 8004488:	e7e4      	b.n	8004454 <rshift+0x3c>
 800448a:	4623      	mov	r3, r4
 800448c:	e7e8      	b.n	8004460 <rshift+0x48>

0800448e <__hexdig_fun>:
 800448e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8004492:	2b09      	cmp	r3, #9
 8004494:	d802      	bhi.n	800449c <__hexdig_fun+0xe>
 8004496:	3820      	subs	r0, #32
 8004498:	b2c0      	uxtb	r0, r0
 800449a:	4770      	bx	lr
 800449c:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80044a0:	2b05      	cmp	r3, #5
 80044a2:	d801      	bhi.n	80044a8 <__hexdig_fun+0x1a>
 80044a4:	3847      	subs	r0, #71	; 0x47
 80044a6:	e7f7      	b.n	8004498 <__hexdig_fun+0xa>
 80044a8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80044ac:	2b05      	cmp	r3, #5
 80044ae:	d801      	bhi.n	80044b4 <__hexdig_fun+0x26>
 80044b0:	3827      	subs	r0, #39	; 0x27
 80044b2:	e7f1      	b.n	8004498 <__hexdig_fun+0xa>
 80044b4:	2000      	movs	r0, #0
 80044b6:	4770      	bx	lr

080044b8 <__gethex>:
 80044b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044bc:	b08b      	sub	sp, #44	; 0x2c
 80044be:	9002      	str	r0, [sp, #8]
 80044c0:	9816      	ldr	r0, [sp, #88]	; 0x58
 80044c2:	468a      	mov	sl, r1
 80044c4:	4690      	mov	r8, r2
 80044c6:	9306      	str	r3, [sp, #24]
 80044c8:	f000 fad1 	bl	8004a6e <__localeconv_l>
 80044cc:	6803      	ldr	r3, [r0, #0]
 80044ce:	f04f 0b00 	mov.w	fp, #0
 80044d2:	4618      	mov	r0, r3
 80044d4:	9303      	str	r3, [sp, #12]
 80044d6:	f7fb fe4b 	bl	8000170 <strlen>
 80044da:	9b03      	ldr	r3, [sp, #12]
 80044dc:	9001      	str	r0, [sp, #4]
 80044de:	4403      	add	r3, r0
 80044e0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80044e4:	9307      	str	r3, [sp, #28]
 80044e6:	f8da 3000 	ldr.w	r3, [sl]
 80044ea:	3302      	adds	r3, #2
 80044ec:	461f      	mov	r7, r3
 80044ee:	f813 0b01 	ldrb.w	r0, [r3], #1
 80044f2:	2830      	cmp	r0, #48	; 0x30
 80044f4:	d06c      	beq.n	80045d0 <__gethex+0x118>
 80044f6:	f7ff ffca 	bl	800448e <__hexdig_fun>
 80044fa:	4604      	mov	r4, r0
 80044fc:	2800      	cmp	r0, #0
 80044fe:	d16a      	bne.n	80045d6 <__gethex+0x11e>
 8004500:	9a01      	ldr	r2, [sp, #4]
 8004502:	9903      	ldr	r1, [sp, #12]
 8004504:	4638      	mov	r0, r7
 8004506:	f001 f905 	bl	8005714 <strncmp>
 800450a:	2800      	cmp	r0, #0
 800450c:	d166      	bne.n	80045dc <__gethex+0x124>
 800450e:	9b01      	ldr	r3, [sp, #4]
 8004510:	5cf8      	ldrb	r0, [r7, r3]
 8004512:	18fe      	adds	r6, r7, r3
 8004514:	f7ff ffbb 	bl	800448e <__hexdig_fun>
 8004518:	2800      	cmp	r0, #0
 800451a:	d062      	beq.n	80045e2 <__gethex+0x12a>
 800451c:	4633      	mov	r3, r6
 800451e:	7818      	ldrb	r0, [r3, #0]
 8004520:	461f      	mov	r7, r3
 8004522:	2830      	cmp	r0, #48	; 0x30
 8004524:	f103 0301 	add.w	r3, r3, #1
 8004528:	d0f9      	beq.n	800451e <__gethex+0x66>
 800452a:	f7ff ffb0 	bl	800448e <__hexdig_fun>
 800452e:	fab0 f580 	clz	r5, r0
 8004532:	4634      	mov	r4, r6
 8004534:	f04f 0b01 	mov.w	fp, #1
 8004538:	096d      	lsrs	r5, r5, #5
 800453a:	463a      	mov	r2, r7
 800453c:	4616      	mov	r6, r2
 800453e:	7830      	ldrb	r0, [r6, #0]
 8004540:	3201      	adds	r2, #1
 8004542:	f7ff ffa4 	bl	800448e <__hexdig_fun>
 8004546:	2800      	cmp	r0, #0
 8004548:	d1f8      	bne.n	800453c <__gethex+0x84>
 800454a:	9a01      	ldr	r2, [sp, #4]
 800454c:	9903      	ldr	r1, [sp, #12]
 800454e:	4630      	mov	r0, r6
 8004550:	f001 f8e0 	bl	8005714 <strncmp>
 8004554:	b950      	cbnz	r0, 800456c <__gethex+0xb4>
 8004556:	b954      	cbnz	r4, 800456e <__gethex+0xb6>
 8004558:	9b01      	ldr	r3, [sp, #4]
 800455a:	18f4      	adds	r4, r6, r3
 800455c:	4622      	mov	r2, r4
 800455e:	4616      	mov	r6, r2
 8004560:	7830      	ldrb	r0, [r6, #0]
 8004562:	3201      	adds	r2, #1
 8004564:	f7ff ff93 	bl	800448e <__hexdig_fun>
 8004568:	2800      	cmp	r0, #0
 800456a:	d1f8      	bne.n	800455e <__gethex+0xa6>
 800456c:	b10c      	cbz	r4, 8004572 <__gethex+0xba>
 800456e:	1ba4      	subs	r4, r4, r6
 8004570:	00a4      	lsls	r4, r4, #2
 8004572:	7833      	ldrb	r3, [r6, #0]
 8004574:	2b50      	cmp	r3, #80	; 0x50
 8004576:	d001      	beq.n	800457c <__gethex+0xc4>
 8004578:	2b70      	cmp	r3, #112	; 0x70
 800457a:	d140      	bne.n	80045fe <__gethex+0x146>
 800457c:	7873      	ldrb	r3, [r6, #1]
 800457e:	2b2b      	cmp	r3, #43	; 0x2b
 8004580:	d031      	beq.n	80045e6 <__gethex+0x12e>
 8004582:	2b2d      	cmp	r3, #45	; 0x2d
 8004584:	d033      	beq.n	80045ee <__gethex+0x136>
 8004586:	f04f 0900 	mov.w	r9, #0
 800458a:	1c71      	adds	r1, r6, #1
 800458c:	7808      	ldrb	r0, [r1, #0]
 800458e:	f7ff ff7e 	bl	800448e <__hexdig_fun>
 8004592:	1e43      	subs	r3, r0, #1
 8004594:	b2db      	uxtb	r3, r3
 8004596:	2b18      	cmp	r3, #24
 8004598:	d831      	bhi.n	80045fe <__gethex+0x146>
 800459a:	f1a0 0210 	sub.w	r2, r0, #16
 800459e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80045a2:	f7ff ff74 	bl	800448e <__hexdig_fun>
 80045a6:	1e43      	subs	r3, r0, #1
 80045a8:	b2db      	uxtb	r3, r3
 80045aa:	2b18      	cmp	r3, #24
 80045ac:	d922      	bls.n	80045f4 <__gethex+0x13c>
 80045ae:	f1b9 0f00 	cmp.w	r9, #0
 80045b2:	d000      	beq.n	80045b6 <__gethex+0xfe>
 80045b4:	4252      	negs	r2, r2
 80045b6:	4414      	add	r4, r2
 80045b8:	f8ca 1000 	str.w	r1, [sl]
 80045bc:	b30d      	cbz	r5, 8004602 <__gethex+0x14a>
 80045be:	f1bb 0f00 	cmp.w	fp, #0
 80045c2:	bf0c      	ite	eq
 80045c4:	2706      	moveq	r7, #6
 80045c6:	2700      	movne	r7, #0
 80045c8:	4638      	mov	r0, r7
 80045ca:	b00b      	add	sp, #44	; 0x2c
 80045cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045d0:	f10b 0b01 	add.w	fp, fp, #1
 80045d4:	e78a      	b.n	80044ec <__gethex+0x34>
 80045d6:	2500      	movs	r5, #0
 80045d8:	462c      	mov	r4, r5
 80045da:	e7ae      	b.n	800453a <__gethex+0x82>
 80045dc:	463e      	mov	r6, r7
 80045de:	2501      	movs	r5, #1
 80045e0:	e7c7      	b.n	8004572 <__gethex+0xba>
 80045e2:	4604      	mov	r4, r0
 80045e4:	e7fb      	b.n	80045de <__gethex+0x126>
 80045e6:	f04f 0900 	mov.w	r9, #0
 80045ea:	1cb1      	adds	r1, r6, #2
 80045ec:	e7ce      	b.n	800458c <__gethex+0xd4>
 80045ee:	f04f 0901 	mov.w	r9, #1
 80045f2:	e7fa      	b.n	80045ea <__gethex+0x132>
 80045f4:	230a      	movs	r3, #10
 80045f6:	fb03 0202 	mla	r2, r3, r2, r0
 80045fa:	3a10      	subs	r2, #16
 80045fc:	e7cf      	b.n	800459e <__gethex+0xe6>
 80045fe:	4631      	mov	r1, r6
 8004600:	e7da      	b.n	80045b8 <__gethex+0x100>
 8004602:	4629      	mov	r1, r5
 8004604:	1bf3      	subs	r3, r6, r7
 8004606:	3b01      	subs	r3, #1
 8004608:	2b07      	cmp	r3, #7
 800460a:	dc49      	bgt.n	80046a0 <__gethex+0x1e8>
 800460c:	9802      	ldr	r0, [sp, #8]
 800460e:	f000 fa72 	bl	8004af6 <_Balloc>
 8004612:	f04f 0b00 	mov.w	fp, #0
 8004616:	4605      	mov	r5, r0
 8004618:	46da      	mov	sl, fp
 800461a:	9b01      	ldr	r3, [sp, #4]
 800461c:	f100 0914 	add.w	r9, r0, #20
 8004620:	f1c3 0301 	rsb	r3, r3, #1
 8004624:	f8cd 9010 	str.w	r9, [sp, #16]
 8004628:	9308      	str	r3, [sp, #32]
 800462a:	42b7      	cmp	r7, r6
 800462c:	d33b      	bcc.n	80046a6 <__gethex+0x1ee>
 800462e:	9804      	ldr	r0, [sp, #16]
 8004630:	f840 ab04 	str.w	sl, [r0], #4
 8004634:	eba0 0009 	sub.w	r0, r0, r9
 8004638:	1080      	asrs	r0, r0, #2
 800463a:	6128      	str	r0, [r5, #16]
 800463c:	0147      	lsls	r7, r0, #5
 800463e:	4650      	mov	r0, sl
 8004640:	f000 fb1d 	bl	8004c7e <__hi0bits>
 8004644:	f8d8 6000 	ldr.w	r6, [r8]
 8004648:	1a3f      	subs	r7, r7, r0
 800464a:	42b7      	cmp	r7, r6
 800464c:	dd64      	ble.n	8004718 <__gethex+0x260>
 800464e:	1bbf      	subs	r7, r7, r6
 8004650:	4639      	mov	r1, r7
 8004652:	4628      	mov	r0, r5
 8004654:	f000 fe27 	bl	80052a6 <__any_on>
 8004658:	4682      	mov	sl, r0
 800465a:	b178      	cbz	r0, 800467c <__gethex+0x1c4>
 800465c:	f04f 0a01 	mov.w	sl, #1
 8004660:	1e7b      	subs	r3, r7, #1
 8004662:	1159      	asrs	r1, r3, #5
 8004664:	f003 021f 	and.w	r2, r3, #31
 8004668:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800466c:	fa0a f202 	lsl.w	r2, sl, r2
 8004670:	420a      	tst	r2, r1
 8004672:	d003      	beq.n	800467c <__gethex+0x1c4>
 8004674:	4553      	cmp	r3, sl
 8004676:	dc46      	bgt.n	8004706 <__gethex+0x24e>
 8004678:	f04f 0a02 	mov.w	sl, #2
 800467c:	4639      	mov	r1, r7
 800467e:	4628      	mov	r0, r5
 8004680:	f7ff feca 	bl	8004418 <rshift>
 8004684:	443c      	add	r4, r7
 8004686:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800468a:	42a3      	cmp	r3, r4
 800468c:	da52      	bge.n	8004734 <__gethex+0x27c>
 800468e:	4629      	mov	r1, r5
 8004690:	9802      	ldr	r0, [sp, #8]
 8004692:	f000 fa64 	bl	8004b5e <_Bfree>
 8004696:	2300      	movs	r3, #0
 8004698:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800469a:	27a3      	movs	r7, #163	; 0xa3
 800469c:	6013      	str	r3, [r2, #0]
 800469e:	e793      	b.n	80045c8 <__gethex+0x110>
 80046a0:	3101      	adds	r1, #1
 80046a2:	105b      	asrs	r3, r3, #1
 80046a4:	e7b0      	b.n	8004608 <__gethex+0x150>
 80046a6:	1e73      	subs	r3, r6, #1
 80046a8:	9305      	str	r3, [sp, #20]
 80046aa:	9a07      	ldr	r2, [sp, #28]
 80046ac:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80046b0:	4293      	cmp	r3, r2
 80046b2:	d018      	beq.n	80046e6 <__gethex+0x22e>
 80046b4:	f1bb 0f20 	cmp.w	fp, #32
 80046b8:	d107      	bne.n	80046ca <__gethex+0x212>
 80046ba:	9b04      	ldr	r3, [sp, #16]
 80046bc:	f8c3 a000 	str.w	sl, [r3]
 80046c0:	f04f 0a00 	mov.w	sl, #0
 80046c4:	46d3      	mov	fp, sl
 80046c6:	3304      	adds	r3, #4
 80046c8:	9304      	str	r3, [sp, #16]
 80046ca:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80046ce:	f7ff fede 	bl	800448e <__hexdig_fun>
 80046d2:	f000 000f 	and.w	r0, r0, #15
 80046d6:	fa00 f00b 	lsl.w	r0, r0, fp
 80046da:	ea4a 0a00 	orr.w	sl, sl, r0
 80046de:	f10b 0b04 	add.w	fp, fp, #4
 80046e2:	9b05      	ldr	r3, [sp, #20]
 80046e4:	e00d      	b.n	8004702 <__gethex+0x24a>
 80046e6:	9b05      	ldr	r3, [sp, #20]
 80046e8:	9a08      	ldr	r2, [sp, #32]
 80046ea:	4413      	add	r3, r2
 80046ec:	42bb      	cmp	r3, r7
 80046ee:	d3e1      	bcc.n	80046b4 <__gethex+0x1fc>
 80046f0:	4618      	mov	r0, r3
 80046f2:	9a01      	ldr	r2, [sp, #4]
 80046f4:	9903      	ldr	r1, [sp, #12]
 80046f6:	9309      	str	r3, [sp, #36]	; 0x24
 80046f8:	f001 f80c 	bl	8005714 <strncmp>
 80046fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80046fe:	2800      	cmp	r0, #0
 8004700:	d1d8      	bne.n	80046b4 <__gethex+0x1fc>
 8004702:	461e      	mov	r6, r3
 8004704:	e791      	b.n	800462a <__gethex+0x172>
 8004706:	1eb9      	subs	r1, r7, #2
 8004708:	4628      	mov	r0, r5
 800470a:	f000 fdcc 	bl	80052a6 <__any_on>
 800470e:	2800      	cmp	r0, #0
 8004710:	d0b2      	beq.n	8004678 <__gethex+0x1c0>
 8004712:	f04f 0a03 	mov.w	sl, #3
 8004716:	e7b1      	b.n	800467c <__gethex+0x1c4>
 8004718:	da09      	bge.n	800472e <__gethex+0x276>
 800471a:	1bf7      	subs	r7, r6, r7
 800471c:	4629      	mov	r1, r5
 800471e:	463a      	mov	r2, r7
 8004720:	9802      	ldr	r0, [sp, #8]
 8004722:	f000 fbe7 	bl	8004ef4 <__lshift>
 8004726:	4605      	mov	r5, r0
 8004728:	1be4      	subs	r4, r4, r7
 800472a:	f100 0914 	add.w	r9, r0, #20
 800472e:	f04f 0a00 	mov.w	sl, #0
 8004732:	e7a8      	b.n	8004686 <__gethex+0x1ce>
 8004734:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8004738:	42a0      	cmp	r0, r4
 800473a:	dd6b      	ble.n	8004814 <__gethex+0x35c>
 800473c:	1b04      	subs	r4, r0, r4
 800473e:	42a6      	cmp	r6, r4
 8004740:	dc2e      	bgt.n	80047a0 <__gethex+0x2e8>
 8004742:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004746:	2b02      	cmp	r3, #2
 8004748:	d022      	beq.n	8004790 <__gethex+0x2d8>
 800474a:	2b03      	cmp	r3, #3
 800474c:	d024      	beq.n	8004798 <__gethex+0x2e0>
 800474e:	2b01      	cmp	r3, #1
 8004750:	d115      	bne.n	800477e <__gethex+0x2c6>
 8004752:	42a6      	cmp	r6, r4
 8004754:	d113      	bne.n	800477e <__gethex+0x2c6>
 8004756:	2e01      	cmp	r6, #1
 8004758:	dc0b      	bgt.n	8004772 <__gethex+0x2ba>
 800475a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800475e:	9a06      	ldr	r2, [sp, #24]
 8004760:	2762      	movs	r7, #98	; 0x62
 8004762:	6013      	str	r3, [r2, #0]
 8004764:	2301      	movs	r3, #1
 8004766:	612b      	str	r3, [r5, #16]
 8004768:	f8c9 3000 	str.w	r3, [r9]
 800476c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800476e:	601d      	str	r5, [r3, #0]
 8004770:	e72a      	b.n	80045c8 <__gethex+0x110>
 8004772:	1e71      	subs	r1, r6, #1
 8004774:	4628      	mov	r0, r5
 8004776:	f000 fd96 	bl	80052a6 <__any_on>
 800477a:	2800      	cmp	r0, #0
 800477c:	d1ed      	bne.n	800475a <__gethex+0x2a2>
 800477e:	4629      	mov	r1, r5
 8004780:	9802      	ldr	r0, [sp, #8]
 8004782:	f000 f9ec 	bl	8004b5e <_Bfree>
 8004786:	2300      	movs	r3, #0
 8004788:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800478a:	2750      	movs	r7, #80	; 0x50
 800478c:	6013      	str	r3, [r2, #0]
 800478e:	e71b      	b.n	80045c8 <__gethex+0x110>
 8004790:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004792:	2b00      	cmp	r3, #0
 8004794:	d0e1      	beq.n	800475a <__gethex+0x2a2>
 8004796:	e7f2      	b.n	800477e <__gethex+0x2c6>
 8004798:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800479a:	2b00      	cmp	r3, #0
 800479c:	d1dd      	bne.n	800475a <__gethex+0x2a2>
 800479e:	e7ee      	b.n	800477e <__gethex+0x2c6>
 80047a0:	1e67      	subs	r7, r4, #1
 80047a2:	f1ba 0f00 	cmp.w	sl, #0
 80047a6:	d132      	bne.n	800480e <__gethex+0x356>
 80047a8:	b127      	cbz	r7, 80047b4 <__gethex+0x2fc>
 80047aa:	4639      	mov	r1, r7
 80047ac:	4628      	mov	r0, r5
 80047ae:	f000 fd7a 	bl	80052a6 <__any_on>
 80047b2:	4682      	mov	sl, r0
 80047b4:	2301      	movs	r3, #1
 80047b6:	117a      	asrs	r2, r7, #5
 80047b8:	f007 071f 	and.w	r7, r7, #31
 80047bc:	fa03 f707 	lsl.w	r7, r3, r7
 80047c0:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 80047c4:	4621      	mov	r1, r4
 80047c6:	421f      	tst	r7, r3
 80047c8:	f04f 0702 	mov.w	r7, #2
 80047cc:	4628      	mov	r0, r5
 80047ce:	bf18      	it	ne
 80047d0:	f04a 0a02 	orrne.w	sl, sl, #2
 80047d4:	1b36      	subs	r6, r6, r4
 80047d6:	f7ff fe1f 	bl	8004418 <rshift>
 80047da:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80047de:	f1ba 0f00 	cmp.w	sl, #0
 80047e2:	d048      	beq.n	8004876 <__gethex+0x3be>
 80047e4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80047e8:	2b02      	cmp	r3, #2
 80047ea:	d015      	beq.n	8004818 <__gethex+0x360>
 80047ec:	2b03      	cmp	r3, #3
 80047ee:	d017      	beq.n	8004820 <__gethex+0x368>
 80047f0:	2b01      	cmp	r3, #1
 80047f2:	d109      	bne.n	8004808 <__gethex+0x350>
 80047f4:	f01a 0f02 	tst.w	sl, #2
 80047f8:	d006      	beq.n	8004808 <__gethex+0x350>
 80047fa:	f8d9 3000 	ldr.w	r3, [r9]
 80047fe:	ea4a 0a03 	orr.w	sl, sl, r3
 8004802:	f01a 0f01 	tst.w	sl, #1
 8004806:	d10e      	bne.n	8004826 <__gethex+0x36e>
 8004808:	f047 0710 	orr.w	r7, r7, #16
 800480c:	e033      	b.n	8004876 <__gethex+0x3be>
 800480e:	f04f 0a01 	mov.w	sl, #1
 8004812:	e7cf      	b.n	80047b4 <__gethex+0x2fc>
 8004814:	2701      	movs	r7, #1
 8004816:	e7e2      	b.n	80047de <__gethex+0x326>
 8004818:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800481a:	f1c3 0301 	rsb	r3, r3, #1
 800481e:	9315      	str	r3, [sp, #84]	; 0x54
 8004820:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004822:	2b00      	cmp	r3, #0
 8004824:	d0f0      	beq.n	8004808 <__gethex+0x350>
 8004826:	f04f 0c00 	mov.w	ip, #0
 800482a:	f8d5 9010 	ldr.w	r9, [r5, #16]
 800482e:	f105 0314 	add.w	r3, r5, #20
 8004832:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8004836:	eb03 010a 	add.w	r1, r3, sl
 800483a:	4618      	mov	r0, r3
 800483c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004840:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004844:	d01c      	beq.n	8004880 <__gethex+0x3c8>
 8004846:	3201      	adds	r2, #1
 8004848:	6002      	str	r2, [r0, #0]
 800484a:	2f02      	cmp	r7, #2
 800484c:	f105 0314 	add.w	r3, r5, #20
 8004850:	d138      	bne.n	80048c4 <__gethex+0x40c>
 8004852:	f8d8 2000 	ldr.w	r2, [r8]
 8004856:	3a01      	subs	r2, #1
 8004858:	42b2      	cmp	r2, r6
 800485a:	d10a      	bne.n	8004872 <__gethex+0x3ba>
 800485c:	2201      	movs	r2, #1
 800485e:	1171      	asrs	r1, r6, #5
 8004860:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004864:	f006 061f 	and.w	r6, r6, #31
 8004868:	fa02 f606 	lsl.w	r6, r2, r6
 800486c:	421e      	tst	r6, r3
 800486e:	bf18      	it	ne
 8004870:	4617      	movne	r7, r2
 8004872:	f047 0720 	orr.w	r7, r7, #32
 8004876:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004878:	601d      	str	r5, [r3, #0]
 800487a:	9b06      	ldr	r3, [sp, #24]
 800487c:	601c      	str	r4, [r3, #0]
 800487e:	e6a3      	b.n	80045c8 <__gethex+0x110>
 8004880:	4299      	cmp	r1, r3
 8004882:	f843 cc04 	str.w	ip, [r3, #-4]
 8004886:	d8d8      	bhi.n	800483a <__gethex+0x382>
 8004888:	68ab      	ldr	r3, [r5, #8]
 800488a:	4599      	cmp	r9, r3
 800488c:	db12      	blt.n	80048b4 <__gethex+0x3fc>
 800488e:	6869      	ldr	r1, [r5, #4]
 8004890:	9802      	ldr	r0, [sp, #8]
 8004892:	3101      	adds	r1, #1
 8004894:	f000 f92f 	bl	8004af6 <_Balloc>
 8004898:	4683      	mov	fp, r0
 800489a:	692a      	ldr	r2, [r5, #16]
 800489c:	f105 010c 	add.w	r1, r5, #12
 80048a0:	3202      	adds	r2, #2
 80048a2:	0092      	lsls	r2, r2, #2
 80048a4:	300c      	adds	r0, #12
 80048a6:	f000 f91b 	bl	8004ae0 <memcpy>
 80048aa:	4629      	mov	r1, r5
 80048ac:	9802      	ldr	r0, [sp, #8]
 80048ae:	f000 f956 	bl	8004b5e <_Bfree>
 80048b2:	465d      	mov	r5, fp
 80048b4:	692b      	ldr	r3, [r5, #16]
 80048b6:	1c5a      	adds	r2, r3, #1
 80048b8:	612a      	str	r2, [r5, #16]
 80048ba:	2201      	movs	r2, #1
 80048bc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80048c0:	615a      	str	r2, [r3, #20]
 80048c2:	e7c2      	b.n	800484a <__gethex+0x392>
 80048c4:	692a      	ldr	r2, [r5, #16]
 80048c6:	454a      	cmp	r2, r9
 80048c8:	dd0b      	ble.n	80048e2 <__gethex+0x42a>
 80048ca:	2101      	movs	r1, #1
 80048cc:	4628      	mov	r0, r5
 80048ce:	f7ff fda3 	bl	8004418 <rshift>
 80048d2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80048d6:	3401      	adds	r4, #1
 80048d8:	42a3      	cmp	r3, r4
 80048da:	f6ff aed8 	blt.w	800468e <__gethex+0x1d6>
 80048de:	2701      	movs	r7, #1
 80048e0:	e7c7      	b.n	8004872 <__gethex+0x3ba>
 80048e2:	f016 061f 	ands.w	r6, r6, #31
 80048e6:	d0fa      	beq.n	80048de <__gethex+0x426>
 80048e8:	449a      	add	sl, r3
 80048ea:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80048ee:	f000 f9c6 	bl	8004c7e <__hi0bits>
 80048f2:	f1c6 0620 	rsb	r6, r6, #32
 80048f6:	42b0      	cmp	r0, r6
 80048f8:	dbe7      	blt.n	80048ca <__gethex+0x412>
 80048fa:	e7f0      	b.n	80048de <__gethex+0x426>

080048fc <L_shift>:
 80048fc:	f1c2 0208 	rsb	r2, r2, #8
 8004900:	0092      	lsls	r2, r2, #2
 8004902:	b570      	push	{r4, r5, r6, lr}
 8004904:	f1c2 0620 	rsb	r6, r2, #32
 8004908:	6843      	ldr	r3, [r0, #4]
 800490a:	6804      	ldr	r4, [r0, #0]
 800490c:	fa03 f506 	lsl.w	r5, r3, r6
 8004910:	432c      	orrs	r4, r5
 8004912:	40d3      	lsrs	r3, r2
 8004914:	6004      	str	r4, [r0, #0]
 8004916:	f840 3f04 	str.w	r3, [r0, #4]!
 800491a:	4288      	cmp	r0, r1
 800491c:	d3f4      	bcc.n	8004908 <L_shift+0xc>
 800491e:	bd70      	pop	{r4, r5, r6, pc}

08004920 <__match>:
 8004920:	b530      	push	{r4, r5, lr}
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	3301      	adds	r3, #1
 8004926:	f811 4b01 	ldrb.w	r4, [r1], #1
 800492a:	b914      	cbnz	r4, 8004932 <__match+0x12>
 800492c:	6003      	str	r3, [r0, #0]
 800492e:	2001      	movs	r0, #1
 8004930:	bd30      	pop	{r4, r5, pc}
 8004932:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004936:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800493a:	2d19      	cmp	r5, #25
 800493c:	bf98      	it	ls
 800493e:	3220      	addls	r2, #32
 8004940:	42a2      	cmp	r2, r4
 8004942:	d0f0      	beq.n	8004926 <__match+0x6>
 8004944:	2000      	movs	r0, #0
 8004946:	e7f3      	b.n	8004930 <__match+0x10>

08004948 <__hexnan>:
 8004948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800494c:	2500      	movs	r5, #0
 800494e:	680b      	ldr	r3, [r1, #0]
 8004950:	4682      	mov	sl, r0
 8004952:	115f      	asrs	r7, r3, #5
 8004954:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8004958:	f013 031f 	ands.w	r3, r3, #31
 800495c:	bf18      	it	ne
 800495e:	3704      	addne	r7, #4
 8004960:	1f3e      	subs	r6, r7, #4
 8004962:	4690      	mov	r8, r2
 8004964:	46b1      	mov	r9, r6
 8004966:	4634      	mov	r4, r6
 8004968:	46ab      	mov	fp, r5
 800496a:	b087      	sub	sp, #28
 800496c:	6801      	ldr	r1, [r0, #0]
 800496e:	9301      	str	r3, [sp, #4]
 8004970:	f847 5c04 	str.w	r5, [r7, #-4]
 8004974:	9502      	str	r5, [sp, #8]
 8004976:	784a      	ldrb	r2, [r1, #1]
 8004978:	1c4b      	adds	r3, r1, #1
 800497a:	9303      	str	r3, [sp, #12]
 800497c:	b342      	cbz	r2, 80049d0 <__hexnan+0x88>
 800497e:	4610      	mov	r0, r2
 8004980:	9105      	str	r1, [sp, #20]
 8004982:	9204      	str	r2, [sp, #16]
 8004984:	f7ff fd83 	bl	800448e <__hexdig_fun>
 8004988:	2800      	cmp	r0, #0
 800498a:	d143      	bne.n	8004a14 <__hexnan+0xcc>
 800498c:	9a04      	ldr	r2, [sp, #16]
 800498e:	9905      	ldr	r1, [sp, #20]
 8004990:	2a20      	cmp	r2, #32
 8004992:	d818      	bhi.n	80049c6 <__hexnan+0x7e>
 8004994:	9b02      	ldr	r3, [sp, #8]
 8004996:	459b      	cmp	fp, r3
 8004998:	dd13      	ble.n	80049c2 <__hexnan+0x7a>
 800499a:	454c      	cmp	r4, r9
 800499c:	d206      	bcs.n	80049ac <__hexnan+0x64>
 800499e:	2d07      	cmp	r5, #7
 80049a0:	dc04      	bgt.n	80049ac <__hexnan+0x64>
 80049a2:	462a      	mov	r2, r5
 80049a4:	4649      	mov	r1, r9
 80049a6:	4620      	mov	r0, r4
 80049a8:	f7ff ffa8 	bl	80048fc <L_shift>
 80049ac:	4544      	cmp	r4, r8
 80049ae:	d944      	bls.n	8004a3a <__hexnan+0xf2>
 80049b0:	2300      	movs	r3, #0
 80049b2:	f1a4 0904 	sub.w	r9, r4, #4
 80049b6:	f844 3c04 	str.w	r3, [r4, #-4]
 80049ba:	461d      	mov	r5, r3
 80049bc:	464c      	mov	r4, r9
 80049be:	f8cd b008 	str.w	fp, [sp, #8]
 80049c2:	9903      	ldr	r1, [sp, #12]
 80049c4:	e7d7      	b.n	8004976 <__hexnan+0x2e>
 80049c6:	2a29      	cmp	r2, #41	; 0x29
 80049c8:	d14a      	bne.n	8004a60 <__hexnan+0x118>
 80049ca:	3102      	adds	r1, #2
 80049cc:	f8ca 1000 	str.w	r1, [sl]
 80049d0:	f1bb 0f00 	cmp.w	fp, #0
 80049d4:	d044      	beq.n	8004a60 <__hexnan+0x118>
 80049d6:	454c      	cmp	r4, r9
 80049d8:	d206      	bcs.n	80049e8 <__hexnan+0xa0>
 80049da:	2d07      	cmp	r5, #7
 80049dc:	dc04      	bgt.n	80049e8 <__hexnan+0xa0>
 80049de:	462a      	mov	r2, r5
 80049e0:	4649      	mov	r1, r9
 80049e2:	4620      	mov	r0, r4
 80049e4:	f7ff ff8a 	bl	80048fc <L_shift>
 80049e8:	4544      	cmp	r4, r8
 80049ea:	d928      	bls.n	8004a3e <__hexnan+0xf6>
 80049ec:	4643      	mov	r3, r8
 80049ee:	f854 2b04 	ldr.w	r2, [r4], #4
 80049f2:	42a6      	cmp	r6, r4
 80049f4:	f843 2b04 	str.w	r2, [r3], #4
 80049f8:	d2f9      	bcs.n	80049ee <__hexnan+0xa6>
 80049fa:	2200      	movs	r2, #0
 80049fc:	f843 2b04 	str.w	r2, [r3], #4
 8004a00:	429e      	cmp	r6, r3
 8004a02:	d2fb      	bcs.n	80049fc <__hexnan+0xb4>
 8004a04:	6833      	ldr	r3, [r6, #0]
 8004a06:	b91b      	cbnz	r3, 8004a10 <__hexnan+0xc8>
 8004a08:	4546      	cmp	r6, r8
 8004a0a:	d127      	bne.n	8004a5c <__hexnan+0x114>
 8004a0c:	2301      	movs	r3, #1
 8004a0e:	6033      	str	r3, [r6, #0]
 8004a10:	2005      	movs	r0, #5
 8004a12:	e026      	b.n	8004a62 <__hexnan+0x11a>
 8004a14:	3501      	adds	r5, #1
 8004a16:	2d08      	cmp	r5, #8
 8004a18:	f10b 0b01 	add.w	fp, fp, #1
 8004a1c:	dd06      	ble.n	8004a2c <__hexnan+0xe4>
 8004a1e:	4544      	cmp	r4, r8
 8004a20:	d9cf      	bls.n	80049c2 <__hexnan+0x7a>
 8004a22:	2300      	movs	r3, #0
 8004a24:	2501      	movs	r5, #1
 8004a26:	f844 3c04 	str.w	r3, [r4, #-4]
 8004a2a:	3c04      	subs	r4, #4
 8004a2c:	6822      	ldr	r2, [r4, #0]
 8004a2e:	f000 000f 	and.w	r0, r0, #15
 8004a32:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8004a36:	6020      	str	r0, [r4, #0]
 8004a38:	e7c3      	b.n	80049c2 <__hexnan+0x7a>
 8004a3a:	2508      	movs	r5, #8
 8004a3c:	e7c1      	b.n	80049c2 <__hexnan+0x7a>
 8004a3e:	9b01      	ldr	r3, [sp, #4]
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d0df      	beq.n	8004a04 <__hexnan+0xbc>
 8004a44:	f04f 32ff 	mov.w	r2, #4294967295
 8004a48:	f1c3 0320 	rsb	r3, r3, #32
 8004a4c:	fa22 f303 	lsr.w	r3, r2, r3
 8004a50:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8004a54:	401a      	ands	r2, r3
 8004a56:	f847 2c04 	str.w	r2, [r7, #-4]
 8004a5a:	e7d3      	b.n	8004a04 <__hexnan+0xbc>
 8004a5c:	3e04      	subs	r6, #4
 8004a5e:	e7d1      	b.n	8004a04 <__hexnan+0xbc>
 8004a60:	2004      	movs	r0, #4
 8004a62:	b007      	add	sp, #28
 8004a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004a68 <__locale_ctype_ptr_l>:
 8004a68:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8004a6c:	4770      	bx	lr

08004a6e <__localeconv_l>:
 8004a6e:	30f0      	adds	r0, #240	; 0xf0
 8004a70:	4770      	bx	lr
	...

08004a74 <_localeconv_r>:
 8004a74:	4b04      	ldr	r3, [pc, #16]	; (8004a88 <_localeconv_r+0x14>)
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	6a18      	ldr	r0, [r3, #32]
 8004a7a:	4b04      	ldr	r3, [pc, #16]	; (8004a8c <_localeconv_r+0x18>)
 8004a7c:	2800      	cmp	r0, #0
 8004a7e:	bf08      	it	eq
 8004a80:	4618      	moveq	r0, r3
 8004a82:	30f0      	adds	r0, #240	; 0xf0
 8004a84:	4770      	bx	lr
 8004a86:	bf00      	nop
 8004a88:	20000004 	.word	0x20000004
 8004a8c:	20000068 	.word	0x20000068

08004a90 <malloc>:
 8004a90:	4b02      	ldr	r3, [pc, #8]	; (8004a9c <malloc+0xc>)
 8004a92:	4601      	mov	r1, r0
 8004a94:	6818      	ldr	r0, [r3, #0]
 8004a96:	f000 bc81 	b.w	800539c <_malloc_r>
 8004a9a:	bf00      	nop
 8004a9c:	20000004 	.word	0x20000004

08004aa0 <__ascii_mbtowc>:
 8004aa0:	b082      	sub	sp, #8
 8004aa2:	b901      	cbnz	r1, 8004aa6 <__ascii_mbtowc+0x6>
 8004aa4:	a901      	add	r1, sp, #4
 8004aa6:	b142      	cbz	r2, 8004aba <__ascii_mbtowc+0x1a>
 8004aa8:	b14b      	cbz	r3, 8004abe <__ascii_mbtowc+0x1e>
 8004aaa:	7813      	ldrb	r3, [r2, #0]
 8004aac:	600b      	str	r3, [r1, #0]
 8004aae:	7812      	ldrb	r2, [r2, #0]
 8004ab0:	1c10      	adds	r0, r2, #0
 8004ab2:	bf18      	it	ne
 8004ab4:	2001      	movne	r0, #1
 8004ab6:	b002      	add	sp, #8
 8004ab8:	4770      	bx	lr
 8004aba:	4610      	mov	r0, r2
 8004abc:	e7fb      	b.n	8004ab6 <__ascii_mbtowc+0x16>
 8004abe:	f06f 0001 	mvn.w	r0, #1
 8004ac2:	e7f8      	b.n	8004ab6 <__ascii_mbtowc+0x16>

08004ac4 <memchr>:
 8004ac4:	b510      	push	{r4, lr}
 8004ac6:	b2c9      	uxtb	r1, r1
 8004ac8:	4402      	add	r2, r0
 8004aca:	4290      	cmp	r0, r2
 8004acc:	4603      	mov	r3, r0
 8004ace:	d101      	bne.n	8004ad4 <memchr+0x10>
 8004ad0:	2300      	movs	r3, #0
 8004ad2:	e003      	b.n	8004adc <memchr+0x18>
 8004ad4:	781c      	ldrb	r4, [r3, #0]
 8004ad6:	3001      	adds	r0, #1
 8004ad8:	428c      	cmp	r4, r1
 8004ada:	d1f6      	bne.n	8004aca <memchr+0x6>
 8004adc:	4618      	mov	r0, r3
 8004ade:	bd10      	pop	{r4, pc}

08004ae0 <memcpy>:
 8004ae0:	b510      	push	{r4, lr}
 8004ae2:	1e43      	subs	r3, r0, #1
 8004ae4:	440a      	add	r2, r1
 8004ae6:	4291      	cmp	r1, r2
 8004ae8:	d100      	bne.n	8004aec <memcpy+0xc>
 8004aea:	bd10      	pop	{r4, pc}
 8004aec:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004af0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004af4:	e7f7      	b.n	8004ae6 <memcpy+0x6>

08004af6 <_Balloc>:
 8004af6:	b570      	push	{r4, r5, r6, lr}
 8004af8:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004afa:	4604      	mov	r4, r0
 8004afc:	460e      	mov	r6, r1
 8004afe:	b93d      	cbnz	r5, 8004b10 <_Balloc+0x1a>
 8004b00:	2010      	movs	r0, #16
 8004b02:	f7ff ffc5 	bl	8004a90 <malloc>
 8004b06:	6260      	str	r0, [r4, #36]	; 0x24
 8004b08:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8004b0c:	6005      	str	r5, [r0, #0]
 8004b0e:	60c5      	str	r5, [r0, #12]
 8004b10:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8004b12:	68eb      	ldr	r3, [r5, #12]
 8004b14:	b183      	cbz	r3, 8004b38 <_Balloc+0x42>
 8004b16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b18:	68db      	ldr	r3, [r3, #12]
 8004b1a:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8004b1e:	b9b8      	cbnz	r0, 8004b50 <_Balloc+0x5a>
 8004b20:	2101      	movs	r1, #1
 8004b22:	fa01 f506 	lsl.w	r5, r1, r6
 8004b26:	1d6a      	adds	r2, r5, #5
 8004b28:	0092      	lsls	r2, r2, #2
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	f000 fbdc 	bl	80052e8 <_calloc_r>
 8004b30:	b160      	cbz	r0, 8004b4c <_Balloc+0x56>
 8004b32:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8004b36:	e00e      	b.n	8004b56 <_Balloc+0x60>
 8004b38:	2221      	movs	r2, #33	; 0x21
 8004b3a:	2104      	movs	r1, #4
 8004b3c:	4620      	mov	r0, r4
 8004b3e:	f000 fbd3 	bl	80052e8 <_calloc_r>
 8004b42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b44:	60e8      	str	r0, [r5, #12]
 8004b46:	68db      	ldr	r3, [r3, #12]
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d1e4      	bne.n	8004b16 <_Balloc+0x20>
 8004b4c:	2000      	movs	r0, #0
 8004b4e:	bd70      	pop	{r4, r5, r6, pc}
 8004b50:	6802      	ldr	r2, [r0, #0]
 8004b52:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8004b56:	2300      	movs	r3, #0
 8004b58:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004b5c:	e7f7      	b.n	8004b4e <_Balloc+0x58>

08004b5e <_Bfree>:
 8004b5e:	b570      	push	{r4, r5, r6, lr}
 8004b60:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004b62:	4606      	mov	r6, r0
 8004b64:	460d      	mov	r5, r1
 8004b66:	b93c      	cbnz	r4, 8004b78 <_Bfree+0x1a>
 8004b68:	2010      	movs	r0, #16
 8004b6a:	f7ff ff91 	bl	8004a90 <malloc>
 8004b6e:	6270      	str	r0, [r6, #36]	; 0x24
 8004b70:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004b74:	6004      	str	r4, [r0, #0]
 8004b76:	60c4      	str	r4, [r0, #12]
 8004b78:	b13d      	cbz	r5, 8004b8a <_Bfree+0x2c>
 8004b7a:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004b7c:	686a      	ldr	r2, [r5, #4]
 8004b7e:	68db      	ldr	r3, [r3, #12]
 8004b80:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004b84:	6029      	str	r1, [r5, #0]
 8004b86:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004b8a:	bd70      	pop	{r4, r5, r6, pc}

08004b8c <__multadd>:
 8004b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b90:	461f      	mov	r7, r3
 8004b92:	4606      	mov	r6, r0
 8004b94:	460c      	mov	r4, r1
 8004b96:	2300      	movs	r3, #0
 8004b98:	690d      	ldr	r5, [r1, #16]
 8004b9a:	f101 0c14 	add.w	ip, r1, #20
 8004b9e:	f8dc 0000 	ldr.w	r0, [ip]
 8004ba2:	3301      	adds	r3, #1
 8004ba4:	b281      	uxth	r1, r0
 8004ba6:	fb02 7101 	mla	r1, r2, r1, r7
 8004baa:	0c00      	lsrs	r0, r0, #16
 8004bac:	0c0f      	lsrs	r7, r1, #16
 8004bae:	fb02 7000 	mla	r0, r2, r0, r7
 8004bb2:	b289      	uxth	r1, r1
 8004bb4:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8004bb8:	429d      	cmp	r5, r3
 8004bba:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8004bbe:	f84c 1b04 	str.w	r1, [ip], #4
 8004bc2:	dcec      	bgt.n	8004b9e <__multadd+0x12>
 8004bc4:	b1d7      	cbz	r7, 8004bfc <__multadd+0x70>
 8004bc6:	68a3      	ldr	r3, [r4, #8]
 8004bc8:	42ab      	cmp	r3, r5
 8004bca:	dc12      	bgt.n	8004bf2 <__multadd+0x66>
 8004bcc:	6861      	ldr	r1, [r4, #4]
 8004bce:	4630      	mov	r0, r6
 8004bd0:	3101      	adds	r1, #1
 8004bd2:	f7ff ff90 	bl	8004af6 <_Balloc>
 8004bd6:	4680      	mov	r8, r0
 8004bd8:	6922      	ldr	r2, [r4, #16]
 8004bda:	f104 010c 	add.w	r1, r4, #12
 8004bde:	3202      	adds	r2, #2
 8004be0:	0092      	lsls	r2, r2, #2
 8004be2:	300c      	adds	r0, #12
 8004be4:	f7ff ff7c 	bl	8004ae0 <memcpy>
 8004be8:	4621      	mov	r1, r4
 8004bea:	4630      	mov	r0, r6
 8004bec:	f7ff ffb7 	bl	8004b5e <_Bfree>
 8004bf0:	4644      	mov	r4, r8
 8004bf2:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004bf6:	3501      	adds	r5, #1
 8004bf8:	615f      	str	r7, [r3, #20]
 8004bfa:	6125      	str	r5, [r4, #16]
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004c02 <__s2b>:
 8004c02:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004c06:	4615      	mov	r5, r2
 8004c08:	2209      	movs	r2, #9
 8004c0a:	461f      	mov	r7, r3
 8004c0c:	3308      	adds	r3, #8
 8004c0e:	460c      	mov	r4, r1
 8004c10:	fb93 f3f2 	sdiv	r3, r3, r2
 8004c14:	4606      	mov	r6, r0
 8004c16:	2201      	movs	r2, #1
 8004c18:	2100      	movs	r1, #0
 8004c1a:	429a      	cmp	r2, r3
 8004c1c:	db20      	blt.n	8004c60 <__s2b+0x5e>
 8004c1e:	4630      	mov	r0, r6
 8004c20:	f7ff ff69 	bl	8004af6 <_Balloc>
 8004c24:	9b08      	ldr	r3, [sp, #32]
 8004c26:	2d09      	cmp	r5, #9
 8004c28:	6143      	str	r3, [r0, #20]
 8004c2a:	f04f 0301 	mov.w	r3, #1
 8004c2e:	6103      	str	r3, [r0, #16]
 8004c30:	dd19      	ble.n	8004c66 <__s2b+0x64>
 8004c32:	f104 0809 	add.w	r8, r4, #9
 8004c36:	46c1      	mov	r9, r8
 8004c38:	442c      	add	r4, r5
 8004c3a:	f819 3b01 	ldrb.w	r3, [r9], #1
 8004c3e:	4601      	mov	r1, r0
 8004c40:	3b30      	subs	r3, #48	; 0x30
 8004c42:	220a      	movs	r2, #10
 8004c44:	4630      	mov	r0, r6
 8004c46:	f7ff ffa1 	bl	8004b8c <__multadd>
 8004c4a:	45a1      	cmp	r9, r4
 8004c4c:	d1f5      	bne.n	8004c3a <__s2b+0x38>
 8004c4e:	eb08 0405 	add.w	r4, r8, r5
 8004c52:	3c08      	subs	r4, #8
 8004c54:	1b2d      	subs	r5, r5, r4
 8004c56:	1963      	adds	r3, r4, r5
 8004c58:	42bb      	cmp	r3, r7
 8004c5a:	db07      	blt.n	8004c6c <__s2b+0x6a>
 8004c5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004c60:	0052      	lsls	r2, r2, #1
 8004c62:	3101      	adds	r1, #1
 8004c64:	e7d9      	b.n	8004c1a <__s2b+0x18>
 8004c66:	340a      	adds	r4, #10
 8004c68:	2509      	movs	r5, #9
 8004c6a:	e7f3      	b.n	8004c54 <__s2b+0x52>
 8004c6c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004c70:	4601      	mov	r1, r0
 8004c72:	3b30      	subs	r3, #48	; 0x30
 8004c74:	220a      	movs	r2, #10
 8004c76:	4630      	mov	r0, r6
 8004c78:	f7ff ff88 	bl	8004b8c <__multadd>
 8004c7c:	e7eb      	b.n	8004c56 <__s2b+0x54>

08004c7e <__hi0bits>:
 8004c7e:	0c02      	lsrs	r2, r0, #16
 8004c80:	0412      	lsls	r2, r2, #16
 8004c82:	4603      	mov	r3, r0
 8004c84:	b9b2      	cbnz	r2, 8004cb4 <__hi0bits+0x36>
 8004c86:	0403      	lsls	r3, r0, #16
 8004c88:	2010      	movs	r0, #16
 8004c8a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8004c8e:	bf04      	itt	eq
 8004c90:	021b      	lsleq	r3, r3, #8
 8004c92:	3008      	addeq	r0, #8
 8004c94:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8004c98:	bf04      	itt	eq
 8004c9a:	011b      	lsleq	r3, r3, #4
 8004c9c:	3004      	addeq	r0, #4
 8004c9e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8004ca2:	bf04      	itt	eq
 8004ca4:	009b      	lsleq	r3, r3, #2
 8004ca6:	3002      	addeq	r0, #2
 8004ca8:	2b00      	cmp	r3, #0
 8004caa:	db06      	blt.n	8004cba <__hi0bits+0x3c>
 8004cac:	005b      	lsls	r3, r3, #1
 8004cae:	d503      	bpl.n	8004cb8 <__hi0bits+0x3a>
 8004cb0:	3001      	adds	r0, #1
 8004cb2:	4770      	bx	lr
 8004cb4:	2000      	movs	r0, #0
 8004cb6:	e7e8      	b.n	8004c8a <__hi0bits+0xc>
 8004cb8:	2020      	movs	r0, #32
 8004cba:	4770      	bx	lr

08004cbc <__lo0bits>:
 8004cbc:	6803      	ldr	r3, [r0, #0]
 8004cbe:	4601      	mov	r1, r0
 8004cc0:	f013 0207 	ands.w	r2, r3, #7
 8004cc4:	d00b      	beq.n	8004cde <__lo0bits+0x22>
 8004cc6:	07da      	lsls	r2, r3, #31
 8004cc8:	d423      	bmi.n	8004d12 <__lo0bits+0x56>
 8004cca:	0798      	lsls	r0, r3, #30
 8004ccc:	bf49      	itett	mi
 8004cce:	085b      	lsrmi	r3, r3, #1
 8004cd0:	089b      	lsrpl	r3, r3, #2
 8004cd2:	2001      	movmi	r0, #1
 8004cd4:	600b      	strmi	r3, [r1, #0]
 8004cd6:	bf5c      	itt	pl
 8004cd8:	600b      	strpl	r3, [r1, #0]
 8004cda:	2002      	movpl	r0, #2
 8004cdc:	4770      	bx	lr
 8004cde:	b298      	uxth	r0, r3
 8004ce0:	b9a8      	cbnz	r0, 8004d0e <__lo0bits+0x52>
 8004ce2:	2010      	movs	r0, #16
 8004ce4:	0c1b      	lsrs	r3, r3, #16
 8004ce6:	f013 0fff 	tst.w	r3, #255	; 0xff
 8004cea:	bf04      	itt	eq
 8004cec:	0a1b      	lsreq	r3, r3, #8
 8004cee:	3008      	addeq	r0, #8
 8004cf0:	071a      	lsls	r2, r3, #28
 8004cf2:	bf04      	itt	eq
 8004cf4:	091b      	lsreq	r3, r3, #4
 8004cf6:	3004      	addeq	r0, #4
 8004cf8:	079a      	lsls	r2, r3, #30
 8004cfa:	bf04      	itt	eq
 8004cfc:	089b      	lsreq	r3, r3, #2
 8004cfe:	3002      	addeq	r0, #2
 8004d00:	07da      	lsls	r2, r3, #31
 8004d02:	d402      	bmi.n	8004d0a <__lo0bits+0x4e>
 8004d04:	085b      	lsrs	r3, r3, #1
 8004d06:	d006      	beq.n	8004d16 <__lo0bits+0x5a>
 8004d08:	3001      	adds	r0, #1
 8004d0a:	600b      	str	r3, [r1, #0]
 8004d0c:	4770      	bx	lr
 8004d0e:	4610      	mov	r0, r2
 8004d10:	e7e9      	b.n	8004ce6 <__lo0bits+0x2a>
 8004d12:	2000      	movs	r0, #0
 8004d14:	4770      	bx	lr
 8004d16:	2020      	movs	r0, #32
 8004d18:	4770      	bx	lr

08004d1a <__i2b>:
 8004d1a:	b510      	push	{r4, lr}
 8004d1c:	460c      	mov	r4, r1
 8004d1e:	2101      	movs	r1, #1
 8004d20:	f7ff fee9 	bl	8004af6 <_Balloc>
 8004d24:	2201      	movs	r2, #1
 8004d26:	6144      	str	r4, [r0, #20]
 8004d28:	6102      	str	r2, [r0, #16]
 8004d2a:	bd10      	pop	{r4, pc}

08004d2c <__multiply>:
 8004d2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d30:	4614      	mov	r4, r2
 8004d32:	690a      	ldr	r2, [r1, #16]
 8004d34:	6923      	ldr	r3, [r4, #16]
 8004d36:	4688      	mov	r8, r1
 8004d38:	429a      	cmp	r2, r3
 8004d3a:	bfbe      	ittt	lt
 8004d3c:	460b      	movlt	r3, r1
 8004d3e:	46a0      	movlt	r8, r4
 8004d40:	461c      	movlt	r4, r3
 8004d42:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004d46:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8004d4a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004d4e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8004d52:	eb07 0609 	add.w	r6, r7, r9
 8004d56:	42b3      	cmp	r3, r6
 8004d58:	bfb8      	it	lt
 8004d5a:	3101      	addlt	r1, #1
 8004d5c:	f7ff fecb 	bl	8004af6 <_Balloc>
 8004d60:	f100 0514 	add.w	r5, r0, #20
 8004d64:	462b      	mov	r3, r5
 8004d66:	2200      	movs	r2, #0
 8004d68:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8004d6c:	4573      	cmp	r3, lr
 8004d6e:	d316      	bcc.n	8004d9e <__multiply+0x72>
 8004d70:	f104 0214 	add.w	r2, r4, #20
 8004d74:	f108 0114 	add.w	r1, r8, #20
 8004d78:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8004d7c:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8004d80:	9300      	str	r3, [sp, #0]
 8004d82:	9b00      	ldr	r3, [sp, #0]
 8004d84:	9201      	str	r2, [sp, #4]
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d80c      	bhi.n	8004da4 <__multiply+0x78>
 8004d8a:	2e00      	cmp	r6, #0
 8004d8c:	dd03      	ble.n	8004d96 <__multiply+0x6a>
 8004d8e:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	d05d      	beq.n	8004e52 <__multiply+0x126>
 8004d96:	6106      	str	r6, [r0, #16]
 8004d98:	b003      	add	sp, #12
 8004d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d9e:	f843 2b04 	str.w	r2, [r3], #4
 8004da2:	e7e3      	b.n	8004d6c <__multiply+0x40>
 8004da4:	f8b2 b000 	ldrh.w	fp, [r2]
 8004da8:	f1bb 0f00 	cmp.w	fp, #0
 8004dac:	d023      	beq.n	8004df6 <__multiply+0xca>
 8004dae:	4689      	mov	r9, r1
 8004db0:	46ac      	mov	ip, r5
 8004db2:	f04f 0800 	mov.w	r8, #0
 8004db6:	f859 4b04 	ldr.w	r4, [r9], #4
 8004dba:	f8dc a000 	ldr.w	sl, [ip]
 8004dbe:	b2a3      	uxth	r3, r4
 8004dc0:	fa1f fa8a 	uxth.w	sl, sl
 8004dc4:	fb0b a303 	mla	r3, fp, r3, sl
 8004dc8:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8004dcc:	f8dc 4000 	ldr.w	r4, [ip]
 8004dd0:	4443      	add	r3, r8
 8004dd2:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8004dd6:	fb0b 840a 	mla	r4, fp, sl, r8
 8004dda:	46e2      	mov	sl, ip
 8004ddc:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8004de0:	b29b      	uxth	r3, r3
 8004de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004de6:	454f      	cmp	r7, r9
 8004de8:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8004dec:	f84a 3b04 	str.w	r3, [sl], #4
 8004df0:	d82b      	bhi.n	8004e4a <__multiply+0x11e>
 8004df2:	f8cc 8004 	str.w	r8, [ip, #4]
 8004df6:	9b01      	ldr	r3, [sp, #4]
 8004df8:	3204      	adds	r2, #4
 8004dfa:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8004dfe:	f1ba 0f00 	cmp.w	sl, #0
 8004e02:	d020      	beq.n	8004e46 <__multiply+0x11a>
 8004e04:	4689      	mov	r9, r1
 8004e06:	46a8      	mov	r8, r5
 8004e08:	f04f 0b00 	mov.w	fp, #0
 8004e0c:	682b      	ldr	r3, [r5, #0]
 8004e0e:	f8b9 c000 	ldrh.w	ip, [r9]
 8004e12:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8004e16:	b29b      	uxth	r3, r3
 8004e18:	fb0a 440c 	mla	r4, sl, ip, r4
 8004e1c:	46c4      	mov	ip, r8
 8004e1e:	445c      	add	r4, fp
 8004e20:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004e24:	f84c 3b04 	str.w	r3, [ip], #4
 8004e28:	f859 3b04 	ldr.w	r3, [r9], #4
 8004e2c:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8004e30:	0c1b      	lsrs	r3, r3, #16
 8004e32:	fb0a b303 	mla	r3, sl, r3, fp
 8004e36:	454f      	cmp	r7, r9
 8004e38:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8004e3c:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8004e40:	d805      	bhi.n	8004e4e <__multiply+0x122>
 8004e42:	f8c8 3004 	str.w	r3, [r8, #4]
 8004e46:	3504      	adds	r5, #4
 8004e48:	e79b      	b.n	8004d82 <__multiply+0x56>
 8004e4a:	46d4      	mov	ip, sl
 8004e4c:	e7b3      	b.n	8004db6 <__multiply+0x8a>
 8004e4e:	46e0      	mov	r8, ip
 8004e50:	e7dd      	b.n	8004e0e <__multiply+0xe2>
 8004e52:	3e01      	subs	r6, #1
 8004e54:	e799      	b.n	8004d8a <__multiply+0x5e>
	...

08004e58 <__pow5mult>:
 8004e58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e5c:	4615      	mov	r5, r2
 8004e5e:	f012 0203 	ands.w	r2, r2, #3
 8004e62:	4606      	mov	r6, r0
 8004e64:	460f      	mov	r7, r1
 8004e66:	d007      	beq.n	8004e78 <__pow5mult+0x20>
 8004e68:	4c21      	ldr	r4, [pc, #132]	; (8004ef0 <__pow5mult+0x98>)
 8004e6a:	3a01      	subs	r2, #1
 8004e6c:	2300      	movs	r3, #0
 8004e6e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004e72:	f7ff fe8b 	bl	8004b8c <__multadd>
 8004e76:	4607      	mov	r7, r0
 8004e78:	10ad      	asrs	r5, r5, #2
 8004e7a:	d035      	beq.n	8004ee8 <__pow5mult+0x90>
 8004e7c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004e7e:	b93c      	cbnz	r4, 8004e90 <__pow5mult+0x38>
 8004e80:	2010      	movs	r0, #16
 8004e82:	f7ff fe05 	bl	8004a90 <malloc>
 8004e86:	6270      	str	r0, [r6, #36]	; 0x24
 8004e88:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004e8c:	6004      	str	r4, [r0, #0]
 8004e8e:	60c4      	str	r4, [r0, #12]
 8004e90:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004e94:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004e98:	b94c      	cbnz	r4, 8004eae <__pow5mult+0x56>
 8004e9a:	f240 2171 	movw	r1, #625	; 0x271
 8004e9e:	4630      	mov	r0, r6
 8004ea0:	f7ff ff3b 	bl	8004d1a <__i2b>
 8004ea4:	2300      	movs	r3, #0
 8004ea6:	4604      	mov	r4, r0
 8004ea8:	f8c8 0008 	str.w	r0, [r8, #8]
 8004eac:	6003      	str	r3, [r0, #0]
 8004eae:	f04f 0800 	mov.w	r8, #0
 8004eb2:	07eb      	lsls	r3, r5, #31
 8004eb4:	d50a      	bpl.n	8004ecc <__pow5mult+0x74>
 8004eb6:	4639      	mov	r1, r7
 8004eb8:	4622      	mov	r2, r4
 8004eba:	4630      	mov	r0, r6
 8004ebc:	f7ff ff36 	bl	8004d2c <__multiply>
 8004ec0:	4681      	mov	r9, r0
 8004ec2:	4639      	mov	r1, r7
 8004ec4:	4630      	mov	r0, r6
 8004ec6:	f7ff fe4a 	bl	8004b5e <_Bfree>
 8004eca:	464f      	mov	r7, r9
 8004ecc:	106d      	asrs	r5, r5, #1
 8004ece:	d00b      	beq.n	8004ee8 <__pow5mult+0x90>
 8004ed0:	6820      	ldr	r0, [r4, #0]
 8004ed2:	b938      	cbnz	r0, 8004ee4 <__pow5mult+0x8c>
 8004ed4:	4622      	mov	r2, r4
 8004ed6:	4621      	mov	r1, r4
 8004ed8:	4630      	mov	r0, r6
 8004eda:	f7ff ff27 	bl	8004d2c <__multiply>
 8004ede:	6020      	str	r0, [r4, #0]
 8004ee0:	f8c0 8000 	str.w	r8, [r0]
 8004ee4:	4604      	mov	r4, r0
 8004ee6:	e7e4      	b.n	8004eb2 <__pow5mult+0x5a>
 8004ee8:	4638      	mov	r0, r7
 8004eea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004eee:	bf00      	nop
 8004ef0:	08005a08 	.word	0x08005a08

08004ef4 <__lshift>:
 8004ef4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ef8:	460c      	mov	r4, r1
 8004efa:	4607      	mov	r7, r0
 8004efc:	4616      	mov	r6, r2
 8004efe:	6923      	ldr	r3, [r4, #16]
 8004f00:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004f04:	eb0a 0903 	add.w	r9, sl, r3
 8004f08:	6849      	ldr	r1, [r1, #4]
 8004f0a:	68a3      	ldr	r3, [r4, #8]
 8004f0c:	f109 0501 	add.w	r5, r9, #1
 8004f10:	42ab      	cmp	r3, r5
 8004f12:	db32      	blt.n	8004f7a <__lshift+0x86>
 8004f14:	4638      	mov	r0, r7
 8004f16:	f7ff fdee 	bl	8004af6 <_Balloc>
 8004f1a:	2300      	movs	r3, #0
 8004f1c:	4680      	mov	r8, r0
 8004f1e:	461a      	mov	r2, r3
 8004f20:	f100 0114 	add.w	r1, r0, #20
 8004f24:	4553      	cmp	r3, sl
 8004f26:	db2b      	blt.n	8004f80 <__lshift+0x8c>
 8004f28:	6920      	ldr	r0, [r4, #16]
 8004f2a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004f2e:	f104 0314 	add.w	r3, r4, #20
 8004f32:	f016 021f 	ands.w	r2, r6, #31
 8004f36:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004f3a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004f3e:	d025      	beq.n	8004f8c <__lshift+0x98>
 8004f40:	2000      	movs	r0, #0
 8004f42:	f1c2 0e20 	rsb	lr, r2, #32
 8004f46:	468a      	mov	sl, r1
 8004f48:	681e      	ldr	r6, [r3, #0]
 8004f4a:	4096      	lsls	r6, r2
 8004f4c:	4330      	orrs	r0, r6
 8004f4e:	f84a 0b04 	str.w	r0, [sl], #4
 8004f52:	f853 0b04 	ldr.w	r0, [r3], #4
 8004f56:	459c      	cmp	ip, r3
 8004f58:	fa20 f00e 	lsr.w	r0, r0, lr
 8004f5c:	d814      	bhi.n	8004f88 <__lshift+0x94>
 8004f5e:	6048      	str	r0, [r1, #4]
 8004f60:	b108      	cbz	r0, 8004f66 <__lshift+0x72>
 8004f62:	f109 0502 	add.w	r5, r9, #2
 8004f66:	3d01      	subs	r5, #1
 8004f68:	4638      	mov	r0, r7
 8004f6a:	f8c8 5010 	str.w	r5, [r8, #16]
 8004f6e:	4621      	mov	r1, r4
 8004f70:	f7ff fdf5 	bl	8004b5e <_Bfree>
 8004f74:	4640      	mov	r0, r8
 8004f76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f7a:	3101      	adds	r1, #1
 8004f7c:	005b      	lsls	r3, r3, #1
 8004f7e:	e7c7      	b.n	8004f10 <__lshift+0x1c>
 8004f80:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004f84:	3301      	adds	r3, #1
 8004f86:	e7cd      	b.n	8004f24 <__lshift+0x30>
 8004f88:	4651      	mov	r1, sl
 8004f8a:	e7dc      	b.n	8004f46 <__lshift+0x52>
 8004f8c:	3904      	subs	r1, #4
 8004f8e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f92:	459c      	cmp	ip, r3
 8004f94:	f841 2f04 	str.w	r2, [r1, #4]!
 8004f98:	d8f9      	bhi.n	8004f8e <__lshift+0x9a>
 8004f9a:	e7e4      	b.n	8004f66 <__lshift+0x72>

08004f9c <__mcmp>:
 8004f9c:	6903      	ldr	r3, [r0, #16]
 8004f9e:	690a      	ldr	r2, [r1, #16]
 8004fa0:	b530      	push	{r4, r5, lr}
 8004fa2:	1a9b      	subs	r3, r3, r2
 8004fa4:	d10c      	bne.n	8004fc0 <__mcmp+0x24>
 8004fa6:	0092      	lsls	r2, r2, #2
 8004fa8:	3014      	adds	r0, #20
 8004faa:	3114      	adds	r1, #20
 8004fac:	1884      	adds	r4, r0, r2
 8004fae:	4411      	add	r1, r2
 8004fb0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004fb4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004fb8:	4295      	cmp	r5, r2
 8004fba:	d003      	beq.n	8004fc4 <__mcmp+0x28>
 8004fbc:	d305      	bcc.n	8004fca <__mcmp+0x2e>
 8004fbe:	2301      	movs	r3, #1
 8004fc0:	4618      	mov	r0, r3
 8004fc2:	bd30      	pop	{r4, r5, pc}
 8004fc4:	42a0      	cmp	r0, r4
 8004fc6:	d3f3      	bcc.n	8004fb0 <__mcmp+0x14>
 8004fc8:	e7fa      	b.n	8004fc0 <__mcmp+0x24>
 8004fca:	f04f 33ff 	mov.w	r3, #4294967295
 8004fce:	e7f7      	b.n	8004fc0 <__mcmp+0x24>

08004fd0 <__mdiff>:
 8004fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fd4:	460d      	mov	r5, r1
 8004fd6:	4607      	mov	r7, r0
 8004fd8:	4611      	mov	r1, r2
 8004fda:	4628      	mov	r0, r5
 8004fdc:	4614      	mov	r4, r2
 8004fde:	f7ff ffdd 	bl	8004f9c <__mcmp>
 8004fe2:	1e06      	subs	r6, r0, #0
 8004fe4:	d108      	bne.n	8004ff8 <__mdiff+0x28>
 8004fe6:	4631      	mov	r1, r6
 8004fe8:	4638      	mov	r0, r7
 8004fea:	f7ff fd84 	bl	8004af6 <_Balloc>
 8004fee:	2301      	movs	r3, #1
 8004ff0:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8004ff4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ff8:	bfa4      	itt	ge
 8004ffa:	4623      	movge	r3, r4
 8004ffc:	462c      	movge	r4, r5
 8004ffe:	4638      	mov	r0, r7
 8005000:	6861      	ldr	r1, [r4, #4]
 8005002:	bfa6      	itte	ge
 8005004:	461d      	movge	r5, r3
 8005006:	2600      	movge	r6, #0
 8005008:	2601      	movlt	r6, #1
 800500a:	f7ff fd74 	bl	8004af6 <_Balloc>
 800500e:	f04f 0e00 	mov.w	lr, #0
 8005012:	60c6      	str	r6, [r0, #12]
 8005014:	692b      	ldr	r3, [r5, #16]
 8005016:	6926      	ldr	r6, [r4, #16]
 8005018:	f104 0214 	add.w	r2, r4, #20
 800501c:	f105 0914 	add.w	r9, r5, #20
 8005020:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8005024:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8005028:	f100 0114 	add.w	r1, r0, #20
 800502c:	f852 ab04 	ldr.w	sl, [r2], #4
 8005030:	f859 5b04 	ldr.w	r5, [r9], #4
 8005034:	fa1f f38a 	uxth.w	r3, sl
 8005038:	4473      	add	r3, lr
 800503a:	b2ac      	uxth	r4, r5
 800503c:	1b1b      	subs	r3, r3, r4
 800503e:	0c2c      	lsrs	r4, r5, #16
 8005040:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8005044:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8005048:	b29b      	uxth	r3, r3
 800504a:	ea4f 4e24 	mov.w	lr, r4, asr #16
 800504e:	45c8      	cmp	r8, r9
 8005050:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8005054:	4694      	mov	ip, r2
 8005056:	f841 4b04 	str.w	r4, [r1], #4
 800505a:	d8e7      	bhi.n	800502c <__mdiff+0x5c>
 800505c:	45bc      	cmp	ip, r7
 800505e:	d304      	bcc.n	800506a <__mdiff+0x9a>
 8005060:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005064:	b183      	cbz	r3, 8005088 <__mdiff+0xb8>
 8005066:	6106      	str	r6, [r0, #16]
 8005068:	e7c4      	b.n	8004ff4 <__mdiff+0x24>
 800506a:	f85c 4b04 	ldr.w	r4, [ip], #4
 800506e:	b2a2      	uxth	r2, r4
 8005070:	4472      	add	r2, lr
 8005072:	1413      	asrs	r3, r2, #16
 8005074:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005078:	b292      	uxth	r2, r2
 800507a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800507e:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8005082:	f841 2b04 	str.w	r2, [r1], #4
 8005086:	e7e9      	b.n	800505c <__mdiff+0x8c>
 8005088:	3e01      	subs	r6, #1
 800508a:	e7e9      	b.n	8005060 <__mdiff+0x90>

0800508c <__ulp>:
 800508c:	4b10      	ldr	r3, [pc, #64]	; (80050d0 <__ulp+0x44>)
 800508e:	400b      	ands	r3, r1
 8005090:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005094:	2b00      	cmp	r3, #0
 8005096:	dd02      	ble.n	800509e <__ulp+0x12>
 8005098:	2000      	movs	r0, #0
 800509a:	4619      	mov	r1, r3
 800509c:	4770      	bx	lr
 800509e:	425b      	negs	r3, r3
 80050a0:	151b      	asrs	r3, r3, #20
 80050a2:	2b13      	cmp	r3, #19
 80050a4:	f04f 0000 	mov.w	r0, #0
 80050a8:	f04f 0100 	mov.w	r1, #0
 80050ac:	dc04      	bgt.n	80050b8 <__ulp+0x2c>
 80050ae:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 80050b2:	fa42 f103 	asr.w	r1, r2, r3
 80050b6:	4770      	bx	lr
 80050b8:	2201      	movs	r2, #1
 80050ba:	3b14      	subs	r3, #20
 80050bc:	2b1e      	cmp	r3, #30
 80050be:	bfce      	itee	gt
 80050c0:	4613      	movgt	r3, r2
 80050c2:	f1c3 031f 	rsble	r3, r3, #31
 80050c6:	fa02 f303 	lslle.w	r3, r2, r3
 80050ca:	4618      	mov	r0, r3
 80050cc:	4770      	bx	lr
 80050ce:	bf00      	nop
 80050d0:	7ff00000 	.word	0x7ff00000

080050d4 <__b2d>:
 80050d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050d8:	6907      	ldr	r7, [r0, #16]
 80050da:	f100 0914 	add.w	r9, r0, #20
 80050de:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80050e2:	f857 6c04 	ldr.w	r6, [r7, #-4]
 80050e6:	f1a7 0804 	sub.w	r8, r7, #4
 80050ea:	4630      	mov	r0, r6
 80050ec:	f7ff fdc7 	bl	8004c7e <__hi0bits>
 80050f0:	f1c0 0320 	rsb	r3, r0, #32
 80050f4:	280a      	cmp	r0, #10
 80050f6:	600b      	str	r3, [r1, #0]
 80050f8:	491e      	ldr	r1, [pc, #120]	; (8005174 <__b2d+0xa0>)
 80050fa:	dc17      	bgt.n	800512c <__b2d+0x58>
 80050fc:	45c1      	cmp	r9, r8
 80050fe:	bf28      	it	cs
 8005100:	2200      	movcs	r2, #0
 8005102:	f1c0 0c0b 	rsb	ip, r0, #11
 8005106:	fa26 f30c 	lsr.w	r3, r6, ip
 800510a:	bf38      	it	cc
 800510c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005110:	ea43 0501 	orr.w	r5, r3, r1
 8005114:	f100 0315 	add.w	r3, r0, #21
 8005118:	fa06 f303 	lsl.w	r3, r6, r3
 800511c:	fa22 f20c 	lsr.w	r2, r2, ip
 8005120:	ea43 0402 	orr.w	r4, r3, r2
 8005124:	4620      	mov	r0, r4
 8005126:	4629      	mov	r1, r5
 8005128:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800512c:	45c1      	cmp	r9, r8
 800512e:	bf3a      	itte	cc
 8005130:	f1a7 0808 	subcc.w	r8, r7, #8
 8005134:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005138:	2200      	movcs	r2, #0
 800513a:	f1b0 030b 	subs.w	r3, r0, #11
 800513e:	d015      	beq.n	800516c <__b2d+0x98>
 8005140:	409e      	lsls	r6, r3
 8005142:	f1c3 0720 	rsb	r7, r3, #32
 8005146:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
 800514a:	fa22 f107 	lsr.w	r1, r2, r7
 800514e:	45c8      	cmp	r8, r9
 8005150:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
 8005154:	ea46 0501 	orr.w	r5, r6, r1
 8005158:	bf94      	ite	ls
 800515a:	2100      	movls	r1, #0
 800515c:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8005160:	fa02 f003 	lsl.w	r0, r2, r3
 8005164:	40f9      	lsrs	r1, r7
 8005166:	ea40 0401 	orr.w	r4, r0, r1
 800516a:	e7db      	b.n	8005124 <__b2d+0x50>
 800516c:	ea46 0501 	orr.w	r5, r6, r1
 8005170:	4614      	mov	r4, r2
 8005172:	e7d7      	b.n	8005124 <__b2d+0x50>
 8005174:	3ff00000 	.word	0x3ff00000

08005178 <__d2b>:
 8005178:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800517c:	461c      	mov	r4, r3
 800517e:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8005182:	2101      	movs	r1, #1
 8005184:	4690      	mov	r8, r2
 8005186:	f7ff fcb6 	bl	8004af6 <_Balloc>
 800518a:	f3c4 0213 	ubfx	r2, r4, #0, #20
 800518e:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8005192:	4607      	mov	r7, r0
 8005194:	bb34      	cbnz	r4, 80051e4 <__d2b+0x6c>
 8005196:	9201      	str	r2, [sp, #4]
 8005198:	f1b8 0200 	subs.w	r2, r8, #0
 800519c:	d027      	beq.n	80051ee <__d2b+0x76>
 800519e:	a802      	add	r0, sp, #8
 80051a0:	f840 2d08 	str.w	r2, [r0, #-8]!
 80051a4:	f7ff fd8a 	bl	8004cbc <__lo0bits>
 80051a8:	9900      	ldr	r1, [sp, #0]
 80051aa:	b1f0      	cbz	r0, 80051ea <__d2b+0x72>
 80051ac:	9a01      	ldr	r2, [sp, #4]
 80051ae:	f1c0 0320 	rsb	r3, r0, #32
 80051b2:	fa02 f303 	lsl.w	r3, r2, r3
 80051b6:	430b      	orrs	r3, r1
 80051b8:	40c2      	lsrs	r2, r0
 80051ba:	617b      	str	r3, [r7, #20]
 80051bc:	9201      	str	r2, [sp, #4]
 80051be:	9b01      	ldr	r3, [sp, #4]
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	bf14      	ite	ne
 80051c4:	2102      	movne	r1, #2
 80051c6:	2101      	moveq	r1, #1
 80051c8:	61bb      	str	r3, [r7, #24]
 80051ca:	6139      	str	r1, [r7, #16]
 80051cc:	b1c4      	cbz	r4, 8005200 <__d2b+0x88>
 80051ce:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80051d2:	4404      	add	r4, r0
 80051d4:	6034      	str	r4, [r6, #0]
 80051d6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80051da:	6028      	str	r0, [r5, #0]
 80051dc:	4638      	mov	r0, r7
 80051de:	b002      	add	sp, #8
 80051e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051e4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80051e8:	e7d5      	b.n	8005196 <__d2b+0x1e>
 80051ea:	6179      	str	r1, [r7, #20]
 80051ec:	e7e7      	b.n	80051be <__d2b+0x46>
 80051ee:	a801      	add	r0, sp, #4
 80051f0:	f7ff fd64 	bl	8004cbc <__lo0bits>
 80051f4:	2101      	movs	r1, #1
 80051f6:	9b01      	ldr	r3, [sp, #4]
 80051f8:	6139      	str	r1, [r7, #16]
 80051fa:	617b      	str	r3, [r7, #20]
 80051fc:	3020      	adds	r0, #32
 80051fe:	e7e5      	b.n	80051cc <__d2b+0x54>
 8005200:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005204:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8005208:	6030      	str	r0, [r6, #0]
 800520a:	6918      	ldr	r0, [r3, #16]
 800520c:	f7ff fd37 	bl	8004c7e <__hi0bits>
 8005210:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8005214:	e7e1      	b.n	80051da <__d2b+0x62>

08005216 <__ratio>:
 8005216:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800521a:	4688      	mov	r8, r1
 800521c:	4669      	mov	r1, sp
 800521e:	4681      	mov	r9, r0
 8005220:	f7ff ff58 	bl	80050d4 <__b2d>
 8005224:	468b      	mov	fp, r1
 8005226:	4606      	mov	r6, r0
 8005228:	460f      	mov	r7, r1
 800522a:	4640      	mov	r0, r8
 800522c:	a901      	add	r1, sp, #4
 800522e:	f7ff ff51 	bl	80050d4 <__b2d>
 8005232:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005236:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800523a:	460d      	mov	r5, r1
 800523c:	eba3 0c02 	sub.w	ip, r3, r2
 8005240:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005244:	1a9b      	subs	r3, r3, r2
 8005246:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800524a:	2b00      	cmp	r3, #0
 800524c:	bfd5      	itete	le
 800524e:	460a      	movle	r2, r1
 8005250:	463a      	movgt	r2, r7
 8005252:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005256:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 800525a:	bfd8      	it	le
 800525c:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
 8005260:	462b      	mov	r3, r5
 8005262:	4602      	mov	r2, r0
 8005264:	4659      	mov	r1, fp
 8005266:	4630      	mov	r0, r6
 8005268:	f7fb fa70 	bl	800074c <__aeabi_ddiv>
 800526c:	b003      	add	sp, #12
 800526e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005272 <__copybits>:
 8005272:	3901      	subs	r1, #1
 8005274:	b510      	push	{r4, lr}
 8005276:	1149      	asrs	r1, r1, #5
 8005278:	6914      	ldr	r4, [r2, #16]
 800527a:	3101      	adds	r1, #1
 800527c:	f102 0314 	add.w	r3, r2, #20
 8005280:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005284:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8005288:	42a3      	cmp	r3, r4
 800528a:	4602      	mov	r2, r0
 800528c:	d303      	bcc.n	8005296 <__copybits+0x24>
 800528e:	2300      	movs	r3, #0
 8005290:	428a      	cmp	r2, r1
 8005292:	d305      	bcc.n	80052a0 <__copybits+0x2e>
 8005294:	bd10      	pop	{r4, pc}
 8005296:	f853 2b04 	ldr.w	r2, [r3], #4
 800529a:	f840 2b04 	str.w	r2, [r0], #4
 800529e:	e7f3      	b.n	8005288 <__copybits+0x16>
 80052a0:	f842 3b04 	str.w	r3, [r2], #4
 80052a4:	e7f4      	b.n	8005290 <__copybits+0x1e>

080052a6 <__any_on>:
 80052a6:	f100 0214 	add.w	r2, r0, #20
 80052aa:	6900      	ldr	r0, [r0, #16]
 80052ac:	114b      	asrs	r3, r1, #5
 80052ae:	4298      	cmp	r0, r3
 80052b0:	b510      	push	{r4, lr}
 80052b2:	db11      	blt.n	80052d8 <__any_on+0x32>
 80052b4:	dd0a      	ble.n	80052cc <__any_on+0x26>
 80052b6:	f011 011f 	ands.w	r1, r1, #31
 80052ba:	d007      	beq.n	80052cc <__any_on+0x26>
 80052bc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80052c0:	fa24 f001 	lsr.w	r0, r4, r1
 80052c4:	fa00 f101 	lsl.w	r1, r0, r1
 80052c8:	428c      	cmp	r4, r1
 80052ca:	d10b      	bne.n	80052e4 <__any_on+0x3e>
 80052cc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80052d0:	4293      	cmp	r3, r2
 80052d2:	d803      	bhi.n	80052dc <__any_on+0x36>
 80052d4:	2000      	movs	r0, #0
 80052d6:	bd10      	pop	{r4, pc}
 80052d8:	4603      	mov	r3, r0
 80052da:	e7f7      	b.n	80052cc <__any_on+0x26>
 80052dc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80052e0:	2900      	cmp	r1, #0
 80052e2:	d0f5      	beq.n	80052d0 <__any_on+0x2a>
 80052e4:	2001      	movs	r0, #1
 80052e6:	e7f6      	b.n	80052d6 <__any_on+0x30>

080052e8 <_calloc_r>:
 80052e8:	b538      	push	{r3, r4, r5, lr}
 80052ea:	fb02 f401 	mul.w	r4, r2, r1
 80052ee:	4621      	mov	r1, r4
 80052f0:	f000 f854 	bl	800539c <_malloc_r>
 80052f4:	4605      	mov	r5, r0
 80052f6:	b118      	cbz	r0, 8005300 <_calloc_r+0x18>
 80052f8:	4622      	mov	r2, r4
 80052fa:	2100      	movs	r1, #0
 80052fc:	f7fc fd2e 	bl	8001d5c <memset>
 8005300:	4628      	mov	r0, r5
 8005302:	bd38      	pop	{r3, r4, r5, pc}

08005304 <_free_r>:
 8005304:	b538      	push	{r3, r4, r5, lr}
 8005306:	4605      	mov	r5, r0
 8005308:	2900      	cmp	r1, #0
 800530a:	d043      	beq.n	8005394 <_free_r+0x90>
 800530c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005310:	1f0c      	subs	r4, r1, #4
 8005312:	2b00      	cmp	r3, #0
 8005314:	bfb8      	it	lt
 8005316:	18e4      	addlt	r4, r4, r3
 8005318:	f000 fa34 	bl	8005784 <__malloc_lock>
 800531c:	4a1e      	ldr	r2, [pc, #120]	; (8005398 <_free_r+0x94>)
 800531e:	6813      	ldr	r3, [r2, #0]
 8005320:	4610      	mov	r0, r2
 8005322:	b933      	cbnz	r3, 8005332 <_free_r+0x2e>
 8005324:	6063      	str	r3, [r4, #4]
 8005326:	6014      	str	r4, [r2, #0]
 8005328:	4628      	mov	r0, r5
 800532a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800532e:	f000 ba2a 	b.w	8005786 <__malloc_unlock>
 8005332:	42a3      	cmp	r3, r4
 8005334:	d90b      	bls.n	800534e <_free_r+0x4a>
 8005336:	6821      	ldr	r1, [r4, #0]
 8005338:	1862      	adds	r2, r4, r1
 800533a:	4293      	cmp	r3, r2
 800533c:	bf01      	itttt	eq
 800533e:	681a      	ldreq	r2, [r3, #0]
 8005340:	685b      	ldreq	r3, [r3, #4]
 8005342:	1852      	addeq	r2, r2, r1
 8005344:	6022      	streq	r2, [r4, #0]
 8005346:	6063      	str	r3, [r4, #4]
 8005348:	6004      	str	r4, [r0, #0]
 800534a:	e7ed      	b.n	8005328 <_free_r+0x24>
 800534c:	4613      	mov	r3, r2
 800534e:	685a      	ldr	r2, [r3, #4]
 8005350:	b10a      	cbz	r2, 8005356 <_free_r+0x52>
 8005352:	42a2      	cmp	r2, r4
 8005354:	d9fa      	bls.n	800534c <_free_r+0x48>
 8005356:	6819      	ldr	r1, [r3, #0]
 8005358:	1858      	adds	r0, r3, r1
 800535a:	42a0      	cmp	r0, r4
 800535c:	d10b      	bne.n	8005376 <_free_r+0x72>
 800535e:	6820      	ldr	r0, [r4, #0]
 8005360:	4401      	add	r1, r0
 8005362:	1858      	adds	r0, r3, r1
 8005364:	4282      	cmp	r2, r0
 8005366:	6019      	str	r1, [r3, #0]
 8005368:	d1de      	bne.n	8005328 <_free_r+0x24>
 800536a:	6810      	ldr	r0, [r2, #0]
 800536c:	6852      	ldr	r2, [r2, #4]
 800536e:	4401      	add	r1, r0
 8005370:	6019      	str	r1, [r3, #0]
 8005372:	605a      	str	r2, [r3, #4]
 8005374:	e7d8      	b.n	8005328 <_free_r+0x24>
 8005376:	d902      	bls.n	800537e <_free_r+0x7a>
 8005378:	230c      	movs	r3, #12
 800537a:	602b      	str	r3, [r5, #0]
 800537c:	e7d4      	b.n	8005328 <_free_r+0x24>
 800537e:	6820      	ldr	r0, [r4, #0]
 8005380:	1821      	adds	r1, r4, r0
 8005382:	428a      	cmp	r2, r1
 8005384:	bf01      	itttt	eq
 8005386:	6811      	ldreq	r1, [r2, #0]
 8005388:	6852      	ldreq	r2, [r2, #4]
 800538a:	1809      	addeq	r1, r1, r0
 800538c:	6021      	streq	r1, [r4, #0]
 800538e:	6062      	str	r2, [r4, #4]
 8005390:	605c      	str	r4, [r3, #4]
 8005392:	e7c9      	b.n	8005328 <_free_r+0x24>
 8005394:	bd38      	pop	{r3, r4, r5, pc}
 8005396:	bf00      	nop
 8005398:	20000208 	.word	0x20000208

0800539c <_malloc_r>:
 800539c:	b570      	push	{r4, r5, r6, lr}
 800539e:	1ccd      	adds	r5, r1, #3
 80053a0:	f025 0503 	bic.w	r5, r5, #3
 80053a4:	3508      	adds	r5, #8
 80053a6:	2d0c      	cmp	r5, #12
 80053a8:	bf38      	it	cc
 80053aa:	250c      	movcc	r5, #12
 80053ac:	2d00      	cmp	r5, #0
 80053ae:	4606      	mov	r6, r0
 80053b0:	db01      	blt.n	80053b6 <_malloc_r+0x1a>
 80053b2:	42a9      	cmp	r1, r5
 80053b4:	d903      	bls.n	80053be <_malloc_r+0x22>
 80053b6:	230c      	movs	r3, #12
 80053b8:	6033      	str	r3, [r6, #0]
 80053ba:	2000      	movs	r0, #0
 80053bc:	bd70      	pop	{r4, r5, r6, pc}
 80053be:	f000 f9e1 	bl	8005784 <__malloc_lock>
 80053c2:	4a21      	ldr	r2, [pc, #132]	; (8005448 <_malloc_r+0xac>)
 80053c4:	6814      	ldr	r4, [r2, #0]
 80053c6:	4621      	mov	r1, r4
 80053c8:	b991      	cbnz	r1, 80053f0 <_malloc_r+0x54>
 80053ca:	4c20      	ldr	r4, [pc, #128]	; (800544c <_malloc_r+0xb0>)
 80053cc:	6823      	ldr	r3, [r4, #0]
 80053ce:	b91b      	cbnz	r3, 80053d8 <_malloc_r+0x3c>
 80053d0:	4630      	mov	r0, r6
 80053d2:	f000 f98f 	bl	80056f4 <_sbrk_r>
 80053d6:	6020      	str	r0, [r4, #0]
 80053d8:	4629      	mov	r1, r5
 80053da:	4630      	mov	r0, r6
 80053dc:	f000 f98a 	bl	80056f4 <_sbrk_r>
 80053e0:	1c43      	adds	r3, r0, #1
 80053e2:	d124      	bne.n	800542e <_malloc_r+0x92>
 80053e4:	230c      	movs	r3, #12
 80053e6:	4630      	mov	r0, r6
 80053e8:	6033      	str	r3, [r6, #0]
 80053ea:	f000 f9cc 	bl	8005786 <__malloc_unlock>
 80053ee:	e7e4      	b.n	80053ba <_malloc_r+0x1e>
 80053f0:	680b      	ldr	r3, [r1, #0]
 80053f2:	1b5b      	subs	r3, r3, r5
 80053f4:	d418      	bmi.n	8005428 <_malloc_r+0x8c>
 80053f6:	2b0b      	cmp	r3, #11
 80053f8:	d90f      	bls.n	800541a <_malloc_r+0x7e>
 80053fa:	600b      	str	r3, [r1, #0]
 80053fc:	18cc      	adds	r4, r1, r3
 80053fe:	50cd      	str	r5, [r1, r3]
 8005400:	4630      	mov	r0, r6
 8005402:	f000 f9c0 	bl	8005786 <__malloc_unlock>
 8005406:	f104 000b 	add.w	r0, r4, #11
 800540a:	1d23      	adds	r3, r4, #4
 800540c:	f020 0007 	bic.w	r0, r0, #7
 8005410:	1ac3      	subs	r3, r0, r3
 8005412:	d0d3      	beq.n	80053bc <_malloc_r+0x20>
 8005414:	425a      	negs	r2, r3
 8005416:	50e2      	str	r2, [r4, r3]
 8005418:	e7d0      	b.n	80053bc <_malloc_r+0x20>
 800541a:	684b      	ldr	r3, [r1, #4]
 800541c:	428c      	cmp	r4, r1
 800541e:	bf16      	itet	ne
 8005420:	6063      	strne	r3, [r4, #4]
 8005422:	6013      	streq	r3, [r2, #0]
 8005424:	460c      	movne	r4, r1
 8005426:	e7eb      	b.n	8005400 <_malloc_r+0x64>
 8005428:	460c      	mov	r4, r1
 800542a:	6849      	ldr	r1, [r1, #4]
 800542c:	e7cc      	b.n	80053c8 <_malloc_r+0x2c>
 800542e:	1cc4      	adds	r4, r0, #3
 8005430:	f024 0403 	bic.w	r4, r4, #3
 8005434:	42a0      	cmp	r0, r4
 8005436:	d005      	beq.n	8005444 <_malloc_r+0xa8>
 8005438:	1a21      	subs	r1, r4, r0
 800543a:	4630      	mov	r0, r6
 800543c:	f000 f95a 	bl	80056f4 <_sbrk_r>
 8005440:	3001      	adds	r0, #1
 8005442:	d0cf      	beq.n	80053e4 <_malloc_r+0x48>
 8005444:	6025      	str	r5, [r4, #0]
 8005446:	e7db      	b.n	8005400 <_malloc_r+0x64>
 8005448:	20000208 	.word	0x20000208
 800544c:	2000020c 	.word	0x2000020c

08005450 <__ssputs_r>:
 8005450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005454:	688e      	ldr	r6, [r1, #8]
 8005456:	4682      	mov	sl, r0
 8005458:	429e      	cmp	r6, r3
 800545a:	460c      	mov	r4, r1
 800545c:	4690      	mov	r8, r2
 800545e:	4699      	mov	r9, r3
 8005460:	d837      	bhi.n	80054d2 <__ssputs_r+0x82>
 8005462:	898a      	ldrh	r2, [r1, #12]
 8005464:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005468:	d031      	beq.n	80054ce <__ssputs_r+0x7e>
 800546a:	2302      	movs	r3, #2
 800546c:	6825      	ldr	r5, [r4, #0]
 800546e:	6909      	ldr	r1, [r1, #16]
 8005470:	1a6f      	subs	r7, r5, r1
 8005472:	6965      	ldr	r5, [r4, #20]
 8005474:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005478:	fb95 f5f3 	sdiv	r5, r5, r3
 800547c:	f109 0301 	add.w	r3, r9, #1
 8005480:	443b      	add	r3, r7
 8005482:	429d      	cmp	r5, r3
 8005484:	bf38      	it	cc
 8005486:	461d      	movcc	r5, r3
 8005488:	0553      	lsls	r3, r2, #21
 800548a:	d530      	bpl.n	80054ee <__ssputs_r+0x9e>
 800548c:	4629      	mov	r1, r5
 800548e:	f7ff ff85 	bl	800539c <_malloc_r>
 8005492:	4606      	mov	r6, r0
 8005494:	b950      	cbnz	r0, 80054ac <__ssputs_r+0x5c>
 8005496:	230c      	movs	r3, #12
 8005498:	f04f 30ff 	mov.w	r0, #4294967295
 800549c:	f8ca 3000 	str.w	r3, [sl]
 80054a0:	89a3      	ldrh	r3, [r4, #12]
 80054a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80054a6:	81a3      	strh	r3, [r4, #12]
 80054a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80054ac:	463a      	mov	r2, r7
 80054ae:	6921      	ldr	r1, [r4, #16]
 80054b0:	f7ff fb16 	bl	8004ae0 <memcpy>
 80054b4:	89a3      	ldrh	r3, [r4, #12]
 80054b6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80054ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80054be:	81a3      	strh	r3, [r4, #12]
 80054c0:	6126      	str	r6, [r4, #16]
 80054c2:	443e      	add	r6, r7
 80054c4:	6026      	str	r6, [r4, #0]
 80054c6:	464e      	mov	r6, r9
 80054c8:	6165      	str	r5, [r4, #20]
 80054ca:	1bed      	subs	r5, r5, r7
 80054cc:	60a5      	str	r5, [r4, #8]
 80054ce:	454e      	cmp	r6, r9
 80054d0:	d900      	bls.n	80054d4 <__ssputs_r+0x84>
 80054d2:	464e      	mov	r6, r9
 80054d4:	4632      	mov	r2, r6
 80054d6:	4641      	mov	r1, r8
 80054d8:	6820      	ldr	r0, [r4, #0]
 80054da:	f000 f93a 	bl	8005752 <memmove>
 80054de:	68a3      	ldr	r3, [r4, #8]
 80054e0:	2000      	movs	r0, #0
 80054e2:	1b9b      	subs	r3, r3, r6
 80054e4:	60a3      	str	r3, [r4, #8]
 80054e6:	6823      	ldr	r3, [r4, #0]
 80054e8:	441e      	add	r6, r3
 80054ea:	6026      	str	r6, [r4, #0]
 80054ec:	e7dc      	b.n	80054a8 <__ssputs_r+0x58>
 80054ee:	462a      	mov	r2, r5
 80054f0:	f000 f94a 	bl	8005788 <_realloc_r>
 80054f4:	4606      	mov	r6, r0
 80054f6:	2800      	cmp	r0, #0
 80054f8:	d1e2      	bne.n	80054c0 <__ssputs_r+0x70>
 80054fa:	6921      	ldr	r1, [r4, #16]
 80054fc:	4650      	mov	r0, sl
 80054fe:	f7ff ff01 	bl	8005304 <_free_r>
 8005502:	e7c8      	b.n	8005496 <__ssputs_r+0x46>

08005504 <_svfiprintf_r>:
 8005504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005508:	461d      	mov	r5, r3
 800550a:	898b      	ldrh	r3, [r1, #12]
 800550c:	b09d      	sub	sp, #116	; 0x74
 800550e:	061f      	lsls	r7, r3, #24
 8005510:	4680      	mov	r8, r0
 8005512:	460c      	mov	r4, r1
 8005514:	4616      	mov	r6, r2
 8005516:	d50f      	bpl.n	8005538 <_svfiprintf_r+0x34>
 8005518:	690b      	ldr	r3, [r1, #16]
 800551a:	b96b      	cbnz	r3, 8005538 <_svfiprintf_r+0x34>
 800551c:	2140      	movs	r1, #64	; 0x40
 800551e:	f7ff ff3d 	bl	800539c <_malloc_r>
 8005522:	6020      	str	r0, [r4, #0]
 8005524:	6120      	str	r0, [r4, #16]
 8005526:	b928      	cbnz	r0, 8005534 <_svfiprintf_r+0x30>
 8005528:	230c      	movs	r3, #12
 800552a:	f8c8 3000 	str.w	r3, [r8]
 800552e:	f04f 30ff 	mov.w	r0, #4294967295
 8005532:	e0c8      	b.n	80056c6 <_svfiprintf_r+0x1c2>
 8005534:	2340      	movs	r3, #64	; 0x40
 8005536:	6163      	str	r3, [r4, #20]
 8005538:	2300      	movs	r3, #0
 800553a:	9309      	str	r3, [sp, #36]	; 0x24
 800553c:	2320      	movs	r3, #32
 800553e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005542:	2330      	movs	r3, #48	; 0x30
 8005544:	f04f 0b01 	mov.w	fp, #1
 8005548:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800554c:	9503      	str	r5, [sp, #12]
 800554e:	4637      	mov	r7, r6
 8005550:	463d      	mov	r5, r7
 8005552:	f815 3b01 	ldrb.w	r3, [r5], #1
 8005556:	b10b      	cbz	r3, 800555c <_svfiprintf_r+0x58>
 8005558:	2b25      	cmp	r3, #37	; 0x25
 800555a:	d13e      	bne.n	80055da <_svfiprintf_r+0xd6>
 800555c:	ebb7 0a06 	subs.w	sl, r7, r6
 8005560:	d00b      	beq.n	800557a <_svfiprintf_r+0x76>
 8005562:	4653      	mov	r3, sl
 8005564:	4632      	mov	r2, r6
 8005566:	4621      	mov	r1, r4
 8005568:	4640      	mov	r0, r8
 800556a:	f7ff ff71 	bl	8005450 <__ssputs_r>
 800556e:	3001      	adds	r0, #1
 8005570:	f000 80a4 	beq.w	80056bc <_svfiprintf_r+0x1b8>
 8005574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005576:	4453      	add	r3, sl
 8005578:	9309      	str	r3, [sp, #36]	; 0x24
 800557a:	783b      	ldrb	r3, [r7, #0]
 800557c:	2b00      	cmp	r3, #0
 800557e:	f000 809d 	beq.w	80056bc <_svfiprintf_r+0x1b8>
 8005582:	2300      	movs	r3, #0
 8005584:	f04f 32ff 	mov.w	r2, #4294967295
 8005588:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800558c:	9304      	str	r3, [sp, #16]
 800558e:	9307      	str	r3, [sp, #28]
 8005590:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005594:	931a      	str	r3, [sp, #104]	; 0x68
 8005596:	462f      	mov	r7, r5
 8005598:	2205      	movs	r2, #5
 800559a:	f817 1b01 	ldrb.w	r1, [r7], #1
 800559e:	4850      	ldr	r0, [pc, #320]	; (80056e0 <_svfiprintf_r+0x1dc>)
 80055a0:	f7ff fa90 	bl	8004ac4 <memchr>
 80055a4:	9b04      	ldr	r3, [sp, #16]
 80055a6:	b9d0      	cbnz	r0, 80055de <_svfiprintf_r+0xda>
 80055a8:	06d9      	lsls	r1, r3, #27
 80055aa:	bf44      	itt	mi
 80055ac:	2220      	movmi	r2, #32
 80055ae:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80055b2:	071a      	lsls	r2, r3, #28
 80055b4:	bf44      	itt	mi
 80055b6:	222b      	movmi	r2, #43	; 0x2b
 80055b8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80055bc:	782a      	ldrb	r2, [r5, #0]
 80055be:	2a2a      	cmp	r2, #42	; 0x2a
 80055c0:	d015      	beq.n	80055ee <_svfiprintf_r+0xea>
 80055c2:	462f      	mov	r7, r5
 80055c4:	2000      	movs	r0, #0
 80055c6:	250a      	movs	r5, #10
 80055c8:	9a07      	ldr	r2, [sp, #28]
 80055ca:	4639      	mov	r1, r7
 80055cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80055d0:	3b30      	subs	r3, #48	; 0x30
 80055d2:	2b09      	cmp	r3, #9
 80055d4:	d94d      	bls.n	8005672 <_svfiprintf_r+0x16e>
 80055d6:	b1b8      	cbz	r0, 8005608 <_svfiprintf_r+0x104>
 80055d8:	e00f      	b.n	80055fa <_svfiprintf_r+0xf6>
 80055da:	462f      	mov	r7, r5
 80055dc:	e7b8      	b.n	8005550 <_svfiprintf_r+0x4c>
 80055de:	4a40      	ldr	r2, [pc, #256]	; (80056e0 <_svfiprintf_r+0x1dc>)
 80055e0:	463d      	mov	r5, r7
 80055e2:	1a80      	subs	r0, r0, r2
 80055e4:	fa0b f000 	lsl.w	r0, fp, r0
 80055e8:	4318      	orrs	r0, r3
 80055ea:	9004      	str	r0, [sp, #16]
 80055ec:	e7d3      	b.n	8005596 <_svfiprintf_r+0x92>
 80055ee:	9a03      	ldr	r2, [sp, #12]
 80055f0:	1d11      	adds	r1, r2, #4
 80055f2:	6812      	ldr	r2, [r2, #0]
 80055f4:	9103      	str	r1, [sp, #12]
 80055f6:	2a00      	cmp	r2, #0
 80055f8:	db01      	blt.n	80055fe <_svfiprintf_r+0xfa>
 80055fa:	9207      	str	r2, [sp, #28]
 80055fc:	e004      	b.n	8005608 <_svfiprintf_r+0x104>
 80055fe:	4252      	negs	r2, r2
 8005600:	f043 0302 	orr.w	r3, r3, #2
 8005604:	9207      	str	r2, [sp, #28]
 8005606:	9304      	str	r3, [sp, #16]
 8005608:	783b      	ldrb	r3, [r7, #0]
 800560a:	2b2e      	cmp	r3, #46	; 0x2e
 800560c:	d10c      	bne.n	8005628 <_svfiprintf_r+0x124>
 800560e:	787b      	ldrb	r3, [r7, #1]
 8005610:	2b2a      	cmp	r3, #42	; 0x2a
 8005612:	d133      	bne.n	800567c <_svfiprintf_r+0x178>
 8005614:	9b03      	ldr	r3, [sp, #12]
 8005616:	3702      	adds	r7, #2
 8005618:	1d1a      	adds	r2, r3, #4
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	9203      	str	r2, [sp, #12]
 800561e:	2b00      	cmp	r3, #0
 8005620:	bfb8      	it	lt
 8005622:	f04f 33ff 	movlt.w	r3, #4294967295
 8005626:	9305      	str	r3, [sp, #20]
 8005628:	4d2e      	ldr	r5, [pc, #184]	; (80056e4 <_svfiprintf_r+0x1e0>)
 800562a:	2203      	movs	r2, #3
 800562c:	7839      	ldrb	r1, [r7, #0]
 800562e:	4628      	mov	r0, r5
 8005630:	f7ff fa48 	bl	8004ac4 <memchr>
 8005634:	b138      	cbz	r0, 8005646 <_svfiprintf_r+0x142>
 8005636:	2340      	movs	r3, #64	; 0x40
 8005638:	1b40      	subs	r0, r0, r5
 800563a:	fa03 f000 	lsl.w	r0, r3, r0
 800563e:	9b04      	ldr	r3, [sp, #16]
 8005640:	3701      	adds	r7, #1
 8005642:	4303      	orrs	r3, r0
 8005644:	9304      	str	r3, [sp, #16]
 8005646:	7839      	ldrb	r1, [r7, #0]
 8005648:	2206      	movs	r2, #6
 800564a:	4827      	ldr	r0, [pc, #156]	; (80056e8 <_svfiprintf_r+0x1e4>)
 800564c:	1c7e      	adds	r6, r7, #1
 800564e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005652:	f7ff fa37 	bl	8004ac4 <memchr>
 8005656:	2800      	cmp	r0, #0
 8005658:	d038      	beq.n	80056cc <_svfiprintf_r+0x1c8>
 800565a:	4b24      	ldr	r3, [pc, #144]	; (80056ec <_svfiprintf_r+0x1e8>)
 800565c:	bb13      	cbnz	r3, 80056a4 <_svfiprintf_r+0x1a0>
 800565e:	9b03      	ldr	r3, [sp, #12]
 8005660:	3307      	adds	r3, #7
 8005662:	f023 0307 	bic.w	r3, r3, #7
 8005666:	3308      	adds	r3, #8
 8005668:	9303      	str	r3, [sp, #12]
 800566a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800566c:	444b      	add	r3, r9
 800566e:	9309      	str	r3, [sp, #36]	; 0x24
 8005670:	e76d      	b.n	800554e <_svfiprintf_r+0x4a>
 8005672:	fb05 3202 	mla	r2, r5, r2, r3
 8005676:	2001      	movs	r0, #1
 8005678:	460f      	mov	r7, r1
 800567a:	e7a6      	b.n	80055ca <_svfiprintf_r+0xc6>
 800567c:	2300      	movs	r3, #0
 800567e:	250a      	movs	r5, #10
 8005680:	4619      	mov	r1, r3
 8005682:	3701      	adds	r7, #1
 8005684:	9305      	str	r3, [sp, #20]
 8005686:	4638      	mov	r0, r7
 8005688:	f810 2b01 	ldrb.w	r2, [r0], #1
 800568c:	3a30      	subs	r2, #48	; 0x30
 800568e:	2a09      	cmp	r2, #9
 8005690:	d903      	bls.n	800569a <_svfiprintf_r+0x196>
 8005692:	2b00      	cmp	r3, #0
 8005694:	d0c8      	beq.n	8005628 <_svfiprintf_r+0x124>
 8005696:	9105      	str	r1, [sp, #20]
 8005698:	e7c6      	b.n	8005628 <_svfiprintf_r+0x124>
 800569a:	fb05 2101 	mla	r1, r5, r1, r2
 800569e:	2301      	movs	r3, #1
 80056a0:	4607      	mov	r7, r0
 80056a2:	e7f0      	b.n	8005686 <_svfiprintf_r+0x182>
 80056a4:	ab03      	add	r3, sp, #12
 80056a6:	9300      	str	r3, [sp, #0]
 80056a8:	4622      	mov	r2, r4
 80056aa:	4b11      	ldr	r3, [pc, #68]	; (80056f0 <_svfiprintf_r+0x1ec>)
 80056ac:	a904      	add	r1, sp, #16
 80056ae:	4640      	mov	r0, r8
 80056b0:	f7fc fbee 	bl	8001e90 <_printf_float>
 80056b4:	f1b0 3fff 	cmp.w	r0, #4294967295
 80056b8:	4681      	mov	r9, r0
 80056ba:	d1d6      	bne.n	800566a <_svfiprintf_r+0x166>
 80056bc:	89a3      	ldrh	r3, [r4, #12]
 80056be:	065b      	lsls	r3, r3, #25
 80056c0:	f53f af35 	bmi.w	800552e <_svfiprintf_r+0x2a>
 80056c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056c6:	b01d      	add	sp, #116	; 0x74
 80056c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80056cc:	ab03      	add	r3, sp, #12
 80056ce:	9300      	str	r3, [sp, #0]
 80056d0:	4622      	mov	r2, r4
 80056d2:	4b07      	ldr	r3, [pc, #28]	; (80056f0 <_svfiprintf_r+0x1ec>)
 80056d4:	a904      	add	r1, sp, #16
 80056d6:	4640      	mov	r0, r8
 80056d8:	f7fc fe86 	bl	80023e8 <_printf_i>
 80056dc:	e7ea      	b.n	80056b4 <_svfiprintf_r+0x1b0>
 80056de:	bf00      	nop
 80056e0:	08005a14 	.word	0x08005a14
 80056e4:	08005a1a 	.word	0x08005a1a
 80056e8:	08005a1e 	.word	0x08005a1e
 80056ec:	08001e91 	.word	0x08001e91
 80056f0:	08005451 	.word	0x08005451

080056f4 <_sbrk_r>:
 80056f4:	b538      	push	{r3, r4, r5, lr}
 80056f6:	2300      	movs	r3, #0
 80056f8:	4c05      	ldr	r4, [pc, #20]	; (8005710 <_sbrk_r+0x1c>)
 80056fa:	4605      	mov	r5, r0
 80056fc:	4608      	mov	r0, r1
 80056fe:	6023      	str	r3, [r4, #0]
 8005700:	f7fc f97e 	bl	8001a00 <_sbrk>
 8005704:	1c43      	adds	r3, r0, #1
 8005706:	d102      	bne.n	800570e <_sbrk_r+0x1a>
 8005708:	6823      	ldr	r3, [r4, #0]
 800570a:	b103      	cbz	r3, 800570e <_sbrk_r+0x1a>
 800570c:	602b      	str	r3, [r5, #0]
 800570e:	bd38      	pop	{r3, r4, r5, pc}
 8005710:	20000628 	.word	0x20000628

08005714 <strncmp>:
 8005714:	b510      	push	{r4, lr}
 8005716:	b16a      	cbz	r2, 8005734 <strncmp+0x20>
 8005718:	3901      	subs	r1, #1
 800571a:	1884      	adds	r4, r0, r2
 800571c:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005720:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005724:	4293      	cmp	r3, r2
 8005726:	d103      	bne.n	8005730 <strncmp+0x1c>
 8005728:	42a0      	cmp	r0, r4
 800572a:	d001      	beq.n	8005730 <strncmp+0x1c>
 800572c:	2b00      	cmp	r3, #0
 800572e:	d1f5      	bne.n	800571c <strncmp+0x8>
 8005730:	1a98      	subs	r0, r3, r2
 8005732:	bd10      	pop	{r4, pc}
 8005734:	4610      	mov	r0, r2
 8005736:	e7fc      	b.n	8005732 <strncmp+0x1e>

08005738 <__ascii_wctomb>:
 8005738:	b149      	cbz	r1, 800574e <__ascii_wctomb+0x16>
 800573a:	2aff      	cmp	r2, #255	; 0xff
 800573c:	bf8b      	itete	hi
 800573e:	238a      	movhi	r3, #138	; 0x8a
 8005740:	700a      	strbls	r2, [r1, #0]
 8005742:	6003      	strhi	r3, [r0, #0]
 8005744:	2001      	movls	r0, #1
 8005746:	bf88      	it	hi
 8005748:	f04f 30ff 	movhi.w	r0, #4294967295
 800574c:	4770      	bx	lr
 800574e:	4608      	mov	r0, r1
 8005750:	4770      	bx	lr

08005752 <memmove>:
 8005752:	4288      	cmp	r0, r1
 8005754:	b510      	push	{r4, lr}
 8005756:	eb01 0302 	add.w	r3, r1, r2
 800575a:	d807      	bhi.n	800576c <memmove+0x1a>
 800575c:	1e42      	subs	r2, r0, #1
 800575e:	4299      	cmp	r1, r3
 8005760:	d00a      	beq.n	8005778 <memmove+0x26>
 8005762:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005766:	f802 4f01 	strb.w	r4, [r2, #1]!
 800576a:	e7f8      	b.n	800575e <memmove+0xc>
 800576c:	4283      	cmp	r3, r0
 800576e:	d9f5      	bls.n	800575c <memmove+0xa>
 8005770:	1881      	adds	r1, r0, r2
 8005772:	1ad2      	subs	r2, r2, r3
 8005774:	42d3      	cmn	r3, r2
 8005776:	d100      	bne.n	800577a <memmove+0x28>
 8005778:	bd10      	pop	{r4, pc}
 800577a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800577e:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005782:	e7f7      	b.n	8005774 <memmove+0x22>

08005784 <__malloc_lock>:
 8005784:	4770      	bx	lr

08005786 <__malloc_unlock>:
 8005786:	4770      	bx	lr

08005788 <_realloc_r>:
 8005788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800578a:	4607      	mov	r7, r0
 800578c:	4614      	mov	r4, r2
 800578e:	460e      	mov	r6, r1
 8005790:	b921      	cbnz	r1, 800579c <_realloc_r+0x14>
 8005792:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005796:	4611      	mov	r1, r2
 8005798:	f7ff be00 	b.w	800539c <_malloc_r>
 800579c:	b922      	cbnz	r2, 80057a8 <_realloc_r+0x20>
 800579e:	f7ff fdb1 	bl	8005304 <_free_r>
 80057a2:	4625      	mov	r5, r4
 80057a4:	4628      	mov	r0, r5
 80057a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80057a8:	f000 f814 	bl	80057d4 <_malloc_usable_size_r>
 80057ac:	42a0      	cmp	r0, r4
 80057ae:	d20f      	bcs.n	80057d0 <_realloc_r+0x48>
 80057b0:	4621      	mov	r1, r4
 80057b2:	4638      	mov	r0, r7
 80057b4:	f7ff fdf2 	bl	800539c <_malloc_r>
 80057b8:	4605      	mov	r5, r0
 80057ba:	2800      	cmp	r0, #0
 80057bc:	d0f2      	beq.n	80057a4 <_realloc_r+0x1c>
 80057be:	4631      	mov	r1, r6
 80057c0:	4622      	mov	r2, r4
 80057c2:	f7ff f98d 	bl	8004ae0 <memcpy>
 80057c6:	4631      	mov	r1, r6
 80057c8:	4638      	mov	r0, r7
 80057ca:	f7ff fd9b 	bl	8005304 <_free_r>
 80057ce:	e7e9      	b.n	80057a4 <_realloc_r+0x1c>
 80057d0:	4635      	mov	r5, r6
 80057d2:	e7e7      	b.n	80057a4 <_realloc_r+0x1c>

080057d4 <_malloc_usable_size_r>:
 80057d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80057d8:	1f18      	subs	r0, r3, #4
 80057da:	2b00      	cmp	r3, #0
 80057dc:	bfbc      	itt	lt
 80057de:	580b      	ldrlt	r3, [r1, r0]
 80057e0:	18c0      	addlt	r0, r0, r3
 80057e2:	4770      	bx	lr

080057e4 <_init>:
 80057e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057e6:	bf00      	nop
 80057e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80057ea:	bc08      	pop	{r3}
 80057ec:	469e      	mov	lr, r3
 80057ee:	4770      	bx	lr

080057f0 <_fini>:
 80057f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057f2:	bf00      	nop
 80057f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80057f6:	bc08      	pop	{r3}
 80057f8:	469e      	mov	lr, r3
 80057fa:	4770      	bx	lr
