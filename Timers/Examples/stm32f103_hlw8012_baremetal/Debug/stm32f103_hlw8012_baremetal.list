
stm32f103_hlw8012_baremetal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006d1c  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000594  08006e50  08006e50  00016e50  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080073e4  080073e4  000201e4  2**0
                  CONTENTS
  4 .ARM          00000000  080073e4  080073e4  000201e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080073e4  080073e4  000201e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080073e4  080073e4  000173e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080073e8  080073e8  000173e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  080073ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000090  200001e8  080075d0  000201e8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000278  080075d0  00020278  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006038  00000000  00000000  0002020d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001321  00000000  00000000  00026245  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000408  00000000  00000000  00027568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000360  00000000  00000000  00027970  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001256d  00000000  00000000  00027cd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004281  00000000  00000000  0003a23d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005a960  00000000  00000000  0003e4be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00098e1e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000245c  00000000  00000000  00098e74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001e8 	.word	0x200001e8
 800014c:	00000000 	.word	0x00000000
 8000150:	08006e34 	.word	0x08006e34

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001ec 	.word	0x200001ec
 800016c:	08006e34 	.word	0x08006e34

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	; 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	3a01      	subs	r2, #1
 8000c42:	bf28      	it	cs
 8000c44:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c48:	d2ed      	bcs.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000df6:	2afd      	cmp	r2, #253	; 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	; 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	; 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	; 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <__gesf2>:
 8001044:	f04f 3cff 	mov.w	ip, #4294967295
 8001048:	e006      	b.n	8001058 <__cmpsf2+0x4>
 800104a:	bf00      	nop

0800104c <__lesf2>:
 800104c:	f04f 0c01 	mov.w	ip, #1
 8001050:	e002      	b.n	8001058 <__cmpsf2+0x4>
 8001052:	bf00      	nop

08001054 <__cmpsf2>:
 8001054:	f04f 0c01 	mov.w	ip, #1
 8001058:	f84d cd04 	str.w	ip, [sp, #-4]!
 800105c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001060:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001064:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001068:	bf18      	it	ne
 800106a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800106e:	d011      	beq.n	8001094 <__cmpsf2+0x40>
 8001070:	b001      	add	sp, #4
 8001072:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001076:	bf18      	it	ne
 8001078:	ea90 0f01 	teqne	r0, r1
 800107c:	bf58      	it	pl
 800107e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001082:	bf88      	it	hi
 8001084:	17c8      	asrhi	r0, r1, #31
 8001086:	bf38      	it	cc
 8001088:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800108c:	bf18      	it	ne
 800108e:	f040 0001 	orrne.w	r0, r0, #1
 8001092:	4770      	bx	lr
 8001094:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001098:	d102      	bne.n	80010a0 <__cmpsf2+0x4c>
 800109a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800109e:	d105      	bne.n	80010ac <__cmpsf2+0x58>
 80010a0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010a4:	d1e4      	bne.n	8001070 <__cmpsf2+0x1c>
 80010a6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010aa:	d0e1      	beq.n	8001070 <__cmpsf2+0x1c>
 80010ac:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop

080010b4 <__aeabi_cfrcmple>:
 80010b4:	4684      	mov	ip, r0
 80010b6:	4608      	mov	r0, r1
 80010b8:	4661      	mov	r1, ip
 80010ba:	e7ff      	b.n	80010bc <__aeabi_cfcmpeq>

080010bc <__aeabi_cfcmpeq>:
 80010bc:	b50f      	push	{r0, r1, r2, r3, lr}
 80010be:	f7ff ffc9 	bl	8001054 <__cmpsf2>
 80010c2:	2800      	cmp	r0, #0
 80010c4:	bf48      	it	mi
 80010c6:	f110 0f00 	cmnmi.w	r0, #0
 80010ca:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010cc <__aeabi_fcmpeq>:
 80010cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d0:	f7ff fff4 	bl	80010bc <__aeabi_cfcmpeq>
 80010d4:	bf0c      	ite	eq
 80010d6:	2001      	moveq	r0, #1
 80010d8:	2000      	movne	r0, #0
 80010da:	f85d fb08 	ldr.w	pc, [sp], #8
 80010de:	bf00      	nop

080010e0 <__aeabi_fcmplt>:
 80010e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010e4:	f7ff ffea 	bl	80010bc <__aeabi_cfcmpeq>
 80010e8:	bf34      	ite	cc
 80010ea:	2001      	movcc	r0, #1
 80010ec:	2000      	movcs	r0, #0
 80010ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80010f2:	bf00      	nop

080010f4 <__aeabi_fcmple>:
 80010f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f8:	f7ff ffe0 	bl	80010bc <__aeabi_cfcmpeq>
 80010fc:	bf94      	ite	ls
 80010fe:	2001      	movls	r0, #1
 8001100:	2000      	movhi	r0, #0
 8001102:	f85d fb08 	ldr.w	pc, [sp], #8
 8001106:	bf00      	nop

08001108 <__aeabi_fcmpge>:
 8001108:	f84d ed08 	str.w	lr, [sp, #-8]!
 800110c:	f7ff ffd2 	bl	80010b4 <__aeabi_cfrcmple>
 8001110:	bf94      	ite	ls
 8001112:	2001      	movls	r0, #1
 8001114:	2000      	movhi	r0, #0
 8001116:	f85d fb08 	ldr.w	pc, [sp], #8
 800111a:	bf00      	nop

0800111c <__aeabi_fcmpgt>:
 800111c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001120:	f7ff ffc8 	bl	80010b4 <__aeabi_cfrcmple>
 8001124:	bf34      	ite	cc
 8001126:	2001      	movcc	r0, #1
 8001128:	2000      	movcs	r0, #0
 800112a:	f85d fb08 	ldr.w	pc, [sp], #8
 800112e:	bf00      	nop

08001130 <__aeabi_f2uiz>:
 8001130:	0042      	lsls	r2, r0, #1
 8001132:	d20e      	bcs.n	8001152 <__aeabi_f2uiz+0x22>
 8001134:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001138:	d30b      	bcc.n	8001152 <__aeabi_f2uiz+0x22>
 800113a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800113e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001142:	d409      	bmi.n	8001158 <__aeabi_f2uiz+0x28>
 8001144:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001148:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800114c:	fa23 f002 	lsr.w	r0, r3, r2
 8001150:	4770      	bx	lr
 8001152:	f04f 0000 	mov.w	r0, #0
 8001156:	4770      	bx	lr
 8001158:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800115c:	d101      	bne.n	8001162 <__aeabi_f2uiz+0x32>
 800115e:	0242      	lsls	r2, r0, #9
 8001160:	d102      	bne.n	8001168 <__aeabi_f2uiz+0x38>
 8001162:	f04f 30ff 	mov.w	r0, #4294967295
 8001166:	4770      	bx	lr
 8001168:	f04f 0000 	mov.w	r0, #0
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop

08001170 <__aeabi_d2lz>:
 8001170:	b538      	push	{r3, r4, r5, lr}
 8001172:	460c      	mov	r4, r1
 8001174:	4605      	mov	r5, r0
 8001176:	4621      	mov	r1, r4
 8001178:	4628      	mov	r0, r5
 800117a:	2200      	movs	r2, #0
 800117c:	2300      	movs	r3, #0
 800117e:	f7ff fc2d 	bl	80009dc <__aeabi_dcmplt>
 8001182:	b928      	cbnz	r0, 8001190 <__aeabi_d2lz+0x20>
 8001184:	4628      	mov	r0, r5
 8001186:	4621      	mov	r1, r4
 8001188:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800118c:	f000 b80a 	b.w	80011a4 <__aeabi_d2ulz>
 8001190:	4628      	mov	r0, r5
 8001192:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8001196:	f000 f805 	bl	80011a4 <__aeabi_d2ulz>
 800119a:	4240      	negs	r0, r0
 800119c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011a0:	bd38      	pop	{r3, r4, r5, pc}
 80011a2:	bf00      	nop

080011a4 <__aeabi_d2ulz>:
 80011a4:	b5d0      	push	{r4, r6, r7, lr}
 80011a6:	2200      	movs	r2, #0
 80011a8:	4b0b      	ldr	r3, [pc, #44]	; (80011d8 <__aeabi_d2ulz+0x34>)
 80011aa:	4606      	mov	r6, r0
 80011ac:	460f      	mov	r7, r1
 80011ae:	f7ff f9a3 	bl	80004f8 <__aeabi_dmul>
 80011b2:	f7ff fc79 	bl	8000aa8 <__aeabi_d2uiz>
 80011b6:	4604      	mov	r4, r0
 80011b8:	f7ff f924 	bl	8000404 <__aeabi_ui2d>
 80011bc:	2200      	movs	r2, #0
 80011be:	4b07      	ldr	r3, [pc, #28]	; (80011dc <__aeabi_d2ulz+0x38>)
 80011c0:	f7ff f99a 	bl	80004f8 <__aeabi_dmul>
 80011c4:	4602      	mov	r2, r0
 80011c6:	460b      	mov	r3, r1
 80011c8:	4630      	mov	r0, r6
 80011ca:	4639      	mov	r1, r7
 80011cc:	f7fe ffdc 	bl	8000188 <__aeabi_dsub>
 80011d0:	f7ff fc6a 	bl	8000aa8 <__aeabi_d2uiz>
 80011d4:	4621      	mov	r1, r4
 80011d6:	bdd0      	pop	{r4, r6, r7, pc}
 80011d8:	3df00000 	.word	0x3df00000
 80011dc:	41f00000 	.word	0x41f00000

080011e0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80011e0:	b480      	push	{r7}
 80011e2:	b085      	sub	sp, #20
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	f003 0307 	and.w	r3, r3, #7
 80011ee:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80011f0:	4b0c      	ldr	r3, [pc, #48]	; (8001224 <__NVIC_SetPriorityGrouping+0x44>)
 80011f2:	68db      	ldr	r3, [r3, #12]
 80011f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80011f6:	68ba      	ldr	r2, [r7, #8]
 80011f8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80011fc:	4013      	ands	r3, r2
 80011fe:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 8001200:	68fb      	ldr	r3, [r7, #12]
 8001202:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001204:	68bb      	ldr	r3, [r7, #8]
 8001206:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001208:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800120c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001210:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001212:	4a04      	ldr	r2, [pc, #16]	; (8001224 <__NVIC_SetPriorityGrouping+0x44>)
 8001214:	68bb      	ldr	r3, [r7, #8]
 8001216:	60d3      	str	r3, [r2, #12]
}
 8001218:	bf00      	nop
 800121a:	3714      	adds	r7, #20
 800121c:	46bd      	mov	sp, r7
 800121e:	bc80      	pop	{r7}
 8001220:	4770      	bx	lr
 8001222:	bf00      	nop
 8001224:	e000ed00 	.word	0xe000ed00

08001228 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001228:	b480      	push	{r7}
 800122a:	b083      	sub	sp, #12
 800122c:	af00      	add	r7, sp, #0
 800122e:	4603      	mov	r3, r0
 8001230:	6039      	str	r1, [r7, #0]
 8001232:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001234:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001238:	2b00      	cmp	r3, #0
 800123a:	db0a      	blt.n	8001252 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800123c:	683b      	ldr	r3, [r7, #0]
 800123e:	b2da      	uxtb	r2, r3
 8001240:	490c      	ldr	r1, [pc, #48]	; (8001274 <__NVIC_SetPriority+0x4c>)
 8001242:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001246:	0112      	lsls	r2, r2, #4
 8001248:	b2d2      	uxtb	r2, r2
 800124a:	440b      	add	r3, r1
 800124c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001250:	e00a      	b.n	8001268 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001252:	683b      	ldr	r3, [r7, #0]
 8001254:	b2da      	uxtb	r2, r3
 8001256:	4908      	ldr	r1, [pc, #32]	; (8001278 <__NVIC_SetPriority+0x50>)
 8001258:	79fb      	ldrb	r3, [r7, #7]
 800125a:	f003 030f 	and.w	r3, r3, #15
 800125e:	3b04      	subs	r3, #4
 8001260:	0112      	lsls	r2, r2, #4
 8001262:	b2d2      	uxtb	r2, r2
 8001264:	440b      	add	r3, r1
 8001266:	761a      	strb	r2, [r3, #24]
}
 8001268:	bf00      	nop
 800126a:	370c      	adds	r7, #12
 800126c:	46bd      	mov	sp, r7
 800126e:	bc80      	pop	{r7}
 8001270:	4770      	bx	lr
 8001272:	bf00      	nop
 8001274:	e000e100 	.word	0xe000e100
 8001278:	e000ed00 	.word	0xe000ed00

0800127c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800127c:	b580      	push	{r7, lr}
 800127e:	b082      	sub	sp, #8
 8001280:	af00      	add	r7, sp, #0
 8001282:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	3b01      	subs	r3, #1
 8001288:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800128c:	d301      	bcc.n	8001292 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800128e:	2301      	movs	r3, #1
 8001290:	e00f      	b.n	80012b2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001292:	4a0a      	ldr	r2, [pc, #40]	; (80012bc <SysTick_Config+0x40>)
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	3b01      	subs	r3, #1
 8001298:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800129a:	210f      	movs	r1, #15
 800129c:	f04f 30ff 	mov.w	r0, #4294967295
 80012a0:	f7ff ffc2 	bl	8001228 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80012a4:	4b05      	ldr	r3, [pc, #20]	; (80012bc <SysTick_Config+0x40>)
 80012a6:	2200      	movs	r2, #0
 80012a8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80012aa:	4b04      	ldr	r3, [pc, #16]	; (80012bc <SysTick_Config+0x40>)
 80012ac:	2207      	movs	r2, #7
 80012ae:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80012b0:	2300      	movs	r3, #0
}
 80012b2:	4618      	mov	r0, r3
 80012b4:	3708      	adds	r7, #8
 80012b6:	46bd      	mov	sp, r7
 80012b8:	bd80      	pop	{r7, pc}
 80012ba:	bf00      	nop
 80012bc:	e000e010 	.word	0xe000e010

080012c0 <SysTick_Handler>:
//variable for millis counter
volatile uint32_t GB_counter;


void SysTick_Handler(void)
{
 80012c0:	b480      	push	{r7}
 80012c2:	af00      	add	r7, sp, #0
	//GB_printString1("gup\n");
  GB_counter++;    // equivalent to HAL_IncTick(void)
 80012c4:	4b04      	ldr	r3, [pc, #16]	; (80012d8 <SysTick_Handler+0x18>)
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	3301      	adds	r3, #1
 80012ca:	4a03      	ldr	r2, [pc, #12]	; (80012d8 <SysTick_Handler+0x18>)
 80012cc:	6013      	str	r3, [r2, #0]
}
 80012ce:	bf00      	nop
 80012d0:	46bd      	mov	sp, r7
 80012d2:	bc80      	pop	{r7}
 80012d4:	4770      	bx	lr
 80012d6:	bf00      	nop
 80012d8:	2000024c 	.word	0x2000024c

080012dc <GB_millis>:


//equivalent to  HAL_GetTick(void)
uint32_t GB_millis()
{
 80012dc:	b480      	push	{r7}
 80012de:	af00      	add	r7, sp, #0
	//GB_printString1("kun\n");
  return GB_counter;
 80012e0:	4b02      	ldr	r3, [pc, #8]	; (80012ec <GB_millis+0x10>)
 80012e2:	681b      	ldr	r3, [r3, #0]
}
 80012e4:	4618      	mov	r0, r3
 80012e6:	46bd      	mov	sp, r7
 80012e8:	bc80      	pop	{r7}
 80012ea:	4770      	bx	lr
 80012ec:	2000024c 	.word	0x2000024c

080012f0 <systick_millis>:

void systick_millis(uint32_t clk_val)
{
 80012f0:	b580      	push	{r7, lr}
 80012f2:	b082      	sub	sp, #8
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
	FLASH->ACR |= FLASH_ACR_PRFTBE|FLASH_ACR_LATENCY_1;
 80012f8:	4b0a      	ldr	r3, [pc, #40]	; (8001324 <systick_millis+0x34>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	4a09      	ldr	r2, [pc, #36]	; (8001324 <systick_millis+0x34>)
 80012fe:	f043 0312 	orr.w	r3, r3, #18
 8001302:	6013      	str	r3, [r2, #0]
	NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001304:	2003      	movs	r0, #3
 8001306:	f7ff ff6b 	bl	80011e0 <__NVIC_SetPriorityGrouping>
	SysTick_Config(clk_val);
 800130a:	6878      	ldr	r0, [r7, #4]
 800130c:	f7ff ffb6 	bl	800127c <SysTick_Config>
	NVIC_SetPriority(SysTick_IRQn,0);
 8001310:	2100      	movs	r1, #0
 8001312:	f04f 30ff 	mov.w	r0, #4294967295
 8001316:	f7ff ff87 	bl	8001228 <__NVIC_SetPriority>

}
 800131a:	bf00      	nop
 800131c:	3708      	adds	r7, #8
 800131e:	46bd      	mov	sp, r7
 8001320:	bd80      	pop	{r7, pc}
 8001322:	bf00      	nop
 8001324:	40022000 	.word	0x40022000

08001328 <GB_uart_pin_conf1>:
#include <string.h>
#include "stdio.h"
/**************STM32 UART1 ******************/
//PA10- RX, PA9-TX
void GB_uart_pin_conf1()
{
 8001328:	b480      	push	{r7}
 800132a:	af00      	add	r7, sp, #0
	// enable bus clock
	 RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 800132c:	4b10      	ldr	r3, [pc, #64]	; (8001370 <GB_uart_pin_conf1+0x48>)
 800132e:	699b      	ldr	r3, [r3, #24]
 8001330:	4a0f      	ldr	r2, [pc, #60]	; (8001370 <GB_uart_pin_conf1+0x48>)
 8001332:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001336:	6193      	str	r3, [r2, #24]
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001338:	4b0d      	ldr	r3, [pc, #52]	; (8001370 <GB_uart_pin_conf1+0x48>)
 800133a:	699b      	ldr	r3, [r3, #24]
 800133c:	4a0c      	ldr	r2, [pc, #48]	; (8001370 <GB_uart_pin_conf1+0x48>)
 800133e:	f043 0304 	orr.w	r3, r3, #4
 8001342:	6193      	str	r3, [r2, #24]

     //TX pin as alternate push pull
	 /* PA9 as output*/
	 GPIOA->CRH |= (GPIO_CRH_MODE9_1 | GPIO_CRH_MODE9_0);
 8001344:	4b0b      	ldr	r3, [pc, #44]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 8001346:	685b      	ldr	r3, [r3, #4]
 8001348:	4a0a      	ldr	r2, [pc, #40]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 800134a:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 800134e:	6053      	str	r3, [r2, #4]
	 GPIOA->CRH |= (GPIO_CRH_CNF9_1);
 8001350:	4b08      	ldr	r3, [pc, #32]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 8001352:	685b      	ldr	r3, [r3, #4]
 8001354:	4a07      	ldr	r2, [pc, #28]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 8001356:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800135a:	6053      	str	r3, [r2, #4]
	 GPIOA->CRH &= ~(GPIO_CRH_CNF9_0);
 800135c:	4b05      	ldr	r3, [pc, #20]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 800135e:	685b      	ldr	r3, [r3, #4]
 8001360:	4a04      	ldr	r2, [pc, #16]	; (8001374 <GB_uart_pin_conf1+0x4c>)
 8001362:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001366:	6053      	str	r3, [r2, #4]
	 /*
	   * PIN PA10 is the RX pin and it has to be set to input &FLOATING
	   * this is the rest value of the pin so we dont do anything to it
	   *
	   * */
}
 8001368:	bf00      	nop
 800136a:	46bd      	mov	sp, r7
 800136c:	bc80      	pop	{r7}
 800136e:	4770      	bx	lr
 8001370:	40021000 	.word	0x40021000
 8001374:	40010800 	.word	0x40010800

08001378 <GB_uart_boud_rate1>:

void GB_uart_boud_rate1()
{
 8001378:	b480      	push	{r7}
 800137a:	af00      	add	r7, sp, #0
	//DIV_Fraction = 0.36*16 = 0d5.76 = 0d6 (Nearest Whole number) = 0x6
	//DIV_Mantissa = 0d17 = 0x11
	//USART2->BRR =  ( ( uartdiv / 16 ) << USART_BRR_DIV_Mantissa_Pos );
	//USART2->BRR =  ( ( uartdiv % 16 ) << USART_BRR_DIV_Fraction_Pos ) ;
    // USART1->BRR = 0x116;
	USART1->BRR = 0xd05;
 800137c:	4b03      	ldr	r3, [pc, #12]	; (800138c <GB_uart_boud_rate1+0x14>)
 800137e:	f640 5205 	movw	r2, #3333	; 0xd05
 8001382:	609a      	str	r2, [r3, #8]

}
 8001384:	bf00      	nop
 8001386:	46bd      	mov	sp, r7
 8001388:	bc80      	pop	{r7}
 800138a:	4770      	bx	lr
 800138c:	40013800 	.word	0x40013800

08001390 <GB_uart_init1>:
void GB_uart_init1()
{
 8001390:	b580      	push	{r7, lr}
 8001392:	af00      	add	r7, sp, #0

	GB_uart_pin_conf1();
 8001394:	f7ff ffc8 	bl	8001328 <GB_uart_pin_conf1>
	//Alternate pin register
	/* no remap rx tx pins, for UART at pa2(tx) and pa3(rx)*/
    USART1->CR1 = 0x0000;
 8001398:	4b0f      	ldr	r3, [pc, #60]	; (80013d8 <GB_uart_init1+0x48>)
 800139a:	2200      	movs	r2, #0
 800139c:	60da      	str	r2, [r3, #12]
	//enable UART and configure stop byte
	USART1->CR1 |= USART_CR1_UE;
 800139e:	4b0e      	ldr	r3, [pc, #56]	; (80013d8 <GB_uart_init1+0x48>)
 80013a0:	68db      	ldr	r3, [r3, #12]
 80013a2:	4a0d      	ldr	r2, [pc, #52]	; (80013d8 <GB_uart_init1+0x48>)
 80013a4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80013a8:	60d3      	str	r3, [r2, #12]
	USART1->CR1 &= ~USART_CR1_M;
 80013aa:	4b0b      	ldr	r3, [pc, #44]	; (80013d8 <GB_uart_init1+0x48>)
 80013ac:	68db      	ldr	r3, [r3, #12]
 80013ae:	4a0a      	ldr	r2, [pc, #40]	; (80013d8 <GB_uart_init1+0x48>)
 80013b0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013b4:	60d3      	str	r3, [r2, #12]

	 //enable RXNE interrupts on USART SIDE
	//USART1->CR1 |= USART_CR1_RXNEIE;

	//enable transmitter
	USART1->CR1 |= USART_CR1_TE;
 80013b6:	4b08      	ldr	r3, [pc, #32]	; (80013d8 <GB_uart_init1+0x48>)
 80013b8:	68db      	ldr	r3, [r3, #12]
 80013ba:	4a07      	ldr	r2, [pc, #28]	; (80013d8 <GB_uart_init1+0x48>)
 80013bc:	f043 0308 	orr.w	r3, r3, #8
 80013c0:	60d3      	str	r3, [r2, #12]
	//enable receiver
	USART1->CR1 |= USART_CR1_RE;
 80013c2:	4b05      	ldr	r3, [pc, #20]	; (80013d8 <GB_uart_init1+0x48>)
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	4a04      	ldr	r2, [pc, #16]	; (80013d8 <GB_uart_init1+0x48>)
 80013c8:	f043 0304 	orr.w	r3, r3, #4
 80013cc:	60d3      	str	r3, [r2, #12]


    GB_uart_boud_rate1();
 80013ce:	f7ff ffd3 	bl	8001378 <GB_uart_boud_rate1>


}
 80013d2:	bf00      	nop
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	bf00      	nop
 80013d8:	40013800 	.word	0x40013800

080013dc <GB_UART_TxChar1>:
void GB_UART_TxChar1(uint32_t gb_byte)
{
 80013dc:	b480      	push	{r7}
 80013de:	b083      	sub	sp, #12
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	6078      	str	r0, [r7, #4]
	while(!(USART1->SR & USART_SR_TXE));
 80013e4:	bf00      	nop
 80013e6:	4b07      	ldr	r3, [pc, #28]	; (8001404 <GB_UART_TxChar1+0x28>)
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d0f9      	beq.n	80013e6 <GB_UART_TxChar1+0xa>
	USART1->DR = gb_byte;
 80013f2:	4a04      	ldr	r2, [pc, #16]	; (8001404 <GB_UART_TxChar1+0x28>)
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	6053      	str	r3, [r2, #4]

}
 80013f8:	bf00      	nop
 80013fa:	370c      	adds	r7, #12
 80013fc:	46bd      	mov	sp, r7
 80013fe:	bc80      	pop	{r7}
 8001400:	4770      	bx	lr
 8001402:	bf00      	nop
 8001404:	40013800 	.word	0x40013800

08001408 <GB_printString1>:
{
	while(!(USART2->SR & USART_SR_RXNE));
	return USART2->DR;
}
void GB_printString1(const char *gb_myString)      /////to print any string
{
 8001408:	b580      	push	{r7, lr}
 800140a:	b082      	sub	sp, #8
 800140c:	af00      	add	r7, sp, #0
 800140e:	6078      	str	r0, [r7, #4]
	while (*gb_myString)
 8001410:	e006      	b.n	8001420 <GB_printString1+0x18>
	GB_UART_TxChar1(*gb_myString++);
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	1c5a      	adds	r2, r3, #1
 8001416:	607a      	str	r2, [r7, #4]
 8001418:	781b      	ldrb	r3, [r3, #0]
 800141a:	4618      	mov	r0, r3
 800141c:	f7ff ffde 	bl	80013dc <GB_UART_TxChar1>
	while (*gb_myString)
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	781b      	ldrb	r3, [r3, #0]
 8001424:	2b00      	cmp	r3, #0
 8001426:	d1f4      	bne.n	8001412 <GB_printString1+0xa>
	while(!(USART1->SR & USART_SR_TC));
 8001428:	bf00      	nop
 800142a:	4b05      	ldr	r3, [pc, #20]	; (8001440 <GB_printString1+0x38>)
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001432:	2b00      	cmp	r3, #0
 8001434:	d0f9      	beq.n	800142a <GB_printString1+0x22>

}
 8001436:	bf00      	nop
 8001438:	bf00      	nop
 800143a:	3708      	adds	r7, #8
 800143c:	46bd      	mov	sp, r7
 800143e:	bd80      	pop	{r7, pc}
 8001440:	40013800 	.word	0x40013800

08001444 <GB_decimel1>:
			GB_UART_TxChar1('1');
		}
	}
}
void GB_decimel1(uint32_t gb_val)
{
 8001444:	b580      	push	{r7, lr}
 8001446:	b084      	sub	sp, #16
 8001448:	af00      	add	r7, sp, #0
 800144a:	6078      	str	r0, [r7, #4]
	unsigned char gb_buf[5];
	int8_t gb_ptr;
	for(gb_ptr=0;gb_ptr<5;++gb_ptr)
 800144c:	2300      	movs	r3, #0
 800144e:	73fb      	strb	r3, [r7, #15]
 8001450:	e01d      	b.n	800148e <GB_decimel1+0x4a>
	{
		gb_buf[gb_ptr] = (gb_val % 10) + '0';
 8001452:	6879      	ldr	r1, [r7, #4]
 8001454:	4b27      	ldr	r3, [pc, #156]	; (80014f4 <GB_decimel1+0xb0>)
 8001456:	fba3 2301 	umull	r2, r3, r3, r1
 800145a:	08da      	lsrs	r2, r3, #3
 800145c:	4613      	mov	r3, r2
 800145e:	009b      	lsls	r3, r3, #2
 8001460:	4413      	add	r3, r2
 8001462:	005b      	lsls	r3, r3, #1
 8001464:	1aca      	subs	r2, r1, r3
 8001466:	b2d2      	uxtb	r2, r2
 8001468:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800146c:	3230      	adds	r2, #48	; 0x30
 800146e:	b2d2      	uxtb	r2, r2
 8001470:	f107 0110 	add.w	r1, r7, #16
 8001474:	440b      	add	r3, r1
 8001476:	f803 2c08 	strb.w	r2, [r3, #-8]
		gb_val /= 10;
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	4a1d      	ldr	r2, [pc, #116]	; (80014f4 <GB_decimel1+0xb0>)
 800147e:	fba2 2303 	umull	r2, r3, r2, r3
 8001482:	08db      	lsrs	r3, r3, #3
 8001484:	607b      	str	r3, [r7, #4]
	for(gb_ptr=0;gb_ptr<5;++gb_ptr)
 8001486:	7bfb      	ldrb	r3, [r7, #15]
 8001488:	3301      	adds	r3, #1
 800148a:	b2db      	uxtb	r3, r3
 800148c:	73fb      	strb	r3, [r7, #15]
 800148e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001492:	2b04      	cmp	r3, #4
 8001494:	dddd      	ble.n	8001452 <GB_decimel1+0xe>
	}
	for(gb_ptr=4;gb_ptr>0;--gb_ptr)
 8001496:	2304      	movs	r3, #4
 8001498:	73fb      	strb	r3, [r7, #15]
 800149a:	e00c      	b.n	80014b6 <GB_decimel1+0x72>
	{
		if (gb_buf[gb_ptr] != '0')
 800149c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014a0:	f107 0210 	add.w	r2, r7, #16
 80014a4:	4413      	add	r3, r2
 80014a6:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80014aa:	2b30      	cmp	r3, #48	; 0x30
 80014ac:	d108      	bne.n	80014c0 <GB_decimel1+0x7c>
	for(gb_ptr=4;gb_ptr>0;--gb_ptr)
 80014ae:	7bfb      	ldrb	r3, [r7, #15]
 80014b0:	3b01      	subs	r3, #1
 80014b2:	b2db      	uxtb	r3, r3
 80014b4:	73fb      	strb	r3, [r7, #15]
 80014b6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	dcee      	bgt.n	800149c <GB_decimel1+0x58>
 80014be:	e00f      	b.n	80014e0 <GB_decimel1+0x9c>
		break;
 80014c0:	bf00      	nop
	}
	for(;gb_ptr>=0;--gb_ptr)
 80014c2:	e00d      	b.n	80014e0 <GB_decimel1+0x9c>
	{
		GB_UART_TxChar1(gb_buf[gb_ptr]);
 80014c4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014c8:	f107 0210 	add.w	r2, r7, #16
 80014cc:	4413      	add	r3, r2
 80014ce:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80014d2:	4618      	mov	r0, r3
 80014d4:	f7ff ff82 	bl	80013dc <GB_UART_TxChar1>
	for(;gb_ptr>=0;--gb_ptr)
 80014d8:	7bfb      	ldrb	r3, [r7, #15]
 80014da:	3b01      	subs	r3, #1
 80014dc:	b2db      	uxtb	r3, r3
 80014de:	73fb      	strb	r3, [r7, #15]
 80014e0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	daed      	bge.n	80014c4 <GB_decimel1+0x80>
	}
}
 80014e8:	bf00      	nop
 80014ea:	bf00      	nop
 80014ec:	3710      	adds	r7, #16
 80014ee:	46bd      	mov	sp, r7
 80014f0:	bd80      	pop	{r7, pc}
 80014f2:	bf00      	nop
 80014f4:	cccccccd 	.word	0xcccccccd

080014f8 <GB_uart_newline1>:
void GB_uart_newline1()
{
 80014f8:	b580      	push	{r7, lr}
 80014fa:	af00      	add	r7, sp, #0
	GB_UART_TxChar1('\n');
 80014fc:	200a      	movs	r0, #10
 80014fe:	f7ff ff6d 	bl	80013dc <GB_UART_TxChar1>
}
 8001502:	bf00      	nop
 8001504:	bd80      	pop	{r7, pc}
	...

08001508 <GB_float_value1>:

	}
	while(!(USART1->SR & USART_SR_RXNE));
}
void GB_float_value1(float gb_value)
{
 8001508:	b580      	push	{r7, lr}
 800150a:	b086      	sub	sp, #24
 800150c:	af00      	add	r7, sp, #0
 800150e:	6078      	str	r0, [r7, #4]
	char gb_float_buff[10];
	sprintf(gb_float_buff,"%f",gb_value);
 8001510:	6878      	ldr	r0, [r7, #4]
 8001512:	f7fe ff99 	bl	8000448 <__aeabi_f2d>
 8001516:	4602      	mov	r2, r0
 8001518:	460b      	mov	r3, r1
 800151a:	f107 000c 	add.w	r0, r7, #12
 800151e:	4906      	ldr	r1, [pc, #24]	; (8001538 <GB_float_value1+0x30>)
 8001520:	f001 fef6 	bl	8003310 <siprintf>
	GB_printString1(gb_float_buff);
 8001524:	f107 030c 	add.w	r3, r7, #12
 8001528:	4618      	mov	r0, r3
 800152a:	f7ff ff6d 	bl	8001408 <GB_printString1>

}
 800152e:	bf00      	nop
 8001530:	3718      	adds	r7, #24
 8001532:	46bd      	mov	sp, r7
 8001534:	bd80      	pop	{r7, pc}
 8001536:	bf00      	nop
 8001538:	08006e50 	.word	0x08006e50

0800153c <MCO_pin_conf>:
 * 5) Enable the PLL source and wait for it to become stable
 * 6) Enable the Clock source and wait for it to be set
 */

void MCO_pin_conf()
{
 800153c:	b480      	push	{r7}
 800153e:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001540:	4b0d      	ldr	r3, [pc, #52]	; (8001578 <MCO_pin_conf+0x3c>)
 8001542:	699b      	ldr	r3, [r3, #24]
 8001544:	4a0c      	ldr	r2, [pc, #48]	; (8001578 <MCO_pin_conf+0x3c>)
 8001546:	f043 0304 	orr.w	r3, r3, #4
 800154a:	6193      	str	r3, [r2, #24]
				 GPIOA->CRH &= ~(GPIO_CRH_MODE8 | GPIO_CRH_CNF8);
 800154c:	4b0b      	ldr	r3, [pc, #44]	; (800157c <MCO_pin_conf+0x40>)
 800154e:	685b      	ldr	r3, [r3, #4]
 8001550:	4a0a      	ldr	r2, [pc, #40]	; (800157c <MCO_pin_conf+0x40>)
 8001552:	f023 030f 	bic.w	r3, r3, #15
 8001556:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO PIN MODE AS OUTPUT MAX SPEED 50MHZ
				 GPIOA->CRH |= ( GPIO_CRH_MODE8_1 | GPIO_CRH_MODE8_0);
 8001558:	4b08      	ldr	r3, [pc, #32]	; (800157c <MCO_pin_conf+0x40>)
 800155a:	685b      	ldr	r3, [r3, #4]
 800155c:	4a07      	ldr	r2, [pc, #28]	; (800157c <MCO_pin_conf+0x40>)
 800155e:	f043 0303 	orr.w	r3, r3, #3
 8001562:	6053      	str	r3, [r2, #4]

				 //CONFIGURE GPIO OUTPUT MODE AS alternate function push-pull
				 GPIOA->CRH |= ((GPIO_CRH_CNF8_1) | ~(GPIO_CRH_CNF8_0));
 8001564:	4b05      	ldr	r3, [pc, #20]	; (800157c <MCO_pin_conf+0x40>)
 8001566:	685b      	ldr	r3, [r3, #4]
 8001568:	4a04      	ldr	r2, [pc, #16]	; (800157c <MCO_pin_conf+0x40>)
 800156a:	f063 0304 	orn	r3, r3, #4
 800156e:	6053      	str	r3, [r2, #4]
}
 8001570:	bf00      	nop
 8001572:	46bd      	mov	sp, r7
 8001574:	bc80      	pop	{r7}
 8001576:	4770      	bx	lr
 8001578:	40021000 	.word	0x40021000
 800157c:	40010800 	.word	0x40010800

08001580 <system_clk>:

void system_clk()
{
 8001580:	b580      	push	{r7, lr}
 8001582:	af00      	add	r7, sp, #0
	//ENABLE HSE & WAIT FOR HSE TO BECOME READY
	RCC->CR |= RCC_CR_HSEON ;   // HSE IS 8MHZ
 8001584:	4b25      	ldr	r3, [pc, #148]	; (800161c <system_clk+0x9c>)
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	4a24      	ldr	r2, [pc, #144]	; (800161c <system_clk+0x9c>)
 800158a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800158e:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY))
 8001590:	bf00      	nop
 8001592:	4b22      	ldr	r3, [pc, #136]	; (800161c <system_clk+0x9c>)
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800159a:	2b00      	cmp	r3, #0
 800159c:	d0f9      	beq.n	8001592 <system_clk+0x12>
		 ;
	//configure flash prefetch and the latency related
	FLASH->ACR |= FLASH_ACR_PRFTBE|FLASH_ACR_LATENCY_1;
 800159e:	4b20      	ldr	r3, [pc, #128]	; (8001620 <system_clk+0xa0>)
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	4a1f      	ldr	r2, [pc, #124]	; (8001620 <system_clk+0xa0>)
 80015a4:	f043 0312 	orr.w	r3, r3, #18
 80015a8:	6013      	str	r3, [r2, #0]
	// CONFIGURE PLL AND Buses(AHB,APB1,APB2)
	//PLL SOURCE: HERE  HSE IS USED AS SOURCE
	RCC->CFGR |= RCC_CFGR_PLLSRC;
 80015aa:	4b1c      	ldr	r3, [pc, #112]	; (800161c <system_clk+0x9c>)
 80015ac:	685b      	ldr	r3, [r3, #4]
 80015ae:	4a1b      	ldr	r2, [pc, #108]	; (800161c <system_clk+0x9c>)
 80015b0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80015b4:	6053      	str	r3, [r2, #4]
	//HSE DEVIDER FOR PLL(IF HSE IS USED AS SOURCE FOR PLL) : NOT DIVIDING CLOCK
	RCC->CFGR |= RCC_CFGR_PLLXTPRE_HSE ;  // SO INPUT TO PLL IS 8MHZ
 80015b6:	4b19      	ldr	r3, [pc, #100]	; (800161c <system_clk+0x9c>)
 80015b8:	4a18      	ldr	r2, [pc, #96]	; (800161c <system_clk+0x9c>)
 80015ba:	685b      	ldr	r3, [r3, #4]
 80015bc:	6053      	str	r3, [r2, #4]
	//PLL MULTIPLIER: HERE I AM MULTIPLYING HSE OUTPUT WITH 4
	RCC->CFGR |= RCC_CFGR_PLLMULL4; //SO OUTPUT FROM PLL IS 32MHZ
 80015be:	4b17      	ldr	r3, [pc, #92]	; (800161c <system_clk+0x9c>)
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	4a16      	ldr	r2, [pc, #88]	; (800161c <system_clk+0x9c>)
 80015c4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80015c8:	6053      	str	r3, [r2, #4]
	//BUS CLOCK CONFIGURE(APB1,APB2,AHB): NOT DIVIDING
	RCC->CFGR |= (RCC_CFGR_PPRE1_DIV1 | RCC_CFGR_PPRE2_DIV1 | RCC_CFGR_HPRE_DIV1);  // all buses runs at 32MHZ
 80015ca:	4b14      	ldr	r3, [pc, #80]	; (800161c <system_clk+0x9c>)
 80015cc:	4a13      	ldr	r2, [pc, #76]	; (800161c <system_clk+0x9c>)
 80015ce:	685b      	ldr	r3, [r3, #4]
 80015d0:	6053      	str	r3, [r2, #4]
	//ENABLE THE PLL
	RCC->CR |= RCC_CR_PLLON;
 80015d2:	4b12      	ldr	r3, [pc, #72]	; (800161c <system_clk+0x9c>)
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	4a11      	ldr	r2, [pc, #68]	; (800161c <system_clk+0x9c>)
 80015d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80015dc:	6013      	str	r3, [r2, #0]
	//WAIT FOR PLL TO SET
	while(!(RCC->CR & RCC_CR_PLLRDY))
 80015de:	bf00      	nop
 80015e0:	4b0e      	ldr	r3, [pc, #56]	; (800161c <system_clk+0x9c>)
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d0f9      	beq.n	80015e0 <system_clk+0x60>
			;

	 //ENABLE SYSTEMCLK AND WAIT
	 RCC->CFGR |= RCC_CFGR_SW_PLL;
 80015ec:	4b0b      	ldr	r3, [pc, #44]	; (800161c <system_clk+0x9c>)
 80015ee:	685b      	ldr	r3, [r3, #4]
 80015f0:	4a0a      	ldr	r2, [pc, #40]	; (800161c <system_clk+0x9c>)
 80015f2:	f043 0302 	orr.w	r3, r3, #2
 80015f6:	6053      	str	r3, [r2, #4]
	 while(!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 80015f8:	bf00      	nop
 80015fa:	4b08      	ldr	r3, [pc, #32]	; (800161c <system_clk+0x9c>)
 80015fc:	685b      	ldr	r3, [r3, #4]
 80015fe:	f003 0308 	and.w	r3, r3, #8
 8001602:	2b00      	cmp	r3, #0
 8001604:	d0f9      	beq.n	80015fa <system_clk+0x7a>
	 		 ;

	 MCO_pin_conf();
 8001606:	f7ff ff99 	bl	800153c <MCO_pin_conf>
	 //CLOCK OUTPUT ON MCO PIN
	 RCC->CFGR |= RCC_CFGR_MCO_SYSCLK;
 800160a:	4b04      	ldr	r3, [pc, #16]	; (800161c <system_clk+0x9c>)
 800160c:	685b      	ldr	r3, [r3, #4]
 800160e:	4a03      	ldr	r2, [pc, #12]	; (800161c <system_clk+0x9c>)
 8001610:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001614:	6053      	str	r3, [r2, #4]
}
 8001616:	bf00      	nop
 8001618:	bd80      	pop	{r7, pc}
 800161a:	bf00      	nop
 800161c:	40021000 	.word	0x40021000
 8001620:	40022000 	.word	0x40022000

08001624 <timer_initialise>:
 * 1 us = 1 count
 * 1ms = 1000us
 * 1 sec = 1000ms
 */
 void timer_initialise()
{
 8001624:	b480      	push	{r7}
 8001626:	af00      	add	r7, sp, #0
	// Start by making sure the timer's 'counter' is off
	TIM2->CR1 &= ~(TIM_CR1_CEN);
 8001628:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800162c:	681b      	ldr	r3, [r3, #0]
 800162e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001632:	f023 0301 	bic.w	r3, r3, #1
 8001636:	6013      	str	r3, [r2, #0]
	TIM2->SR &= ~(TIM_SR_UIF);
 8001638:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800163c:	691b      	ldr	r3, [r3, #16]
 800163e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001642:	f023 0301 	bic.w	r3, r3, #1
 8001646:	6113      	str	r3, [r2, #16]

	//RESET THE TIMER2 BUS
	RCC->APB1RSTR |=  (RCC_APB1RSTR_TIM2RST);
 8001648:	4b1f      	ldr	r3, [pc, #124]	; (80016c8 <timer_initialise+0xa4>)
 800164a:	691b      	ldr	r3, [r3, #16]
 800164c:	4a1e      	ldr	r2, [pc, #120]	; (80016c8 <timer_initialise+0xa4>)
 800164e:	f043 0301 	orr.w	r3, r3, #1
 8001652:	6113      	str	r3, [r2, #16]
	RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM2RST);
 8001654:	4b1c      	ldr	r3, [pc, #112]	; (80016c8 <timer_initialise+0xa4>)
 8001656:	691b      	ldr	r3, [r3, #16]
 8001658:	4a1b      	ldr	r2, [pc, #108]	; (80016c8 <timer_initialise+0xa4>)
 800165a:	f023 0301 	bic.w	r3, r3, #1
 800165e:	6113      	str	r3, [r2, #16]


	//Enable Timer2 peripheral clock
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001660:	4b19      	ldr	r3, [pc, #100]	; (80016c8 <timer_initialise+0xa4>)
 8001662:	69db      	ldr	r3, [r3, #28]
 8001664:	4a18      	ldr	r2, [pc, #96]	; (80016c8 <timer_initialise+0xa4>)
 8001666:	f043 0301 	orr.w	r3, r3, #1
 800166a:	61d3      	str	r3, [r2, #28]


    TIM2-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
 800166c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001670:	681b      	ldr	r3, [r3, #0]
 8001672:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001676:	f043 0302 	orr.w	r3, r3, #2
 800167a:	6013      	str	r3, [r2, #0]
/**********************for example 1*******************************/
    //Timer prescaler value
    TIM2->PSC = 32;
 800167c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001680:	2220      	movs	r2, #32
 8001682:	629a      	str	r2, [r3, #40]	; 0x28
    //TIM2->PSC = 0;
    //Timer Auto reload register value
    TIM2->ARR = 0xffff;
 8001684:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001688:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800168c:	62da      	str	r2, [r3, #44]	; 0x2c
    //65535
    //TIM2->ARR = 32;

    TIM2-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 800168e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001698:	f023 0302 	bic.w	r3, r3, #2
 800169c:	6013      	str	r3, [r2, #0]

   //Enable the update generation for updating the shadow register with preload register contents with new values
   TIM2->EGR |= TIM_EGR_UG;
 800169e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016a2:	695b      	ldr	r3, [r3, #20]
 80016a4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016a8:	f043 0301 	orr.w	r3, r3, #1
 80016ac:	6153      	str	r3, [r2, #20]
   //Clear the UIF flag as that is set when UG bit is set in EGR to update the content of my register
   TIM2->SR &= ~(TIM_SR_UIF);
 80016ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016b2:	691b      	ldr	r3, [r3, #16]
 80016b4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016b8:	f023 0301 	bic.w	r3, r3, #1
 80016bc:	6113      	str	r3, [r2, #16]
}
 80016be:	bf00      	nop
 80016c0:	46bd      	mov	sp, r7
 80016c2:	bc80      	pop	{r7}
 80016c4:	4770      	bx	lr
 80016c6:	bf00      	nop
 80016c8:	40021000 	.word	0x40021000

080016cc <delay_us>:
void delay_us(uint16_t us)
{
 80016cc:	b480      	push	{r7}
 80016ce:	b083      	sub	sp, #12
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	4603      	mov	r3, r0
 80016d4:	80fb      	strh	r3, [r7, #6]
	TIM2->CR1 |= TIM_CR1_CEN;
 80016d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016e0:	f043 0301 	orr.w	r3, r3, #1
 80016e4:	6013      	str	r3, [r2, #0]
	//TIM2-> CR1 |= TIM_CR1_UDIS; // enable this bit so that no register value is updated
	//TIM2->EGR |= TIM_EGR_UG; // SET UG bit to reinitailse the counter register with 0
	TIM2->CNT=0; // initialise counter register
 80016e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ea:	2200      	movs	r2, #0
 80016ec:	625a      	str	r2, [r3, #36]	; 0x24
	//while(!(TIM2->SR & (1<<TIM_SR_UIF)));
	//TIM2->SR &= ~(TIM_SR_UIF); //clear the update interrupt flag as this is set when CNT is reinitialsed with 0
	while(TIM2->CNT < us)
 80016ee:	bf00      	nop
 80016f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016f4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80016f6:	88fb      	ldrh	r3, [r7, #6]
 80016f8:	429a      	cmp	r2, r3
 80016fa:	d3f9      	bcc.n	80016f0 <delay_us+0x24>
	{	//uart_tran_dec(TIM2->CNT);
	}
	//TIM2->CR1 &= ~TIM_CR1_CEN;

}
 80016fc:	bf00      	nop
 80016fe:	bf00      	nop
 8001700:	370c      	adds	r7, #12
 8001702:	46bd      	mov	sp, r7
 8001704:	bc80      	pop	{r7}
 8001706:	4770      	bx	lr

08001708 <delay_ms>:
void delay_ms(uint16_t ms)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b084      	sub	sp, #16
 800170c:	af00      	add	r7, sp, #0
 800170e:	4603      	mov	r3, r0
 8001710:	80fb      	strh	r3, [r7, #6]
	for (uint16_t i=0; i<ms; i++)
 8001712:	2300      	movs	r3, #0
 8001714:	81fb      	strh	r3, [r7, #14]
 8001716:	e006      	b.n	8001726 <delay_ms+0x1e>
	delay_us(1000);
 8001718:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800171c:	f7ff ffd6 	bl	80016cc <delay_us>
	for (uint16_t i=0; i<ms; i++)
 8001720:	89fb      	ldrh	r3, [r7, #14]
 8001722:	3301      	adds	r3, #1
 8001724:	81fb      	strh	r3, [r7, #14]
 8001726:	89fa      	ldrh	r2, [r7, #14]
 8001728:	88fb      	ldrh	r3, [r7, #6]
 800172a:	429a      	cmp	r2, r3
 800172c:	d3f4      	bcc.n	8001718 <delay_ms+0x10>
}
 800172e:	bf00      	nop
 8001730:	bf00      	nop
 8001732:	3710      	adds	r7, #16
 8001734:	46bd      	mov	sp, r7
 8001736:	bd80      	pop	{r7, pc}

08001738 <T4C1_pin_conf>:
#include "stm32f1xx.h"
#include "gb_timer_input_capture.h"
int gb_a;
//PB6
void T4C1_pin_conf()
{
 8001738:	b480      	push	{r7}
 800173a:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 800173c:	4b0d      	ldr	r3, [pc, #52]	; (8001774 <T4C1_pin_conf+0x3c>)
 800173e:	699b      	ldr	r3, [r3, #24]
 8001740:	4a0c      	ldr	r2, [pc, #48]	; (8001774 <T4C1_pin_conf+0x3c>)
 8001742:	f043 0308 	orr.w	r3, r3, #8
 8001746:	6193      	str	r3, [r2, #24]
	 //Configures GPIO PIN PB6 as Input
	 GPIOB->CRL &= ~(GPIO_CRL_MODE6);
 8001748:	4b0b      	ldr	r3, [pc, #44]	; (8001778 <T4C1_pin_conf+0x40>)
 800174a:	681b      	ldr	r3, [r3, #0]
 800174c:	4a0a      	ldr	r2, [pc, #40]	; (8001778 <T4C1_pin_conf+0x40>)
 800174e:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8001752:	6013      	str	r3, [r2, #0]
	 //CONFIGURE GPIO PIN PB6 as floating input
	 GPIOB->CRL |= (GPIO_CRL_CNF6_0);
 8001754:	4b08      	ldr	r3, [pc, #32]	; (8001778 <T4C1_pin_conf+0x40>)
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	4a07      	ldr	r2, [pc, #28]	; (8001778 <T4C1_pin_conf+0x40>)
 800175a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800175e:	6013      	str	r3, [r2, #0]
	 GPIOB->CRL &= ~(GPIO_CRL_CNF6_1);
 8001760:	4b05      	ldr	r3, [pc, #20]	; (8001778 <T4C1_pin_conf+0x40>)
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	4a04      	ldr	r2, [pc, #16]	; (8001778 <T4C1_pin_conf+0x40>)
 8001766:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800176a:	6013      	str	r3, [r2, #0]
}
 800176c:	bf00      	nop
 800176e:	46bd      	mov	sp, r7
 8001770:	bc80      	pop	{r7}
 8001772:	4770      	bx	lr
 8001774:	40021000 	.word	0x40021000
 8001778:	40010c00 	.word	0x40010c00

0800177c <tim4_ch1_capture_config>:

void tim4_ch1_capture_config()
{
 800177c:	b480      	push	{r7}
 800177e:	af00      	add	r7, sp, #0
	   TIM4->DIER |= TIM_DIER_CC1IE; //capture interrupt enable
 8001780:	4b0d      	ldr	r3, [pc, #52]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 8001782:	68db      	ldr	r3, [r3, #12]
 8001784:	4a0c      	ldr	r2, [pc, #48]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 8001786:	f043 0302 	orr.w	r3, r3, #2
 800178a:	60d3      	str	r3, [r2, #12]
	   TIM4->CCER |= TIM_CCER_CC1E; // timer 4 channel1 configured for capture enabled
 800178c:	4b0a      	ldr	r3, [pc, #40]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 800178e:	6a1b      	ldr	r3, [r3, #32]
 8001790:	4a09      	ldr	r2, [pc, #36]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 8001792:	f043 0301 	orr.w	r3, r3, #1
 8001796:	6213      	str	r3, [r2, #32]
	   TIM4->CCER |= TIM_CCER_CC2E;
 8001798:	4b07      	ldr	r3, [pc, #28]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 800179a:	6a1b      	ldr	r3, [r3, #32]
 800179c:	4a06      	ldr	r2, [pc, #24]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 800179e:	f043 0310 	orr.w	r3, r3, #16
 80017a2:	6213      	str	r3, [r2, #32]
	   TIM4->CR1 |= TIM_CR1_CEN; //enable the timer
 80017a4:	4b04      	ldr	r3, [pc, #16]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	4a03      	ldr	r2, [pc, #12]	; (80017b8 <tim4_ch1_capture_config+0x3c>)
 80017aa:	f043 0301 	orr.w	r3, r3, #1
 80017ae:	6013      	str	r3, [r2, #0]
}
 80017b0:	bf00      	nop
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bc80      	pop	{r7}
 80017b6:	4770      	bx	lr
 80017b8:	40000800 	.word	0x40000800

080017bc <tim4_ch1_capture_unconfig>:

void tim4_ch1_capture_unconfig()
{
 80017bc:	b480      	push	{r7}
 80017be:	af00      	add	r7, sp, #0
		   TIM4->DIER &= ~TIM_DIER_CC1IE; //capture interrupt enable
 80017c0:	4b0d      	ldr	r3, [pc, #52]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017c2:	68db      	ldr	r3, [r3, #12]
 80017c4:	4a0c      	ldr	r2, [pc, #48]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017c6:	f023 0302 	bic.w	r3, r3, #2
 80017ca:	60d3      	str	r3, [r2, #12]
		   TIM4->CCER &= ~TIM_CCER_CC1E; // timer 4 channel1 configured for capture enabled
 80017cc:	4b0a      	ldr	r3, [pc, #40]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017ce:	6a1b      	ldr	r3, [r3, #32]
 80017d0:	4a09      	ldr	r2, [pc, #36]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017d2:	f023 0301 	bic.w	r3, r3, #1
 80017d6:	6213      	str	r3, [r2, #32]
		   TIM4->CCER &= ~TIM_CCER_CC2E;
 80017d8:	4b07      	ldr	r3, [pc, #28]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017da:	6a1b      	ldr	r3, [r3, #32]
 80017dc:	4a06      	ldr	r2, [pc, #24]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017de:	f023 0310 	bic.w	r3, r3, #16
 80017e2:	6213      	str	r3, [r2, #32]
		   TIM4->CR1 &= ~TIM_CR1_CEN; //enable the timer
 80017e4:	4b04      	ldr	r3, [pc, #16]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	4a03      	ldr	r2, [pc, #12]	; (80017f8 <tim4_ch1_capture_unconfig+0x3c>)
 80017ea:	f023 0301 	bic.w	r3, r3, #1
 80017ee:	6013      	str	r3, [r2, #0]
}
 80017f0:	bf00      	nop
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bc80      	pop	{r7}
 80017f6:	4770      	bx	lr
 80017f8:	40000800 	.word	0x40000800

080017fc <gb_t4_input_capture>:
void gb_t4_input_capture()
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	af00      	add	r7, sp, #0
	// Start by making sure the timer's 'counter' is off
			TIM4->CR1 &= ~(TIM_CR1_CEN);
 8001800:	4b68      	ldr	r3, [pc, #416]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a67      	ldr	r2, [pc, #412]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001806:	f023 0301 	bic.w	r3, r3, #1
 800180a:	6013      	str	r3, [r2, #0]
			TIM4->SR &= ~(TIM_SR_UIF);
 800180c:	4b65      	ldr	r3, [pc, #404]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800180e:	691b      	ldr	r3, [r3, #16]
 8001810:	4a64      	ldr	r2, [pc, #400]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001812:	f023 0301 	bic.w	r3, r3, #1
 8001816:	6113      	str	r3, [r2, #16]

			//RESET THE TIMER4 BUS
			RCC->APB1RSTR |=  (RCC_APB1RSTR_TIM4RST);
 8001818:	4b63      	ldr	r3, [pc, #396]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 800181a:	691b      	ldr	r3, [r3, #16]
 800181c:	4a62      	ldr	r2, [pc, #392]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 800181e:	f043 0304 	orr.w	r3, r3, #4
 8001822:	6113      	str	r3, [r2, #16]
			RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM4RST);
 8001824:	4b60      	ldr	r3, [pc, #384]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 8001826:	691b      	ldr	r3, [r3, #16]
 8001828:	4a5f      	ldr	r2, [pc, #380]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 800182a:	f023 0304 	bic.w	r3, r3, #4
 800182e:	6113      	str	r3, [r2, #16]

			//Enable Timer4 peripheral clock
			RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8001830:	4b5d      	ldr	r3, [pc, #372]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 8001832:	69db      	ldr	r3, [r3, #28]
 8001834:	4a5c      	ldr	r2, [pc, #368]	; (80019a8 <gb_t4_input_capture+0x1ac>)
 8001836:	f043 0304 	orr.w	r3, r3, #4
 800183a:	61d3      	str	r3, [r2, #28]

			//enable Timer4channel 1 gpio periperial
			T4C1_pin_conf();
 800183c:	f7ff ff7c 	bl	8001738 <T4C1_pin_conf>
//			__NVIC_SetPriority (TIM4_IRQn, 0);
//
//			__NVIC_EnableIRQ(TIM4_IRQn);

			//***********Timer base configuration******************
		    TIM4->CR1 |= TIM_CR1_ARPE; //enable the preload fpr arr register
 8001840:	4b58      	ldr	r3, [pc, #352]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	4a57      	ldr	r2, [pc, #348]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001846:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800184a:	6013      	str	r3, [r2, #0]


		    //Timer prescaler value
		     TIM4->PSC = 640;
 800184c:	4b55      	ldr	r3, [pc, #340]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800184e:	f44f 7220 	mov.w	r2, #640	; 0x280
 8001852:	629a      	str	r2, [r3, #40]	; 0x28
		     //Timer Auto reload register value - this decides the frequency of my signal
		     TIM4->ARR = 0xffff;
 8001854:	4b53      	ldr	r3, [pc, #332]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001856:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800185a:	62da      	str	r2, [r3, #44]	; 0x2c

		     TIM4-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 800185c:	4b51      	ldr	r3, [pc, #324]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	4a50      	ldr	r2, [pc, #320]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001862:	f023 0302 	bic.w	r3, r3, #2
 8001866:	6013      	str	r3, [r2, #0]
		     //Enable the update generation for updating the shadow register with preload register contents with new values
		     TIM4->EGR |= TIM_EGR_UG;
 8001868:	4b4e      	ldr	r3, [pc, #312]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800186a:	695b      	ldr	r3, [r3, #20]
 800186c:	4a4d      	ldr	r2, [pc, #308]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800186e:	f043 0301 	orr.w	r3, r3, #1
 8001872:	6153      	str	r3, [r2, #20]
//		     //Clear the UIF flag as that is set when UG bit is set in EGR to update the content of  register
//		   TIM4->SR &= ~(TIM_SR_UIF);


		   //********************************** TIMER Clock configuration ***************
		   TIM4->SMCR &= ~ (TIM_SMCR_SMS |TIM_SMCR_TS | TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8001874:	4b4b      	ldr	r3, [pc, #300]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001876:	689b      	ldr	r3, [r3, #8]
 8001878:	4a4a      	ldr	r2, [pc, #296]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800187a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800187e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8001882:	6093      	str	r3, [r2, #8]

		   //***********Timer base configuration******************
		    TIM4->CR1 |= TIM_CR1_ARPE; //enable the preload fpr arr register
 8001884:	4b47      	ldr	r3, [pc, #284]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	4a46      	ldr	r2, [pc, #280]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800188a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800188e:	6013      	str	r3, [r2, #0]
		    //Timer prescaler value
			TIM4->PSC = 640;
 8001890:	4b44      	ldr	r3, [pc, #272]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001892:	f44f 7220 	mov.w	r2, #640	; 0x280
 8001896:	629a      	str	r2, [r3, #40]	; 0x28
			//Timer Auto reload register value - this decides the frequency of my signal
			TIM4->ARR = 0xfffffff;
 8001898:	4b42      	ldr	r3, [pc, #264]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800189a:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800189e:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM4-> CR1 &= ~TIM_CR1_UDIS; // disable this bit so that values assigned from Timer register can move to preload registers
 80018a0:	4b40      	ldr	r3, [pc, #256]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	4a3f      	ldr	r2, [pc, #252]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018a6:	f023 0302 	bic.w	r3, r3, #2
 80018aa:	6013      	str	r3, [r2, #0]
			//Enable the update generation for updating the shadow register with preload register contents with new values
			 TIM4->EGR |= TIM_EGR_UG;
 80018ac:	4b3d      	ldr	r3, [pc, #244]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018ae:	695b      	ldr	r3, [r3, #20]
 80018b0:	4a3c      	ldr	r2, [pc, #240]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018b2:	f043 0301 	orr.w	r3, r3, #1
 80018b6:	6153      	str	r3, [r2, #20]
			 //When UIF bit is set to 1, it means registers are updated and update interrupt is pending.
			 while(!(TIM4->SR & TIM_SR_UIF));
 80018b8:	bf00      	nop
 80018ba:	4b3a      	ldr	r3, [pc, #232]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018bc:	691b      	ldr	r3, [r3, #16]
 80018be:	f003 0301 	and.w	r3, r3, #1
 80018c2:	2b00      	cmp	r3, #0
 80018c4:	d0f9      	beq.n	80018ba <gb_t4_input_capture+0xbe>
			// TIM4->SR &= ~(TIM_SR_UIF);



			 //**********************Timer Slave configuration*****************
		     TIM4-> SMCR = 0x00;// reset the slave mode register
 80018c6:	4b37      	ldr	r3, [pc, #220]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	609a      	str	r2, [r3, #8]
		     TIM4->SMCR |= TIM_SMCR_SMS_2; //slave mode selection: Reset Mode.
 80018cc:	4b35      	ldr	r3, [pc, #212]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018ce:	689b      	ldr	r3, [r3, #8]
 80018d0:	4a34      	ldr	r2, [pc, #208]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018d2:	f043 0304 	orr.w	r3, r3, #4
 80018d6:	6093      	str	r3, [r2, #8]
		     TIM4->SMCR |= (TIM_SMCR_TS_2 | TIM_SMCR_TS_0); //slave mode: trigger selection
 80018d8:	4b32      	ldr	r3, [pc, #200]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018da:	689b      	ldr	r3, [r3, #8]
 80018dc:	4a31      	ldr	r2, [pc, #196]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018de:	f043 0350 	orr.w	r3, r3, #80	; 0x50
 80018e2:	6093      	str	r3, [r2, #8]
		     /* Configure the trigger prescaler, filter, and polarity */


		     TIM4->DIER &= ~TIM_DIER_TIE; //trigger interrupt enable: triggered if UIF flag is set to 1
 80018e4:	4b2f      	ldr	r3, [pc, #188]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018e6:	68db      	ldr	r3, [r3, #12]
 80018e8:	4a2e      	ldr	r2, [pc, #184]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018ea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80018ee:	60d3      	str	r3, [r2, #12]
		     TIM4->DIER &= ~TIM_DIER_TDE; // trigger dma request disabled
 80018f0:	4b2c      	ldr	r3, [pc, #176]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018f2:	68db      	ldr	r3, [r3, #12]
 80018f4:	4a2b      	ldr	r2, [pc, #172]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018f6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80018fa:	60d3      	str	r3, [r2, #12]

		    //IC1 capture disabled
		    TIM4->CCER &= ~TIM_CCER_CC1E;
 80018fc:	4b29      	ldr	r3, [pc, #164]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 80018fe:	6a1b      	ldr	r3, [r3, #32]
 8001900:	4a28      	ldr	r2, [pc, #160]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001902:	f023 0301 	bic.w	r3, r3, #1
 8001906:	6213      	str	r3, [r2, #32]
		    //CC1 channel is configures as input, IC1 is mapped tp TI1
            TIM4->CCMR1 &= ~TIM_CCMR1_CC1S_1;
 8001908:	4b26      	ldr	r3, [pc, #152]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800190a:	699b      	ldr	r3, [r3, #24]
 800190c:	4a25      	ldr	r2, [pc, #148]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800190e:	f023 0302 	bic.w	r3, r3, #2
 8001912:	6193      	str	r3, [r2, #24]
            TIM4->CCMR1 |= TIM_CCMR1_CC1S_0;
 8001914:	4b23      	ldr	r3, [pc, #140]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001916:	699b      	ldr	r3, [r3, #24]
 8001918:	4a22      	ldr	r2, [pc, #136]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800191a:	f043 0301 	orr.w	r3, r3, #1
 800191e:	6193      	str	r3, [r2, #24]
            //IC1 capture polarity non-inverted: capture is done on rising edge of IC1.
            TIM4->CCER &= ~TIM_CCER_CC1P;
 8001920:	4b20      	ldr	r3, [pc, #128]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001922:	6a1b      	ldr	r3, [r3, #32]
 8001924:	4a1f      	ldr	r2, [pc, #124]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001926:	f023 0302 	bic.w	r3, r3, #2
 800192a:	6213      	str	r3, [r2, #32]
            TIM4->CCMR1 &= ~TIM_CCMR1_IC1PSC; // No prescaler, capture is done each time an edge is detected.
 800192c:	4b1d      	ldr	r3, [pc, #116]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800192e:	699b      	ldr	r3, [r3, #24]
 8001930:	4a1c      	ldr	r2, [pc, #112]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001932:	f023 030c 	bic.w	r3, r3, #12
 8001936:	6193      	str	r3, [r2, #24]
            TIM4->CCMR1 &= ~TIM_CCMR1_IC1F; // No input filter is needed, as input signal is stable so at each event capture can be done
 8001938:	4b1a      	ldr	r3, [pc, #104]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800193a:	699b      	ldr	r3, [r3, #24]
 800193c:	4a19      	ldr	r2, [pc, #100]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800193e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001942:	6193      	str	r3, [r2, #24]


            //IC2 capture disabled
           	 TIM4->CCER &= ~TIM_CCER_CC2E;
 8001944:	4b17      	ldr	r3, [pc, #92]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001946:	6a1b      	ldr	r3, [r3, #32]
 8001948:	4a16      	ldr	r2, [pc, #88]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800194a:	f023 0310 	bic.w	r3, r3, #16
 800194e:	6213      	str	r3, [r2, #32]
            //IC2 channel is configures as input, IC2 is mapped tp TI1
             TIM4->CCMR1 &= ~TIM_CCMR1_CC2S_0;
 8001950:	4b14      	ldr	r3, [pc, #80]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001952:	699b      	ldr	r3, [r3, #24]
 8001954:	4a13      	ldr	r2, [pc, #76]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001956:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800195a:	6193      	str	r3, [r2, #24]
             TIM4->CCMR1 |= TIM_CCMR1_CC2S_1;
 800195c:	4b11      	ldr	r3, [pc, #68]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800195e:	699b      	ldr	r3, [r3, #24]
 8001960:	4a10      	ldr	r2, [pc, #64]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001962:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001966:	6193      	str	r3, [r2, #24]
             //IC2 capture polarity inverted: capture is done on falling edge of IC2.
             TIM4->CCER |= TIM_CCER_CC2P;
 8001968:	4b0e      	ldr	r3, [pc, #56]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800196a:	6a1b      	ldr	r3, [r3, #32]
 800196c:	4a0d      	ldr	r2, [pc, #52]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800196e:	f043 0320 	orr.w	r3, r3, #32
 8001972:	6213      	str	r3, [r2, #32]
             TIM4->CCMR1 &= ~TIM_CCMR1_IC2PSC; // No prescaler, capture is done each time an edge is detected.
 8001974:	4b0b      	ldr	r3, [pc, #44]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001976:	699b      	ldr	r3, [r3, #24]
 8001978:	4a0a      	ldr	r2, [pc, #40]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800197a:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800197e:	6193      	str	r3, [r2, #24]
             TIM4->CCMR1 &= ~TIM_CCMR1_IC2F; // No input filter is needed, as input signal is stable so at each event capture can be done
 8001980:	4b08      	ldr	r3, [pc, #32]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001982:	699b      	ldr	r3, [r3, #24]
 8001984:	4a07      	ldr	r2, [pc, #28]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001986:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800198a:	6193      	str	r3, [r2, #24]


             //Master configuration
             TIM4->CR2 &= ~TIM_CR2_MMS; //reset the master mode selection
 800198c:	4b05      	ldr	r3, [pc, #20]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	4a04      	ldr	r2, [pc, #16]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 8001992:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001996:	6053      	str	r3, [r2, #4]
             TIM4->CR2 = 0x00;
 8001998:	4b02      	ldr	r3, [pc, #8]	; (80019a4 <gb_t4_input_capture+0x1a8>)
 800199a:	2200      	movs	r2, #0
 800199c:	605a      	str	r2, [r3, #4]
             //TIM4->CR1 |= TIM_CR1_CEN; //enable the timer

             //Timer4_channel2 configuration
        //  TIM4->CCER |= TIM_CCER_CC2E;
       //   TIM4->CR1 |= TIM_CR1_CEN; //enable the timer
}
 800199e:	bf00      	nop
 80019a0:	bd80      	pop	{r7, pc}
 80019a2:	bf00      	nop
 80019a4:	40000800 	.word	0x40000800
 80019a8:	40021000 	.word	0x40021000

080019ac <TIM4_IRQHandler>:
float Period = 0;
float Width = 0;
float Period_Current = 0;

void TIM4_IRQHandler(void)
{
 80019ac:	b580      	push	{r7, lr}
 80019ae:	af00      	add	r7, sp, #0
	if(TIM4->SR & TIM_SR_CC1IF) //capture comapre event 1
 80019b0:	4b27      	ldr	r3, [pc, #156]	; (8001a50 <TIM4_IRQHandler+0xa4>)
 80019b2:	691b      	ldr	r3, [r3, #16]
 80019b4:	f003 0302 	and.w	r3, r3, #2
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d047      	beq.n	8001a4c <TIM4_IRQHandler+0xa0>
	{
		if(TIM4->DIER & TIM_DIER_CC1IE) //cross check that which source of interrupt is configured
 80019bc:	4b24      	ldr	r3, [pc, #144]	; (8001a50 <TIM4_IRQHandler+0xa4>)
 80019be:	68db      	ldr	r3, [r3, #12]
 80019c0:	f003 0302 	and.w	r3, r3, #2
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d041      	beq.n	8001a4c <TIM4_IRQHandler+0xa0>
		{
			if((TIM4->CCMR1 & TIM_CCMR1_CC1S) != 0) //cross check if input capture interrupt is thier if input capture event is their
 80019c8:	4b21      	ldr	r3, [pc, #132]	; (8001a50 <TIM4_IRQHandler+0xa4>)
 80019ca:	699b      	ldr	r3, [r3, #24]
 80019cc:	f003 0303 	and.w	r3, r3, #3
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d03b      	beq.n	8001a4c <TIM4_IRQHandler+0xa0>
			{
				IC1Value = TIM4->CCR1;
 80019d4:	4b1e      	ldr	r3, [pc, #120]	; (8001a50 <TIM4_IRQHandler+0xa4>)
 80019d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80019d8:	4a1e      	ldr	r2, [pc, #120]	; (8001a54 <TIM4_IRQHandler+0xa8>)
 80019da:	6013      	str	r3, [r2, #0]
				if(IC1Value !=0)
 80019dc:	4b1d      	ldr	r3, [pc, #116]	; (8001a54 <TIM4_IRQHandler+0xa8>)
 80019de:	681b      	ldr	r3, [r3, #0]
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	d033      	beq.n	8001a4c <TIM4_IRQHandler+0xa0>
				{
					IC2Value = TIM4->CCR2;
 80019e4:	4b1a      	ldr	r3, [pc, #104]	; (8001a50 <TIM4_IRQHandler+0xa4>)
 80019e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80019e8:	4a1b      	ldr	r2, [pc, #108]	; (8001a58 <TIM4_IRQHandler+0xac>)
 80019ea:	6013      	str	r3, [r2, #0]
					Duty = (IC2Value*100)/IC1Value;
 80019ec:	4b1a      	ldr	r3, [pc, #104]	; (8001a58 <TIM4_IRQHandler+0xac>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	2264      	movs	r2, #100	; 0x64
 80019f2:	fb02 f203 	mul.w	r2, r2, r3
 80019f6:	4b17      	ldr	r3, [pc, #92]	; (8001a54 <TIM4_IRQHandler+0xa8>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80019fe:	4618      	mov	r0, r3
 8001a00:	f7ff f978 	bl	8000cf4 <__aeabi_ui2f>
 8001a04:	4603      	mov	r3, r0
 8001a06:	4a15      	ldr	r2, [pc, #84]	; (8001a5c <TIM4_IRQHandler+0xb0>)
 8001a08:	6013      	str	r3, [r2, #0]
					Frequency = 50000/IC1Value; //  ( in herts)
 8001a0a:	4b12      	ldr	r3, [pc, #72]	; (8001a54 <TIM4_IRQHandler+0xa8>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	f24c 3250 	movw	r2, #50000	; 0xc350
 8001a12:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a16:	4618      	mov	r0, r3
 8001a18:	f7ff f96c 	bl	8000cf4 <__aeabi_ui2f>
 8001a1c:	4603      	mov	r3, r0
 8001a1e:	4a10      	ldr	r2, [pc, #64]	; (8001a60 <TIM4_IRQHandler+0xb4>)
 8001a20:	6013      	str	r3, [r2, #0]
					//Frequency = 1/IC1Value;
					Period = 1000000/Frequency;//(Perid is in microseconds)
 8001a22:	4b0f      	ldr	r3, [pc, #60]	; (8001a60 <TIM4_IRQHandler+0xb4>)
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	4619      	mov	r1, r3
 8001a28:	480e      	ldr	r0, [pc, #56]	; (8001a64 <TIM4_IRQHandler+0xb8>)
 8001a2a:	f7ff fa6f 	bl	8000f0c <__aeabi_fdiv>
 8001a2e:	4603      	mov	r3, r0
 8001a30:	461a      	mov	r2, r3
 8001a32:	4b0d      	ldr	r3, [pc, #52]	; (8001a68 <TIM4_IRQHandler+0xbc>)
 8001a34:	601a      	str	r2, [r3, #0]
				Width = Period/2;  //(in microseconds)
 8001a36:	4b0c      	ldr	r3, [pc, #48]	; (8001a68 <TIM4_IRQHandler+0xbc>)
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001a3e:	4618      	mov	r0, r3
 8001a40:	f7ff fa64 	bl	8000f0c <__aeabi_fdiv>
 8001a44:	4603      	mov	r3, r0
 8001a46:	461a      	mov	r2, r3
 8001a48:	4b08      	ldr	r3, [pc, #32]	; (8001a6c <TIM4_IRQHandler+0xc0>)
 8001a4a:	601a      	str	r2, [r3, #0]

				}
			}
		}
	}
}
 8001a4c:	bf00      	nop
 8001a4e:	bd80      	pop	{r7, pc}
 8001a50:	40000800 	.word	0x40000800
 8001a54:	20000204 	.word	0x20000204
 8001a58:	20000208 	.word	0x20000208
 8001a5c:	20000210 	.word	0x20000210
 8001a60:	2000020c 	.word	0x2000020c
 8001a64:	49742400 	.word	0x49742400
 8001a68:	20000214 	.word	0x20000214
 8001a6c:	20000218 	.word	0x20000218

08001a70 <getPeriod>:


float getPeriod()
{
 8001a70:	b480      	push	{r7}
 8001a72:	af00      	add	r7, sp, #0
	return Period;
 8001a74:	4b02      	ldr	r3, [pc, #8]	; (8001a80 <getPeriod+0x10>)
 8001a76:	681b      	ldr	r3, [r3, #0]
}
 8001a78:	4618      	mov	r0, r3
 8001a7a:	46bd      	mov	sp, r7
 8001a7c:	bc80      	pop	{r7}
 8001a7e:	4770      	bx	lr
 8001a80:	20000214 	.word	0x20000214

08001a84 <setPeriod>:
	return Frequency;

}

void setPeriod(uint32_t value)
{
 8001a84:	b580      	push	{r7, lr}
 8001a86:	b082      	sub	sp, #8
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	6078      	str	r0, [r7, #4]
	Period = value;
 8001a8c:	6878      	ldr	r0, [r7, #4]
 8001a8e:	f7ff f931 	bl	8000cf4 <__aeabi_ui2f>
 8001a92:	4603      	mov	r3, r0
 8001a94:	4a02      	ldr	r2, [pc, #8]	; (8001aa0 <setPeriod+0x1c>)
 8001a96:	6013      	str	r3, [r2, #0]

}
 8001a98:	bf00      	nop
 8001a9a:	3708      	adds	r7, #8
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	bd80      	pop	{r7, pc}
 8001aa0:	20000214 	.word	0x20000214

08001aa4 <hlw8012_getcurrent_multiplier>:
  float _power = 0;

// Check values every 2 seconds
#define UPDATE_TIME                     2000

  double hlw8012_getcurrent_multiplier() { return _current_multiplier; };
 8001aa4:	b480      	push	{r7}
 8001aa6:	af00      	add	r7, sp, #0
 8001aa8:	4b03      	ldr	r3, [pc, #12]	; (8001ab8 <hlw8012_getcurrent_multiplier+0x14>)
 8001aaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001aae:	4610      	mov	r0, r2
 8001ab0:	4619      	mov	r1, r3
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	bc80      	pop	{r7}
 8001ab6:	4770      	bx	lr
 8001ab8:	20000250 	.word	0x20000250

08001abc <hlw8012_getvoltage_multiplier>:
    double hlw8012_getvoltage_multiplier() { return _voltage_multiplier; };
 8001abc:	b480      	push	{r7}
 8001abe:	af00      	add	r7, sp, #0
 8001ac0:	4b03      	ldr	r3, [pc, #12]	; (8001ad0 <hlw8012_getvoltage_multiplier+0x14>)
 8001ac2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ac6:	4610      	mov	r0, r2
 8001ac8:	4619      	mov	r1, r3
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bc80      	pop	{r7}
 8001ace:	4770      	bx	lr
 8001ad0:	20000260 	.word	0x20000260

08001ad4 <hlw8012_getpower_multiplier>:

double hlw8012_getpower_multiplier() { return _power_multiplier; };
 8001ad4:	b480      	push	{r7}
 8001ad6:	af00      	add	r7, sp, #0
 8001ad8:	4b03      	ldr	r3, [pc, #12]	; (8001ae8 <hlw8012_getpower_multiplier+0x14>)
 8001ada:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ade:	4610      	mov	r0, r2
 8001ae0:	4619      	mov	r1, r3
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bc80      	pop	{r7}
 8001ae6:	4770      	bx	lr
 8001ae8:	20000258 	.word	0x20000258

08001aec <hlw8012_sel_high_current>:



void hlw8012_sel_high_current()
{
 8001aec:	b480      	push	{r7}
 8001aee:	af00      	add	r7, sp, #0
	GPIOB->ODR |= (GPIO_ODR_ODR12);
 8001af0:	4b04      	ldr	r3, [pc, #16]	; (8001b04 <hlw8012_sel_high_current+0x18>)
 8001af2:	68db      	ldr	r3, [r3, #12]
 8001af4:	4a03      	ldr	r2, [pc, #12]	; (8001b04 <hlw8012_sel_high_current+0x18>)
 8001af6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001afa:	60d3      	str	r3, [r2, #12]
	//GPIOC->ODR |= (GPIO_ODR_ODR13);
}
 8001afc:	bf00      	nop
 8001afe:	46bd      	mov	sp, r7
 8001b00:	bc80      	pop	{r7}
 8001b02:	4770      	bx	lr
 8001b04:	40010c00 	.word	0x40010c00

08001b08 <hlw8012_sel_low_volatge>:
void hlw8012_sel_low_volatge()
{
 8001b08:	b480      	push	{r7}
 8001b0a:	af00      	add	r7, sp, #0
	GPIOB->ODR &= ~(GPIO_ODR_ODR12);
 8001b0c:	4b04      	ldr	r3, [pc, #16]	; (8001b20 <hlw8012_sel_low_volatge+0x18>)
 8001b0e:	68db      	ldr	r3, [r3, #12]
 8001b10:	4a03      	ldr	r2, [pc, #12]	; (8001b20 <hlw8012_sel_low_volatge+0x18>)
 8001b12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001b16:	60d3      	str	r3, [r2, #12]
	//GPIOC->ODR &= ~(GPIO_ODR_ODR13);
}
 8001b18:	bf00      	nop
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bc80      	pop	{r7}
 8001b1e:	4770      	bx	lr
 8001b20:	40010c00 	.word	0x40010c00

08001b24 <hlw8012_pins_config>:
/*SEL = PB12 --> Output
 *CF1 = Current/Voltage = PB7 --> floating input
 * CF = power = PB6 ==> Floating Input
 */
void hlw8012_pins_config()
{
 8001b24:	b480      	push	{r7}
 8001b26:	af00      	add	r7, sp, #0
	 RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001b28:	4b1f      	ldr	r3, [pc, #124]	; (8001ba8 <hlw8012_pins_config+0x84>)
 8001b2a:	699b      	ldr	r3, [r3, #24]
 8001b2c:	4a1e      	ldr	r2, [pc, #120]	; (8001ba8 <hlw8012_pins_config+0x84>)
 8001b2e:	f043 0308 	orr.w	r3, r3, #8
 8001b32:	6193      	str	r3, [r2, #24]

	 //Configures GPIO PIN PB6 as Input
	 GPIOB->CRL &= ~(GPIO_CRL_MODE6);
 8001b34:	4b1d      	ldr	r3, [pc, #116]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4a1c      	ldr	r2, [pc, #112]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b3a:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8001b3e:	6013      	str	r3, [r2, #0]
	 //CONFIGURE GPIO PIN PB6 as floating input
	 GPIOB->CRL |= (GPIO_CRL_CNF6_0);
 8001b40:	4b1a      	ldr	r3, [pc, #104]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	4a19      	ldr	r2, [pc, #100]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b46:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001b4a:	6013      	str	r3, [r2, #0]
	 GPIOB->CRL &= ~(GPIO_CRL_CNF6_1);
 8001b4c:	4b17      	ldr	r3, [pc, #92]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	4a16      	ldr	r2, [pc, #88]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b52:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8001b56:	6013      	str	r3, [r2, #0]

	 //Configures GPIO PIN PB7 as Input
	 GPIOB->CRL &= ~(GPIO_CRL_MODE7);
 8001b58:	4b14      	ldr	r3, [pc, #80]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	4a13      	ldr	r2, [pc, #76]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b5e:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001b62:	6013      	str	r3, [r2, #0]
	 //CONFIGURE GPIO PIN PB7 as floating input
	 GPIOB->CRL |= (GPIO_CRL_CNF7_0);
 8001b64:	4b11      	ldr	r3, [pc, #68]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	4a10      	ldr	r2, [pc, #64]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b6a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8001b6e:	6013      	str	r3, [r2, #0]
	 GPIOB->CRL &= ~(GPIO_CRL_CNF7_1);
 8001b70:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	4a0d      	ldr	r2, [pc, #52]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b76:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8001b7a:	6013      	str	r3, [r2, #0]

	 //PB12
	 RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001b7c:	4b0a      	ldr	r3, [pc, #40]	; (8001ba8 <hlw8012_pins_config+0x84>)
 8001b7e:	699b      	ldr	r3, [r3, #24]
 8001b80:	4a09      	ldr	r2, [pc, #36]	; (8001ba8 <hlw8012_pins_config+0x84>)
 8001b82:	f043 0308 	orr.w	r3, r3, #8
 8001b86:	6193      	str	r3, [r2, #24]
			 GPIOB->CRH |= (GPIO_CRH_MODE12_0 | GPIO_CRH_MODE12_1);
 8001b88:	4b08      	ldr	r3, [pc, #32]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b8a:	685b      	ldr	r3, [r3, #4]
 8001b8c:	4a07      	ldr	r2, [pc, #28]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b8e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001b92:	6053      	str	r3, [r2, #4]
			 GPIOB->CRH &= ~(GPIO_CRH_CNF12_0 | GPIO_CRH_CNF12_1);
 8001b94:	4b05      	ldr	r3, [pc, #20]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b96:	685b      	ldr	r3, [r3, #4]
 8001b98:	4a04      	ldr	r2, [pc, #16]	; (8001bac <hlw8012_pins_config+0x88>)
 8001b9a:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8001b9e:	6053      	str	r3, [r2, #4]

}
 8001ba0:	bf00      	nop
 8001ba2:	46bd      	mov	sp, r7
 8001ba4:	bc80      	pop	{r7}
 8001ba6:	4770      	bx	lr
 8001ba8:	40021000 	.word	0x40021000
 8001bac:	40010c00 	.word	0x40010c00

08001bb0 <hlw8012_config>:


void hlw8012_config()
{
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	af00      	add	r7, sp, #0
	hlw8012_pins_config();
 8001bb4:	f7ff ffb6 	bl	8001b24 <hlw8012_pins_config>

}
 8001bb8:	bf00      	nop
 8001bba:	bd80      	pop	{r7, pc}

08001bbc <gb_unblockingDelay>:
void gb_unblockingDelay(uint32_t mseconds)
{
 8001bbc:	b580      	push	{r7, lr}
 8001bbe:	b084      	sub	sp, #16
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	6078      	str	r0, [r7, #4]
	unsigned long gb_timeIn = GB_millis();	// Timestamp coming into function
 8001bc4:	f7ff fb8a 	bl	80012dc <GB_millis>
 8001bc8:	60f8      	str	r0, [r7, #12]
	while (GB_millis() - gb_timeIn < mseconds) delay_ms(1); // While we haven't timed out
 8001bca:	e002      	b.n	8001bd2 <gb_unblockingDelay+0x16>
 8001bcc:	2001      	movs	r0, #1
 8001bce:	f7ff fd9b 	bl	8001708 <delay_ms>
 8001bd2:	f7ff fb83 	bl	80012dc <GB_millis>
 8001bd6:	4602      	mov	r2, r0
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	1ad3      	subs	r3, r2, r3
 8001bdc:	687a      	ldr	r2, [r7, #4]
 8001bde:	429a      	cmp	r2, r3
 8001be0:	d8f4      	bhi.n	8001bcc <gb_unblockingDelay+0x10>
}
 8001be2:	bf00      	nop
 8001be4:	bf00      	nop
 8001be6:	3710      	adds	r7, #16
 8001be8:	46bd      	mov	sp, r7
 8001bea:	bd80      	pop	{r7, pc}

08001bec <hlw8012_getcurrent>:

float hlw8012_getcurrent()
{
 8001bec:	b5b0      	push	{r4, r5, r7, lr}
 8001bee:	af00      	add	r7, sp, #0
	//if(_power == 0){
	//     _current_pulse_width = 0;
	//}
	//else
	{
	hlw8012_sel_high_current();
 8001bf0:	f7ff ff7c 	bl	8001aec <hlw8012_sel_high_current>
	_current_pulse_width = pulseIN_current();
 8001bf4:	f000 f830 	bl	8001c58 <pulseIN_current>
 8001bf8:	4603      	mov	r3, r0
 8001bfa:	4618      	mov	r0, r3
 8001bfc:	f7ff fa98 	bl	8001130 <__aeabi_f2uiz>
 8001c00:	4603      	mov	r3, r0
 8001c02:	4a12      	ldr	r2, [pc, #72]	; (8001c4c <hlw8012_getcurrent+0x60>)
 8001c04:	6013      	str	r3, [r2, #0]
	_current = (_current_pulse_width > 0) ? _current_multiplier / _current_pulse_width: 0;
 8001c06:	4b11      	ldr	r3, [pc, #68]	; (8001c4c <hlw8012_getcurrent+0x60>)
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d015      	beq.n	8001c3a <hlw8012_getcurrent+0x4e>
 8001c0e:	4b10      	ldr	r3, [pc, #64]	; (8001c50 <hlw8012_getcurrent+0x64>)
 8001c10:	e9d3 4500 	ldrd	r4, r5, [r3]
 8001c14:	4b0d      	ldr	r3, [pc, #52]	; (8001c4c <hlw8012_getcurrent+0x60>)
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f7fe fbf3 	bl	8000404 <__aeabi_ui2d>
 8001c1e:	4602      	mov	r2, r0
 8001c20:	460b      	mov	r3, r1
 8001c22:	4620      	mov	r0, r4
 8001c24:	4629      	mov	r1, r5
 8001c26:	f7fe fd91 	bl	800074c <__aeabi_ddiv>
 8001c2a:	4602      	mov	r2, r0
 8001c2c:	460b      	mov	r3, r1
 8001c2e:	4610      	mov	r0, r2
 8001c30:	4619      	mov	r1, r3
 8001c32:	f7fe ff59 	bl	8000ae8 <__aeabi_d2f>
 8001c36:	4603      	mov	r3, r0
 8001c38:	e001      	b.n	8001c3e <hlw8012_getcurrent+0x52>
 8001c3a:	f04f 0300 	mov.w	r3, #0
 8001c3e:	4a05      	ldr	r2, [pc, #20]	; (8001c54 <hlw8012_getcurrent+0x68>)
 8001c40:	6013      	str	r3, [r2, #0]
	//return _current;
	}
	return _current;
 8001c42:	4b04      	ldr	r3, [pc, #16]	; (8001c54 <hlw8012_getcurrent+0x68>)
 8001c44:	681b      	ldr	r3, [r3, #0]
}
 8001c46:	4618      	mov	r0, r3
 8001c48:	bdb0      	pop	{r4, r5, r7, pc}
 8001c4a:	bf00      	nop
 8001c4c:	20000220 	.word	0x20000220
 8001c50:	20000250 	.word	0x20000250
 8001c54:	20000228 	.word	0x20000228

08001c58 <pulseIN_current>:
/*
 * Period is taken from TIM4_IRQ
 *
 */
float pulseIN_current()
{
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	b082      	sub	sp, #8
 8001c5c:	af00      	add	r7, sp, #0
unsigned long gb_pulse_current = GB_millis();	// Timestamp coming into function
 8001c5e:	f7ff fb3d 	bl	80012dc <GB_millis>
 8001c62:	6078      	str	r0, [r7, #4]
	while (GB_millis() - gb_pulse_current < 2000 )
 8001c64:	e006      	b.n	8001c74 <pulseIN_current+0x1c>
	{
	tim4_ch1_capture_config();
 8001c66:	f7ff fd89 	bl	800177c <tim4_ch1_capture_config>
	Current_Period = getPeriod();
 8001c6a:	f7ff ff01 	bl	8001a70 <getPeriod>
 8001c6e:	4603      	mov	r3, r0
 8001c70:	4a0a      	ldr	r2, [pc, #40]	; (8001c9c <pulseIN_current+0x44>)
 8001c72:	6013      	str	r3, [r2, #0]
	while (GB_millis() - gb_pulse_current < 2000 )
 8001c74:	f7ff fb32 	bl	80012dc <GB_millis>
 8001c78:	4602      	mov	r2, r0
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	1ad3      	subs	r3, r2, r3
 8001c7e:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8001c82:	d3f0      	bcc.n	8001c66 <pulseIN_current+0xe>
	}

	tim4_ch1_capture_unconfig();
 8001c84:	f7ff fd9a 	bl	80017bc <tim4_ch1_capture_unconfig>

	//reinitialise Period to 0
	setPeriod(0);
 8001c88:	2000      	movs	r0, #0
 8001c8a:	f7ff fefb 	bl	8001a84 <setPeriod>
	//}
	return Current_Period;
 8001c8e:	4b03      	ldr	r3, [pc, #12]	; (8001c9c <pulseIN_current+0x44>)
 8001c90:	681b      	ldr	r3, [r3, #0]

}
 8001c92:	4618      	mov	r0, r3
 8001c94:	3708      	adds	r7, #8
 8001c96:	46bd      	mov	sp, r7
 8001c98:	bd80      	pop	{r7, pc}
 8001c9a:	bf00      	nop
 8001c9c:	20000234 	.word	0x20000234

08001ca0 <hlw8012_getvoltage>:
float hlw8012_getvoltage()
{
 8001ca0:	b5b0      	push	{r4, r5, r7, lr}
 8001ca2:	af00      	add	r7, sp, #0
	hlw8012_sel_low_volatge();
 8001ca4:	f7ff ff30 	bl	8001b08 <hlw8012_sel_low_volatge>
	_voltage_pulse_width = pulseIN_voltage();
 8001ca8:	f000 f83a 	bl	8001d20 <pulseIN_voltage>
 8001cac:	4603      	mov	r3, r0
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f7ff fa3e 	bl	8001130 <__aeabi_f2uiz>
 8001cb4:	4603      	mov	r3, r0
 8001cb6:	4a17      	ldr	r2, [pc, #92]	; (8001d14 <hlw8012_getvoltage+0x74>)
 8001cb8:	6013      	str	r3, [r2, #0]
	_voltage = (_voltage_pulse_width > 0) ? _voltage_multiplier / _voltage_pulse_width/2: 0;
 8001cba:	4b16      	ldr	r3, [pc, #88]	; (8001d14 <hlw8012_getvoltage+0x74>)
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	d01f      	beq.n	8001d02 <hlw8012_getvoltage+0x62>
 8001cc2:	4b15      	ldr	r3, [pc, #84]	; (8001d18 <hlw8012_getvoltage+0x78>)
 8001cc4:	e9d3 4500 	ldrd	r4, r5, [r3]
 8001cc8:	4b12      	ldr	r3, [pc, #72]	; (8001d14 <hlw8012_getvoltage+0x74>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	4618      	mov	r0, r3
 8001cce:	f7fe fb99 	bl	8000404 <__aeabi_ui2d>
 8001cd2:	4602      	mov	r2, r0
 8001cd4:	460b      	mov	r3, r1
 8001cd6:	4620      	mov	r0, r4
 8001cd8:	4629      	mov	r1, r5
 8001cda:	f7fe fd37 	bl	800074c <__aeabi_ddiv>
 8001cde:	4602      	mov	r2, r0
 8001ce0:	460b      	mov	r3, r1
 8001ce2:	4610      	mov	r0, r2
 8001ce4:	4619      	mov	r1, r3
 8001ce6:	f04f 0200 	mov.w	r2, #0
 8001cea:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001cee:	f7fe fd2d 	bl	800074c <__aeabi_ddiv>
 8001cf2:	4602      	mov	r2, r0
 8001cf4:	460b      	mov	r3, r1
 8001cf6:	4610      	mov	r0, r2
 8001cf8:	4619      	mov	r1, r3
 8001cfa:	f7fe fef5 	bl	8000ae8 <__aeabi_d2f>
 8001cfe:	4603      	mov	r3, r0
 8001d00:	e001      	b.n	8001d06 <hlw8012_getvoltage+0x66>
 8001d02:	f04f 0300 	mov.w	r3, #0
 8001d06:	4a05      	ldr	r2, [pc, #20]	; (8001d1c <hlw8012_getvoltage+0x7c>)
 8001d08:	6013      	str	r3, [r2, #0]
	return _voltage;
 8001d0a:	4b04      	ldr	r3, [pc, #16]	; (8001d1c <hlw8012_getvoltage+0x7c>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
}
 8001d0e:	4618      	mov	r0, r3
 8001d10:	bdb0      	pop	{r4, r5, r7, pc}
 8001d12:	bf00      	nop
 8001d14:	2000021c 	.word	0x2000021c
 8001d18:	20000260 	.word	0x20000260
 8001d1c:	2000022c 	.word	0x2000022c

08001d20 <pulseIN_voltage>:
float voltage_Period = 0;
float pulseIN_voltage()
{
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b082      	sub	sp, #8
 8001d24:	af00      	add	r7, sp, #0
	unsigned long gb_pulse_voltage = GB_millis();	// Timestamp coming into function
 8001d26:	f7ff fad9 	bl	80012dc <GB_millis>
 8001d2a:	6078      	str	r0, [r7, #4]
		while (GB_millis() - gb_pulse_voltage < 2000 )
 8001d2c:	e006      	b.n	8001d3c <pulseIN_voltage+0x1c>
		{
	tim4_ch1_capture_config();
 8001d2e:	f7ff fd25 	bl	800177c <tim4_ch1_capture_config>
	voltage_Period = getPeriod();
 8001d32:	f7ff fe9d 	bl	8001a70 <getPeriod>
 8001d36:	4603      	mov	r3, r0
 8001d38:	4a0a      	ldr	r2, [pc, #40]	; (8001d64 <pulseIN_voltage+0x44>)
 8001d3a:	6013      	str	r3, [r2, #0]
		while (GB_millis() - gb_pulse_voltage < 2000 )
 8001d3c:	f7ff face 	bl	80012dc <GB_millis>
 8001d40:	4602      	mov	r2, r0
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	1ad3      	subs	r3, r2, r3
 8001d46:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8001d4a:	d3f0      	bcc.n	8001d2e <pulseIN_voltage+0xe>
		}
	tim4_ch1_capture_unconfig();
 8001d4c:	f7ff fd36 	bl	80017bc <tim4_ch1_capture_unconfig>

	//reinitilise Period to 0
	setPeriod(0);
 8001d50:	2000      	movs	r0, #0
 8001d52:	f7ff fe97 	bl	8001a84 <setPeriod>
	return voltage_Period;
 8001d56:	4b03      	ldr	r3, [pc, #12]	; (8001d64 <pulseIN_voltage+0x44>)
 8001d58:	681b      	ldr	r3, [r3, #0]
}
 8001d5a:	4618      	mov	r0, r3
 8001d5c:	3708      	adds	r7, #8
 8001d5e:	46bd      	mov	sp, r7
 8001d60:	bd80      	pop	{r7, pc}
 8001d62:	bf00      	nop
 8001d64:	20000238 	.word	0x20000238

08001d68 <pulseIN_power>:
float Power_Period = 0;
float pulseIN_power()
{
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	af00      	add	r7, sp, #0
	tim4_ch1_capture_config();
 8001d6c:	f7ff fd06 	bl	800177c <tim4_ch1_capture_config>
	Power_Period = getPeriod();
 8001d70:	f7ff fe7e 	bl	8001a70 <getPeriod>
 8001d74:	4603      	mov	r3, r0
 8001d76:	4a05      	ldr	r2, [pc, #20]	; (8001d8c <pulseIN_power+0x24>)
 8001d78:	6013      	str	r3, [r2, #0]
	tim4_ch1_capture_unconfig();
 8001d7a:	f7ff fd1f 	bl	80017bc <tim4_ch1_capture_unconfig>

	//reinitilise Period to 0
	setPeriod(0);
 8001d7e:	2000      	movs	r0, #0
 8001d80:	f7ff fe80 	bl	8001a84 <setPeriod>
	return Power_Period;
 8001d84:	4b01      	ldr	r3, [pc, #4]	; (8001d8c <pulseIN_power+0x24>)
 8001d86:	681b      	ldr	r3, [r3, #0]
}
 8001d88:	4618      	mov	r0, r3
 8001d8a:	bd80      	pop	{r7, pc}
 8001d8c:	2000023c 	.word	0x2000023c

08001d90 <hlw8012_getactivepower>:
float hlw8012_getactivepower()
{
 8001d90:	b5b0      	push	{r4, r5, r7, lr}
 8001d92:	af00      	add	r7, sp, #0
	_power_pulse_width = pulseIN_power();
 8001d94:	f7ff ffe8 	bl	8001d68 <pulseIN_power>
 8001d98:	4603      	mov	r3, r0
 8001d9a:	4618      	mov	r0, r3
 8001d9c:	f7ff f9c8 	bl	8001130 <__aeabi_f2uiz>
 8001da0:	4603      	mov	r3, r0
 8001da2:	4a17      	ldr	r2, [pc, #92]	; (8001e00 <hlw8012_getactivepower+0x70>)
 8001da4:	6013      	str	r3, [r2, #0]
	_power = (_power_pulse_width > 0) ? _power_multiplier / _power_pulse_width / 2 : 0;
 8001da6:	4b16      	ldr	r3, [pc, #88]	; (8001e00 <hlw8012_getactivepower+0x70>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	2b00      	cmp	r3, #0
 8001dac:	d01f      	beq.n	8001dee <hlw8012_getactivepower+0x5e>
 8001dae:	4b15      	ldr	r3, [pc, #84]	; (8001e04 <hlw8012_getactivepower+0x74>)
 8001db0:	e9d3 4500 	ldrd	r4, r5, [r3]
 8001db4:	4b12      	ldr	r3, [pc, #72]	; (8001e00 <hlw8012_getactivepower+0x70>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	4618      	mov	r0, r3
 8001dba:	f7fe fb23 	bl	8000404 <__aeabi_ui2d>
 8001dbe:	4602      	mov	r2, r0
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	4620      	mov	r0, r4
 8001dc4:	4629      	mov	r1, r5
 8001dc6:	f7fe fcc1 	bl	800074c <__aeabi_ddiv>
 8001dca:	4602      	mov	r2, r0
 8001dcc:	460b      	mov	r3, r1
 8001dce:	4610      	mov	r0, r2
 8001dd0:	4619      	mov	r1, r3
 8001dd2:	f04f 0200 	mov.w	r2, #0
 8001dd6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001dda:	f7fe fcb7 	bl	800074c <__aeabi_ddiv>
 8001dde:	4602      	mov	r2, r0
 8001de0:	460b      	mov	r3, r1
 8001de2:	4610      	mov	r0, r2
 8001de4:	4619      	mov	r1, r3
 8001de6:	f7fe fe7f 	bl	8000ae8 <__aeabi_d2f>
 8001dea:	4603      	mov	r3, r0
 8001dec:	e001      	b.n	8001df2 <hlw8012_getactivepower+0x62>
 8001dee:	f04f 0300 	mov.w	r3, #0
 8001df2:	4a05      	ldr	r2, [pc, #20]	; (8001e08 <hlw8012_getactivepower+0x78>)
 8001df4:	6013      	str	r3, [r2, #0]
	return _power;
 8001df6:	4b04      	ldr	r3, [pc, #16]	; (8001e08 <hlw8012_getactivepower+0x78>)
 8001df8:	681b      	ldr	r3, [r3, #0]
}
 8001dfa:	4618      	mov	r0, r3
 8001dfc:	bdb0      	pop	{r4, r5, r7, pc}
 8001dfe:	bf00      	nop
 8001e00:	20000224 	.word	0x20000224
 8001e04:	20000258 	.word	0x20000258
 8001e08:	20000230 	.word	0x20000230

08001e0c <hlw8012_expected_ActiveCurrent>:
void hlw8012_expected_ActiveCurrent( double value)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b082      	sub	sp, #8
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	e9c7 0100 	strd	r0, r1, [r7]
	if (_current == 0) hlw8012_getcurrent();
 8001e16:	4b1a      	ldr	r3, [pc, #104]	; (8001e80 <hlw8012_expected_ActiveCurrent+0x74>)
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	f04f 0100 	mov.w	r1, #0
 8001e1e:	4618      	mov	r0, r3
 8001e20:	f7ff f954 	bl	80010cc <__aeabi_fcmpeq>
 8001e24:	4603      	mov	r3, r0
 8001e26:	2b00      	cmp	r3, #0
 8001e28:	d001      	beq.n	8001e2e <hlw8012_expected_ActiveCurrent+0x22>
 8001e2a:	f7ff fedf 	bl	8001bec <hlw8012_getcurrent>
	if (_current > 0) _current_multiplier *= ((value / _current));
 8001e2e:	4b14      	ldr	r3, [pc, #80]	; (8001e80 <hlw8012_expected_ActiveCurrent+0x74>)
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	f04f 0100 	mov.w	r1, #0
 8001e36:	4618      	mov	r0, r3
 8001e38:	f7ff f970 	bl	800111c <__aeabi_fcmpgt>
 8001e3c:	4603      	mov	r3, r0
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d100      	bne.n	8001e44 <hlw8012_expected_ActiveCurrent+0x38>
}
 8001e42:	e018      	b.n	8001e76 <hlw8012_expected_ActiveCurrent+0x6a>
	if (_current > 0) _current_multiplier *= ((value / _current));
 8001e44:	4b0e      	ldr	r3, [pc, #56]	; (8001e80 <hlw8012_expected_ActiveCurrent+0x74>)
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	4618      	mov	r0, r3
 8001e4a:	f7fe fafd 	bl	8000448 <__aeabi_f2d>
 8001e4e:	4602      	mov	r2, r0
 8001e50:	460b      	mov	r3, r1
 8001e52:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001e56:	f7fe fc79 	bl	800074c <__aeabi_ddiv>
 8001e5a:	4602      	mov	r2, r0
 8001e5c:	460b      	mov	r3, r1
 8001e5e:	4610      	mov	r0, r2
 8001e60:	4619      	mov	r1, r3
 8001e62:	4b08      	ldr	r3, [pc, #32]	; (8001e84 <hlw8012_expected_ActiveCurrent+0x78>)
 8001e64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e68:	f7fe fb46 	bl	80004f8 <__aeabi_dmul>
 8001e6c:	4602      	mov	r2, r0
 8001e6e:	460b      	mov	r3, r1
 8001e70:	4904      	ldr	r1, [pc, #16]	; (8001e84 <hlw8012_expected_ActiveCurrent+0x78>)
 8001e72:	e9c1 2300 	strd	r2, r3, [r1]
}
 8001e76:	bf00      	nop
 8001e78:	3708      	adds	r7, #8
 8001e7a:	46bd      	mov	sp, r7
 8001e7c:	bd80      	pop	{r7, pc}
 8001e7e:	bf00      	nop
 8001e80:	20000228 	.word	0x20000228
 8001e84:	20000250 	.word	0x20000250

08001e88 <hlw8012_expected_Activevoltage>:
void hlw8012_expected_Activevoltage(double value)
{
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	b082      	sub	sp, #8
 8001e8c:	af00      	add	r7, sp, #0
 8001e8e:	e9c7 0100 	strd	r0, r1, [r7]
	 if (_voltage == 0) hlw8012_getvoltage();
 8001e92:	4b1a      	ldr	r3, [pc, #104]	; (8001efc <hlw8012_expected_Activevoltage+0x74>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f04f 0100 	mov.w	r1, #0
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	f7ff f916 	bl	80010cc <__aeabi_fcmpeq>
 8001ea0:	4603      	mov	r3, r0
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d001      	beq.n	8001eaa <hlw8012_expected_Activevoltage+0x22>
 8001ea6:	f7ff fefb 	bl	8001ca0 <hlw8012_getvoltage>
	 if (_voltage > 0) _voltage_multiplier *= (((double) value / _voltage));
 8001eaa:	4b14      	ldr	r3, [pc, #80]	; (8001efc <hlw8012_expected_Activevoltage+0x74>)
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	f04f 0100 	mov.w	r1, #0
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	f7ff f932 	bl	800111c <__aeabi_fcmpgt>
 8001eb8:	4603      	mov	r3, r0
 8001eba:	2b00      	cmp	r3, #0
 8001ebc:	d100      	bne.n	8001ec0 <hlw8012_expected_Activevoltage+0x38>
}
 8001ebe:	e018      	b.n	8001ef2 <hlw8012_expected_Activevoltage+0x6a>
	 if (_voltage > 0) _voltage_multiplier *= (((double) value / _voltage));
 8001ec0:	4b0e      	ldr	r3, [pc, #56]	; (8001efc <hlw8012_expected_Activevoltage+0x74>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4618      	mov	r0, r3
 8001ec6:	f7fe fabf 	bl	8000448 <__aeabi_f2d>
 8001eca:	4602      	mov	r2, r0
 8001ecc:	460b      	mov	r3, r1
 8001ece:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001ed2:	f7fe fc3b 	bl	800074c <__aeabi_ddiv>
 8001ed6:	4602      	mov	r2, r0
 8001ed8:	460b      	mov	r3, r1
 8001eda:	4610      	mov	r0, r2
 8001edc:	4619      	mov	r1, r3
 8001ede:	4b08      	ldr	r3, [pc, #32]	; (8001f00 <hlw8012_expected_Activevoltage+0x78>)
 8001ee0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ee4:	f7fe fb08 	bl	80004f8 <__aeabi_dmul>
 8001ee8:	4602      	mov	r2, r0
 8001eea:	460b      	mov	r3, r1
 8001eec:	4904      	ldr	r1, [pc, #16]	; (8001f00 <hlw8012_expected_Activevoltage+0x78>)
 8001eee:	e9c1 2300 	strd	r2, r3, [r1]
}
 8001ef2:	bf00      	nop
 8001ef4:	3708      	adds	r7, #8
 8001ef6:	46bd      	mov	sp, r7
 8001ef8:	bd80      	pop	{r7, pc}
 8001efa:	bf00      	nop
 8001efc:	2000022c 	.word	0x2000022c
 8001f00:	20000260 	.word	0x20000260

08001f04 <hlw8012_expected_Activepower>:
void hlw8012_expected_Activepower(unsigned int value)
{
 8001f04:	b5b0      	push	{r4, r5, r7, lr}
 8001f06:	b082      	sub	sp, #8
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	6078      	str	r0, [r7, #4]
	  if (_power == 0) hlw8012_getactivepower();
 8001f0c:	4b1c      	ldr	r3, [pc, #112]	; (8001f80 <hlw8012_expected_Activepower+0x7c>)
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	f04f 0100 	mov.w	r1, #0
 8001f14:	4618      	mov	r0, r3
 8001f16:	f7ff f8d9 	bl	80010cc <__aeabi_fcmpeq>
 8001f1a:	4603      	mov	r3, r0
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d001      	beq.n	8001f24 <hlw8012_expected_Activepower+0x20>
 8001f20:	f7ff ff36 	bl	8001d90 <hlw8012_getactivepower>
	  if (_power > 0) _power_multiplier *= ((double) value / _power);
 8001f24:	4b16      	ldr	r3, [pc, #88]	; (8001f80 <hlw8012_expected_Activepower+0x7c>)
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	f04f 0100 	mov.w	r1, #0
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	f7ff f8f5 	bl	800111c <__aeabi_fcmpgt>
 8001f32:	4603      	mov	r3, r0
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	d100      	bne.n	8001f3a <hlw8012_expected_Activepower+0x36>
}
 8001f38:	e01d      	b.n	8001f76 <hlw8012_expected_Activepower+0x72>
	  if (_power > 0) _power_multiplier *= ((double) value / _power);
 8001f3a:	6878      	ldr	r0, [r7, #4]
 8001f3c:	f7fe fa62 	bl	8000404 <__aeabi_ui2d>
 8001f40:	4604      	mov	r4, r0
 8001f42:	460d      	mov	r5, r1
 8001f44:	4b0e      	ldr	r3, [pc, #56]	; (8001f80 <hlw8012_expected_Activepower+0x7c>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	4618      	mov	r0, r3
 8001f4a:	f7fe fa7d 	bl	8000448 <__aeabi_f2d>
 8001f4e:	4602      	mov	r2, r0
 8001f50:	460b      	mov	r3, r1
 8001f52:	4620      	mov	r0, r4
 8001f54:	4629      	mov	r1, r5
 8001f56:	f7fe fbf9 	bl	800074c <__aeabi_ddiv>
 8001f5a:	4602      	mov	r2, r0
 8001f5c:	460b      	mov	r3, r1
 8001f5e:	4610      	mov	r0, r2
 8001f60:	4619      	mov	r1, r3
 8001f62:	4b08      	ldr	r3, [pc, #32]	; (8001f84 <hlw8012_expected_Activepower+0x80>)
 8001f64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f68:	f7fe fac6 	bl	80004f8 <__aeabi_dmul>
 8001f6c:	4602      	mov	r2, r0
 8001f6e:	460b      	mov	r3, r1
 8001f70:	4904      	ldr	r1, [pc, #16]	; (8001f84 <hlw8012_expected_Activepower+0x80>)
 8001f72:	e9c1 2300 	strd	r2, r3, [r1]
}
 8001f76:	bf00      	nop
 8001f78:	3708      	adds	r7, #8
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bdb0      	pop	{r4, r5, r7, pc}
 8001f7e:	bf00      	nop
 8001f80:	20000230 	.word	0x20000230
 8001f84:	20000258 	.word	0x20000258

08001f88 <hlw8012_calculate_default_multiplier>:
void hlw8012_calculate_default_multiplier()
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	af00      	add	r7, sp, #0
	 _current_multiplier = ( 1000000.0 * 512 * V_REF / _current_resistor / 24.0 / F_OSC );
 8001f8c:	4b3a      	ldr	r3, [pc, #232]	; (8002078 <hlw8012_calculate_default_multiplier+0xf0>)
 8001f8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f92:	a133      	add	r1, pc, #204	; (adr r1, 8002060 <hlw8012_calculate_default_multiplier+0xd8>)
 8001f94:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001f98:	f7fe fbd8 	bl	800074c <__aeabi_ddiv>
 8001f9c:	4602      	mov	r2, r0
 8001f9e:	460b      	mov	r3, r1
 8001fa0:	4610      	mov	r0, r2
 8001fa2:	4619      	mov	r1, r3
 8001fa4:	f04f 0200 	mov.w	r2, #0
 8001fa8:	4b34      	ldr	r3, [pc, #208]	; (800207c <hlw8012_calculate_default_multiplier+0xf4>)
 8001faa:	f7fe fbcf 	bl	800074c <__aeabi_ddiv>
 8001fae:	4602      	mov	r2, r0
 8001fb0:	460b      	mov	r3, r1
 8001fb2:	4610      	mov	r0, r2
 8001fb4:	4619      	mov	r1, r3
 8001fb6:	a32c      	add	r3, pc, #176	; (adr r3, 8002068 <hlw8012_calculate_default_multiplier+0xe0>)
 8001fb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fbc:	f7fe fbc6 	bl	800074c <__aeabi_ddiv>
 8001fc0:	4602      	mov	r2, r0
 8001fc2:	460b      	mov	r3, r1
 8001fc4:	492e      	ldr	r1, [pc, #184]	; (8002080 <hlw8012_calculate_default_multiplier+0xf8>)
 8001fc6:	e9c1 2300 	strd	r2, r3, [r1]
	 _voltage_multiplier = ( 1000000.0 * 512 * V_REF * _voltage_resistor / 2.0 / F_OSC );
 8001fca:	4b2e      	ldr	r3, [pc, #184]	; (8002084 <hlw8012_calculate_default_multiplier+0xfc>)
 8001fcc:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001fd0:	a323      	add	r3, pc, #140	; (adr r3, 8002060 <hlw8012_calculate_default_multiplier+0xd8>)
 8001fd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fd6:	f7fe fa8f 	bl	80004f8 <__aeabi_dmul>
 8001fda:	4602      	mov	r2, r0
 8001fdc:	460b      	mov	r3, r1
 8001fde:	4610      	mov	r0, r2
 8001fe0:	4619      	mov	r1, r3
 8001fe2:	f04f 0200 	mov.w	r2, #0
 8001fe6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fea:	f7fe fbaf 	bl	800074c <__aeabi_ddiv>
 8001fee:	4602      	mov	r2, r0
 8001ff0:	460b      	mov	r3, r1
 8001ff2:	4610      	mov	r0, r2
 8001ff4:	4619      	mov	r1, r3
 8001ff6:	a31c      	add	r3, pc, #112	; (adr r3, 8002068 <hlw8012_calculate_default_multiplier+0xe0>)
 8001ff8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ffc:	f7fe fba6 	bl	800074c <__aeabi_ddiv>
 8002000:	4602      	mov	r2, r0
 8002002:	460b      	mov	r3, r1
 8002004:	4920      	ldr	r1, [pc, #128]	; (8002088 <hlw8012_calculate_default_multiplier+0x100>)
 8002006:	e9c1 2300 	strd	r2, r3, [r1]
	 _power_multiplier = ( 1000000.0 * 128 * V_REF * V_REF * _voltage_resistor / _current_resistor / 48.0 / F_OSC );
 800200a:	4b1e      	ldr	r3, [pc, #120]	; (8002084 <hlw8012_calculate_default_multiplier+0xfc>)
 800200c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002010:	a317      	add	r3, pc, #92	; (adr r3, 8002070 <hlw8012_calculate_default_multiplier+0xe8>)
 8002012:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002016:	f7fe fa6f 	bl	80004f8 <__aeabi_dmul>
 800201a:	4602      	mov	r2, r0
 800201c:	460b      	mov	r3, r1
 800201e:	4610      	mov	r0, r2
 8002020:	4619      	mov	r1, r3
 8002022:	4b15      	ldr	r3, [pc, #84]	; (8002078 <hlw8012_calculate_default_multiplier+0xf0>)
 8002024:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002028:	f7fe fb90 	bl	800074c <__aeabi_ddiv>
 800202c:	4602      	mov	r2, r0
 800202e:	460b      	mov	r3, r1
 8002030:	4610      	mov	r0, r2
 8002032:	4619      	mov	r1, r3
 8002034:	f04f 0200 	mov.w	r2, #0
 8002038:	4b14      	ldr	r3, [pc, #80]	; (800208c <hlw8012_calculate_default_multiplier+0x104>)
 800203a:	f7fe fb87 	bl	800074c <__aeabi_ddiv>
 800203e:	4602      	mov	r2, r0
 8002040:	460b      	mov	r3, r1
 8002042:	4610      	mov	r0, r2
 8002044:	4619      	mov	r1, r3
 8002046:	a308      	add	r3, pc, #32	; (adr r3, 8002068 <hlw8012_calculate_default_multiplier+0xe0>)
 8002048:	e9d3 2300 	ldrd	r2, r3, [r3]
 800204c:	f7fe fb7e 	bl	800074c <__aeabi_ddiv>
 8002050:	4602      	mov	r2, r0
 8002052:	460b      	mov	r3, r1
 8002054:	490e      	ldr	r1, [pc, #56]	; (8002090 <hlw8012_calculate_default_multiplier+0x108>)
 8002056:	e9c1 2300 	strd	r2, r3, [r1]
}
 800205a:	bf00      	nop
 800205c:	bd80      	pop	{r7, pc}
 800205e:	bf00      	nop
 8002060:	00000000 	.word	0x00000000
 8002064:	41d28a18 	.word	0x41d28a18
 8002068:	00000000 	.word	0x00000000
 800206c:	414b4e3c 	.word	0x414b4e3c
 8002070:	00000000 	.word	0x00000000
 8002074:	41c68681 	.word	0x41c68681
 8002078:	20000000 	.word	0x20000000
 800207c:	40380000 	.word	0x40380000
 8002080:	20000250 	.word	0x20000250
 8002084:	20000008 	.word	0x20000008
 8002088:	20000260 	.word	0x20000260
 800208c:	40480000 	.word	0x40480000
 8002090:	20000258 	.word	0x20000258

08002094 <hlw8012_setResistors>:

void hlw8012_setResistors( double current, double voltage_upstream, double voltage_downstream)
{
 8002094:	b580      	push	{r7, lr}
 8002096:	b084      	sub	sp, #16
 8002098:	af00      	add	r7, sp, #0
 800209a:	e9c7 0102 	strd	r0, r1, [r7, #8]
 800209e:	e9c7 2300 	strd	r2, r3, [r7]
	if (voltage_downstream > 0) {
 80020a2:	f04f 0200 	mov.w	r2, #0
 80020a6:	f04f 0300 	mov.w	r3, #0
 80020aa:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80020ae:	f7fe fcb3 	bl	8000a18 <__aeabi_dcmpgt>
 80020b2:	4603      	mov	r3, r0
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d100      	bne.n	80020ba <hlw8012_setResistors+0x26>
	        _current_resistor = current;
	        _voltage_resistor = (voltage_upstream + voltage_downstream) / voltage_downstream;
	        hlw8012_calculate_default_multiplier();
	    }
}
 80020b8:	e019      	b.n	80020ee <hlw8012_setResistors+0x5a>
	        _current_resistor = current;
 80020ba:	490f      	ldr	r1, [pc, #60]	; (80020f8 <hlw8012_setResistors+0x64>)
 80020bc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80020c0:	e9c1 2300 	strd	r2, r3, [r1]
	        _voltage_resistor = (voltage_upstream + voltage_downstream) / voltage_downstream;
 80020c4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80020c8:	e9d7 0100 	ldrd	r0, r1, [r7]
 80020cc:	f7fe f85e 	bl	800018c <__adddf3>
 80020d0:	4602      	mov	r2, r0
 80020d2:	460b      	mov	r3, r1
 80020d4:	4610      	mov	r0, r2
 80020d6:	4619      	mov	r1, r3
 80020d8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80020dc:	f7fe fb36 	bl	800074c <__aeabi_ddiv>
 80020e0:	4602      	mov	r2, r0
 80020e2:	460b      	mov	r3, r1
 80020e4:	4905      	ldr	r1, [pc, #20]	; (80020fc <hlw8012_setResistors+0x68>)
 80020e6:	e9c1 2300 	strd	r2, r3, [r1]
	        hlw8012_calculate_default_multiplier();
 80020ea:	f7ff ff4d 	bl	8001f88 <hlw8012_calculate_default_multiplier>
}
 80020ee:	bf00      	nop
 80020f0:	3710      	adds	r7, #16
 80020f2:	46bd      	mov	sp, r7
 80020f4:	bd80      	pop	{r7, pc}
 80020f6:	bf00      	nop
 80020f8:	20000000 	.word	0x20000000
 80020fc:	20000008 	.word	0x20000008

08002100 <hlw8012_calibrate>:
void hlw8012_calibrate()
{
 8002100:	b580      	push	{r7, lr}
 8002102:	af00      	add	r7, sp, #0

	hlw8012_getactivepower();
 8002104:	f7ff fe44 	bl	8001d90 <hlw8012_getactivepower>

	hlw8012_sel_high_current();
 8002108:	f7ff fcf0 	bl	8001aec <hlw8012_sel_high_current>
	gb_unblockingDelay(2000);
 800210c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8002110:	f7ff fd54 	bl	8001bbc <gb_unblockingDelay>
	hlw8012_getcurrent();
 8002114:	f7ff fd6a 	bl	8001bec <hlw8012_getcurrent>

	hlw8012_sel_low_volatge();
 8002118:	f7ff fcf6 	bl	8001b08 <hlw8012_sel_low_volatge>
	gb_unblockingDelay(2000);
 800211c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8002120:	f7ff fd4c 	bl	8001bbc <gb_unblockingDelay>
	hlw8012_getvoltage();
 8002124:	f7ff fdbc 	bl	8001ca0 <hlw8012_getvoltage>

	hlw8012_expected_Activepower(165.0);
 8002128:	20a5      	movs	r0, #165	; 0xa5
 800212a:	f7ff feeb 	bl	8001f04 <hlw8012_expected_Activepower>
	hlw8012_expected_Activevoltage(226.0);
 800212e:	f04f 0000 	mov.w	r0, #0
 8002132:	491d      	ldr	r1, [pc, #116]	; (80021a8 <hlw8012_calibrate+0xa8>)
 8002134:	f7ff fea8 	bl	8001e88 <hlw8012_expected_Activevoltage>
	hlw8012_expected_ActiveCurrent(0.730);
 8002138:	a119      	add	r1, pc, #100	; (adr r1, 80021a0 <hlw8012_calibrate+0xa0>)
 800213a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800213e:	f7ff fe65 	bl	8001e0c <hlw8012_expected_ActiveCurrent>

	GB_printString1(" New Current Multiplier");
 8002142:	481a      	ldr	r0, [pc, #104]	; (80021ac <hlw8012_calibrate+0xac>)
 8002144:	f7ff f960 	bl	8001408 <GB_printString1>
	GB_decimel1(hlw8012_getcurrent_multiplier());
 8002148:	f7ff fcac 	bl	8001aa4 <hlw8012_getcurrent_multiplier>
 800214c:	4602      	mov	r2, r0
 800214e:	460b      	mov	r3, r1
 8002150:	4610      	mov	r0, r2
 8002152:	4619      	mov	r1, r3
 8002154:	f7fe fca8 	bl	8000aa8 <__aeabi_d2uiz>
 8002158:	4603      	mov	r3, r0
 800215a:	4618      	mov	r0, r3
 800215c:	f7ff f972 	bl	8001444 <GB_decimel1>

	GB_printString1(" New Voltage Multiplier");
 8002160:	4813      	ldr	r0, [pc, #76]	; (80021b0 <hlw8012_calibrate+0xb0>)
 8002162:	f7ff f951 	bl	8001408 <GB_printString1>
	GB_decimel1(hlw8012_getvoltage_multiplier());
 8002166:	f7ff fca9 	bl	8001abc <hlw8012_getvoltage_multiplier>
 800216a:	4602      	mov	r2, r0
 800216c:	460b      	mov	r3, r1
 800216e:	4610      	mov	r0, r2
 8002170:	4619      	mov	r1, r3
 8002172:	f7fe fc99 	bl	8000aa8 <__aeabi_d2uiz>
 8002176:	4603      	mov	r3, r0
 8002178:	4618      	mov	r0, r3
 800217a:	f7ff f963 	bl	8001444 <GB_decimel1>

	GB_printString1(" New Power Multiplier");
 800217e:	480d      	ldr	r0, [pc, #52]	; (80021b4 <hlw8012_calibrate+0xb4>)
 8002180:	f7ff f942 	bl	8001408 <GB_printString1>
	GB_decimel1(hlw8012_getpower_multiplier());
 8002184:	f7ff fca6 	bl	8001ad4 <hlw8012_getpower_multiplier>
 8002188:	4602      	mov	r2, r0
 800218a:	460b      	mov	r3, r1
 800218c:	4610      	mov	r0, r2
 800218e:	4619      	mov	r1, r3
 8002190:	f7fe fc8a 	bl	8000aa8 <__aeabi_d2uiz>
 8002194:	4603      	mov	r3, r0
 8002196:	4618      	mov	r0, r3
 8002198:	f7ff f954 	bl	8001444 <GB_decimel1>

}
 800219c:	bf00      	nop
 800219e:	bd80      	pop	{r7, pc}
 80021a0:	f5c28f5c 	.word	0xf5c28f5c
 80021a4:	3fe75c28 	.word	0x3fe75c28
 80021a8:	406c4000 	.word	0x406c4000
 80021ac:	08006e54 	.word	0x08006e54
 80021b0:	08006e6c 	.word	0x08006e6c
 80021b4:	08006e84 	.word	0x08006e84

080021b8 <__NVIC_EnableIRQ>:
{
 80021b8:	b480      	push	{r7}
 80021ba:	b083      	sub	sp, #12
 80021bc:	af00      	add	r7, sp, #0
 80021be:	4603      	mov	r3, r0
 80021c0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80021c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021c6:	2b00      	cmp	r3, #0
 80021c8:	db0b      	blt.n	80021e2 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80021ca:	79fb      	ldrb	r3, [r7, #7]
 80021cc:	f003 021f 	and.w	r2, r3, #31
 80021d0:	4906      	ldr	r1, [pc, #24]	; (80021ec <__NVIC_EnableIRQ+0x34>)
 80021d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021d6:	095b      	lsrs	r3, r3, #5
 80021d8:	2001      	movs	r0, #1
 80021da:	fa00 f202 	lsl.w	r2, r0, r2
 80021de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80021e2:	bf00      	nop
 80021e4:	370c      	adds	r7, #12
 80021e6:	46bd      	mov	sp, r7
 80021e8:	bc80      	pop	{r7}
 80021ea:	4770      	bx	lr
 80021ec:	e000e100 	.word	0xe000e100

080021f0 <__NVIC_SetPriority>:
{
 80021f0:	b480      	push	{r7}
 80021f2:	b083      	sub	sp, #12
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	4603      	mov	r3, r0
 80021f8:	6039      	str	r1, [r7, #0]
 80021fa:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80021fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002200:	2b00      	cmp	r3, #0
 8002202:	db0a      	blt.n	800221a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002204:	683b      	ldr	r3, [r7, #0]
 8002206:	b2da      	uxtb	r2, r3
 8002208:	490c      	ldr	r1, [pc, #48]	; (800223c <__NVIC_SetPriority+0x4c>)
 800220a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800220e:	0112      	lsls	r2, r2, #4
 8002210:	b2d2      	uxtb	r2, r2
 8002212:	440b      	add	r3, r1
 8002214:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8002218:	e00a      	b.n	8002230 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800221a:	683b      	ldr	r3, [r7, #0]
 800221c:	b2da      	uxtb	r2, r3
 800221e:	4908      	ldr	r1, [pc, #32]	; (8002240 <__NVIC_SetPriority+0x50>)
 8002220:	79fb      	ldrb	r3, [r7, #7]
 8002222:	f003 030f 	and.w	r3, r3, #15
 8002226:	3b04      	subs	r3, #4
 8002228:	0112      	lsls	r2, r2, #4
 800222a:	b2d2      	uxtb	r2, r2
 800222c:	440b      	add	r3, r1
 800222e:	761a      	strb	r2, [r3, #24]
}
 8002230:	bf00      	nop
 8002232:	370c      	adds	r7, #12
 8002234:	46bd      	mov	sp, r7
 8002236:	bc80      	pop	{r7}
 8002238:	4770      	bx	lr
 800223a:	bf00      	nop
 800223c:	e000e100 	.word	0xe000e100
 8002240:	e000ed00 	.word	0xe000ed00

08002244 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8002244:	b480      	push	{r7}
 8002246:	b083      	sub	sp, #12
 8002248:	af00      	add	r7, sp, #0
 800224a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800224c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002250:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8002254:	f003 0301 	and.w	r3, r3, #1
 8002258:	2b00      	cmp	r3, #0
 800225a:	d013      	beq.n	8002284 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 800225c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002260:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8002264:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8002268:	2b00      	cmp	r3, #0
 800226a:	d00b      	beq.n	8002284 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 800226c:	e000      	b.n	8002270 <ITM_SendChar+0x2c>
    {
      __NOP();
 800226e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8002270:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	2b00      	cmp	r3, #0
 8002278:	d0f9      	beq.n	800226e <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800227a:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800227e:	687a      	ldr	r2, [r7, #4]
 8002280:	b2d2      	uxtb	r2, r2
 8002282:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8002284:	687b      	ldr	r3, [r7, #4]
}
 8002286:	4618      	mov	r0, r3
 8002288:	370c      	adds	r7, #12
 800228a:	46bd      	mov	sp, r7
 800228c:	bc80      	pop	{r7}
 800228e:	4770      	bx	lr

08002290 <_write>:
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )


int _write(int file, char *ptr, int len)
{
 8002290:	b580      	push	{r7, lr}
 8002292:	b086      	sub	sp, #24
 8002294:	af00      	add	r7, sp, #0
 8002296:	60f8      	str	r0, [r7, #12]
 8002298:	60b9      	str	r1, [r7, #8]
 800229a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800229c:	2300      	movs	r3, #0
 800229e:	617b      	str	r3, [r7, #20]
 80022a0:	e009      	b.n	80022b6 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		 ITM_SendChar(*ptr++);
 80022a2:	68bb      	ldr	r3, [r7, #8]
 80022a4:	1c5a      	adds	r2, r3, #1
 80022a6:	60ba      	str	r2, [r7, #8]
 80022a8:	781b      	ldrb	r3, [r3, #0]
 80022aa:	4618      	mov	r0, r3
 80022ac:	f7ff ffca 	bl	8002244 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022b0:	697b      	ldr	r3, [r7, #20]
 80022b2:	3301      	adds	r3, #1
 80022b4:	617b      	str	r3, [r7, #20]
 80022b6:	697a      	ldr	r2, [r7, #20]
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	429a      	cmp	r2, r3
 80022bc:	dbf1      	blt.n	80022a2 <_write+0x12>
	}
	return len;
 80022be:	687b      	ldr	r3, [r7, #4]
}
 80022c0:	4618      	mov	r0, r3
 80022c2:	3718      	adds	r7, #24
 80022c4:	46bd      	mov	sp, r7
 80022c6:	bd80      	pop	{r7, pc}

080022c8 <main>:
#define VOLTAGE_RESISTOR_UPSTREAM       ( 5 * 470000 ) // Real: 2280k
#define VOLTAGE_RESISTOR_DOWNSTREAM     ( 1000 ) // Real 1.009k


int main(void)
{
 80022c8:	b580      	push	{r7, lr}
 80022ca:	b082      	sub	sp, #8
 80022cc:	af02      	add	r7, sp, #8
	  RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 80022ce:	4b48      	ldr	r3, [pc, #288]	; (80023f0 <main+0x128>)
 80022d0:	699b      	ldr	r3, [r3, #24]
 80022d2:	4a47      	ldr	r2, [pc, #284]	; (80023f0 <main+0x128>)
 80022d4:	f043 0301 	orr.w	r3, r3, #1
 80022d8:	6193      	str	r3, [r2, #24]
		AFIO->MAPR |= AFIO_MAPR_SWJ_CFG_JTAGDISABLE;
 80022da:	4b46      	ldr	r3, [pc, #280]	; (80023f4 <main+0x12c>)
 80022dc:	685b      	ldr	r3, [r3, #4]
 80022de:	4a45      	ldr	r2, [pc, #276]	; (80023f4 <main+0x12c>)
 80022e0:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80022e4:	6053      	str	r3, [r2, #4]
	    systick_millis(32000);
 80022e6:	f44f 40fa 	mov.w	r0, #32000	; 0x7d00
 80022ea:	f7ff f801 	bl	80012f0 <systick_millis>
	    system_clk();
 80022ee:	f7ff f947 	bl	8001580 <system_clk>
		timer_initialise();
 80022f2:	f7ff f997 	bl	8001624 <timer_initialise>
		GB_uart_init1();  //terminal
 80022f6:	f7ff f84b 	bl	8001390 <GB_uart_init1>
		GB_printString1("Timer input capture\n");
 80022fa:	483f      	ldr	r0, [pc, #252]	; (80023f8 <main+0x130>)
 80022fc:	f7ff f884 	bl	8001408 <GB_printString1>
		gb_t4_input_capture();
 8002300:	f7ff fa7c 	bl	80017fc <gb_t4_input_capture>

		__NVIC_SetPriority (TIM4_IRQn, 1);
 8002304:	2101      	movs	r1, #1
 8002306:	201e      	movs	r0, #30
 8002308:	f7ff ff72 	bl	80021f0 <__NVIC_SetPriority>
		__NVIC_EnableIRQ(TIM4_IRQn);
 800230c:	201e      	movs	r0, #30
 800230e:	f7ff ff53 	bl	80021b8 <__NVIC_EnableIRQ>

		hlw8012_config();
 8002312:	f7ff fc4d 	bl	8001bb0 <hlw8012_config>

		 //Configures GPIO PIN PB8 as general purpose output
		 RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8002316:	4b36      	ldr	r3, [pc, #216]	; (80023f0 <main+0x128>)
 8002318:	699b      	ldr	r3, [r3, #24]
 800231a:	4a35      	ldr	r2, [pc, #212]	; (80023f0 <main+0x128>)
 800231c:	f043 0308 	orr.w	r3, r3, #8
 8002320:	6193      	str	r3, [r2, #24]
			 GPIOB->CRH |= (GPIO_CRH_MODE12_0 | GPIO_CRH_MODE12_1);
 8002322:	4b36      	ldr	r3, [pc, #216]	; (80023fc <main+0x134>)
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	4a35      	ldr	r2, [pc, #212]	; (80023fc <main+0x134>)
 8002328:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800232c:	6053      	str	r3, [r2, #4]
			 GPIOB->CRH &= ~(GPIO_CRH_CNF12_0 | GPIO_CRH_CNF12_1);
 800232e:	4b33      	ldr	r3, [pc, #204]	; (80023fc <main+0x134>)
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	4a32      	ldr	r2, [pc, #200]	; (80023fc <main+0x134>)
 8002334:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8002338:	6053      	str	r3, [r2, #4]

		hlw8012_setResistors(CURRENT_RESISTOR, VOLTAGE_RESISTOR_UPSTREAM, VOLTAGE_RESISTOR_DOWNSTREAM);
 800233a:	f04f 0200 	mov.w	r2, #0
 800233e:	4b30      	ldr	r3, [pc, #192]	; (8002400 <main+0x138>)
 8002340:	e9cd 2300 	strd	r2, r3, [sp]
 8002344:	a326      	add	r3, pc, #152	; (adr r3, 80023e0 <main+0x118>)
 8002346:	e9d3 2300 	ldrd	r2, r3, [r3]
 800234a:	a127      	add	r1, pc, #156	; (adr r1, 80023e8 <main+0x120>)
 800234c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002350:	f7ff fea0 	bl	8002094 <hlw8012_setResistors>

		GB_printString1(" Default Current Multiplier");
 8002354:	482b      	ldr	r0, [pc, #172]	; (8002404 <main+0x13c>)
 8002356:	f7ff f857 	bl	8001408 <GB_printString1>
		GB_decimel1(hlw8012_getcurrent_multiplier());
 800235a:	f7ff fba3 	bl	8001aa4 <hlw8012_getcurrent_multiplier>
 800235e:	4602      	mov	r2, r0
 8002360:	460b      	mov	r3, r1
 8002362:	4610      	mov	r0, r2
 8002364:	4619      	mov	r1, r3
 8002366:	f7fe fb9f 	bl	8000aa8 <__aeabi_d2uiz>
 800236a:	4603      	mov	r3, r0
 800236c:	4618      	mov	r0, r3
 800236e:	f7ff f869 	bl	8001444 <GB_decimel1>

		GB_printString1(" Default Voltage Multiplier");
 8002372:	4825      	ldr	r0, [pc, #148]	; (8002408 <main+0x140>)
 8002374:	f7ff f848 	bl	8001408 <GB_printString1>
		GB_decimel1(hlw8012_getvoltage_multiplier());
 8002378:	f7ff fba0 	bl	8001abc <hlw8012_getvoltage_multiplier>
 800237c:	4602      	mov	r2, r0
 800237e:	460b      	mov	r3, r1
 8002380:	4610      	mov	r0, r2
 8002382:	4619      	mov	r1, r3
 8002384:	f7fe fb90 	bl	8000aa8 <__aeabi_d2uiz>
 8002388:	4603      	mov	r3, r0
 800238a:	4618      	mov	r0, r3
 800238c:	f7ff f85a 	bl	8001444 <GB_decimel1>

		GB_printString1(" Default Power Multiplier");
 8002390:	481e      	ldr	r0, [pc, #120]	; (800240c <main+0x144>)
 8002392:	f7ff f839 	bl	8001408 <GB_printString1>
		GB_decimel1(hlw8012_getpower_multiplier());
 8002396:	f7ff fb9d 	bl	8001ad4 <hlw8012_getpower_multiplier>
 800239a:	4602      	mov	r2, r0
 800239c:	460b      	mov	r3, r1
 800239e:	4610      	mov	r0, r2
 80023a0:	4619      	mov	r1, r3
 80023a2:	f7fe fb81 	bl	8000aa8 <__aeabi_d2uiz>
 80023a6:	4603      	mov	r3, r0
 80023a8:	4618      	mov	r0, r3
 80023aa:	f7ff f84b 	bl	8001444 <GB_decimel1>

		hlw8012_calibrate();
 80023ae:	f7ff fea7 	bl	8002100 <hlw8012_calibrate>
//	  if ((GB_millis() - last) > UPDATE_TIME) {
//       last = GB_millis();
//
//
//
			        GB_printString1("Current in AMPS: ");
 80023b2:	4817      	ldr	r0, [pc, #92]	; (8002410 <main+0x148>)
 80023b4:	f7ff f828 	bl	8001408 <GB_printString1>
			        GB_float_value1(hlw8012_getcurrent());
 80023b8:	f7ff fc18 	bl	8001bec <hlw8012_getcurrent>
 80023bc:	4603      	mov	r3, r0
 80023be:	4618      	mov	r0, r3
 80023c0:	f7ff f8a2 	bl	8001508 <GB_float_value1>
			        GB_uart_newline1();
 80023c4:	f7ff f898 	bl	80014f8 <GB_uart_newline1>

			        GB_printString1("Voltage in Volts: ");
 80023c8:	4812      	ldr	r0, [pc, #72]	; (8002414 <main+0x14c>)
 80023ca:	f7ff f81d 	bl	8001408 <GB_printString1>
			       	GB_float_value1(hlw8012_getvoltage());
 80023ce:	f7ff fc67 	bl	8001ca0 <hlw8012_getvoltage>
 80023d2:	4603      	mov	r3, r0
 80023d4:	4618      	mov	r0, r3
 80023d6:	f7ff f897 	bl	8001508 <GB_float_value1>
			       	GB_uart_newline1();
 80023da:	f7ff f88d 	bl	80014f8 <GB_uart_newline1>
			        GB_printString1("Current in AMPS: ");
 80023de:	e7e8      	b.n	80023b2 <main+0xea>
 80023e0:	00000000 	.word	0x00000000
 80023e4:	4141edd8 	.word	0x4141edd8
 80023e8:	d2f1a9fc 	.word	0xd2f1a9fc
 80023ec:	3f50624d 	.word	0x3f50624d
 80023f0:	40021000 	.word	0x40021000
 80023f4:	40010000 	.word	0x40010000
 80023f8:	08006e9c 	.word	0x08006e9c
 80023fc:	40010c00 	.word	0x40010c00
 8002400:	408f4000 	.word	0x408f4000
 8002404:	08006eb4 	.word	0x08006eb4
 8002408:	08006ed0 	.word	0x08006ed0
 800240c:	08006eec 	.word	0x08006eec
 8002410:	08006f08 	.word	0x08006f08
 8002414:	08006f1c 	.word	0x08006f1c

08002418 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002418:	b480      	push	{r7}
 800241a:	af00      	add	r7, sp, #0
	return 1;
 800241c:	2301      	movs	r3, #1
}
 800241e:	4618      	mov	r0, r3
 8002420:	46bd      	mov	sp, r7
 8002422:	bc80      	pop	{r7}
 8002424:	4770      	bx	lr

08002426 <_kill>:

int _kill(int pid, int sig)
{
 8002426:	b580      	push	{r7, lr}
 8002428:	b082      	sub	sp, #8
 800242a:	af00      	add	r7, sp, #0
 800242c:	6078      	str	r0, [r7, #4]
 800242e:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002430:	f000 f8c6 	bl	80025c0 <__errno>
 8002434:	4603      	mov	r3, r0
 8002436:	2216      	movs	r2, #22
 8002438:	601a      	str	r2, [r3, #0]
	return -1;
 800243a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800243e:	4618      	mov	r0, r3
 8002440:	3708      	adds	r7, #8
 8002442:	46bd      	mov	sp, r7
 8002444:	bd80      	pop	{r7, pc}

08002446 <_exit>:

void _exit (int status)
{
 8002446:	b580      	push	{r7, lr}
 8002448:	b082      	sub	sp, #8
 800244a:	af00      	add	r7, sp, #0
 800244c:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800244e:	f04f 31ff 	mov.w	r1, #4294967295
 8002452:	6878      	ldr	r0, [r7, #4]
 8002454:	f7ff ffe7 	bl	8002426 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002458:	e7fe      	b.n	8002458 <_exit+0x12>

0800245a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800245a:	b580      	push	{r7, lr}
 800245c:	b086      	sub	sp, #24
 800245e:	af00      	add	r7, sp, #0
 8002460:	60f8      	str	r0, [r7, #12]
 8002462:	60b9      	str	r1, [r7, #8]
 8002464:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002466:	2300      	movs	r3, #0
 8002468:	617b      	str	r3, [r7, #20]
 800246a:	e00a      	b.n	8002482 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800246c:	f3af 8000 	nop.w
 8002470:	4601      	mov	r1, r0
 8002472:	68bb      	ldr	r3, [r7, #8]
 8002474:	1c5a      	adds	r2, r3, #1
 8002476:	60ba      	str	r2, [r7, #8]
 8002478:	b2ca      	uxtb	r2, r1
 800247a:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800247c:	697b      	ldr	r3, [r7, #20]
 800247e:	3301      	adds	r3, #1
 8002480:	617b      	str	r3, [r7, #20]
 8002482:	697a      	ldr	r2, [r7, #20]
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	429a      	cmp	r2, r3
 8002488:	dbf0      	blt.n	800246c <_read+0x12>
	}

return len;
 800248a:	687b      	ldr	r3, [r7, #4]
}
 800248c:	4618      	mov	r0, r3
 800248e:	3718      	adds	r7, #24
 8002490:	46bd      	mov	sp, r7
 8002492:	bd80      	pop	{r7, pc}

08002494 <_close>:
	}
	return len;
}

int _close(int file)
{
 8002494:	b480      	push	{r7}
 8002496:	b083      	sub	sp, #12
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
	return -1;
 800249c:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024a0:	4618      	mov	r0, r3
 80024a2:	370c      	adds	r7, #12
 80024a4:	46bd      	mov	sp, r7
 80024a6:	bc80      	pop	{r7}
 80024a8:	4770      	bx	lr

080024aa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80024aa:	b480      	push	{r7}
 80024ac:	b083      	sub	sp, #12
 80024ae:	af00      	add	r7, sp, #0
 80024b0:	6078      	str	r0, [r7, #4]
 80024b2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80024b4:	683b      	ldr	r3, [r7, #0]
 80024b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80024ba:	605a      	str	r2, [r3, #4]
	return 0;
 80024bc:	2300      	movs	r3, #0
}
 80024be:	4618      	mov	r0, r3
 80024c0:	370c      	adds	r7, #12
 80024c2:	46bd      	mov	sp, r7
 80024c4:	bc80      	pop	{r7}
 80024c6:	4770      	bx	lr

080024c8 <_isatty>:

int _isatty(int file)
{
 80024c8:	b480      	push	{r7}
 80024ca:	b083      	sub	sp, #12
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
	return 1;
 80024d0:	2301      	movs	r3, #1
}
 80024d2:	4618      	mov	r0, r3
 80024d4:	370c      	adds	r7, #12
 80024d6:	46bd      	mov	sp, r7
 80024d8:	bc80      	pop	{r7}
 80024da:	4770      	bx	lr

080024dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80024dc:	b480      	push	{r7}
 80024de:	b085      	sub	sp, #20
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	60f8      	str	r0, [r7, #12]
 80024e4:	60b9      	str	r1, [r7, #8]
 80024e6:	607a      	str	r2, [r7, #4]
	return 0;
 80024e8:	2300      	movs	r3, #0
}
 80024ea:	4618      	mov	r0, r3
 80024ec:	3714      	adds	r7, #20
 80024ee:	46bd      	mov	sp, r7
 80024f0:	bc80      	pop	{r7}
 80024f2:	4770      	bx	lr

080024f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80024f4:	b580      	push	{r7, lr}
 80024f6:	b086      	sub	sp, #24
 80024f8:	af00      	add	r7, sp, #0
 80024fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80024fc:	4a14      	ldr	r2, [pc, #80]	; (8002550 <_sbrk+0x5c>)
 80024fe:	4b15      	ldr	r3, [pc, #84]	; (8002554 <_sbrk+0x60>)
 8002500:	1ad3      	subs	r3, r2, r3
 8002502:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002504:	697b      	ldr	r3, [r7, #20]
 8002506:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002508:	4b13      	ldr	r3, [pc, #76]	; (8002558 <_sbrk+0x64>)
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	2b00      	cmp	r3, #0
 800250e:	d102      	bne.n	8002516 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002510:	4b11      	ldr	r3, [pc, #68]	; (8002558 <_sbrk+0x64>)
 8002512:	4a12      	ldr	r2, [pc, #72]	; (800255c <_sbrk+0x68>)
 8002514:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002516:	4b10      	ldr	r3, [pc, #64]	; (8002558 <_sbrk+0x64>)
 8002518:	681a      	ldr	r2, [r3, #0]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	4413      	add	r3, r2
 800251e:	693a      	ldr	r2, [r7, #16]
 8002520:	429a      	cmp	r2, r3
 8002522:	d207      	bcs.n	8002534 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002524:	f000 f84c 	bl	80025c0 <__errno>
 8002528:	4603      	mov	r3, r0
 800252a:	220c      	movs	r2, #12
 800252c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800252e:	f04f 33ff 	mov.w	r3, #4294967295
 8002532:	e009      	b.n	8002548 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002534:	4b08      	ldr	r3, [pc, #32]	; (8002558 <_sbrk+0x64>)
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800253a:	4b07      	ldr	r3, [pc, #28]	; (8002558 <_sbrk+0x64>)
 800253c:	681a      	ldr	r2, [r3, #0]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	4413      	add	r3, r2
 8002542:	4a05      	ldr	r2, [pc, #20]	; (8002558 <_sbrk+0x64>)
 8002544:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002546:	68fb      	ldr	r3, [r7, #12]
}
 8002548:	4618      	mov	r0, r3
 800254a:	3718      	adds	r7, #24
 800254c:	46bd      	mov	sp, r7
 800254e:	bd80      	pop	{r7, pc}
 8002550:	20005000 	.word	0x20005000
 8002554:	00000400 	.word	0x00000400
 8002558:	20000240 	.word	0x20000240
 800255c:	20000278 	.word	0x20000278

08002560 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002560:	b480      	push	{r7}
 8002562:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002564:	bf00      	nop
 8002566:	46bd      	mov	sp, r7
 8002568:	bc80      	pop	{r7}
 800256a:	4770      	bx	lr

0800256c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800256c:	480d      	ldr	r0, [pc, #52]	; (80025a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800256e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002570:	f7ff fff6 	bl	8002560 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002574:	480c      	ldr	r0, [pc, #48]	; (80025a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8002576:	490d      	ldr	r1, [pc, #52]	; (80025ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8002578:	4a0d      	ldr	r2, [pc, #52]	; (80025b0 <LoopForever+0xe>)
  movs r3, #0
 800257a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800257c:	e002      	b.n	8002584 <LoopCopyDataInit>

0800257e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800257e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002580:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002582:	3304      	adds	r3, #4

08002584 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002584:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002586:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002588:	d3f9      	bcc.n	800257e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800258a:	4a0a      	ldr	r2, [pc, #40]	; (80025b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800258c:	4c0a      	ldr	r4, [pc, #40]	; (80025b8 <LoopForever+0x16>)
  movs r3, #0
 800258e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002590:	e001      	b.n	8002596 <LoopFillZerobss>

08002592 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002592:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002594:	3204      	adds	r2, #4

08002596 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002596:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002598:	d3fb      	bcc.n	8002592 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800259a:	f000 f817 	bl	80025cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800259e:	f7ff fe93 	bl	80022c8 <main>

080025a2 <LoopForever>:

LoopForever:
    b LoopForever
 80025a2:	e7fe      	b.n	80025a2 <LoopForever>
  ldr   r0, =_estack
 80025a4:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80025a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80025ac:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 80025b0:	080073ec 	.word	0x080073ec
  ldr r2, =_sbss
 80025b4:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 80025b8:	20000278 	.word	0x20000278

080025bc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80025bc:	e7fe      	b.n	80025bc <ADC1_2_IRQHandler>
	...

080025c0 <__errno>:
 80025c0:	4b01      	ldr	r3, [pc, #4]	; (80025c8 <__errno+0x8>)
 80025c2:	6818      	ldr	r0, [r3, #0]
 80025c4:	4770      	bx	lr
 80025c6:	bf00      	nop
 80025c8:	20000010 	.word	0x20000010

080025cc <__libc_init_array>:
 80025cc:	b570      	push	{r4, r5, r6, lr}
 80025ce:	2600      	movs	r6, #0
 80025d0:	4d0c      	ldr	r5, [pc, #48]	; (8002604 <__libc_init_array+0x38>)
 80025d2:	4c0d      	ldr	r4, [pc, #52]	; (8002608 <__libc_init_array+0x3c>)
 80025d4:	1b64      	subs	r4, r4, r5
 80025d6:	10a4      	asrs	r4, r4, #2
 80025d8:	42a6      	cmp	r6, r4
 80025da:	d109      	bne.n	80025f0 <__libc_init_array+0x24>
 80025dc:	f004 fc2a 	bl	8006e34 <_init>
 80025e0:	2600      	movs	r6, #0
 80025e2:	4d0a      	ldr	r5, [pc, #40]	; (800260c <__libc_init_array+0x40>)
 80025e4:	4c0a      	ldr	r4, [pc, #40]	; (8002610 <__libc_init_array+0x44>)
 80025e6:	1b64      	subs	r4, r4, r5
 80025e8:	10a4      	asrs	r4, r4, #2
 80025ea:	42a6      	cmp	r6, r4
 80025ec:	d105      	bne.n	80025fa <__libc_init_array+0x2e>
 80025ee:	bd70      	pop	{r4, r5, r6, pc}
 80025f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80025f4:	4798      	blx	r3
 80025f6:	3601      	adds	r6, #1
 80025f8:	e7ee      	b.n	80025d8 <__libc_init_array+0xc>
 80025fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80025fe:	4798      	blx	r3
 8002600:	3601      	adds	r6, #1
 8002602:	e7f2      	b.n	80025ea <__libc_init_array+0x1e>
 8002604:	080073e4 	.word	0x080073e4
 8002608:	080073e4 	.word	0x080073e4
 800260c:	080073e4 	.word	0x080073e4
 8002610:	080073e8 	.word	0x080073e8

08002614 <memset>:
 8002614:	4603      	mov	r3, r0
 8002616:	4402      	add	r2, r0
 8002618:	4293      	cmp	r3, r2
 800261a:	d100      	bne.n	800261e <memset+0xa>
 800261c:	4770      	bx	lr
 800261e:	f803 1b01 	strb.w	r1, [r3], #1
 8002622:	e7f9      	b.n	8002618 <memset+0x4>

08002624 <__cvt>:
 8002624:	2b00      	cmp	r3, #0
 8002626:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800262a:	461f      	mov	r7, r3
 800262c:	bfbb      	ittet	lt
 800262e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002632:	461f      	movlt	r7, r3
 8002634:	2300      	movge	r3, #0
 8002636:	232d      	movlt	r3, #45	; 0x2d
 8002638:	b088      	sub	sp, #32
 800263a:	4614      	mov	r4, r2
 800263c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800263e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8002640:	7013      	strb	r3, [r2, #0]
 8002642:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002644:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8002648:	f023 0820 	bic.w	r8, r3, #32
 800264c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8002650:	d005      	beq.n	800265e <__cvt+0x3a>
 8002652:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8002656:	d100      	bne.n	800265a <__cvt+0x36>
 8002658:	3501      	adds	r5, #1
 800265a:	2302      	movs	r3, #2
 800265c:	e000      	b.n	8002660 <__cvt+0x3c>
 800265e:	2303      	movs	r3, #3
 8002660:	aa07      	add	r2, sp, #28
 8002662:	9204      	str	r2, [sp, #16]
 8002664:	aa06      	add	r2, sp, #24
 8002666:	e9cd a202 	strd	sl, r2, [sp, #8]
 800266a:	e9cd 3500 	strd	r3, r5, [sp]
 800266e:	4622      	mov	r2, r4
 8002670:	463b      	mov	r3, r7
 8002672:	f001 fda1 	bl	80041b8 <_dtoa_r>
 8002676:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800267a:	4606      	mov	r6, r0
 800267c:	d102      	bne.n	8002684 <__cvt+0x60>
 800267e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002680:	07db      	lsls	r3, r3, #31
 8002682:	d522      	bpl.n	80026ca <__cvt+0xa6>
 8002684:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8002688:	eb06 0905 	add.w	r9, r6, r5
 800268c:	d110      	bne.n	80026b0 <__cvt+0x8c>
 800268e:	7833      	ldrb	r3, [r6, #0]
 8002690:	2b30      	cmp	r3, #48	; 0x30
 8002692:	d10a      	bne.n	80026aa <__cvt+0x86>
 8002694:	2200      	movs	r2, #0
 8002696:	2300      	movs	r3, #0
 8002698:	4620      	mov	r0, r4
 800269a:	4639      	mov	r1, r7
 800269c:	f7fe f994 	bl	80009c8 <__aeabi_dcmpeq>
 80026a0:	b918      	cbnz	r0, 80026aa <__cvt+0x86>
 80026a2:	f1c5 0501 	rsb	r5, r5, #1
 80026a6:	f8ca 5000 	str.w	r5, [sl]
 80026aa:	f8da 3000 	ldr.w	r3, [sl]
 80026ae:	4499      	add	r9, r3
 80026b0:	2200      	movs	r2, #0
 80026b2:	2300      	movs	r3, #0
 80026b4:	4620      	mov	r0, r4
 80026b6:	4639      	mov	r1, r7
 80026b8:	f7fe f986 	bl	80009c8 <__aeabi_dcmpeq>
 80026bc:	b108      	cbz	r0, 80026c2 <__cvt+0x9e>
 80026be:	f8cd 901c 	str.w	r9, [sp, #28]
 80026c2:	2230      	movs	r2, #48	; 0x30
 80026c4:	9b07      	ldr	r3, [sp, #28]
 80026c6:	454b      	cmp	r3, r9
 80026c8:	d307      	bcc.n	80026da <__cvt+0xb6>
 80026ca:	4630      	mov	r0, r6
 80026cc:	9b07      	ldr	r3, [sp, #28]
 80026ce:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80026d0:	1b9b      	subs	r3, r3, r6
 80026d2:	6013      	str	r3, [r2, #0]
 80026d4:	b008      	add	sp, #32
 80026d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80026da:	1c59      	adds	r1, r3, #1
 80026dc:	9107      	str	r1, [sp, #28]
 80026de:	701a      	strb	r2, [r3, #0]
 80026e0:	e7f0      	b.n	80026c4 <__cvt+0xa0>

080026e2 <__exponent>:
 80026e2:	4603      	mov	r3, r0
 80026e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80026e6:	2900      	cmp	r1, #0
 80026e8:	f803 2b02 	strb.w	r2, [r3], #2
 80026ec:	bfb6      	itet	lt
 80026ee:	222d      	movlt	r2, #45	; 0x2d
 80026f0:	222b      	movge	r2, #43	; 0x2b
 80026f2:	4249      	neglt	r1, r1
 80026f4:	2909      	cmp	r1, #9
 80026f6:	7042      	strb	r2, [r0, #1]
 80026f8:	dd2b      	ble.n	8002752 <__exponent+0x70>
 80026fa:	f10d 0407 	add.w	r4, sp, #7
 80026fe:	46a4      	mov	ip, r4
 8002700:	270a      	movs	r7, #10
 8002702:	fb91 f6f7 	sdiv	r6, r1, r7
 8002706:	460a      	mov	r2, r1
 8002708:	46a6      	mov	lr, r4
 800270a:	fb07 1516 	mls	r5, r7, r6, r1
 800270e:	2a63      	cmp	r2, #99	; 0x63
 8002710:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8002714:	4631      	mov	r1, r6
 8002716:	f104 34ff 	add.w	r4, r4, #4294967295
 800271a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800271e:	dcf0      	bgt.n	8002702 <__exponent+0x20>
 8002720:	3130      	adds	r1, #48	; 0x30
 8002722:	f1ae 0502 	sub.w	r5, lr, #2
 8002726:	f804 1c01 	strb.w	r1, [r4, #-1]
 800272a:	4629      	mov	r1, r5
 800272c:	1c44      	adds	r4, r0, #1
 800272e:	4561      	cmp	r1, ip
 8002730:	d30a      	bcc.n	8002748 <__exponent+0x66>
 8002732:	f10d 0209 	add.w	r2, sp, #9
 8002736:	eba2 020e 	sub.w	r2, r2, lr
 800273a:	4565      	cmp	r5, ip
 800273c:	bf88      	it	hi
 800273e:	2200      	movhi	r2, #0
 8002740:	4413      	add	r3, r2
 8002742:	1a18      	subs	r0, r3, r0
 8002744:	b003      	add	sp, #12
 8002746:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002748:	f811 2b01 	ldrb.w	r2, [r1], #1
 800274c:	f804 2f01 	strb.w	r2, [r4, #1]!
 8002750:	e7ed      	b.n	800272e <__exponent+0x4c>
 8002752:	2330      	movs	r3, #48	; 0x30
 8002754:	3130      	adds	r1, #48	; 0x30
 8002756:	7083      	strb	r3, [r0, #2]
 8002758:	70c1      	strb	r1, [r0, #3]
 800275a:	1d03      	adds	r3, r0, #4
 800275c:	e7f1      	b.n	8002742 <__exponent+0x60>
	...

08002760 <_printf_float>:
 8002760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002764:	b091      	sub	sp, #68	; 0x44
 8002766:	460c      	mov	r4, r1
 8002768:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800276c:	4616      	mov	r6, r2
 800276e:	461f      	mov	r7, r3
 8002770:	4605      	mov	r5, r0
 8002772:	f002 fe75 	bl	8005460 <_localeconv_r>
 8002776:	6803      	ldr	r3, [r0, #0]
 8002778:	4618      	mov	r0, r3
 800277a:	9309      	str	r3, [sp, #36]	; 0x24
 800277c:	f7fd fcf8 	bl	8000170 <strlen>
 8002780:	2300      	movs	r3, #0
 8002782:	930e      	str	r3, [sp, #56]	; 0x38
 8002784:	f8d8 3000 	ldr.w	r3, [r8]
 8002788:	900a      	str	r0, [sp, #40]	; 0x28
 800278a:	3307      	adds	r3, #7
 800278c:	f023 0307 	bic.w	r3, r3, #7
 8002790:	f103 0208 	add.w	r2, r3, #8
 8002794:	f894 9018 	ldrb.w	r9, [r4, #24]
 8002798:	f8d4 b000 	ldr.w	fp, [r4]
 800279c:	f8c8 2000 	str.w	r2, [r8]
 80027a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027a4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80027a8:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80027ac:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80027b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80027b2:	f04f 32ff 	mov.w	r2, #4294967295
 80027b6:	4640      	mov	r0, r8
 80027b8:	4b9c      	ldr	r3, [pc, #624]	; (8002a2c <_printf_float+0x2cc>)
 80027ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80027bc:	f7fe f936 	bl	8000a2c <__aeabi_dcmpun>
 80027c0:	bb70      	cbnz	r0, 8002820 <_printf_float+0xc0>
 80027c2:	f04f 32ff 	mov.w	r2, #4294967295
 80027c6:	4640      	mov	r0, r8
 80027c8:	4b98      	ldr	r3, [pc, #608]	; (8002a2c <_printf_float+0x2cc>)
 80027ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80027cc:	f7fe f910 	bl	80009f0 <__aeabi_dcmple>
 80027d0:	bb30      	cbnz	r0, 8002820 <_printf_float+0xc0>
 80027d2:	2200      	movs	r2, #0
 80027d4:	2300      	movs	r3, #0
 80027d6:	4640      	mov	r0, r8
 80027d8:	4651      	mov	r1, sl
 80027da:	f7fe f8ff 	bl	80009dc <__aeabi_dcmplt>
 80027de:	b110      	cbz	r0, 80027e6 <_printf_float+0x86>
 80027e0:	232d      	movs	r3, #45	; 0x2d
 80027e2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80027e6:	4b92      	ldr	r3, [pc, #584]	; (8002a30 <_printf_float+0x2d0>)
 80027e8:	4892      	ldr	r0, [pc, #584]	; (8002a34 <_printf_float+0x2d4>)
 80027ea:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80027ee:	bf94      	ite	ls
 80027f0:	4698      	movls	r8, r3
 80027f2:	4680      	movhi	r8, r0
 80027f4:	2303      	movs	r3, #3
 80027f6:	f04f 0a00 	mov.w	sl, #0
 80027fa:	6123      	str	r3, [r4, #16]
 80027fc:	f02b 0304 	bic.w	r3, fp, #4
 8002800:	6023      	str	r3, [r4, #0]
 8002802:	4633      	mov	r3, r6
 8002804:	4621      	mov	r1, r4
 8002806:	4628      	mov	r0, r5
 8002808:	9700      	str	r7, [sp, #0]
 800280a:	aa0f      	add	r2, sp, #60	; 0x3c
 800280c:	f000 f9d4 	bl	8002bb8 <_printf_common>
 8002810:	3001      	adds	r0, #1
 8002812:	f040 8090 	bne.w	8002936 <_printf_float+0x1d6>
 8002816:	f04f 30ff 	mov.w	r0, #4294967295
 800281a:	b011      	add	sp, #68	; 0x44
 800281c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002820:	4642      	mov	r2, r8
 8002822:	4653      	mov	r3, sl
 8002824:	4640      	mov	r0, r8
 8002826:	4651      	mov	r1, sl
 8002828:	f7fe f900 	bl	8000a2c <__aeabi_dcmpun>
 800282c:	b148      	cbz	r0, 8002842 <_printf_float+0xe2>
 800282e:	f1ba 0f00 	cmp.w	sl, #0
 8002832:	bfb8      	it	lt
 8002834:	232d      	movlt	r3, #45	; 0x2d
 8002836:	4880      	ldr	r0, [pc, #512]	; (8002a38 <_printf_float+0x2d8>)
 8002838:	bfb8      	it	lt
 800283a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800283e:	4b7f      	ldr	r3, [pc, #508]	; (8002a3c <_printf_float+0x2dc>)
 8002840:	e7d3      	b.n	80027ea <_printf_float+0x8a>
 8002842:	6863      	ldr	r3, [r4, #4]
 8002844:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8002848:	1c5a      	adds	r2, r3, #1
 800284a:	d142      	bne.n	80028d2 <_printf_float+0x172>
 800284c:	2306      	movs	r3, #6
 800284e:	6063      	str	r3, [r4, #4]
 8002850:	2200      	movs	r2, #0
 8002852:	9206      	str	r2, [sp, #24]
 8002854:	aa0e      	add	r2, sp, #56	; 0x38
 8002856:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800285a:	aa0d      	add	r2, sp, #52	; 0x34
 800285c:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8002860:	9203      	str	r2, [sp, #12]
 8002862:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8002866:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800286a:	6023      	str	r3, [r4, #0]
 800286c:	6863      	ldr	r3, [r4, #4]
 800286e:	4642      	mov	r2, r8
 8002870:	9300      	str	r3, [sp, #0]
 8002872:	4628      	mov	r0, r5
 8002874:	4653      	mov	r3, sl
 8002876:	910b      	str	r1, [sp, #44]	; 0x2c
 8002878:	f7ff fed4 	bl	8002624 <__cvt>
 800287c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800287e:	4680      	mov	r8, r0
 8002880:	2947      	cmp	r1, #71	; 0x47
 8002882:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002884:	d108      	bne.n	8002898 <_printf_float+0x138>
 8002886:	1cc8      	adds	r0, r1, #3
 8002888:	db02      	blt.n	8002890 <_printf_float+0x130>
 800288a:	6863      	ldr	r3, [r4, #4]
 800288c:	4299      	cmp	r1, r3
 800288e:	dd40      	ble.n	8002912 <_printf_float+0x1b2>
 8002890:	f1a9 0902 	sub.w	r9, r9, #2
 8002894:	fa5f f989 	uxtb.w	r9, r9
 8002898:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800289c:	d81f      	bhi.n	80028de <_printf_float+0x17e>
 800289e:	464a      	mov	r2, r9
 80028a0:	3901      	subs	r1, #1
 80028a2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80028a6:	910d      	str	r1, [sp, #52]	; 0x34
 80028a8:	f7ff ff1b 	bl	80026e2 <__exponent>
 80028ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80028ae:	4682      	mov	sl, r0
 80028b0:	1813      	adds	r3, r2, r0
 80028b2:	2a01      	cmp	r2, #1
 80028b4:	6123      	str	r3, [r4, #16]
 80028b6:	dc02      	bgt.n	80028be <_printf_float+0x15e>
 80028b8:	6822      	ldr	r2, [r4, #0]
 80028ba:	07d2      	lsls	r2, r2, #31
 80028bc:	d501      	bpl.n	80028c2 <_printf_float+0x162>
 80028be:	3301      	adds	r3, #1
 80028c0:	6123      	str	r3, [r4, #16]
 80028c2:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	d09b      	beq.n	8002802 <_printf_float+0xa2>
 80028ca:	232d      	movs	r3, #45	; 0x2d
 80028cc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028d0:	e797      	b.n	8002802 <_printf_float+0xa2>
 80028d2:	2947      	cmp	r1, #71	; 0x47
 80028d4:	d1bc      	bne.n	8002850 <_printf_float+0xf0>
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	d1ba      	bne.n	8002850 <_printf_float+0xf0>
 80028da:	2301      	movs	r3, #1
 80028dc:	e7b7      	b.n	800284e <_printf_float+0xee>
 80028de:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80028e2:	d118      	bne.n	8002916 <_printf_float+0x1b6>
 80028e4:	2900      	cmp	r1, #0
 80028e6:	6863      	ldr	r3, [r4, #4]
 80028e8:	dd0b      	ble.n	8002902 <_printf_float+0x1a2>
 80028ea:	6121      	str	r1, [r4, #16]
 80028ec:	b913      	cbnz	r3, 80028f4 <_printf_float+0x194>
 80028ee:	6822      	ldr	r2, [r4, #0]
 80028f0:	07d0      	lsls	r0, r2, #31
 80028f2:	d502      	bpl.n	80028fa <_printf_float+0x19a>
 80028f4:	3301      	adds	r3, #1
 80028f6:	440b      	add	r3, r1
 80028f8:	6123      	str	r3, [r4, #16]
 80028fa:	f04f 0a00 	mov.w	sl, #0
 80028fe:	65a1      	str	r1, [r4, #88]	; 0x58
 8002900:	e7df      	b.n	80028c2 <_printf_float+0x162>
 8002902:	b913      	cbnz	r3, 800290a <_printf_float+0x1aa>
 8002904:	6822      	ldr	r2, [r4, #0]
 8002906:	07d2      	lsls	r2, r2, #31
 8002908:	d501      	bpl.n	800290e <_printf_float+0x1ae>
 800290a:	3302      	adds	r3, #2
 800290c:	e7f4      	b.n	80028f8 <_printf_float+0x198>
 800290e:	2301      	movs	r3, #1
 8002910:	e7f2      	b.n	80028f8 <_printf_float+0x198>
 8002912:	f04f 0967 	mov.w	r9, #103	; 0x67
 8002916:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002918:	4299      	cmp	r1, r3
 800291a:	db05      	blt.n	8002928 <_printf_float+0x1c8>
 800291c:	6823      	ldr	r3, [r4, #0]
 800291e:	6121      	str	r1, [r4, #16]
 8002920:	07d8      	lsls	r0, r3, #31
 8002922:	d5ea      	bpl.n	80028fa <_printf_float+0x19a>
 8002924:	1c4b      	adds	r3, r1, #1
 8002926:	e7e7      	b.n	80028f8 <_printf_float+0x198>
 8002928:	2900      	cmp	r1, #0
 800292a:	bfcc      	ite	gt
 800292c:	2201      	movgt	r2, #1
 800292e:	f1c1 0202 	rsble	r2, r1, #2
 8002932:	4413      	add	r3, r2
 8002934:	e7e0      	b.n	80028f8 <_printf_float+0x198>
 8002936:	6823      	ldr	r3, [r4, #0]
 8002938:	055a      	lsls	r2, r3, #21
 800293a:	d407      	bmi.n	800294c <_printf_float+0x1ec>
 800293c:	6923      	ldr	r3, [r4, #16]
 800293e:	4642      	mov	r2, r8
 8002940:	4631      	mov	r1, r6
 8002942:	4628      	mov	r0, r5
 8002944:	47b8      	blx	r7
 8002946:	3001      	adds	r0, #1
 8002948:	d12b      	bne.n	80029a2 <_printf_float+0x242>
 800294a:	e764      	b.n	8002816 <_printf_float+0xb6>
 800294c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8002950:	f240 80dd 	bls.w	8002b0e <_printf_float+0x3ae>
 8002954:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002958:	2200      	movs	r2, #0
 800295a:	2300      	movs	r3, #0
 800295c:	f7fe f834 	bl	80009c8 <__aeabi_dcmpeq>
 8002960:	2800      	cmp	r0, #0
 8002962:	d033      	beq.n	80029cc <_printf_float+0x26c>
 8002964:	2301      	movs	r3, #1
 8002966:	4631      	mov	r1, r6
 8002968:	4628      	mov	r0, r5
 800296a:	4a35      	ldr	r2, [pc, #212]	; (8002a40 <_printf_float+0x2e0>)
 800296c:	47b8      	blx	r7
 800296e:	3001      	adds	r0, #1
 8002970:	f43f af51 	beq.w	8002816 <_printf_float+0xb6>
 8002974:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002978:	429a      	cmp	r2, r3
 800297a:	db02      	blt.n	8002982 <_printf_float+0x222>
 800297c:	6823      	ldr	r3, [r4, #0]
 800297e:	07d8      	lsls	r0, r3, #31
 8002980:	d50f      	bpl.n	80029a2 <_printf_float+0x242>
 8002982:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002986:	4631      	mov	r1, r6
 8002988:	4628      	mov	r0, r5
 800298a:	47b8      	blx	r7
 800298c:	3001      	adds	r0, #1
 800298e:	f43f af42 	beq.w	8002816 <_printf_float+0xb6>
 8002992:	f04f 0800 	mov.w	r8, #0
 8002996:	f104 091a 	add.w	r9, r4, #26
 800299a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800299c:	3b01      	subs	r3, #1
 800299e:	4543      	cmp	r3, r8
 80029a0:	dc09      	bgt.n	80029b6 <_printf_float+0x256>
 80029a2:	6823      	ldr	r3, [r4, #0]
 80029a4:	079b      	lsls	r3, r3, #30
 80029a6:	f100 8102 	bmi.w	8002bae <_printf_float+0x44e>
 80029aa:	68e0      	ldr	r0, [r4, #12]
 80029ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80029ae:	4298      	cmp	r0, r3
 80029b0:	bfb8      	it	lt
 80029b2:	4618      	movlt	r0, r3
 80029b4:	e731      	b.n	800281a <_printf_float+0xba>
 80029b6:	2301      	movs	r3, #1
 80029b8:	464a      	mov	r2, r9
 80029ba:	4631      	mov	r1, r6
 80029bc:	4628      	mov	r0, r5
 80029be:	47b8      	blx	r7
 80029c0:	3001      	adds	r0, #1
 80029c2:	f43f af28 	beq.w	8002816 <_printf_float+0xb6>
 80029c6:	f108 0801 	add.w	r8, r8, #1
 80029ca:	e7e6      	b.n	800299a <_printf_float+0x23a>
 80029cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	dc38      	bgt.n	8002a44 <_printf_float+0x2e4>
 80029d2:	2301      	movs	r3, #1
 80029d4:	4631      	mov	r1, r6
 80029d6:	4628      	mov	r0, r5
 80029d8:	4a19      	ldr	r2, [pc, #100]	; (8002a40 <_printf_float+0x2e0>)
 80029da:	47b8      	blx	r7
 80029dc:	3001      	adds	r0, #1
 80029de:	f43f af1a 	beq.w	8002816 <_printf_float+0xb6>
 80029e2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80029e6:	4313      	orrs	r3, r2
 80029e8:	d102      	bne.n	80029f0 <_printf_float+0x290>
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	07d9      	lsls	r1, r3, #31
 80029ee:	d5d8      	bpl.n	80029a2 <_printf_float+0x242>
 80029f0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80029f4:	4631      	mov	r1, r6
 80029f6:	4628      	mov	r0, r5
 80029f8:	47b8      	blx	r7
 80029fa:	3001      	adds	r0, #1
 80029fc:	f43f af0b 	beq.w	8002816 <_printf_float+0xb6>
 8002a00:	f04f 0900 	mov.w	r9, #0
 8002a04:	f104 0a1a 	add.w	sl, r4, #26
 8002a08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002a0a:	425b      	negs	r3, r3
 8002a0c:	454b      	cmp	r3, r9
 8002a0e:	dc01      	bgt.n	8002a14 <_printf_float+0x2b4>
 8002a10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002a12:	e794      	b.n	800293e <_printf_float+0x1de>
 8002a14:	2301      	movs	r3, #1
 8002a16:	4652      	mov	r2, sl
 8002a18:	4631      	mov	r1, r6
 8002a1a:	4628      	mov	r0, r5
 8002a1c:	47b8      	blx	r7
 8002a1e:	3001      	adds	r0, #1
 8002a20:	f43f aef9 	beq.w	8002816 <_printf_float+0xb6>
 8002a24:	f109 0901 	add.w	r9, r9, #1
 8002a28:	e7ee      	b.n	8002a08 <_printf_float+0x2a8>
 8002a2a:	bf00      	nop
 8002a2c:	7fefffff 	.word	0x7fefffff
 8002a30:	08006f34 	.word	0x08006f34
 8002a34:	08006f38 	.word	0x08006f38
 8002a38:	08006f40 	.word	0x08006f40
 8002a3c:	08006f3c 	.word	0x08006f3c
 8002a40:	08006f44 	.word	0x08006f44
 8002a44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002a46:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002a48:	429a      	cmp	r2, r3
 8002a4a:	bfa8      	it	ge
 8002a4c:	461a      	movge	r2, r3
 8002a4e:	2a00      	cmp	r2, #0
 8002a50:	4691      	mov	r9, r2
 8002a52:	dc37      	bgt.n	8002ac4 <_printf_float+0x364>
 8002a54:	f04f 0b00 	mov.w	fp, #0
 8002a58:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002a5c:	f104 021a 	add.w	r2, r4, #26
 8002a60:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002a64:	ebaa 0309 	sub.w	r3, sl, r9
 8002a68:	455b      	cmp	r3, fp
 8002a6a:	dc33      	bgt.n	8002ad4 <_printf_float+0x374>
 8002a6c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002a70:	429a      	cmp	r2, r3
 8002a72:	db3b      	blt.n	8002aec <_printf_float+0x38c>
 8002a74:	6823      	ldr	r3, [r4, #0]
 8002a76:	07da      	lsls	r2, r3, #31
 8002a78:	d438      	bmi.n	8002aec <_printf_float+0x38c>
 8002a7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002a7c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002a7e:	eba2 030a 	sub.w	r3, r2, sl
 8002a82:	eba2 0901 	sub.w	r9, r2, r1
 8002a86:	4599      	cmp	r9, r3
 8002a88:	bfa8      	it	ge
 8002a8a:	4699      	movge	r9, r3
 8002a8c:	f1b9 0f00 	cmp.w	r9, #0
 8002a90:	dc34      	bgt.n	8002afc <_printf_float+0x39c>
 8002a92:	f04f 0800 	mov.w	r8, #0
 8002a96:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002a9a:	f104 0a1a 	add.w	sl, r4, #26
 8002a9e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002aa2:	1a9b      	subs	r3, r3, r2
 8002aa4:	eba3 0309 	sub.w	r3, r3, r9
 8002aa8:	4543      	cmp	r3, r8
 8002aaa:	f77f af7a 	ble.w	80029a2 <_printf_float+0x242>
 8002aae:	2301      	movs	r3, #1
 8002ab0:	4652      	mov	r2, sl
 8002ab2:	4631      	mov	r1, r6
 8002ab4:	4628      	mov	r0, r5
 8002ab6:	47b8      	blx	r7
 8002ab8:	3001      	adds	r0, #1
 8002aba:	f43f aeac 	beq.w	8002816 <_printf_float+0xb6>
 8002abe:	f108 0801 	add.w	r8, r8, #1
 8002ac2:	e7ec      	b.n	8002a9e <_printf_float+0x33e>
 8002ac4:	4613      	mov	r3, r2
 8002ac6:	4631      	mov	r1, r6
 8002ac8:	4642      	mov	r2, r8
 8002aca:	4628      	mov	r0, r5
 8002acc:	47b8      	blx	r7
 8002ace:	3001      	adds	r0, #1
 8002ad0:	d1c0      	bne.n	8002a54 <_printf_float+0x2f4>
 8002ad2:	e6a0      	b.n	8002816 <_printf_float+0xb6>
 8002ad4:	2301      	movs	r3, #1
 8002ad6:	4631      	mov	r1, r6
 8002ad8:	4628      	mov	r0, r5
 8002ada:	920b      	str	r2, [sp, #44]	; 0x2c
 8002adc:	47b8      	blx	r7
 8002ade:	3001      	adds	r0, #1
 8002ae0:	f43f ae99 	beq.w	8002816 <_printf_float+0xb6>
 8002ae4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002ae6:	f10b 0b01 	add.w	fp, fp, #1
 8002aea:	e7b9      	b.n	8002a60 <_printf_float+0x300>
 8002aec:	4631      	mov	r1, r6
 8002aee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002af2:	4628      	mov	r0, r5
 8002af4:	47b8      	blx	r7
 8002af6:	3001      	adds	r0, #1
 8002af8:	d1bf      	bne.n	8002a7a <_printf_float+0x31a>
 8002afa:	e68c      	b.n	8002816 <_printf_float+0xb6>
 8002afc:	464b      	mov	r3, r9
 8002afe:	4631      	mov	r1, r6
 8002b00:	4628      	mov	r0, r5
 8002b02:	eb08 020a 	add.w	r2, r8, sl
 8002b06:	47b8      	blx	r7
 8002b08:	3001      	adds	r0, #1
 8002b0a:	d1c2      	bne.n	8002a92 <_printf_float+0x332>
 8002b0c:	e683      	b.n	8002816 <_printf_float+0xb6>
 8002b0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002b10:	2a01      	cmp	r2, #1
 8002b12:	dc01      	bgt.n	8002b18 <_printf_float+0x3b8>
 8002b14:	07db      	lsls	r3, r3, #31
 8002b16:	d537      	bpl.n	8002b88 <_printf_float+0x428>
 8002b18:	2301      	movs	r3, #1
 8002b1a:	4642      	mov	r2, r8
 8002b1c:	4631      	mov	r1, r6
 8002b1e:	4628      	mov	r0, r5
 8002b20:	47b8      	blx	r7
 8002b22:	3001      	adds	r0, #1
 8002b24:	f43f ae77 	beq.w	8002816 <_printf_float+0xb6>
 8002b28:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002b2c:	4631      	mov	r1, r6
 8002b2e:	4628      	mov	r0, r5
 8002b30:	47b8      	blx	r7
 8002b32:	3001      	adds	r0, #1
 8002b34:	f43f ae6f 	beq.w	8002816 <_printf_float+0xb6>
 8002b38:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002b3c:	2200      	movs	r2, #0
 8002b3e:	2300      	movs	r3, #0
 8002b40:	f7fd ff42 	bl	80009c8 <__aeabi_dcmpeq>
 8002b44:	b9d8      	cbnz	r0, 8002b7e <_printf_float+0x41e>
 8002b46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002b48:	f108 0201 	add.w	r2, r8, #1
 8002b4c:	3b01      	subs	r3, #1
 8002b4e:	4631      	mov	r1, r6
 8002b50:	4628      	mov	r0, r5
 8002b52:	47b8      	blx	r7
 8002b54:	3001      	adds	r0, #1
 8002b56:	d10e      	bne.n	8002b76 <_printf_float+0x416>
 8002b58:	e65d      	b.n	8002816 <_printf_float+0xb6>
 8002b5a:	2301      	movs	r3, #1
 8002b5c:	464a      	mov	r2, r9
 8002b5e:	4631      	mov	r1, r6
 8002b60:	4628      	mov	r0, r5
 8002b62:	47b8      	blx	r7
 8002b64:	3001      	adds	r0, #1
 8002b66:	f43f ae56 	beq.w	8002816 <_printf_float+0xb6>
 8002b6a:	f108 0801 	add.w	r8, r8, #1
 8002b6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002b70:	3b01      	subs	r3, #1
 8002b72:	4543      	cmp	r3, r8
 8002b74:	dcf1      	bgt.n	8002b5a <_printf_float+0x3fa>
 8002b76:	4653      	mov	r3, sl
 8002b78:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002b7c:	e6e0      	b.n	8002940 <_printf_float+0x1e0>
 8002b7e:	f04f 0800 	mov.w	r8, #0
 8002b82:	f104 091a 	add.w	r9, r4, #26
 8002b86:	e7f2      	b.n	8002b6e <_printf_float+0x40e>
 8002b88:	2301      	movs	r3, #1
 8002b8a:	4642      	mov	r2, r8
 8002b8c:	e7df      	b.n	8002b4e <_printf_float+0x3ee>
 8002b8e:	2301      	movs	r3, #1
 8002b90:	464a      	mov	r2, r9
 8002b92:	4631      	mov	r1, r6
 8002b94:	4628      	mov	r0, r5
 8002b96:	47b8      	blx	r7
 8002b98:	3001      	adds	r0, #1
 8002b9a:	f43f ae3c 	beq.w	8002816 <_printf_float+0xb6>
 8002b9e:	f108 0801 	add.w	r8, r8, #1
 8002ba2:	68e3      	ldr	r3, [r4, #12]
 8002ba4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002ba6:	1a5b      	subs	r3, r3, r1
 8002ba8:	4543      	cmp	r3, r8
 8002baa:	dcf0      	bgt.n	8002b8e <_printf_float+0x42e>
 8002bac:	e6fd      	b.n	80029aa <_printf_float+0x24a>
 8002bae:	f04f 0800 	mov.w	r8, #0
 8002bb2:	f104 0919 	add.w	r9, r4, #25
 8002bb6:	e7f4      	b.n	8002ba2 <_printf_float+0x442>

08002bb8 <_printf_common>:
 8002bb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002bbc:	4616      	mov	r6, r2
 8002bbe:	4699      	mov	r9, r3
 8002bc0:	688a      	ldr	r2, [r1, #8]
 8002bc2:	690b      	ldr	r3, [r1, #16]
 8002bc4:	4607      	mov	r7, r0
 8002bc6:	4293      	cmp	r3, r2
 8002bc8:	bfb8      	it	lt
 8002bca:	4613      	movlt	r3, r2
 8002bcc:	6033      	str	r3, [r6, #0]
 8002bce:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002bd2:	460c      	mov	r4, r1
 8002bd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002bd8:	b10a      	cbz	r2, 8002bde <_printf_common+0x26>
 8002bda:	3301      	adds	r3, #1
 8002bdc:	6033      	str	r3, [r6, #0]
 8002bde:	6823      	ldr	r3, [r4, #0]
 8002be0:	0699      	lsls	r1, r3, #26
 8002be2:	bf42      	ittt	mi
 8002be4:	6833      	ldrmi	r3, [r6, #0]
 8002be6:	3302      	addmi	r3, #2
 8002be8:	6033      	strmi	r3, [r6, #0]
 8002bea:	6825      	ldr	r5, [r4, #0]
 8002bec:	f015 0506 	ands.w	r5, r5, #6
 8002bf0:	d106      	bne.n	8002c00 <_printf_common+0x48>
 8002bf2:	f104 0a19 	add.w	sl, r4, #25
 8002bf6:	68e3      	ldr	r3, [r4, #12]
 8002bf8:	6832      	ldr	r2, [r6, #0]
 8002bfa:	1a9b      	subs	r3, r3, r2
 8002bfc:	42ab      	cmp	r3, r5
 8002bfe:	dc28      	bgt.n	8002c52 <_printf_common+0x9a>
 8002c00:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002c04:	1e13      	subs	r3, r2, #0
 8002c06:	6822      	ldr	r2, [r4, #0]
 8002c08:	bf18      	it	ne
 8002c0a:	2301      	movne	r3, #1
 8002c0c:	0692      	lsls	r2, r2, #26
 8002c0e:	d42d      	bmi.n	8002c6c <_printf_common+0xb4>
 8002c10:	4649      	mov	r1, r9
 8002c12:	4638      	mov	r0, r7
 8002c14:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002c18:	47c0      	blx	r8
 8002c1a:	3001      	adds	r0, #1
 8002c1c:	d020      	beq.n	8002c60 <_printf_common+0xa8>
 8002c1e:	6823      	ldr	r3, [r4, #0]
 8002c20:	68e5      	ldr	r5, [r4, #12]
 8002c22:	f003 0306 	and.w	r3, r3, #6
 8002c26:	2b04      	cmp	r3, #4
 8002c28:	bf18      	it	ne
 8002c2a:	2500      	movne	r5, #0
 8002c2c:	6832      	ldr	r2, [r6, #0]
 8002c2e:	f04f 0600 	mov.w	r6, #0
 8002c32:	68a3      	ldr	r3, [r4, #8]
 8002c34:	bf08      	it	eq
 8002c36:	1aad      	subeq	r5, r5, r2
 8002c38:	6922      	ldr	r2, [r4, #16]
 8002c3a:	bf08      	it	eq
 8002c3c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002c40:	4293      	cmp	r3, r2
 8002c42:	bfc4      	itt	gt
 8002c44:	1a9b      	subgt	r3, r3, r2
 8002c46:	18ed      	addgt	r5, r5, r3
 8002c48:	341a      	adds	r4, #26
 8002c4a:	42b5      	cmp	r5, r6
 8002c4c:	d11a      	bne.n	8002c84 <_printf_common+0xcc>
 8002c4e:	2000      	movs	r0, #0
 8002c50:	e008      	b.n	8002c64 <_printf_common+0xac>
 8002c52:	2301      	movs	r3, #1
 8002c54:	4652      	mov	r2, sl
 8002c56:	4649      	mov	r1, r9
 8002c58:	4638      	mov	r0, r7
 8002c5a:	47c0      	blx	r8
 8002c5c:	3001      	adds	r0, #1
 8002c5e:	d103      	bne.n	8002c68 <_printf_common+0xb0>
 8002c60:	f04f 30ff 	mov.w	r0, #4294967295
 8002c64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c68:	3501      	adds	r5, #1
 8002c6a:	e7c4      	b.n	8002bf6 <_printf_common+0x3e>
 8002c6c:	2030      	movs	r0, #48	; 0x30
 8002c6e:	18e1      	adds	r1, r4, r3
 8002c70:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002c74:	1c5a      	adds	r2, r3, #1
 8002c76:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002c7a:	4422      	add	r2, r4
 8002c7c:	3302      	adds	r3, #2
 8002c7e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002c82:	e7c5      	b.n	8002c10 <_printf_common+0x58>
 8002c84:	2301      	movs	r3, #1
 8002c86:	4622      	mov	r2, r4
 8002c88:	4649      	mov	r1, r9
 8002c8a:	4638      	mov	r0, r7
 8002c8c:	47c0      	blx	r8
 8002c8e:	3001      	adds	r0, #1
 8002c90:	d0e6      	beq.n	8002c60 <_printf_common+0xa8>
 8002c92:	3601      	adds	r6, #1
 8002c94:	e7d9      	b.n	8002c4a <_printf_common+0x92>
	...

08002c98 <_printf_i>:
 8002c98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002c9c:	460c      	mov	r4, r1
 8002c9e:	7e27      	ldrb	r7, [r4, #24]
 8002ca0:	4691      	mov	r9, r2
 8002ca2:	2f78      	cmp	r7, #120	; 0x78
 8002ca4:	4680      	mov	r8, r0
 8002ca6:	469a      	mov	sl, r3
 8002ca8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002caa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002cae:	d807      	bhi.n	8002cc0 <_printf_i+0x28>
 8002cb0:	2f62      	cmp	r7, #98	; 0x62
 8002cb2:	d80a      	bhi.n	8002cca <_printf_i+0x32>
 8002cb4:	2f00      	cmp	r7, #0
 8002cb6:	f000 80d9 	beq.w	8002e6c <_printf_i+0x1d4>
 8002cba:	2f58      	cmp	r7, #88	; 0x58
 8002cbc:	f000 80a4 	beq.w	8002e08 <_printf_i+0x170>
 8002cc0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002cc4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002cc8:	e03a      	b.n	8002d40 <_printf_i+0xa8>
 8002cca:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002cce:	2b15      	cmp	r3, #21
 8002cd0:	d8f6      	bhi.n	8002cc0 <_printf_i+0x28>
 8002cd2:	a001      	add	r0, pc, #4	; (adr r0, 8002cd8 <_printf_i+0x40>)
 8002cd4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8002cd8:	08002d31 	.word	0x08002d31
 8002cdc:	08002d45 	.word	0x08002d45
 8002ce0:	08002cc1 	.word	0x08002cc1
 8002ce4:	08002cc1 	.word	0x08002cc1
 8002ce8:	08002cc1 	.word	0x08002cc1
 8002cec:	08002cc1 	.word	0x08002cc1
 8002cf0:	08002d45 	.word	0x08002d45
 8002cf4:	08002cc1 	.word	0x08002cc1
 8002cf8:	08002cc1 	.word	0x08002cc1
 8002cfc:	08002cc1 	.word	0x08002cc1
 8002d00:	08002cc1 	.word	0x08002cc1
 8002d04:	08002e53 	.word	0x08002e53
 8002d08:	08002d75 	.word	0x08002d75
 8002d0c:	08002e35 	.word	0x08002e35
 8002d10:	08002cc1 	.word	0x08002cc1
 8002d14:	08002cc1 	.word	0x08002cc1
 8002d18:	08002e75 	.word	0x08002e75
 8002d1c:	08002cc1 	.word	0x08002cc1
 8002d20:	08002d75 	.word	0x08002d75
 8002d24:	08002cc1 	.word	0x08002cc1
 8002d28:	08002cc1 	.word	0x08002cc1
 8002d2c:	08002e3d 	.word	0x08002e3d
 8002d30:	680b      	ldr	r3, [r1, #0]
 8002d32:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002d36:	1d1a      	adds	r2, r3, #4
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	600a      	str	r2, [r1, #0]
 8002d3c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002d40:	2301      	movs	r3, #1
 8002d42:	e0a4      	b.n	8002e8e <_printf_i+0x1f6>
 8002d44:	6825      	ldr	r5, [r4, #0]
 8002d46:	6808      	ldr	r0, [r1, #0]
 8002d48:	062e      	lsls	r6, r5, #24
 8002d4a:	f100 0304 	add.w	r3, r0, #4
 8002d4e:	d50a      	bpl.n	8002d66 <_printf_i+0xce>
 8002d50:	6805      	ldr	r5, [r0, #0]
 8002d52:	600b      	str	r3, [r1, #0]
 8002d54:	2d00      	cmp	r5, #0
 8002d56:	da03      	bge.n	8002d60 <_printf_i+0xc8>
 8002d58:	232d      	movs	r3, #45	; 0x2d
 8002d5a:	426d      	negs	r5, r5
 8002d5c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002d60:	230a      	movs	r3, #10
 8002d62:	485e      	ldr	r0, [pc, #376]	; (8002edc <_printf_i+0x244>)
 8002d64:	e019      	b.n	8002d9a <_printf_i+0x102>
 8002d66:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002d6a:	6805      	ldr	r5, [r0, #0]
 8002d6c:	600b      	str	r3, [r1, #0]
 8002d6e:	bf18      	it	ne
 8002d70:	b22d      	sxthne	r5, r5
 8002d72:	e7ef      	b.n	8002d54 <_printf_i+0xbc>
 8002d74:	680b      	ldr	r3, [r1, #0]
 8002d76:	6825      	ldr	r5, [r4, #0]
 8002d78:	1d18      	adds	r0, r3, #4
 8002d7a:	6008      	str	r0, [r1, #0]
 8002d7c:	0628      	lsls	r0, r5, #24
 8002d7e:	d501      	bpl.n	8002d84 <_printf_i+0xec>
 8002d80:	681d      	ldr	r5, [r3, #0]
 8002d82:	e002      	b.n	8002d8a <_printf_i+0xf2>
 8002d84:	0669      	lsls	r1, r5, #25
 8002d86:	d5fb      	bpl.n	8002d80 <_printf_i+0xe8>
 8002d88:	881d      	ldrh	r5, [r3, #0]
 8002d8a:	2f6f      	cmp	r7, #111	; 0x6f
 8002d8c:	bf0c      	ite	eq
 8002d8e:	2308      	moveq	r3, #8
 8002d90:	230a      	movne	r3, #10
 8002d92:	4852      	ldr	r0, [pc, #328]	; (8002edc <_printf_i+0x244>)
 8002d94:	2100      	movs	r1, #0
 8002d96:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002d9a:	6866      	ldr	r6, [r4, #4]
 8002d9c:	2e00      	cmp	r6, #0
 8002d9e:	bfa8      	it	ge
 8002da0:	6821      	ldrge	r1, [r4, #0]
 8002da2:	60a6      	str	r6, [r4, #8]
 8002da4:	bfa4      	itt	ge
 8002da6:	f021 0104 	bicge.w	r1, r1, #4
 8002daa:	6021      	strge	r1, [r4, #0]
 8002dac:	b90d      	cbnz	r5, 8002db2 <_printf_i+0x11a>
 8002dae:	2e00      	cmp	r6, #0
 8002db0:	d04d      	beq.n	8002e4e <_printf_i+0x1b6>
 8002db2:	4616      	mov	r6, r2
 8002db4:	fbb5 f1f3 	udiv	r1, r5, r3
 8002db8:	fb03 5711 	mls	r7, r3, r1, r5
 8002dbc:	5dc7      	ldrb	r7, [r0, r7]
 8002dbe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002dc2:	462f      	mov	r7, r5
 8002dc4:	42bb      	cmp	r3, r7
 8002dc6:	460d      	mov	r5, r1
 8002dc8:	d9f4      	bls.n	8002db4 <_printf_i+0x11c>
 8002dca:	2b08      	cmp	r3, #8
 8002dcc:	d10b      	bne.n	8002de6 <_printf_i+0x14e>
 8002dce:	6823      	ldr	r3, [r4, #0]
 8002dd0:	07df      	lsls	r7, r3, #31
 8002dd2:	d508      	bpl.n	8002de6 <_printf_i+0x14e>
 8002dd4:	6923      	ldr	r3, [r4, #16]
 8002dd6:	6861      	ldr	r1, [r4, #4]
 8002dd8:	4299      	cmp	r1, r3
 8002dda:	bfde      	ittt	le
 8002ddc:	2330      	movle	r3, #48	; 0x30
 8002dde:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002de2:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002de6:	1b92      	subs	r2, r2, r6
 8002de8:	6122      	str	r2, [r4, #16]
 8002dea:	464b      	mov	r3, r9
 8002dec:	4621      	mov	r1, r4
 8002dee:	4640      	mov	r0, r8
 8002df0:	f8cd a000 	str.w	sl, [sp]
 8002df4:	aa03      	add	r2, sp, #12
 8002df6:	f7ff fedf 	bl	8002bb8 <_printf_common>
 8002dfa:	3001      	adds	r0, #1
 8002dfc:	d14c      	bne.n	8002e98 <_printf_i+0x200>
 8002dfe:	f04f 30ff 	mov.w	r0, #4294967295
 8002e02:	b004      	add	sp, #16
 8002e04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e08:	4834      	ldr	r0, [pc, #208]	; (8002edc <_printf_i+0x244>)
 8002e0a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002e0e:	680e      	ldr	r6, [r1, #0]
 8002e10:	6823      	ldr	r3, [r4, #0]
 8002e12:	f856 5b04 	ldr.w	r5, [r6], #4
 8002e16:	061f      	lsls	r7, r3, #24
 8002e18:	600e      	str	r6, [r1, #0]
 8002e1a:	d514      	bpl.n	8002e46 <_printf_i+0x1ae>
 8002e1c:	07d9      	lsls	r1, r3, #31
 8002e1e:	bf44      	itt	mi
 8002e20:	f043 0320 	orrmi.w	r3, r3, #32
 8002e24:	6023      	strmi	r3, [r4, #0]
 8002e26:	b91d      	cbnz	r5, 8002e30 <_printf_i+0x198>
 8002e28:	6823      	ldr	r3, [r4, #0]
 8002e2a:	f023 0320 	bic.w	r3, r3, #32
 8002e2e:	6023      	str	r3, [r4, #0]
 8002e30:	2310      	movs	r3, #16
 8002e32:	e7af      	b.n	8002d94 <_printf_i+0xfc>
 8002e34:	6823      	ldr	r3, [r4, #0]
 8002e36:	f043 0320 	orr.w	r3, r3, #32
 8002e3a:	6023      	str	r3, [r4, #0]
 8002e3c:	2378      	movs	r3, #120	; 0x78
 8002e3e:	4828      	ldr	r0, [pc, #160]	; (8002ee0 <_printf_i+0x248>)
 8002e40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002e44:	e7e3      	b.n	8002e0e <_printf_i+0x176>
 8002e46:	065e      	lsls	r6, r3, #25
 8002e48:	bf48      	it	mi
 8002e4a:	b2ad      	uxthmi	r5, r5
 8002e4c:	e7e6      	b.n	8002e1c <_printf_i+0x184>
 8002e4e:	4616      	mov	r6, r2
 8002e50:	e7bb      	b.n	8002dca <_printf_i+0x132>
 8002e52:	680b      	ldr	r3, [r1, #0]
 8002e54:	6826      	ldr	r6, [r4, #0]
 8002e56:	1d1d      	adds	r5, r3, #4
 8002e58:	6960      	ldr	r0, [r4, #20]
 8002e5a:	600d      	str	r5, [r1, #0]
 8002e5c:	0635      	lsls	r5, r6, #24
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	d501      	bpl.n	8002e66 <_printf_i+0x1ce>
 8002e62:	6018      	str	r0, [r3, #0]
 8002e64:	e002      	b.n	8002e6c <_printf_i+0x1d4>
 8002e66:	0671      	lsls	r1, r6, #25
 8002e68:	d5fb      	bpl.n	8002e62 <_printf_i+0x1ca>
 8002e6a:	8018      	strh	r0, [r3, #0]
 8002e6c:	2300      	movs	r3, #0
 8002e6e:	4616      	mov	r6, r2
 8002e70:	6123      	str	r3, [r4, #16]
 8002e72:	e7ba      	b.n	8002dea <_printf_i+0x152>
 8002e74:	680b      	ldr	r3, [r1, #0]
 8002e76:	1d1a      	adds	r2, r3, #4
 8002e78:	600a      	str	r2, [r1, #0]
 8002e7a:	681e      	ldr	r6, [r3, #0]
 8002e7c:	2100      	movs	r1, #0
 8002e7e:	4630      	mov	r0, r6
 8002e80:	6862      	ldr	r2, [r4, #4]
 8002e82:	f002 fb0b 	bl	800549c <memchr>
 8002e86:	b108      	cbz	r0, 8002e8c <_printf_i+0x1f4>
 8002e88:	1b80      	subs	r0, r0, r6
 8002e8a:	6060      	str	r0, [r4, #4]
 8002e8c:	6863      	ldr	r3, [r4, #4]
 8002e8e:	6123      	str	r3, [r4, #16]
 8002e90:	2300      	movs	r3, #0
 8002e92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002e96:	e7a8      	b.n	8002dea <_printf_i+0x152>
 8002e98:	4632      	mov	r2, r6
 8002e9a:	4649      	mov	r1, r9
 8002e9c:	4640      	mov	r0, r8
 8002e9e:	6923      	ldr	r3, [r4, #16]
 8002ea0:	47d0      	blx	sl
 8002ea2:	3001      	adds	r0, #1
 8002ea4:	d0ab      	beq.n	8002dfe <_printf_i+0x166>
 8002ea6:	6823      	ldr	r3, [r4, #0]
 8002ea8:	079b      	lsls	r3, r3, #30
 8002eaa:	d413      	bmi.n	8002ed4 <_printf_i+0x23c>
 8002eac:	68e0      	ldr	r0, [r4, #12]
 8002eae:	9b03      	ldr	r3, [sp, #12]
 8002eb0:	4298      	cmp	r0, r3
 8002eb2:	bfb8      	it	lt
 8002eb4:	4618      	movlt	r0, r3
 8002eb6:	e7a4      	b.n	8002e02 <_printf_i+0x16a>
 8002eb8:	2301      	movs	r3, #1
 8002eba:	4632      	mov	r2, r6
 8002ebc:	4649      	mov	r1, r9
 8002ebe:	4640      	mov	r0, r8
 8002ec0:	47d0      	blx	sl
 8002ec2:	3001      	adds	r0, #1
 8002ec4:	d09b      	beq.n	8002dfe <_printf_i+0x166>
 8002ec6:	3501      	adds	r5, #1
 8002ec8:	68e3      	ldr	r3, [r4, #12]
 8002eca:	9903      	ldr	r1, [sp, #12]
 8002ecc:	1a5b      	subs	r3, r3, r1
 8002ece:	42ab      	cmp	r3, r5
 8002ed0:	dcf2      	bgt.n	8002eb8 <_printf_i+0x220>
 8002ed2:	e7eb      	b.n	8002eac <_printf_i+0x214>
 8002ed4:	2500      	movs	r5, #0
 8002ed6:	f104 0619 	add.w	r6, r4, #25
 8002eda:	e7f5      	b.n	8002ec8 <_printf_i+0x230>
 8002edc:	08006f46 	.word	0x08006f46
 8002ee0:	08006f57 	.word	0x08006f57

08002ee4 <_scanf_float>:
 8002ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ee8:	b087      	sub	sp, #28
 8002eea:	9303      	str	r3, [sp, #12]
 8002eec:	688b      	ldr	r3, [r1, #8]
 8002eee:	4617      	mov	r7, r2
 8002ef0:	1e5a      	subs	r2, r3, #1
 8002ef2:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002ef6:	bf85      	ittet	hi
 8002ef8:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002efc:	195b      	addhi	r3, r3, r5
 8002efe:	2300      	movls	r3, #0
 8002f00:	9302      	strhi	r3, [sp, #8]
 8002f02:	bf88      	it	hi
 8002f04:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002f08:	468b      	mov	fp, r1
 8002f0a:	f04f 0500 	mov.w	r5, #0
 8002f0e:	bf8c      	ite	hi
 8002f10:	608b      	strhi	r3, [r1, #8]
 8002f12:	9302      	strls	r3, [sp, #8]
 8002f14:	680b      	ldr	r3, [r1, #0]
 8002f16:	4680      	mov	r8, r0
 8002f18:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002f1c:	f84b 3b1c 	str.w	r3, [fp], #28
 8002f20:	460c      	mov	r4, r1
 8002f22:	465e      	mov	r6, fp
 8002f24:	46aa      	mov	sl, r5
 8002f26:	46a9      	mov	r9, r5
 8002f28:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002f2c:	9501      	str	r5, [sp, #4]
 8002f2e:	68a2      	ldr	r2, [r4, #8]
 8002f30:	b152      	cbz	r2, 8002f48 <_scanf_float+0x64>
 8002f32:	683b      	ldr	r3, [r7, #0]
 8002f34:	781b      	ldrb	r3, [r3, #0]
 8002f36:	2b4e      	cmp	r3, #78	; 0x4e
 8002f38:	d864      	bhi.n	8003004 <_scanf_float+0x120>
 8002f3a:	2b40      	cmp	r3, #64	; 0x40
 8002f3c:	d83c      	bhi.n	8002fb8 <_scanf_float+0xd4>
 8002f3e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002f42:	b2c8      	uxtb	r0, r1
 8002f44:	280e      	cmp	r0, #14
 8002f46:	d93a      	bls.n	8002fbe <_scanf_float+0xda>
 8002f48:	f1b9 0f00 	cmp.w	r9, #0
 8002f4c:	d003      	beq.n	8002f56 <_scanf_float+0x72>
 8002f4e:	6823      	ldr	r3, [r4, #0]
 8002f50:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002f54:	6023      	str	r3, [r4, #0]
 8002f56:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002f5a:	f1ba 0f01 	cmp.w	sl, #1
 8002f5e:	f200 8113 	bhi.w	8003188 <_scanf_float+0x2a4>
 8002f62:	455e      	cmp	r6, fp
 8002f64:	f200 8105 	bhi.w	8003172 <_scanf_float+0x28e>
 8002f68:	2501      	movs	r5, #1
 8002f6a:	4628      	mov	r0, r5
 8002f6c:	b007      	add	sp, #28
 8002f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f72:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002f76:	2a0d      	cmp	r2, #13
 8002f78:	d8e6      	bhi.n	8002f48 <_scanf_float+0x64>
 8002f7a:	a101      	add	r1, pc, #4	; (adr r1, 8002f80 <_scanf_float+0x9c>)
 8002f7c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002f80:	080030bf 	.word	0x080030bf
 8002f84:	08002f49 	.word	0x08002f49
 8002f88:	08002f49 	.word	0x08002f49
 8002f8c:	08002f49 	.word	0x08002f49
 8002f90:	0800311f 	.word	0x0800311f
 8002f94:	080030f7 	.word	0x080030f7
 8002f98:	08002f49 	.word	0x08002f49
 8002f9c:	08002f49 	.word	0x08002f49
 8002fa0:	080030cd 	.word	0x080030cd
 8002fa4:	08002f49 	.word	0x08002f49
 8002fa8:	08002f49 	.word	0x08002f49
 8002fac:	08002f49 	.word	0x08002f49
 8002fb0:	08002f49 	.word	0x08002f49
 8002fb4:	08003085 	.word	0x08003085
 8002fb8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002fbc:	e7db      	b.n	8002f76 <_scanf_float+0x92>
 8002fbe:	290e      	cmp	r1, #14
 8002fc0:	d8c2      	bhi.n	8002f48 <_scanf_float+0x64>
 8002fc2:	a001      	add	r0, pc, #4	; (adr r0, 8002fc8 <_scanf_float+0xe4>)
 8002fc4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002fc8:	08003077 	.word	0x08003077
 8002fcc:	08002f49 	.word	0x08002f49
 8002fd0:	08003077 	.word	0x08003077
 8002fd4:	0800310b 	.word	0x0800310b
 8002fd8:	08002f49 	.word	0x08002f49
 8002fdc:	08003025 	.word	0x08003025
 8002fe0:	08003061 	.word	0x08003061
 8002fe4:	08003061 	.word	0x08003061
 8002fe8:	08003061 	.word	0x08003061
 8002fec:	08003061 	.word	0x08003061
 8002ff0:	08003061 	.word	0x08003061
 8002ff4:	08003061 	.word	0x08003061
 8002ff8:	08003061 	.word	0x08003061
 8002ffc:	08003061 	.word	0x08003061
 8003000:	08003061 	.word	0x08003061
 8003004:	2b6e      	cmp	r3, #110	; 0x6e
 8003006:	d809      	bhi.n	800301c <_scanf_float+0x138>
 8003008:	2b60      	cmp	r3, #96	; 0x60
 800300a:	d8b2      	bhi.n	8002f72 <_scanf_float+0x8e>
 800300c:	2b54      	cmp	r3, #84	; 0x54
 800300e:	d077      	beq.n	8003100 <_scanf_float+0x21c>
 8003010:	2b59      	cmp	r3, #89	; 0x59
 8003012:	d199      	bne.n	8002f48 <_scanf_float+0x64>
 8003014:	2d07      	cmp	r5, #7
 8003016:	d197      	bne.n	8002f48 <_scanf_float+0x64>
 8003018:	2508      	movs	r5, #8
 800301a:	e029      	b.n	8003070 <_scanf_float+0x18c>
 800301c:	2b74      	cmp	r3, #116	; 0x74
 800301e:	d06f      	beq.n	8003100 <_scanf_float+0x21c>
 8003020:	2b79      	cmp	r3, #121	; 0x79
 8003022:	e7f6      	b.n	8003012 <_scanf_float+0x12e>
 8003024:	6821      	ldr	r1, [r4, #0]
 8003026:	05c8      	lsls	r0, r1, #23
 8003028:	d51a      	bpl.n	8003060 <_scanf_float+0x17c>
 800302a:	9b02      	ldr	r3, [sp, #8]
 800302c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003030:	6021      	str	r1, [r4, #0]
 8003032:	f109 0901 	add.w	r9, r9, #1
 8003036:	b11b      	cbz	r3, 8003040 <_scanf_float+0x15c>
 8003038:	3b01      	subs	r3, #1
 800303a:	3201      	adds	r2, #1
 800303c:	9302      	str	r3, [sp, #8]
 800303e:	60a2      	str	r2, [r4, #8]
 8003040:	68a3      	ldr	r3, [r4, #8]
 8003042:	3b01      	subs	r3, #1
 8003044:	60a3      	str	r3, [r4, #8]
 8003046:	6923      	ldr	r3, [r4, #16]
 8003048:	3301      	adds	r3, #1
 800304a:	6123      	str	r3, [r4, #16]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	3b01      	subs	r3, #1
 8003050:	2b00      	cmp	r3, #0
 8003052:	607b      	str	r3, [r7, #4]
 8003054:	f340 8084 	ble.w	8003160 <_scanf_float+0x27c>
 8003058:	683b      	ldr	r3, [r7, #0]
 800305a:	3301      	adds	r3, #1
 800305c:	603b      	str	r3, [r7, #0]
 800305e:	e766      	b.n	8002f2e <_scanf_float+0x4a>
 8003060:	eb1a 0f05 	cmn.w	sl, r5
 8003064:	f47f af70 	bne.w	8002f48 <_scanf_float+0x64>
 8003068:	6822      	ldr	r2, [r4, #0]
 800306a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800306e:	6022      	str	r2, [r4, #0]
 8003070:	f806 3b01 	strb.w	r3, [r6], #1
 8003074:	e7e4      	b.n	8003040 <_scanf_float+0x15c>
 8003076:	6822      	ldr	r2, [r4, #0]
 8003078:	0610      	lsls	r0, r2, #24
 800307a:	f57f af65 	bpl.w	8002f48 <_scanf_float+0x64>
 800307e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003082:	e7f4      	b.n	800306e <_scanf_float+0x18a>
 8003084:	f1ba 0f00 	cmp.w	sl, #0
 8003088:	d10e      	bne.n	80030a8 <_scanf_float+0x1c4>
 800308a:	f1b9 0f00 	cmp.w	r9, #0
 800308e:	d10e      	bne.n	80030ae <_scanf_float+0x1ca>
 8003090:	6822      	ldr	r2, [r4, #0]
 8003092:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003096:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800309a:	d108      	bne.n	80030ae <_scanf_float+0x1ca>
 800309c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80030a0:	f04f 0a01 	mov.w	sl, #1
 80030a4:	6022      	str	r2, [r4, #0]
 80030a6:	e7e3      	b.n	8003070 <_scanf_float+0x18c>
 80030a8:	f1ba 0f02 	cmp.w	sl, #2
 80030ac:	d055      	beq.n	800315a <_scanf_float+0x276>
 80030ae:	2d01      	cmp	r5, #1
 80030b0:	d002      	beq.n	80030b8 <_scanf_float+0x1d4>
 80030b2:	2d04      	cmp	r5, #4
 80030b4:	f47f af48 	bne.w	8002f48 <_scanf_float+0x64>
 80030b8:	3501      	adds	r5, #1
 80030ba:	b2ed      	uxtb	r5, r5
 80030bc:	e7d8      	b.n	8003070 <_scanf_float+0x18c>
 80030be:	f1ba 0f01 	cmp.w	sl, #1
 80030c2:	f47f af41 	bne.w	8002f48 <_scanf_float+0x64>
 80030c6:	f04f 0a02 	mov.w	sl, #2
 80030ca:	e7d1      	b.n	8003070 <_scanf_float+0x18c>
 80030cc:	b97d      	cbnz	r5, 80030ee <_scanf_float+0x20a>
 80030ce:	f1b9 0f00 	cmp.w	r9, #0
 80030d2:	f47f af3c 	bne.w	8002f4e <_scanf_float+0x6a>
 80030d6:	6822      	ldr	r2, [r4, #0]
 80030d8:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80030dc:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80030e0:	f47f af39 	bne.w	8002f56 <_scanf_float+0x72>
 80030e4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80030e8:	2501      	movs	r5, #1
 80030ea:	6022      	str	r2, [r4, #0]
 80030ec:	e7c0      	b.n	8003070 <_scanf_float+0x18c>
 80030ee:	2d03      	cmp	r5, #3
 80030f0:	d0e2      	beq.n	80030b8 <_scanf_float+0x1d4>
 80030f2:	2d05      	cmp	r5, #5
 80030f4:	e7de      	b.n	80030b4 <_scanf_float+0x1d0>
 80030f6:	2d02      	cmp	r5, #2
 80030f8:	f47f af26 	bne.w	8002f48 <_scanf_float+0x64>
 80030fc:	2503      	movs	r5, #3
 80030fe:	e7b7      	b.n	8003070 <_scanf_float+0x18c>
 8003100:	2d06      	cmp	r5, #6
 8003102:	f47f af21 	bne.w	8002f48 <_scanf_float+0x64>
 8003106:	2507      	movs	r5, #7
 8003108:	e7b2      	b.n	8003070 <_scanf_float+0x18c>
 800310a:	6822      	ldr	r2, [r4, #0]
 800310c:	0591      	lsls	r1, r2, #22
 800310e:	f57f af1b 	bpl.w	8002f48 <_scanf_float+0x64>
 8003112:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8003116:	6022      	str	r2, [r4, #0]
 8003118:	f8cd 9004 	str.w	r9, [sp, #4]
 800311c:	e7a8      	b.n	8003070 <_scanf_float+0x18c>
 800311e:	6822      	ldr	r2, [r4, #0]
 8003120:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8003124:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8003128:	d006      	beq.n	8003138 <_scanf_float+0x254>
 800312a:	0550      	lsls	r0, r2, #21
 800312c:	f57f af0c 	bpl.w	8002f48 <_scanf_float+0x64>
 8003130:	f1b9 0f00 	cmp.w	r9, #0
 8003134:	f43f af0f 	beq.w	8002f56 <_scanf_float+0x72>
 8003138:	0591      	lsls	r1, r2, #22
 800313a:	bf58      	it	pl
 800313c:	9901      	ldrpl	r1, [sp, #4]
 800313e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003142:	bf58      	it	pl
 8003144:	eba9 0101 	subpl.w	r1, r9, r1
 8003148:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800314c:	f04f 0900 	mov.w	r9, #0
 8003150:	bf58      	it	pl
 8003152:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003156:	6022      	str	r2, [r4, #0]
 8003158:	e78a      	b.n	8003070 <_scanf_float+0x18c>
 800315a:	f04f 0a03 	mov.w	sl, #3
 800315e:	e787      	b.n	8003070 <_scanf_float+0x18c>
 8003160:	4639      	mov	r1, r7
 8003162:	4640      	mov	r0, r8
 8003164:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8003168:	4798      	blx	r3
 800316a:	2800      	cmp	r0, #0
 800316c:	f43f aedf 	beq.w	8002f2e <_scanf_float+0x4a>
 8003170:	e6ea      	b.n	8002f48 <_scanf_float+0x64>
 8003172:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003176:	463a      	mov	r2, r7
 8003178:	4640      	mov	r0, r8
 800317a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800317e:	4798      	blx	r3
 8003180:	6923      	ldr	r3, [r4, #16]
 8003182:	3b01      	subs	r3, #1
 8003184:	6123      	str	r3, [r4, #16]
 8003186:	e6ec      	b.n	8002f62 <_scanf_float+0x7e>
 8003188:	1e6b      	subs	r3, r5, #1
 800318a:	2b06      	cmp	r3, #6
 800318c:	d825      	bhi.n	80031da <_scanf_float+0x2f6>
 800318e:	2d02      	cmp	r5, #2
 8003190:	d836      	bhi.n	8003200 <_scanf_float+0x31c>
 8003192:	455e      	cmp	r6, fp
 8003194:	f67f aee8 	bls.w	8002f68 <_scanf_float+0x84>
 8003198:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800319c:	463a      	mov	r2, r7
 800319e:	4640      	mov	r0, r8
 80031a0:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031a4:	4798      	blx	r3
 80031a6:	6923      	ldr	r3, [r4, #16]
 80031a8:	3b01      	subs	r3, #1
 80031aa:	6123      	str	r3, [r4, #16]
 80031ac:	e7f1      	b.n	8003192 <_scanf_float+0x2ae>
 80031ae:	9802      	ldr	r0, [sp, #8]
 80031b0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80031b4:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80031b8:	463a      	mov	r2, r7
 80031ba:	9002      	str	r0, [sp, #8]
 80031bc:	4640      	mov	r0, r8
 80031be:	4798      	blx	r3
 80031c0:	6923      	ldr	r3, [r4, #16]
 80031c2:	3b01      	subs	r3, #1
 80031c4:	6123      	str	r3, [r4, #16]
 80031c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80031ca:	fa5f fa8a 	uxtb.w	sl, sl
 80031ce:	f1ba 0f02 	cmp.w	sl, #2
 80031d2:	d1ec      	bne.n	80031ae <_scanf_float+0x2ca>
 80031d4:	3d03      	subs	r5, #3
 80031d6:	b2ed      	uxtb	r5, r5
 80031d8:	1b76      	subs	r6, r6, r5
 80031da:	6823      	ldr	r3, [r4, #0]
 80031dc:	05da      	lsls	r2, r3, #23
 80031de:	d52f      	bpl.n	8003240 <_scanf_float+0x35c>
 80031e0:	055b      	lsls	r3, r3, #21
 80031e2:	d510      	bpl.n	8003206 <_scanf_float+0x322>
 80031e4:	455e      	cmp	r6, fp
 80031e6:	f67f aebf 	bls.w	8002f68 <_scanf_float+0x84>
 80031ea:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80031ee:	463a      	mov	r2, r7
 80031f0:	4640      	mov	r0, r8
 80031f2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031f6:	4798      	blx	r3
 80031f8:	6923      	ldr	r3, [r4, #16]
 80031fa:	3b01      	subs	r3, #1
 80031fc:	6123      	str	r3, [r4, #16]
 80031fe:	e7f1      	b.n	80031e4 <_scanf_float+0x300>
 8003200:	46aa      	mov	sl, r5
 8003202:	9602      	str	r6, [sp, #8]
 8003204:	e7df      	b.n	80031c6 <_scanf_float+0x2e2>
 8003206:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800320a:	6923      	ldr	r3, [r4, #16]
 800320c:	2965      	cmp	r1, #101	; 0x65
 800320e:	f103 33ff 	add.w	r3, r3, #4294967295
 8003212:	f106 35ff 	add.w	r5, r6, #4294967295
 8003216:	6123      	str	r3, [r4, #16]
 8003218:	d00c      	beq.n	8003234 <_scanf_float+0x350>
 800321a:	2945      	cmp	r1, #69	; 0x45
 800321c:	d00a      	beq.n	8003234 <_scanf_float+0x350>
 800321e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003222:	463a      	mov	r2, r7
 8003224:	4640      	mov	r0, r8
 8003226:	4798      	blx	r3
 8003228:	6923      	ldr	r3, [r4, #16]
 800322a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800322e:	3b01      	subs	r3, #1
 8003230:	1eb5      	subs	r5, r6, #2
 8003232:	6123      	str	r3, [r4, #16]
 8003234:	463a      	mov	r2, r7
 8003236:	4640      	mov	r0, r8
 8003238:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800323c:	4798      	blx	r3
 800323e:	462e      	mov	r6, r5
 8003240:	6825      	ldr	r5, [r4, #0]
 8003242:	f015 0510 	ands.w	r5, r5, #16
 8003246:	d159      	bne.n	80032fc <_scanf_float+0x418>
 8003248:	7035      	strb	r5, [r6, #0]
 800324a:	6823      	ldr	r3, [r4, #0]
 800324c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003250:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003254:	d11c      	bne.n	8003290 <_scanf_float+0x3ac>
 8003256:	9b01      	ldr	r3, [sp, #4]
 8003258:	454b      	cmp	r3, r9
 800325a:	eba3 0209 	sub.w	r2, r3, r9
 800325e:	d124      	bne.n	80032aa <_scanf_float+0x3c6>
 8003260:	2200      	movs	r2, #0
 8003262:	4659      	mov	r1, fp
 8003264:	4640      	mov	r0, r8
 8003266:	f000 fe8b 	bl	8003f80 <_strtod_r>
 800326a:	f8d4 c000 	ldr.w	ip, [r4]
 800326e:	9b03      	ldr	r3, [sp, #12]
 8003270:	f01c 0f02 	tst.w	ip, #2
 8003274:	4606      	mov	r6, r0
 8003276:	460f      	mov	r7, r1
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	d021      	beq.n	80032c0 <_scanf_float+0x3dc>
 800327c:	9903      	ldr	r1, [sp, #12]
 800327e:	1d1a      	adds	r2, r3, #4
 8003280:	600a      	str	r2, [r1, #0]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	e9c3 6700 	strd	r6, r7, [r3]
 8003288:	68e3      	ldr	r3, [r4, #12]
 800328a:	3301      	adds	r3, #1
 800328c:	60e3      	str	r3, [r4, #12]
 800328e:	e66c      	b.n	8002f6a <_scanf_float+0x86>
 8003290:	9b04      	ldr	r3, [sp, #16]
 8003292:	2b00      	cmp	r3, #0
 8003294:	d0e4      	beq.n	8003260 <_scanf_float+0x37c>
 8003296:	9905      	ldr	r1, [sp, #20]
 8003298:	230a      	movs	r3, #10
 800329a:	462a      	mov	r2, r5
 800329c:	4640      	mov	r0, r8
 800329e:	3101      	adds	r1, #1
 80032a0:	f000 fefa 	bl	8004098 <_strtol_r>
 80032a4:	9b04      	ldr	r3, [sp, #16]
 80032a6:	9e05      	ldr	r6, [sp, #20]
 80032a8:	1ac2      	subs	r2, r0, r3
 80032aa:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80032ae:	429e      	cmp	r6, r3
 80032b0:	bf28      	it	cs
 80032b2:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 80032b6:	4630      	mov	r0, r6
 80032b8:	4911      	ldr	r1, [pc, #68]	; (8003300 <_scanf_float+0x41c>)
 80032ba:	f000 f829 	bl	8003310 <siprintf>
 80032be:	e7cf      	b.n	8003260 <_scanf_float+0x37c>
 80032c0:	f01c 0f04 	tst.w	ip, #4
 80032c4:	f103 0e04 	add.w	lr, r3, #4
 80032c8:	d003      	beq.n	80032d2 <_scanf_float+0x3ee>
 80032ca:	9903      	ldr	r1, [sp, #12]
 80032cc:	f8c1 e000 	str.w	lr, [r1]
 80032d0:	e7d7      	b.n	8003282 <_scanf_float+0x39e>
 80032d2:	9a03      	ldr	r2, [sp, #12]
 80032d4:	f8c2 e000 	str.w	lr, [r2]
 80032d8:	f8d3 8000 	ldr.w	r8, [r3]
 80032dc:	4602      	mov	r2, r0
 80032de:	460b      	mov	r3, r1
 80032e0:	f7fd fba4 	bl	8000a2c <__aeabi_dcmpun>
 80032e4:	b128      	cbz	r0, 80032f2 <_scanf_float+0x40e>
 80032e6:	4807      	ldr	r0, [pc, #28]	; (8003304 <_scanf_float+0x420>)
 80032e8:	f000 f80e 	bl	8003308 <nanf>
 80032ec:	f8c8 0000 	str.w	r0, [r8]
 80032f0:	e7ca      	b.n	8003288 <_scanf_float+0x3a4>
 80032f2:	4630      	mov	r0, r6
 80032f4:	4639      	mov	r1, r7
 80032f6:	f7fd fbf7 	bl	8000ae8 <__aeabi_d2f>
 80032fa:	e7f7      	b.n	80032ec <_scanf_float+0x408>
 80032fc:	2500      	movs	r5, #0
 80032fe:	e634      	b.n	8002f6a <_scanf_float+0x86>
 8003300:	08006f68 	.word	0x08006f68
 8003304:	08007380 	.word	0x08007380

08003308 <nanf>:
 8003308:	4800      	ldr	r0, [pc, #0]	; (800330c <nanf+0x4>)
 800330a:	4770      	bx	lr
 800330c:	7fc00000 	.word	0x7fc00000

08003310 <siprintf>:
 8003310:	b40e      	push	{r1, r2, r3}
 8003312:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003316:	b500      	push	{lr}
 8003318:	b09c      	sub	sp, #112	; 0x70
 800331a:	ab1d      	add	r3, sp, #116	; 0x74
 800331c:	9002      	str	r0, [sp, #8]
 800331e:	9006      	str	r0, [sp, #24]
 8003320:	9107      	str	r1, [sp, #28]
 8003322:	9104      	str	r1, [sp, #16]
 8003324:	4808      	ldr	r0, [pc, #32]	; (8003348 <siprintf+0x38>)
 8003326:	4909      	ldr	r1, [pc, #36]	; (800334c <siprintf+0x3c>)
 8003328:	f853 2b04 	ldr.w	r2, [r3], #4
 800332c:	9105      	str	r1, [sp, #20]
 800332e:	6800      	ldr	r0, [r0, #0]
 8003330:	a902      	add	r1, sp, #8
 8003332:	9301      	str	r3, [sp, #4]
 8003334:	f002 fe96 	bl	8006064 <_svfiprintf_r>
 8003338:	2200      	movs	r2, #0
 800333a:	9b02      	ldr	r3, [sp, #8]
 800333c:	701a      	strb	r2, [r3, #0]
 800333e:	b01c      	add	sp, #112	; 0x70
 8003340:	f85d eb04 	ldr.w	lr, [sp], #4
 8003344:	b003      	add	sp, #12
 8003346:	4770      	bx	lr
 8003348:	20000010 	.word	0x20000010
 800334c:	ffff0208 	.word	0xffff0208

08003350 <sulp>:
 8003350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003354:	460f      	mov	r7, r1
 8003356:	4690      	mov	r8, r2
 8003358:	f002 fc2c 	bl	8005bb4 <__ulp>
 800335c:	4604      	mov	r4, r0
 800335e:	460d      	mov	r5, r1
 8003360:	f1b8 0f00 	cmp.w	r8, #0
 8003364:	d011      	beq.n	800338a <sulp+0x3a>
 8003366:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800336a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800336e:	2b00      	cmp	r3, #0
 8003370:	dd0b      	ble.n	800338a <sulp+0x3a>
 8003372:	2400      	movs	r4, #0
 8003374:	051b      	lsls	r3, r3, #20
 8003376:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800337a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800337e:	4622      	mov	r2, r4
 8003380:	462b      	mov	r3, r5
 8003382:	f7fd f8b9 	bl	80004f8 <__aeabi_dmul>
 8003386:	4604      	mov	r4, r0
 8003388:	460d      	mov	r5, r1
 800338a:	4620      	mov	r0, r4
 800338c:	4629      	mov	r1, r5
 800338e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003392:	0000      	movs	r0, r0
 8003394:	0000      	movs	r0, r0
	...

08003398 <_strtod_l>:
 8003398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800339c:	469b      	mov	fp, r3
 800339e:	2300      	movs	r3, #0
 80033a0:	b0a1      	sub	sp, #132	; 0x84
 80033a2:	931c      	str	r3, [sp, #112]	; 0x70
 80033a4:	4ba1      	ldr	r3, [pc, #644]	; (800362c <_strtod_l+0x294>)
 80033a6:	4682      	mov	sl, r0
 80033a8:	681f      	ldr	r7, [r3, #0]
 80033aa:	460e      	mov	r6, r1
 80033ac:	4638      	mov	r0, r7
 80033ae:	9217      	str	r2, [sp, #92]	; 0x5c
 80033b0:	f7fc fede 	bl	8000170 <strlen>
 80033b4:	f04f 0800 	mov.w	r8, #0
 80033b8:	4604      	mov	r4, r0
 80033ba:	f04f 0900 	mov.w	r9, #0
 80033be:	961b      	str	r6, [sp, #108]	; 0x6c
 80033c0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80033c2:	781a      	ldrb	r2, [r3, #0]
 80033c4:	2a2b      	cmp	r2, #43	; 0x2b
 80033c6:	d04c      	beq.n	8003462 <_strtod_l+0xca>
 80033c8:	d83a      	bhi.n	8003440 <_strtod_l+0xa8>
 80033ca:	2a0d      	cmp	r2, #13
 80033cc:	d833      	bhi.n	8003436 <_strtod_l+0x9e>
 80033ce:	2a08      	cmp	r2, #8
 80033d0:	d833      	bhi.n	800343a <_strtod_l+0xa2>
 80033d2:	2a00      	cmp	r2, #0
 80033d4:	d03d      	beq.n	8003452 <_strtod_l+0xba>
 80033d6:	2300      	movs	r3, #0
 80033d8:	930c      	str	r3, [sp, #48]	; 0x30
 80033da:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80033dc:	782b      	ldrb	r3, [r5, #0]
 80033de:	2b30      	cmp	r3, #48	; 0x30
 80033e0:	f040 80af 	bne.w	8003542 <_strtod_l+0x1aa>
 80033e4:	786b      	ldrb	r3, [r5, #1]
 80033e6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80033ea:	2b58      	cmp	r3, #88	; 0x58
 80033ec:	d16c      	bne.n	80034c8 <_strtod_l+0x130>
 80033ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033f0:	4650      	mov	r0, sl
 80033f2:	9301      	str	r3, [sp, #4]
 80033f4:	ab1c      	add	r3, sp, #112	; 0x70
 80033f6:	9300      	str	r3, [sp, #0]
 80033f8:	4a8d      	ldr	r2, [pc, #564]	; (8003630 <_strtod_l+0x298>)
 80033fa:	f8cd b008 	str.w	fp, [sp, #8]
 80033fe:	ab1d      	add	r3, sp, #116	; 0x74
 8003400:	a91b      	add	r1, sp, #108	; 0x6c
 8003402:	f001 fd2f 	bl	8004e64 <__gethex>
 8003406:	f010 0607 	ands.w	r6, r0, #7
 800340a:	4604      	mov	r4, r0
 800340c:	d005      	beq.n	800341a <_strtod_l+0x82>
 800340e:	2e06      	cmp	r6, #6
 8003410:	d129      	bne.n	8003466 <_strtod_l+0xce>
 8003412:	2300      	movs	r3, #0
 8003414:	3501      	adds	r5, #1
 8003416:	951b      	str	r5, [sp, #108]	; 0x6c
 8003418:	930c      	str	r3, [sp, #48]	; 0x30
 800341a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800341c:	2b00      	cmp	r3, #0
 800341e:	f040 8596 	bne.w	8003f4e <_strtod_l+0xbb6>
 8003422:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003424:	b1d3      	cbz	r3, 800345c <_strtod_l+0xc4>
 8003426:	4642      	mov	r2, r8
 8003428:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800342c:	4610      	mov	r0, r2
 800342e:	4619      	mov	r1, r3
 8003430:	b021      	add	sp, #132	; 0x84
 8003432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003436:	2a20      	cmp	r2, #32
 8003438:	d1cd      	bne.n	80033d6 <_strtod_l+0x3e>
 800343a:	3301      	adds	r3, #1
 800343c:	931b      	str	r3, [sp, #108]	; 0x6c
 800343e:	e7bf      	b.n	80033c0 <_strtod_l+0x28>
 8003440:	2a2d      	cmp	r2, #45	; 0x2d
 8003442:	d1c8      	bne.n	80033d6 <_strtod_l+0x3e>
 8003444:	2201      	movs	r2, #1
 8003446:	920c      	str	r2, [sp, #48]	; 0x30
 8003448:	1c5a      	adds	r2, r3, #1
 800344a:	921b      	str	r2, [sp, #108]	; 0x6c
 800344c:	785b      	ldrb	r3, [r3, #1]
 800344e:	2b00      	cmp	r3, #0
 8003450:	d1c3      	bne.n	80033da <_strtod_l+0x42>
 8003452:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003454:	961b      	str	r6, [sp, #108]	; 0x6c
 8003456:	2b00      	cmp	r3, #0
 8003458:	f040 8577 	bne.w	8003f4a <_strtod_l+0xbb2>
 800345c:	4642      	mov	r2, r8
 800345e:	464b      	mov	r3, r9
 8003460:	e7e4      	b.n	800342c <_strtod_l+0x94>
 8003462:	2200      	movs	r2, #0
 8003464:	e7ef      	b.n	8003446 <_strtod_l+0xae>
 8003466:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003468:	b13a      	cbz	r2, 800347a <_strtod_l+0xe2>
 800346a:	2135      	movs	r1, #53	; 0x35
 800346c:	a81e      	add	r0, sp, #120	; 0x78
 800346e:	f002 fca5 	bl	8005dbc <__copybits>
 8003472:	4650      	mov	r0, sl
 8003474:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003476:	f002 f86d 	bl	8005554 <_Bfree>
 800347a:	3e01      	subs	r6, #1
 800347c:	2e05      	cmp	r6, #5
 800347e:	d807      	bhi.n	8003490 <_strtod_l+0xf8>
 8003480:	e8df f006 	tbb	[pc, r6]
 8003484:	1d180b0e 	.word	0x1d180b0e
 8003488:	030e      	.short	0x030e
 800348a:	f04f 0900 	mov.w	r9, #0
 800348e:	46c8      	mov	r8, r9
 8003490:	0721      	lsls	r1, r4, #28
 8003492:	d5c2      	bpl.n	800341a <_strtod_l+0x82>
 8003494:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8003498:	e7bf      	b.n	800341a <_strtod_l+0x82>
 800349a:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
 800349e:	e7f7      	b.n	8003490 <_strtod_l+0xf8>
 80034a0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80034a2:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
 80034a6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80034aa:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80034ae:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80034b2:	e7ed      	b.n	8003490 <_strtod_l+0xf8>
 80034b4:	f04f 0800 	mov.w	r8, #0
 80034b8:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8003634 <_strtod_l+0x29c>
 80034bc:	e7e8      	b.n	8003490 <_strtod_l+0xf8>
 80034be:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 80034c2:	f04f 38ff 	mov.w	r8, #4294967295
 80034c6:	e7e3      	b.n	8003490 <_strtod_l+0xf8>
 80034c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034ca:	1c5a      	adds	r2, r3, #1
 80034cc:	921b      	str	r2, [sp, #108]	; 0x6c
 80034ce:	785b      	ldrb	r3, [r3, #1]
 80034d0:	2b30      	cmp	r3, #48	; 0x30
 80034d2:	d0f9      	beq.n	80034c8 <_strtod_l+0x130>
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	d0a0      	beq.n	800341a <_strtod_l+0x82>
 80034d8:	2301      	movs	r3, #1
 80034da:	9307      	str	r3, [sp, #28]
 80034dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034de:	220a      	movs	r2, #10
 80034e0:	9308      	str	r3, [sp, #32]
 80034e2:	2300      	movs	r3, #0
 80034e4:	469b      	mov	fp, r3
 80034e6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80034ea:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80034ec:	7805      	ldrb	r5, [r0, #0]
 80034ee:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80034f2:	b2d9      	uxtb	r1, r3
 80034f4:	2909      	cmp	r1, #9
 80034f6:	d926      	bls.n	8003546 <_strtod_l+0x1ae>
 80034f8:	4622      	mov	r2, r4
 80034fa:	4639      	mov	r1, r7
 80034fc:	f002 fec8 	bl	8006290 <strncmp>
 8003500:	2800      	cmp	r0, #0
 8003502:	d032      	beq.n	800356a <_strtod_l+0x1d2>
 8003504:	2000      	movs	r0, #0
 8003506:	462b      	mov	r3, r5
 8003508:	465c      	mov	r4, fp
 800350a:	4602      	mov	r2, r0
 800350c:	9004      	str	r0, [sp, #16]
 800350e:	2b65      	cmp	r3, #101	; 0x65
 8003510:	d001      	beq.n	8003516 <_strtod_l+0x17e>
 8003512:	2b45      	cmp	r3, #69	; 0x45
 8003514:	d113      	bne.n	800353e <_strtod_l+0x1a6>
 8003516:	b91c      	cbnz	r4, 8003520 <_strtod_l+0x188>
 8003518:	9b07      	ldr	r3, [sp, #28]
 800351a:	4303      	orrs	r3, r0
 800351c:	d099      	beq.n	8003452 <_strtod_l+0xba>
 800351e:	2400      	movs	r4, #0
 8003520:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8003522:	1c73      	adds	r3, r6, #1
 8003524:	931b      	str	r3, [sp, #108]	; 0x6c
 8003526:	7873      	ldrb	r3, [r6, #1]
 8003528:	2b2b      	cmp	r3, #43	; 0x2b
 800352a:	d078      	beq.n	800361e <_strtod_l+0x286>
 800352c:	2b2d      	cmp	r3, #45	; 0x2d
 800352e:	d07b      	beq.n	8003628 <_strtod_l+0x290>
 8003530:	2700      	movs	r7, #0
 8003532:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8003536:	2909      	cmp	r1, #9
 8003538:	f240 8082 	bls.w	8003640 <_strtod_l+0x2a8>
 800353c:	961b      	str	r6, [sp, #108]	; 0x6c
 800353e:	2500      	movs	r5, #0
 8003540:	e09e      	b.n	8003680 <_strtod_l+0x2e8>
 8003542:	2300      	movs	r3, #0
 8003544:	e7c9      	b.n	80034da <_strtod_l+0x142>
 8003546:	f1bb 0f08 	cmp.w	fp, #8
 800354a:	bfd5      	itete	le
 800354c:	9906      	ldrle	r1, [sp, #24]
 800354e:	9905      	ldrgt	r1, [sp, #20]
 8003550:	fb02 3301 	mlale	r3, r2, r1, r3
 8003554:	fb02 3301 	mlagt	r3, r2, r1, r3
 8003558:	f100 0001 	add.w	r0, r0, #1
 800355c:	bfd4      	ite	le
 800355e:	9306      	strle	r3, [sp, #24]
 8003560:	9305      	strgt	r3, [sp, #20]
 8003562:	f10b 0b01 	add.w	fp, fp, #1
 8003566:	901b      	str	r0, [sp, #108]	; 0x6c
 8003568:	e7bf      	b.n	80034ea <_strtod_l+0x152>
 800356a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800356c:	191a      	adds	r2, r3, r4
 800356e:	921b      	str	r2, [sp, #108]	; 0x6c
 8003570:	5d1b      	ldrb	r3, [r3, r4]
 8003572:	f1bb 0f00 	cmp.w	fp, #0
 8003576:	d036      	beq.n	80035e6 <_strtod_l+0x24e>
 8003578:	465c      	mov	r4, fp
 800357a:	9004      	str	r0, [sp, #16]
 800357c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8003580:	2a09      	cmp	r2, #9
 8003582:	d912      	bls.n	80035aa <_strtod_l+0x212>
 8003584:	2201      	movs	r2, #1
 8003586:	e7c2      	b.n	800350e <_strtod_l+0x176>
 8003588:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800358a:	3001      	adds	r0, #1
 800358c:	1c5a      	adds	r2, r3, #1
 800358e:	921b      	str	r2, [sp, #108]	; 0x6c
 8003590:	785b      	ldrb	r3, [r3, #1]
 8003592:	2b30      	cmp	r3, #48	; 0x30
 8003594:	d0f8      	beq.n	8003588 <_strtod_l+0x1f0>
 8003596:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 800359a:	2a08      	cmp	r2, #8
 800359c:	f200 84dc 	bhi.w	8003f58 <_strtod_l+0xbc0>
 80035a0:	9004      	str	r0, [sp, #16]
 80035a2:	2000      	movs	r0, #0
 80035a4:	4604      	mov	r4, r0
 80035a6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80035a8:	9208      	str	r2, [sp, #32]
 80035aa:	3b30      	subs	r3, #48	; 0x30
 80035ac:	f100 0201 	add.w	r2, r0, #1
 80035b0:	d013      	beq.n	80035da <_strtod_l+0x242>
 80035b2:	9904      	ldr	r1, [sp, #16]
 80035b4:	1905      	adds	r5, r0, r4
 80035b6:	4411      	add	r1, r2
 80035b8:	9104      	str	r1, [sp, #16]
 80035ba:	4622      	mov	r2, r4
 80035bc:	210a      	movs	r1, #10
 80035be:	42aa      	cmp	r2, r5
 80035c0:	d113      	bne.n	80035ea <_strtod_l+0x252>
 80035c2:	1822      	adds	r2, r4, r0
 80035c4:	2a08      	cmp	r2, #8
 80035c6:	f104 0401 	add.w	r4, r4, #1
 80035ca:	4404      	add	r4, r0
 80035cc:	dc1b      	bgt.n	8003606 <_strtod_l+0x26e>
 80035ce:	220a      	movs	r2, #10
 80035d0:	9906      	ldr	r1, [sp, #24]
 80035d2:	fb02 3301 	mla	r3, r2, r1, r3
 80035d6:	9306      	str	r3, [sp, #24]
 80035d8:	2200      	movs	r2, #0
 80035da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80035dc:	4610      	mov	r0, r2
 80035de:	1c59      	adds	r1, r3, #1
 80035e0:	911b      	str	r1, [sp, #108]	; 0x6c
 80035e2:	785b      	ldrb	r3, [r3, #1]
 80035e4:	e7ca      	b.n	800357c <_strtod_l+0x1e4>
 80035e6:	4658      	mov	r0, fp
 80035e8:	e7d3      	b.n	8003592 <_strtod_l+0x1fa>
 80035ea:	2a08      	cmp	r2, #8
 80035ec:	dc04      	bgt.n	80035f8 <_strtod_l+0x260>
 80035ee:	9f06      	ldr	r7, [sp, #24]
 80035f0:	434f      	muls	r7, r1
 80035f2:	9706      	str	r7, [sp, #24]
 80035f4:	3201      	adds	r2, #1
 80035f6:	e7e2      	b.n	80035be <_strtod_l+0x226>
 80035f8:	1c57      	adds	r7, r2, #1
 80035fa:	2f10      	cmp	r7, #16
 80035fc:	bfde      	ittt	le
 80035fe:	9f05      	ldrle	r7, [sp, #20]
 8003600:	434f      	mulle	r7, r1
 8003602:	9705      	strle	r7, [sp, #20]
 8003604:	e7f6      	b.n	80035f4 <_strtod_l+0x25c>
 8003606:	2c10      	cmp	r4, #16
 8003608:	bfdf      	itttt	le
 800360a:	220a      	movle	r2, #10
 800360c:	9905      	ldrle	r1, [sp, #20]
 800360e:	fb02 3301 	mlale	r3, r2, r1, r3
 8003612:	9305      	strle	r3, [sp, #20]
 8003614:	e7e0      	b.n	80035d8 <_strtod_l+0x240>
 8003616:	2300      	movs	r3, #0
 8003618:	2201      	movs	r2, #1
 800361a:	9304      	str	r3, [sp, #16]
 800361c:	e77c      	b.n	8003518 <_strtod_l+0x180>
 800361e:	2700      	movs	r7, #0
 8003620:	1cb3      	adds	r3, r6, #2
 8003622:	931b      	str	r3, [sp, #108]	; 0x6c
 8003624:	78b3      	ldrb	r3, [r6, #2]
 8003626:	e784      	b.n	8003532 <_strtod_l+0x19a>
 8003628:	2701      	movs	r7, #1
 800362a:	e7f9      	b.n	8003620 <_strtod_l+0x288>
 800362c:	080071c0 	.word	0x080071c0
 8003630:	08006f70 	.word	0x08006f70
 8003634:	7ff00000 	.word	0x7ff00000
 8003638:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800363a:	1c59      	adds	r1, r3, #1
 800363c:	911b      	str	r1, [sp, #108]	; 0x6c
 800363e:	785b      	ldrb	r3, [r3, #1]
 8003640:	2b30      	cmp	r3, #48	; 0x30
 8003642:	d0f9      	beq.n	8003638 <_strtod_l+0x2a0>
 8003644:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8003648:	2908      	cmp	r1, #8
 800364a:	f63f af78 	bhi.w	800353e <_strtod_l+0x1a6>
 800364e:	f04f 0e0a 	mov.w	lr, #10
 8003652:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
 8003656:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003658:	9309      	str	r3, [sp, #36]	; 0x24
 800365a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800365c:	1c59      	adds	r1, r3, #1
 800365e:	911b      	str	r1, [sp, #108]	; 0x6c
 8003660:	785b      	ldrb	r3, [r3, #1]
 8003662:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8003666:	2d09      	cmp	r5, #9
 8003668:	d935      	bls.n	80036d6 <_strtod_l+0x33e>
 800366a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800366c:	1b49      	subs	r1, r1, r5
 800366e:	2908      	cmp	r1, #8
 8003670:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8003674:	dc02      	bgt.n	800367c <_strtod_l+0x2e4>
 8003676:	4565      	cmp	r5, ip
 8003678:	bfa8      	it	ge
 800367a:	4665      	movge	r5, ip
 800367c:	b107      	cbz	r7, 8003680 <_strtod_l+0x2e8>
 800367e:	426d      	negs	r5, r5
 8003680:	2c00      	cmp	r4, #0
 8003682:	d14c      	bne.n	800371e <_strtod_l+0x386>
 8003684:	9907      	ldr	r1, [sp, #28]
 8003686:	4301      	orrs	r1, r0
 8003688:	f47f aec7 	bne.w	800341a <_strtod_l+0x82>
 800368c:	2a00      	cmp	r2, #0
 800368e:	f47f aee0 	bne.w	8003452 <_strtod_l+0xba>
 8003692:	2b69      	cmp	r3, #105	; 0x69
 8003694:	d026      	beq.n	80036e4 <_strtod_l+0x34c>
 8003696:	dc23      	bgt.n	80036e0 <_strtod_l+0x348>
 8003698:	2b49      	cmp	r3, #73	; 0x49
 800369a:	d023      	beq.n	80036e4 <_strtod_l+0x34c>
 800369c:	2b4e      	cmp	r3, #78	; 0x4e
 800369e:	f47f aed8 	bne.w	8003452 <_strtod_l+0xba>
 80036a2:	499c      	ldr	r1, [pc, #624]	; (8003914 <_strtod_l+0x57c>)
 80036a4:	a81b      	add	r0, sp, #108	; 0x6c
 80036a6:	f001 fe2b 	bl	8005300 <__match>
 80036aa:	2800      	cmp	r0, #0
 80036ac:	f43f aed1 	beq.w	8003452 <_strtod_l+0xba>
 80036b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80036b2:	781b      	ldrb	r3, [r3, #0]
 80036b4:	2b28      	cmp	r3, #40	; 0x28
 80036b6:	d12c      	bne.n	8003712 <_strtod_l+0x37a>
 80036b8:	4997      	ldr	r1, [pc, #604]	; (8003918 <_strtod_l+0x580>)
 80036ba:	aa1e      	add	r2, sp, #120	; 0x78
 80036bc:	a81b      	add	r0, sp, #108	; 0x6c
 80036be:	f001 fe33 	bl	8005328 <__hexnan>
 80036c2:	2805      	cmp	r0, #5
 80036c4:	d125      	bne.n	8003712 <_strtod_l+0x37a>
 80036c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80036c8:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 80036cc:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80036d0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80036d4:	e6a1      	b.n	800341a <_strtod_l+0x82>
 80036d6:	fb0e 3c0c 	mla	ip, lr, ip, r3
 80036da:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 80036de:	e7bc      	b.n	800365a <_strtod_l+0x2c2>
 80036e0:	2b6e      	cmp	r3, #110	; 0x6e
 80036e2:	e7dc      	b.n	800369e <_strtod_l+0x306>
 80036e4:	498d      	ldr	r1, [pc, #564]	; (800391c <_strtod_l+0x584>)
 80036e6:	a81b      	add	r0, sp, #108	; 0x6c
 80036e8:	f001 fe0a 	bl	8005300 <__match>
 80036ec:	2800      	cmp	r0, #0
 80036ee:	f43f aeb0 	beq.w	8003452 <_strtod_l+0xba>
 80036f2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80036f4:	498a      	ldr	r1, [pc, #552]	; (8003920 <_strtod_l+0x588>)
 80036f6:	3b01      	subs	r3, #1
 80036f8:	a81b      	add	r0, sp, #108	; 0x6c
 80036fa:	931b      	str	r3, [sp, #108]	; 0x6c
 80036fc:	f001 fe00 	bl	8005300 <__match>
 8003700:	b910      	cbnz	r0, 8003708 <_strtod_l+0x370>
 8003702:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003704:	3301      	adds	r3, #1
 8003706:	931b      	str	r3, [sp, #108]	; 0x6c
 8003708:	f04f 0800 	mov.w	r8, #0
 800370c:	f8df 9220 	ldr.w	r9, [pc, #544]	; 8003930 <_strtod_l+0x598>
 8003710:	e683      	b.n	800341a <_strtod_l+0x82>
 8003712:	4884      	ldr	r0, [pc, #528]	; (8003924 <_strtod_l+0x58c>)
 8003714:	f002 fda6 	bl	8006264 <nan>
 8003718:	4680      	mov	r8, r0
 800371a:	4689      	mov	r9, r1
 800371c:	e67d      	b.n	800341a <_strtod_l+0x82>
 800371e:	9b04      	ldr	r3, [sp, #16]
 8003720:	f1bb 0f00 	cmp.w	fp, #0
 8003724:	bf08      	it	eq
 8003726:	46a3      	moveq	fp, r4
 8003728:	1aeb      	subs	r3, r5, r3
 800372a:	2c10      	cmp	r4, #16
 800372c:	9806      	ldr	r0, [sp, #24]
 800372e:	4626      	mov	r6, r4
 8003730:	9307      	str	r3, [sp, #28]
 8003732:	bfa8      	it	ge
 8003734:	2610      	movge	r6, #16
 8003736:	f7fc fe65 	bl	8000404 <__aeabi_ui2d>
 800373a:	2c09      	cmp	r4, #9
 800373c:	4680      	mov	r8, r0
 800373e:	4689      	mov	r9, r1
 8003740:	dd13      	ble.n	800376a <_strtod_l+0x3d2>
 8003742:	4b79      	ldr	r3, [pc, #484]	; (8003928 <_strtod_l+0x590>)
 8003744:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003748:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800374c:	f7fc fed4 	bl	80004f8 <__aeabi_dmul>
 8003750:	4680      	mov	r8, r0
 8003752:	9805      	ldr	r0, [sp, #20]
 8003754:	4689      	mov	r9, r1
 8003756:	f7fc fe55 	bl	8000404 <__aeabi_ui2d>
 800375a:	4602      	mov	r2, r0
 800375c:	460b      	mov	r3, r1
 800375e:	4640      	mov	r0, r8
 8003760:	4649      	mov	r1, r9
 8003762:	f7fc fd13 	bl	800018c <__adddf3>
 8003766:	4680      	mov	r8, r0
 8003768:	4689      	mov	r9, r1
 800376a:	2c0f      	cmp	r4, #15
 800376c:	dc36      	bgt.n	80037dc <_strtod_l+0x444>
 800376e:	9b07      	ldr	r3, [sp, #28]
 8003770:	2b00      	cmp	r3, #0
 8003772:	f43f ae52 	beq.w	800341a <_strtod_l+0x82>
 8003776:	dd22      	ble.n	80037be <_strtod_l+0x426>
 8003778:	2b16      	cmp	r3, #22
 800377a:	dc09      	bgt.n	8003790 <_strtod_l+0x3f8>
 800377c:	4c6a      	ldr	r4, [pc, #424]	; (8003928 <_strtod_l+0x590>)
 800377e:	4642      	mov	r2, r8
 8003780:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
 8003784:	464b      	mov	r3, r9
 8003786:	e9d4 0100 	ldrd	r0, r1, [r4]
 800378a:	f7fc feb5 	bl	80004f8 <__aeabi_dmul>
 800378e:	e7c3      	b.n	8003718 <_strtod_l+0x380>
 8003790:	9a07      	ldr	r2, [sp, #28]
 8003792:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8003796:	4293      	cmp	r3, r2
 8003798:	db20      	blt.n	80037dc <_strtod_l+0x444>
 800379a:	4d63      	ldr	r5, [pc, #396]	; (8003928 <_strtod_l+0x590>)
 800379c:	f1c4 040f 	rsb	r4, r4, #15
 80037a0:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 80037a4:	4642      	mov	r2, r8
 80037a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80037aa:	464b      	mov	r3, r9
 80037ac:	f7fc fea4 	bl	80004f8 <__aeabi_dmul>
 80037b0:	9b07      	ldr	r3, [sp, #28]
 80037b2:	1b1c      	subs	r4, r3, r4
 80037b4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 80037b8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80037bc:	e7e5      	b.n	800378a <_strtod_l+0x3f2>
 80037be:	9b07      	ldr	r3, [sp, #28]
 80037c0:	3316      	adds	r3, #22
 80037c2:	db0b      	blt.n	80037dc <_strtod_l+0x444>
 80037c4:	9b04      	ldr	r3, [sp, #16]
 80037c6:	4a58      	ldr	r2, [pc, #352]	; (8003928 <_strtod_l+0x590>)
 80037c8:	1b5d      	subs	r5, r3, r5
 80037ca:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 80037ce:	4640      	mov	r0, r8
 80037d0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80037d4:	4649      	mov	r1, r9
 80037d6:	f7fc ffb9 	bl	800074c <__aeabi_ddiv>
 80037da:	e79d      	b.n	8003718 <_strtod_l+0x380>
 80037dc:	9b07      	ldr	r3, [sp, #28]
 80037de:	1ba6      	subs	r6, r4, r6
 80037e0:	441e      	add	r6, r3
 80037e2:	2e00      	cmp	r6, #0
 80037e4:	dd71      	ble.n	80038ca <_strtod_l+0x532>
 80037e6:	f016 030f 	ands.w	r3, r6, #15
 80037ea:	d00a      	beq.n	8003802 <_strtod_l+0x46a>
 80037ec:	494e      	ldr	r1, [pc, #312]	; (8003928 <_strtod_l+0x590>)
 80037ee:	4642      	mov	r2, r8
 80037f0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80037f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80037f8:	464b      	mov	r3, r9
 80037fa:	f7fc fe7d 	bl	80004f8 <__aeabi_dmul>
 80037fe:	4680      	mov	r8, r0
 8003800:	4689      	mov	r9, r1
 8003802:	f036 060f 	bics.w	r6, r6, #15
 8003806:	d050      	beq.n	80038aa <_strtod_l+0x512>
 8003808:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800380c:	dd27      	ble.n	800385e <_strtod_l+0x4c6>
 800380e:	f04f 0b00 	mov.w	fp, #0
 8003812:	f8cd b010 	str.w	fp, [sp, #16]
 8003816:	f8cd b020 	str.w	fp, [sp, #32]
 800381a:	f8cd b018 	str.w	fp, [sp, #24]
 800381e:	2322      	movs	r3, #34	; 0x22
 8003820:	f04f 0800 	mov.w	r8, #0
 8003824:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8003930 <_strtod_l+0x598>
 8003828:	f8ca 3000 	str.w	r3, [sl]
 800382c:	9b08      	ldr	r3, [sp, #32]
 800382e:	2b00      	cmp	r3, #0
 8003830:	f43f adf3 	beq.w	800341a <_strtod_l+0x82>
 8003834:	4650      	mov	r0, sl
 8003836:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003838:	f001 fe8c 	bl	8005554 <_Bfree>
 800383c:	4650      	mov	r0, sl
 800383e:	9906      	ldr	r1, [sp, #24]
 8003840:	f001 fe88 	bl	8005554 <_Bfree>
 8003844:	4650      	mov	r0, sl
 8003846:	9904      	ldr	r1, [sp, #16]
 8003848:	f001 fe84 	bl	8005554 <_Bfree>
 800384c:	4650      	mov	r0, sl
 800384e:	9908      	ldr	r1, [sp, #32]
 8003850:	f001 fe80 	bl	8005554 <_Bfree>
 8003854:	4659      	mov	r1, fp
 8003856:	4650      	mov	r0, sl
 8003858:	f001 fe7c 	bl	8005554 <_Bfree>
 800385c:	e5dd      	b.n	800341a <_strtod_l+0x82>
 800385e:	2300      	movs	r3, #0
 8003860:	4640      	mov	r0, r8
 8003862:	4649      	mov	r1, r9
 8003864:	461f      	mov	r7, r3
 8003866:	1136      	asrs	r6, r6, #4
 8003868:	2e01      	cmp	r6, #1
 800386a:	dc21      	bgt.n	80038b0 <_strtod_l+0x518>
 800386c:	b10b      	cbz	r3, 8003872 <_strtod_l+0x4da>
 800386e:	4680      	mov	r8, r0
 8003870:	4689      	mov	r9, r1
 8003872:	4b2e      	ldr	r3, [pc, #184]	; (800392c <_strtod_l+0x594>)
 8003874:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8003878:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800387c:	4642      	mov	r2, r8
 800387e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003882:	464b      	mov	r3, r9
 8003884:	f7fc fe38 	bl	80004f8 <__aeabi_dmul>
 8003888:	4b29      	ldr	r3, [pc, #164]	; (8003930 <_strtod_l+0x598>)
 800388a:	460a      	mov	r2, r1
 800388c:	400b      	ands	r3, r1
 800388e:	4929      	ldr	r1, [pc, #164]	; (8003934 <_strtod_l+0x59c>)
 8003890:	4680      	mov	r8, r0
 8003892:	428b      	cmp	r3, r1
 8003894:	d8bb      	bhi.n	800380e <_strtod_l+0x476>
 8003896:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800389a:	428b      	cmp	r3, r1
 800389c:	bf86      	itte	hi
 800389e:	f04f 38ff 	movhi.w	r8, #4294967295
 80038a2:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8003938 <_strtod_l+0x5a0>
 80038a6:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80038aa:	2300      	movs	r3, #0
 80038ac:	9305      	str	r3, [sp, #20]
 80038ae:	e07e      	b.n	80039ae <_strtod_l+0x616>
 80038b0:	07f2      	lsls	r2, r6, #31
 80038b2:	d507      	bpl.n	80038c4 <_strtod_l+0x52c>
 80038b4:	4b1d      	ldr	r3, [pc, #116]	; (800392c <_strtod_l+0x594>)
 80038b6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80038ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038be:	f7fc fe1b 	bl	80004f8 <__aeabi_dmul>
 80038c2:	2301      	movs	r3, #1
 80038c4:	3701      	adds	r7, #1
 80038c6:	1076      	asrs	r6, r6, #1
 80038c8:	e7ce      	b.n	8003868 <_strtod_l+0x4d0>
 80038ca:	d0ee      	beq.n	80038aa <_strtod_l+0x512>
 80038cc:	4276      	negs	r6, r6
 80038ce:	f016 020f 	ands.w	r2, r6, #15
 80038d2:	d00a      	beq.n	80038ea <_strtod_l+0x552>
 80038d4:	4b14      	ldr	r3, [pc, #80]	; (8003928 <_strtod_l+0x590>)
 80038d6:	4640      	mov	r0, r8
 80038d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80038dc:	4649      	mov	r1, r9
 80038de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038e2:	f7fc ff33 	bl	800074c <__aeabi_ddiv>
 80038e6:	4680      	mov	r8, r0
 80038e8:	4689      	mov	r9, r1
 80038ea:	1136      	asrs	r6, r6, #4
 80038ec:	d0dd      	beq.n	80038aa <_strtod_l+0x512>
 80038ee:	2e1f      	cmp	r6, #31
 80038f0:	dd24      	ble.n	800393c <_strtod_l+0x5a4>
 80038f2:	f04f 0b00 	mov.w	fp, #0
 80038f6:	f8cd b010 	str.w	fp, [sp, #16]
 80038fa:	f8cd b020 	str.w	fp, [sp, #32]
 80038fe:	f8cd b018 	str.w	fp, [sp, #24]
 8003902:	2322      	movs	r3, #34	; 0x22
 8003904:	f04f 0800 	mov.w	r8, #0
 8003908:	f04f 0900 	mov.w	r9, #0
 800390c:	f8ca 3000 	str.w	r3, [sl]
 8003910:	e78c      	b.n	800382c <_strtod_l+0x494>
 8003912:	bf00      	nop
 8003914:	08006f41 	.word	0x08006f41
 8003918:	08006f84 	.word	0x08006f84
 800391c:	08006f39 	.word	0x08006f39
 8003920:	080070c4 	.word	0x080070c4
 8003924:	08007380 	.word	0x08007380
 8003928:	08007260 	.word	0x08007260
 800392c:	08007238 	.word	0x08007238
 8003930:	7ff00000 	.word	0x7ff00000
 8003934:	7ca00000 	.word	0x7ca00000
 8003938:	7fefffff 	.word	0x7fefffff
 800393c:	f016 0310 	ands.w	r3, r6, #16
 8003940:	bf18      	it	ne
 8003942:	236a      	movne	r3, #106	; 0x6a
 8003944:	4640      	mov	r0, r8
 8003946:	9305      	str	r3, [sp, #20]
 8003948:	4649      	mov	r1, r9
 800394a:	2300      	movs	r3, #0
 800394c:	4fb2      	ldr	r7, [pc, #712]	; (8003c18 <_strtod_l+0x880>)
 800394e:	07f2      	lsls	r2, r6, #31
 8003950:	d504      	bpl.n	800395c <_strtod_l+0x5c4>
 8003952:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003956:	f7fc fdcf 	bl	80004f8 <__aeabi_dmul>
 800395a:	2301      	movs	r3, #1
 800395c:	1076      	asrs	r6, r6, #1
 800395e:	f107 0708 	add.w	r7, r7, #8
 8003962:	d1f4      	bne.n	800394e <_strtod_l+0x5b6>
 8003964:	b10b      	cbz	r3, 800396a <_strtod_l+0x5d2>
 8003966:	4680      	mov	r8, r0
 8003968:	4689      	mov	r9, r1
 800396a:	9b05      	ldr	r3, [sp, #20]
 800396c:	b1bb      	cbz	r3, 800399e <_strtod_l+0x606>
 800396e:	f3c9 530a 	ubfx	r3, r9, #20, #11
 8003972:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003976:	2b00      	cmp	r3, #0
 8003978:	4649      	mov	r1, r9
 800397a:	dd10      	ble.n	800399e <_strtod_l+0x606>
 800397c:	2b1f      	cmp	r3, #31
 800397e:	f340 812b 	ble.w	8003bd8 <_strtod_l+0x840>
 8003982:	2b34      	cmp	r3, #52	; 0x34
 8003984:	bfd8      	it	le
 8003986:	f04f 32ff 	movle.w	r2, #4294967295
 800398a:	f04f 0800 	mov.w	r8, #0
 800398e:	bfcf      	iteee	gt
 8003990:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8003994:	3b20      	suble	r3, #32
 8003996:	fa02 f303 	lslle.w	r3, r2, r3
 800399a:	ea03 0901 	andle.w	r9, r3, r1
 800399e:	2200      	movs	r2, #0
 80039a0:	2300      	movs	r3, #0
 80039a2:	4640      	mov	r0, r8
 80039a4:	4649      	mov	r1, r9
 80039a6:	f7fd f80f 	bl	80009c8 <__aeabi_dcmpeq>
 80039aa:	2800      	cmp	r0, #0
 80039ac:	d1a1      	bne.n	80038f2 <_strtod_l+0x55a>
 80039ae:	9b06      	ldr	r3, [sp, #24]
 80039b0:	465a      	mov	r2, fp
 80039b2:	9300      	str	r3, [sp, #0]
 80039b4:	4650      	mov	r0, sl
 80039b6:	4623      	mov	r3, r4
 80039b8:	9908      	ldr	r1, [sp, #32]
 80039ba:	f001 fe37 	bl	800562c <__s2b>
 80039be:	9008      	str	r0, [sp, #32]
 80039c0:	2800      	cmp	r0, #0
 80039c2:	f43f af24 	beq.w	800380e <_strtod_l+0x476>
 80039c6:	9b04      	ldr	r3, [sp, #16]
 80039c8:	f04f 0b00 	mov.w	fp, #0
 80039cc:	1b5d      	subs	r5, r3, r5
 80039ce:	9b07      	ldr	r3, [sp, #28]
 80039d0:	f8cd b010 	str.w	fp, [sp, #16]
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	bfb4      	ite	lt
 80039d8:	462b      	movlt	r3, r5
 80039da:	2300      	movge	r3, #0
 80039dc:	930e      	str	r3, [sp, #56]	; 0x38
 80039de:	9b07      	ldr	r3, [sp, #28]
 80039e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80039e4:	9316      	str	r3, [sp, #88]	; 0x58
 80039e6:	9b08      	ldr	r3, [sp, #32]
 80039e8:	4650      	mov	r0, sl
 80039ea:	6859      	ldr	r1, [r3, #4]
 80039ec:	f001 fd72 	bl	80054d4 <_Balloc>
 80039f0:	9006      	str	r0, [sp, #24]
 80039f2:	2800      	cmp	r0, #0
 80039f4:	f43f af13 	beq.w	800381e <_strtod_l+0x486>
 80039f8:	9b08      	ldr	r3, [sp, #32]
 80039fa:	300c      	adds	r0, #12
 80039fc:	691a      	ldr	r2, [r3, #16]
 80039fe:	f103 010c 	add.w	r1, r3, #12
 8003a02:	3202      	adds	r2, #2
 8003a04:	0092      	lsls	r2, r2, #2
 8003a06:	f001 fd57 	bl	80054b8 <memcpy>
 8003a0a:	ab1e      	add	r3, sp, #120	; 0x78
 8003a0c:	9301      	str	r3, [sp, #4]
 8003a0e:	ab1d      	add	r3, sp, #116	; 0x74
 8003a10:	9300      	str	r3, [sp, #0]
 8003a12:	4642      	mov	r2, r8
 8003a14:	464b      	mov	r3, r9
 8003a16:	4650      	mov	r0, sl
 8003a18:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8003a1c:	f002 f944 	bl	8005ca8 <__d2b>
 8003a20:	901c      	str	r0, [sp, #112]	; 0x70
 8003a22:	2800      	cmp	r0, #0
 8003a24:	f43f aefb 	beq.w	800381e <_strtod_l+0x486>
 8003a28:	2101      	movs	r1, #1
 8003a2a:	4650      	mov	r0, sl
 8003a2c:	f001 fe96 	bl	800575c <__i2b>
 8003a30:	4603      	mov	r3, r0
 8003a32:	9004      	str	r0, [sp, #16]
 8003a34:	2800      	cmp	r0, #0
 8003a36:	f43f aef2 	beq.w	800381e <_strtod_l+0x486>
 8003a3a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8003a3c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003a3e:	2d00      	cmp	r5, #0
 8003a40:	bfab      	itete	ge
 8003a42:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003a44:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8003a46:	18ee      	addge	r6, r5, r3
 8003a48:	1b5c      	sublt	r4, r3, r5
 8003a4a:	9b05      	ldr	r3, [sp, #20]
 8003a4c:	bfa8      	it	ge
 8003a4e:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8003a50:	eba5 0503 	sub.w	r5, r5, r3
 8003a54:	4415      	add	r5, r2
 8003a56:	4b71      	ldr	r3, [pc, #452]	; (8003c1c <_strtod_l+0x884>)
 8003a58:	f105 35ff 	add.w	r5, r5, #4294967295
 8003a5c:	bfb8      	it	lt
 8003a5e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003a60:	429d      	cmp	r5, r3
 8003a62:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003a66:	f280 80c9 	bge.w	8003bfc <_strtod_l+0x864>
 8003a6a:	1b5b      	subs	r3, r3, r5
 8003a6c:	2b1f      	cmp	r3, #31
 8003a6e:	f04f 0701 	mov.w	r7, #1
 8003a72:	eba2 0203 	sub.w	r2, r2, r3
 8003a76:	f300 80b6 	bgt.w	8003be6 <_strtod_l+0x84e>
 8003a7a:	2500      	movs	r5, #0
 8003a7c:	fa07 f303 	lsl.w	r3, r7, r3
 8003a80:	930f      	str	r3, [sp, #60]	; 0x3c
 8003a82:	18b7      	adds	r7, r6, r2
 8003a84:	9b05      	ldr	r3, [sp, #20]
 8003a86:	42be      	cmp	r6, r7
 8003a88:	4414      	add	r4, r2
 8003a8a:	441c      	add	r4, r3
 8003a8c:	4633      	mov	r3, r6
 8003a8e:	bfa8      	it	ge
 8003a90:	463b      	movge	r3, r7
 8003a92:	42a3      	cmp	r3, r4
 8003a94:	bfa8      	it	ge
 8003a96:	4623      	movge	r3, r4
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	bfc2      	ittt	gt
 8003a9c:	1aff      	subgt	r7, r7, r3
 8003a9e:	1ae4      	subgt	r4, r4, r3
 8003aa0:	1af6      	subgt	r6, r6, r3
 8003aa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	dd17      	ble.n	8003ad8 <_strtod_l+0x740>
 8003aa8:	461a      	mov	r2, r3
 8003aaa:	4650      	mov	r0, sl
 8003aac:	9904      	ldr	r1, [sp, #16]
 8003aae:	f001 ff0f 	bl	80058d0 <__pow5mult>
 8003ab2:	9004      	str	r0, [sp, #16]
 8003ab4:	2800      	cmp	r0, #0
 8003ab6:	f43f aeb2 	beq.w	800381e <_strtod_l+0x486>
 8003aba:	4601      	mov	r1, r0
 8003abc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003abe:	4650      	mov	r0, sl
 8003ac0:	f001 fe62 	bl	8005788 <__multiply>
 8003ac4:	9009      	str	r0, [sp, #36]	; 0x24
 8003ac6:	2800      	cmp	r0, #0
 8003ac8:	f43f aea9 	beq.w	800381e <_strtod_l+0x486>
 8003acc:	4650      	mov	r0, sl
 8003ace:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003ad0:	f001 fd40 	bl	8005554 <_Bfree>
 8003ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ad6:	931c      	str	r3, [sp, #112]	; 0x70
 8003ad8:	2f00      	cmp	r7, #0
 8003ada:	f300 8093 	bgt.w	8003c04 <_strtod_l+0x86c>
 8003ade:	9b07      	ldr	r3, [sp, #28]
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	dd08      	ble.n	8003af6 <_strtod_l+0x75e>
 8003ae4:	4650      	mov	r0, sl
 8003ae6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003ae8:	9906      	ldr	r1, [sp, #24]
 8003aea:	f001 fef1 	bl	80058d0 <__pow5mult>
 8003aee:	9006      	str	r0, [sp, #24]
 8003af0:	2800      	cmp	r0, #0
 8003af2:	f43f ae94 	beq.w	800381e <_strtod_l+0x486>
 8003af6:	2c00      	cmp	r4, #0
 8003af8:	dd08      	ble.n	8003b0c <_strtod_l+0x774>
 8003afa:	4622      	mov	r2, r4
 8003afc:	4650      	mov	r0, sl
 8003afe:	9906      	ldr	r1, [sp, #24]
 8003b00:	f001 ff40 	bl	8005984 <__lshift>
 8003b04:	9006      	str	r0, [sp, #24]
 8003b06:	2800      	cmp	r0, #0
 8003b08:	f43f ae89 	beq.w	800381e <_strtod_l+0x486>
 8003b0c:	2e00      	cmp	r6, #0
 8003b0e:	dd08      	ble.n	8003b22 <_strtod_l+0x78a>
 8003b10:	4632      	mov	r2, r6
 8003b12:	4650      	mov	r0, sl
 8003b14:	9904      	ldr	r1, [sp, #16]
 8003b16:	f001 ff35 	bl	8005984 <__lshift>
 8003b1a:	9004      	str	r0, [sp, #16]
 8003b1c:	2800      	cmp	r0, #0
 8003b1e:	f43f ae7e 	beq.w	800381e <_strtod_l+0x486>
 8003b22:	4650      	mov	r0, sl
 8003b24:	9a06      	ldr	r2, [sp, #24]
 8003b26:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003b28:	f001 ffb4 	bl	8005a94 <__mdiff>
 8003b2c:	4683      	mov	fp, r0
 8003b2e:	2800      	cmp	r0, #0
 8003b30:	f43f ae75 	beq.w	800381e <_strtod_l+0x486>
 8003b34:	2400      	movs	r4, #0
 8003b36:	68c3      	ldr	r3, [r0, #12]
 8003b38:	9904      	ldr	r1, [sp, #16]
 8003b3a:	60c4      	str	r4, [r0, #12]
 8003b3c:	930d      	str	r3, [sp, #52]	; 0x34
 8003b3e:	f001 ff8d 	bl	8005a5c <__mcmp>
 8003b42:	42a0      	cmp	r0, r4
 8003b44:	da70      	bge.n	8003c28 <_strtod_l+0x890>
 8003b46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003b48:	ea53 0308 	orrs.w	r3, r3, r8
 8003b4c:	f040 8096 	bne.w	8003c7c <_strtod_l+0x8e4>
 8003b50:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	f040 8091 	bne.w	8003c7c <_strtod_l+0x8e4>
 8003b5a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003b5e:	0d1b      	lsrs	r3, r3, #20
 8003b60:	051b      	lsls	r3, r3, #20
 8003b62:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003b66:	f240 8089 	bls.w	8003c7c <_strtod_l+0x8e4>
 8003b6a:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003b6e:	b923      	cbnz	r3, 8003b7a <_strtod_l+0x7e2>
 8003b70:	f8db 3010 	ldr.w	r3, [fp, #16]
 8003b74:	2b01      	cmp	r3, #1
 8003b76:	f340 8081 	ble.w	8003c7c <_strtod_l+0x8e4>
 8003b7a:	4659      	mov	r1, fp
 8003b7c:	2201      	movs	r2, #1
 8003b7e:	4650      	mov	r0, sl
 8003b80:	f001 ff00 	bl	8005984 <__lshift>
 8003b84:	9904      	ldr	r1, [sp, #16]
 8003b86:	4683      	mov	fp, r0
 8003b88:	f001 ff68 	bl	8005a5c <__mcmp>
 8003b8c:	2800      	cmp	r0, #0
 8003b8e:	dd75      	ble.n	8003c7c <_strtod_l+0x8e4>
 8003b90:	9905      	ldr	r1, [sp, #20]
 8003b92:	464b      	mov	r3, r9
 8003b94:	4a22      	ldr	r2, [pc, #136]	; (8003c20 <_strtod_l+0x888>)
 8003b96:	2900      	cmp	r1, #0
 8003b98:	f000 8091 	beq.w	8003cbe <_strtod_l+0x926>
 8003b9c:	ea02 0109 	and.w	r1, r2, r9
 8003ba0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003ba4:	f300 808b 	bgt.w	8003cbe <_strtod_l+0x926>
 8003ba8:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003bac:	f77f aea9 	ble.w	8003902 <_strtod_l+0x56a>
 8003bb0:	2300      	movs	r3, #0
 8003bb2:	4a1c      	ldr	r2, [pc, #112]	; (8003c24 <_strtod_l+0x88c>)
 8003bb4:	4640      	mov	r0, r8
 8003bb6:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003bba:	4649      	mov	r1, r9
 8003bbc:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003bc0:	f7fc fc9a 	bl	80004f8 <__aeabi_dmul>
 8003bc4:	460b      	mov	r3, r1
 8003bc6:	4303      	orrs	r3, r0
 8003bc8:	bf08      	it	eq
 8003bca:	2322      	moveq	r3, #34	; 0x22
 8003bcc:	4680      	mov	r8, r0
 8003bce:	4689      	mov	r9, r1
 8003bd0:	bf08      	it	eq
 8003bd2:	f8ca 3000 	streq.w	r3, [sl]
 8003bd6:	e62d      	b.n	8003834 <_strtod_l+0x49c>
 8003bd8:	f04f 32ff 	mov.w	r2, #4294967295
 8003bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8003be0:	ea03 0808 	and.w	r8, r3, r8
 8003be4:	e6db      	b.n	800399e <_strtod_l+0x606>
 8003be6:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003bea:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003bee:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003bf2:	35e2      	adds	r5, #226	; 0xe2
 8003bf4:	fa07 f505 	lsl.w	r5, r7, r5
 8003bf8:	970f      	str	r7, [sp, #60]	; 0x3c
 8003bfa:	e742      	b.n	8003a82 <_strtod_l+0x6ea>
 8003bfc:	2301      	movs	r3, #1
 8003bfe:	2500      	movs	r5, #0
 8003c00:	930f      	str	r3, [sp, #60]	; 0x3c
 8003c02:	e73e      	b.n	8003a82 <_strtod_l+0x6ea>
 8003c04:	463a      	mov	r2, r7
 8003c06:	4650      	mov	r0, sl
 8003c08:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003c0a:	f001 febb 	bl	8005984 <__lshift>
 8003c0e:	901c      	str	r0, [sp, #112]	; 0x70
 8003c10:	2800      	cmp	r0, #0
 8003c12:	f47f af64 	bne.w	8003ade <_strtod_l+0x746>
 8003c16:	e602      	b.n	800381e <_strtod_l+0x486>
 8003c18:	08006f98 	.word	0x08006f98
 8003c1c:	fffffc02 	.word	0xfffffc02
 8003c20:	7ff00000 	.word	0x7ff00000
 8003c24:	39500000 	.word	0x39500000
 8003c28:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003c2c:	d166      	bne.n	8003cfc <_strtod_l+0x964>
 8003c2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003c30:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c34:	b35a      	cbz	r2, 8003c8e <_strtod_l+0x8f6>
 8003c36:	4a9c      	ldr	r2, [pc, #624]	; (8003ea8 <_strtod_l+0xb10>)
 8003c38:	4293      	cmp	r3, r2
 8003c3a:	d12c      	bne.n	8003c96 <_strtod_l+0x8fe>
 8003c3c:	9b05      	ldr	r3, [sp, #20]
 8003c3e:	4640      	mov	r0, r8
 8003c40:	b303      	cbz	r3, 8003c84 <_strtod_l+0x8ec>
 8003c42:	464b      	mov	r3, r9
 8003c44:	4a99      	ldr	r2, [pc, #612]	; (8003eac <_strtod_l+0xb14>)
 8003c46:	f04f 31ff 	mov.w	r1, #4294967295
 8003c4a:	401a      	ands	r2, r3
 8003c4c:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003c50:	d81b      	bhi.n	8003c8a <_strtod_l+0x8f2>
 8003c52:	0d12      	lsrs	r2, r2, #20
 8003c54:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003c58:	fa01 f303 	lsl.w	r3, r1, r3
 8003c5c:	4298      	cmp	r0, r3
 8003c5e:	d11a      	bne.n	8003c96 <_strtod_l+0x8fe>
 8003c60:	4b93      	ldr	r3, [pc, #588]	; (8003eb0 <_strtod_l+0xb18>)
 8003c62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003c64:	429a      	cmp	r2, r3
 8003c66:	d102      	bne.n	8003c6e <_strtod_l+0x8d6>
 8003c68:	3001      	adds	r0, #1
 8003c6a:	f43f add8 	beq.w	800381e <_strtod_l+0x486>
 8003c6e:	f04f 0800 	mov.w	r8, #0
 8003c72:	4b8e      	ldr	r3, [pc, #568]	; (8003eac <_strtod_l+0xb14>)
 8003c74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003c76:	401a      	ands	r2, r3
 8003c78:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003c7c:	9b05      	ldr	r3, [sp, #20]
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d196      	bne.n	8003bb0 <_strtod_l+0x818>
 8003c82:	e5d7      	b.n	8003834 <_strtod_l+0x49c>
 8003c84:	f04f 33ff 	mov.w	r3, #4294967295
 8003c88:	e7e8      	b.n	8003c5c <_strtod_l+0x8c4>
 8003c8a:	460b      	mov	r3, r1
 8003c8c:	e7e6      	b.n	8003c5c <_strtod_l+0x8c4>
 8003c8e:	ea53 0308 	orrs.w	r3, r3, r8
 8003c92:	f43f af7d 	beq.w	8003b90 <_strtod_l+0x7f8>
 8003c96:	b1e5      	cbz	r5, 8003cd2 <_strtod_l+0x93a>
 8003c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c9a:	421d      	tst	r5, r3
 8003c9c:	d0ee      	beq.n	8003c7c <_strtod_l+0x8e4>
 8003c9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003ca0:	4640      	mov	r0, r8
 8003ca2:	4649      	mov	r1, r9
 8003ca4:	9a05      	ldr	r2, [sp, #20]
 8003ca6:	b1c3      	cbz	r3, 8003cda <_strtod_l+0x942>
 8003ca8:	f7ff fb52 	bl	8003350 <sulp>
 8003cac:	4602      	mov	r2, r0
 8003cae:	460b      	mov	r3, r1
 8003cb0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003cb4:	f7fc fa6a 	bl	800018c <__adddf3>
 8003cb8:	4680      	mov	r8, r0
 8003cba:	4689      	mov	r9, r1
 8003cbc:	e7de      	b.n	8003c7c <_strtod_l+0x8e4>
 8003cbe:	4013      	ands	r3, r2
 8003cc0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003cc4:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8003cc8:	f04f 38ff 	mov.w	r8, #4294967295
 8003ccc:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8003cd0:	e7d4      	b.n	8003c7c <_strtod_l+0x8e4>
 8003cd2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003cd4:	ea13 0f08 	tst.w	r3, r8
 8003cd8:	e7e0      	b.n	8003c9c <_strtod_l+0x904>
 8003cda:	f7ff fb39 	bl	8003350 <sulp>
 8003cde:	4602      	mov	r2, r0
 8003ce0:	460b      	mov	r3, r1
 8003ce2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003ce6:	f7fc fa4f 	bl	8000188 <__aeabi_dsub>
 8003cea:	2200      	movs	r2, #0
 8003cec:	2300      	movs	r3, #0
 8003cee:	4680      	mov	r8, r0
 8003cf0:	4689      	mov	r9, r1
 8003cf2:	f7fc fe69 	bl	80009c8 <__aeabi_dcmpeq>
 8003cf6:	2800      	cmp	r0, #0
 8003cf8:	d0c0      	beq.n	8003c7c <_strtod_l+0x8e4>
 8003cfa:	e602      	b.n	8003902 <_strtod_l+0x56a>
 8003cfc:	4658      	mov	r0, fp
 8003cfe:	9904      	ldr	r1, [sp, #16]
 8003d00:	f002 f82e 	bl	8005d60 <__ratio>
 8003d04:	2200      	movs	r2, #0
 8003d06:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003d0a:	4606      	mov	r6, r0
 8003d0c:	460f      	mov	r7, r1
 8003d0e:	f7fc fe6f 	bl	80009f0 <__aeabi_dcmple>
 8003d12:	2800      	cmp	r0, #0
 8003d14:	d075      	beq.n	8003e02 <_strtod_l+0xa6a>
 8003d16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d047      	beq.n	8003dac <_strtod_l+0xa14>
 8003d1c:	2600      	movs	r6, #0
 8003d1e:	4f65      	ldr	r7, [pc, #404]	; (8003eb4 <_strtod_l+0xb1c>)
 8003d20:	4d64      	ldr	r5, [pc, #400]	; (8003eb4 <_strtod_l+0xb1c>)
 8003d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d24:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003d28:	0d1b      	lsrs	r3, r3, #20
 8003d2a:	051b      	lsls	r3, r3, #20
 8003d2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8003d2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003d30:	4b61      	ldr	r3, [pc, #388]	; (8003eb8 <_strtod_l+0xb20>)
 8003d32:	429a      	cmp	r2, r3
 8003d34:	f040 80c8 	bne.w	8003ec8 <_strtod_l+0xb30>
 8003d38:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003d3c:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d42:	4640      	mov	r0, r8
 8003d44:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8003d48:	4649      	mov	r1, r9
 8003d4a:	f001 ff33 	bl	8005bb4 <__ulp>
 8003d4e:	4602      	mov	r2, r0
 8003d50:	460b      	mov	r3, r1
 8003d52:	4630      	mov	r0, r6
 8003d54:	4639      	mov	r1, r7
 8003d56:	f7fc fbcf 	bl	80004f8 <__aeabi_dmul>
 8003d5a:	4642      	mov	r2, r8
 8003d5c:	464b      	mov	r3, r9
 8003d5e:	f7fc fa15 	bl	800018c <__adddf3>
 8003d62:	460b      	mov	r3, r1
 8003d64:	4951      	ldr	r1, [pc, #324]	; (8003eac <_strtod_l+0xb14>)
 8003d66:	4a55      	ldr	r2, [pc, #340]	; (8003ebc <_strtod_l+0xb24>)
 8003d68:	4019      	ands	r1, r3
 8003d6a:	4291      	cmp	r1, r2
 8003d6c:	4680      	mov	r8, r0
 8003d6e:	d95e      	bls.n	8003e2e <_strtod_l+0xa96>
 8003d70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003d72:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d103      	bne.n	8003d82 <_strtod_l+0x9ea>
 8003d7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003d7c:	3301      	adds	r3, #1
 8003d7e:	f43f ad4e 	beq.w	800381e <_strtod_l+0x486>
 8003d82:	f04f 38ff 	mov.w	r8, #4294967295
 8003d86:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8003eb0 <_strtod_l+0xb18>
 8003d8a:	4650      	mov	r0, sl
 8003d8c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003d8e:	f001 fbe1 	bl	8005554 <_Bfree>
 8003d92:	4650      	mov	r0, sl
 8003d94:	9906      	ldr	r1, [sp, #24]
 8003d96:	f001 fbdd 	bl	8005554 <_Bfree>
 8003d9a:	4650      	mov	r0, sl
 8003d9c:	9904      	ldr	r1, [sp, #16]
 8003d9e:	f001 fbd9 	bl	8005554 <_Bfree>
 8003da2:	4659      	mov	r1, fp
 8003da4:	4650      	mov	r0, sl
 8003da6:	f001 fbd5 	bl	8005554 <_Bfree>
 8003daa:	e61c      	b.n	80039e6 <_strtod_l+0x64e>
 8003dac:	f1b8 0f00 	cmp.w	r8, #0
 8003db0:	d119      	bne.n	8003de6 <_strtod_l+0xa4e>
 8003db2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003db4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003db8:	b9e3      	cbnz	r3, 8003df4 <_strtod_l+0xa5c>
 8003dba:	2200      	movs	r2, #0
 8003dbc:	4630      	mov	r0, r6
 8003dbe:	4639      	mov	r1, r7
 8003dc0:	4b3c      	ldr	r3, [pc, #240]	; (8003eb4 <_strtod_l+0xb1c>)
 8003dc2:	f7fc fe0b 	bl	80009dc <__aeabi_dcmplt>
 8003dc6:	b9c8      	cbnz	r0, 8003dfc <_strtod_l+0xa64>
 8003dc8:	2200      	movs	r2, #0
 8003dca:	4630      	mov	r0, r6
 8003dcc:	4639      	mov	r1, r7
 8003dce:	4b3c      	ldr	r3, [pc, #240]	; (8003ec0 <_strtod_l+0xb28>)
 8003dd0:	f7fc fb92 	bl	80004f8 <__aeabi_dmul>
 8003dd4:	4604      	mov	r4, r0
 8003dd6:	460d      	mov	r5, r1
 8003dd8:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003ddc:	9418      	str	r4, [sp, #96]	; 0x60
 8003dde:	9319      	str	r3, [sp, #100]	; 0x64
 8003de0:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003de4:	e79d      	b.n	8003d22 <_strtod_l+0x98a>
 8003de6:	f1b8 0f01 	cmp.w	r8, #1
 8003dea:	d103      	bne.n	8003df4 <_strtod_l+0xa5c>
 8003dec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	f43f ad87 	beq.w	8003902 <_strtod_l+0x56a>
 8003df4:	2600      	movs	r6, #0
 8003df6:	2400      	movs	r4, #0
 8003df8:	4f32      	ldr	r7, [pc, #200]	; (8003ec4 <_strtod_l+0xb2c>)
 8003dfa:	e791      	b.n	8003d20 <_strtod_l+0x988>
 8003dfc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003dfe:	4d30      	ldr	r5, [pc, #192]	; (8003ec0 <_strtod_l+0xb28>)
 8003e00:	e7ea      	b.n	8003dd8 <_strtod_l+0xa40>
 8003e02:	4b2f      	ldr	r3, [pc, #188]	; (8003ec0 <_strtod_l+0xb28>)
 8003e04:	2200      	movs	r2, #0
 8003e06:	4630      	mov	r0, r6
 8003e08:	4639      	mov	r1, r7
 8003e0a:	f7fc fb75 	bl	80004f8 <__aeabi_dmul>
 8003e0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003e10:	4604      	mov	r4, r0
 8003e12:	460d      	mov	r5, r1
 8003e14:	b933      	cbnz	r3, 8003e24 <_strtod_l+0xa8c>
 8003e16:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003e1a:	9010      	str	r0, [sp, #64]	; 0x40
 8003e1c:	9311      	str	r3, [sp, #68]	; 0x44
 8003e1e:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003e22:	e77e      	b.n	8003d22 <_strtod_l+0x98a>
 8003e24:	4602      	mov	r2, r0
 8003e26:	460b      	mov	r3, r1
 8003e28:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003e2c:	e7f7      	b.n	8003e1e <_strtod_l+0xa86>
 8003e2e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8003e32:	9b05      	ldr	r3, [sp, #20]
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d1a8      	bne.n	8003d8a <_strtod_l+0x9f2>
 8003e38:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003e3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003e3e:	0d1b      	lsrs	r3, r3, #20
 8003e40:	051b      	lsls	r3, r3, #20
 8003e42:	429a      	cmp	r2, r3
 8003e44:	d1a1      	bne.n	8003d8a <_strtod_l+0x9f2>
 8003e46:	4620      	mov	r0, r4
 8003e48:	4629      	mov	r1, r5
 8003e4a:	f7fd f991 	bl	8001170 <__aeabi_d2lz>
 8003e4e:	f7fc fb25 	bl	800049c <__aeabi_l2d>
 8003e52:	4602      	mov	r2, r0
 8003e54:	460b      	mov	r3, r1
 8003e56:	4620      	mov	r0, r4
 8003e58:	4629      	mov	r1, r5
 8003e5a:	f7fc f995 	bl	8000188 <__aeabi_dsub>
 8003e5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003e60:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003e64:	ea43 0308 	orr.w	r3, r3, r8
 8003e68:	4313      	orrs	r3, r2
 8003e6a:	4604      	mov	r4, r0
 8003e6c:	460d      	mov	r5, r1
 8003e6e:	d066      	beq.n	8003f3e <_strtod_l+0xba6>
 8003e70:	a309      	add	r3, pc, #36	; (adr r3, 8003e98 <_strtod_l+0xb00>)
 8003e72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e76:	f7fc fdb1 	bl	80009dc <__aeabi_dcmplt>
 8003e7a:	2800      	cmp	r0, #0
 8003e7c:	f47f acda 	bne.w	8003834 <_strtod_l+0x49c>
 8003e80:	a307      	add	r3, pc, #28	; (adr r3, 8003ea0 <_strtod_l+0xb08>)
 8003e82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e86:	4620      	mov	r0, r4
 8003e88:	4629      	mov	r1, r5
 8003e8a:	f7fc fdc5 	bl	8000a18 <__aeabi_dcmpgt>
 8003e8e:	2800      	cmp	r0, #0
 8003e90:	f43f af7b 	beq.w	8003d8a <_strtod_l+0x9f2>
 8003e94:	e4ce      	b.n	8003834 <_strtod_l+0x49c>
 8003e96:	bf00      	nop
 8003e98:	94a03595 	.word	0x94a03595
 8003e9c:	3fdfffff 	.word	0x3fdfffff
 8003ea0:	35afe535 	.word	0x35afe535
 8003ea4:	3fe00000 	.word	0x3fe00000
 8003ea8:	000fffff 	.word	0x000fffff
 8003eac:	7ff00000 	.word	0x7ff00000
 8003eb0:	7fefffff 	.word	0x7fefffff
 8003eb4:	3ff00000 	.word	0x3ff00000
 8003eb8:	7fe00000 	.word	0x7fe00000
 8003ebc:	7c9fffff 	.word	0x7c9fffff
 8003ec0:	3fe00000 	.word	0x3fe00000
 8003ec4:	bff00000 	.word	0xbff00000
 8003ec8:	9b05      	ldr	r3, [sp, #20]
 8003eca:	b313      	cbz	r3, 8003f12 <_strtod_l+0xb7a>
 8003ecc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003ece:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003ed2:	d81e      	bhi.n	8003f12 <_strtod_l+0xb7a>
 8003ed4:	a326      	add	r3, pc, #152	; (adr r3, 8003f70 <_strtod_l+0xbd8>)
 8003ed6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003eda:	4620      	mov	r0, r4
 8003edc:	4629      	mov	r1, r5
 8003ede:	f7fc fd87 	bl	80009f0 <__aeabi_dcmple>
 8003ee2:	b190      	cbz	r0, 8003f0a <_strtod_l+0xb72>
 8003ee4:	4629      	mov	r1, r5
 8003ee6:	4620      	mov	r0, r4
 8003ee8:	f7fc fdde 	bl	8000aa8 <__aeabi_d2uiz>
 8003eec:	2801      	cmp	r0, #1
 8003eee:	bf38      	it	cc
 8003ef0:	2001      	movcc	r0, #1
 8003ef2:	f7fc fa87 	bl	8000404 <__aeabi_ui2d>
 8003ef6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003ef8:	4604      	mov	r4, r0
 8003efa:	460d      	mov	r5, r1
 8003efc:	b9d3      	cbnz	r3, 8003f34 <_strtod_l+0xb9c>
 8003efe:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003f02:	9012      	str	r0, [sp, #72]	; 0x48
 8003f04:	9313      	str	r3, [sp, #76]	; 0x4c
 8003f06:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003f0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f0c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003f10:	1a9f      	subs	r7, r3, r2
 8003f12:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003f16:	f001 fe4d 	bl	8005bb4 <__ulp>
 8003f1a:	4602      	mov	r2, r0
 8003f1c:	460b      	mov	r3, r1
 8003f1e:	4630      	mov	r0, r6
 8003f20:	4639      	mov	r1, r7
 8003f22:	f7fc fae9 	bl	80004f8 <__aeabi_dmul>
 8003f26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003f2a:	f7fc f92f 	bl	800018c <__adddf3>
 8003f2e:	4680      	mov	r8, r0
 8003f30:	4689      	mov	r9, r1
 8003f32:	e77e      	b.n	8003e32 <_strtod_l+0xa9a>
 8003f34:	4602      	mov	r2, r0
 8003f36:	460b      	mov	r3, r1
 8003f38:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003f3c:	e7e3      	b.n	8003f06 <_strtod_l+0xb6e>
 8003f3e:	a30e      	add	r3, pc, #56	; (adr r3, 8003f78 <_strtod_l+0xbe0>)
 8003f40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f44:	f7fc fd4a 	bl	80009dc <__aeabi_dcmplt>
 8003f48:	e7a1      	b.n	8003e8e <_strtod_l+0xaf6>
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	930c      	str	r3, [sp, #48]	; 0x30
 8003f4e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003f50:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003f52:	6013      	str	r3, [r2, #0]
 8003f54:	f7ff ba65 	b.w	8003422 <_strtod_l+0x8a>
 8003f58:	2b65      	cmp	r3, #101	; 0x65
 8003f5a:	f43f ab5c 	beq.w	8003616 <_strtod_l+0x27e>
 8003f5e:	2b45      	cmp	r3, #69	; 0x45
 8003f60:	f43f ab59 	beq.w	8003616 <_strtod_l+0x27e>
 8003f64:	2201      	movs	r2, #1
 8003f66:	f7ff bb8d 	b.w	8003684 <_strtod_l+0x2ec>
 8003f6a:	bf00      	nop
 8003f6c:	f3af 8000 	nop.w
 8003f70:	ffc00000 	.word	0xffc00000
 8003f74:	41dfffff 	.word	0x41dfffff
 8003f78:	94a03595 	.word	0x94a03595
 8003f7c:	3fcfffff 	.word	0x3fcfffff

08003f80 <_strtod_r>:
 8003f80:	4b01      	ldr	r3, [pc, #4]	; (8003f88 <_strtod_r+0x8>)
 8003f82:	f7ff ba09 	b.w	8003398 <_strtod_l>
 8003f86:	bf00      	nop
 8003f88:	20000078 	.word	0x20000078

08003f8c <_strtol_l.isra.0>:
 8003f8c:	2b01      	cmp	r3, #1
 8003f8e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f92:	4686      	mov	lr, r0
 8003f94:	d001      	beq.n	8003f9a <_strtol_l.isra.0+0xe>
 8003f96:	2b24      	cmp	r3, #36	; 0x24
 8003f98:	d906      	bls.n	8003fa8 <_strtol_l.isra.0+0x1c>
 8003f9a:	f7fe fb11 	bl	80025c0 <__errno>
 8003f9e:	2316      	movs	r3, #22
 8003fa0:	6003      	str	r3, [r0, #0]
 8003fa2:	2000      	movs	r0, #0
 8003fa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fa8:	468c      	mov	ip, r1
 8003faa:	4e3a      	ldr	r6, [pc, #232]	; (8004094 <_strtol_l.isra.0+0x108>)
 8003fac:	4660      	mov	r0, ip
 8003fae:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8003fb2:	5da5      	ldrb	r5, [r4, r6]
 8003fb4:	f015 0508 	ands.w	r5, r5, #8
 8003fb8:	d1f8      	bne.n	8003fac <_strtol_l.isra.0+0x20>
 8003fba:	2c2d      	cmp	r4, #45	; 0x2d
 8003fbc:	d133      	bne.n	8004026 <_strtol_l.isra.0+0x9a>
 8003fbe:	f04f 0801 	mov.w	r8, #1
 8003fc2:	f89c 4000 	ldrb.w	r4, [ip]
 8003fc6:	f100 0c02 	add.w	ip, r0, #2
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d05d      	beq.n	800408a <_strtol_l.isra.0+0xfe>
 8003fce:	2b10      	cmp	r3, #16
 8003fd0:	d10c      	bne.n	8003fec <_strtol_l.isra.0+0x60>
 8003fd2:	2c30      	cmp	r4, #48	; 0x30
 8003fd4:	d10a      	bne.n	8003fec <_strtol_l.isra.0+0x60>
 8003fd6:	f89c 0000 	ldrb.w	r0, [ip]
 8003fda:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8003fde:	2858      	cmp	r0, #88	; 0x58
 8003fe0:	d14e      	bne.n	8004080 <_strtol_l.isra.0+0xf4>
 8003fe2:	2310      	movs	r3, #16
 8003fe4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8003fe8:	f10c 0c02 	add.w	ip, ip, #2
 8003fec:	2500      	movs	r5, #0
 8003fee:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 8003ff2:	3f01      	subs	r7, #1
 8003ff4:	fbb7 f9f3 	udiv	r9, r7, r3
 8003ff8:	4628      	mov	r0, r5
 8003ffa:	fb03 7a19 	mls	sl, r3, r9, r7
 8003ffe:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8004002:	2e09      	cmp	r6, #9
 8004004:	d818      	bhi.n	8004038 <_strtol_l.isra.0+0xac>
 8004006:	4634      	mov	r4, r6
 8004008:	42a3      	cmp	r3, r4
 800400a:	dd24      	ble.n	8004056 <_strtol_l.isra.0+0xca>
 800400c:	2d00      	cmp	r5, #0
 800400e:	db1f      	blt.n	8004050 <_strtol_l.isra.0+0xc4>
 8004010:	4581      	cmp	r9, r0
 8004012:	d31d      	bcc.n	8004050 <_strtol_l.isra.0+0xc4>
 8004014:	d101      	bne.n	800401a <_strtol_l.isra.0+0x8e>
 8004016:	45a2      	cmp	sl, r4
 8004018:	db1a      	blt.n	8004050 <_strtol_l.isra.0+0xc4>
 800401a:	2501      	movs	r5, #1
 800401c:	fb00 4003 	mla	r0, r0, r3, r4
 8004020:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8004024:	e7eb      	b.n	8003ffe <_strtol_l.isra.0+0x72>
 8004026:	2c2b      	cmp	r4, #43	; 0x2b
 8004028:	bf08      	it	eq
 800402a:	f89c 4000 	ldrbeq.w	r4, [ip]
 800402e:	46a8      	mov	r8, r5
 8004030:	bf08      	it	eq
 8004032:	f100 0c02 	addeq.w	ip, r0, #2
 8004036:	e7c8      	b.n	8003fca <_strtol_l.isra.0+0x3e>
 8004038:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 800403c:	2e19      	cmp	r6, #25
 800403e:	d801      	bhi.n	8004044 <_strtol_l.isra.0+0xb8>
 8004040:	3c37      	subs	r4, #55	; 0x37
 8004042:	e7e1      	b.n	8004008 <_strtol_l.isra.0+0x7c>
 8004044:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8004048:	2e19      	cmp	r6, #25
 800404a:	d804      	bhi.n	8004056 <_strtol_l.isra.0+0xca>
 800404c:	3c57      	subs	r4, #87	; 0x57
 800404e:	e7db      	b.n	8004008 <_strtol_l.isra.0+0x7c>
 8004050:	f04f 35ff 	mov.w	r5, #4294967295
 8004054:	e7e4      	b.n	8004020 <_strtol_l.isra.0+0x94>
 8004056:	2d00      	cmp	r5, #0
 8004058:	da08      	bge.n	800406c <_strtol_l.isra.0+0xe0>
 800405a:	2322      	movs	r3, #34	; 0x22
 800405c:	4638      	mov	r0, r7
 800405e:	f8ce 3000 	str.w	r3, [lr]
 8004062:	2a00      	cmp	r2, #0
 8004064:	d09e      	beq.n	8003fa4 <_strtol_l.isra.0+0x18>
 8004066:	f10c 31ff 	add.w	r1, ip, #4294967295
 800406a:	e007      	b.n	800407c <_strtol_l.isra.0+0xf0>
 800406c:	f1b8 0f00 	cmp.w	r8, #0
 8004070:	d000      	beq.n	8004074 <_strtol_l.isra.0+0xe8>
 8004072:	4240      	negs	r0, r0
 8004074:	2a00      	cmp	r2, #0
 8004076:	d095      	beq.n	8003fa4 <_strtol_l.isra.0+0x18>
 8004078:	2d00      	cmp	r5, #0
 800407a:	d1f4      	bne.n	8004066 <_strtol_l.isra.0+0xda>
 800407c:	6011      	str	r1, [r2, #0]
 800407e:	e791      	b.n	8003fa4 <_strtol_l.isra.0+0x18>
 8004080:	2430      	movs	r4, #48	; 0x30
 8004082:	2b00      	cmp	r3, #0
 8004084:	d1b2      	bne.n	8003fec <_strtol_l.isra.0+0x60>
 8004086:	2308      	movs	r3, #8
 8004088:	e7b0      	b.n	8003fec <_strtol_l.isra.0+0x60>
 800408a:	2c30      	cmp	r4, #48	; 0x30
 800408c:	d0a3      	beq.n	8003fd6 <_strtol_l.isra.0+0x4a>
 800408e:	230a      	movs	r3, #10
 8004090:	e7ac      	b.n	8003fec <_strtol_l.isra.0+0x60>
 8004092:	bf00      	nop
 8004094:	08006fc1 	.word	0x08006fc1

08004098 <_strtol_r>:
 8004098:	f7ff bf78 	b.w	8003f8c <_strtol_l.isra.0>

0800409c <quorem>:
 800409c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040a0:	6903      	ldr	r3, [r0, #16]
 80040a2:	690c      	ldr	r4, [r1, #16]
 80040a4:	4607      	mov	r7, r0
 80040a6:	42a3      	cmp	r3, r4
 80040a8:	f2c0 8083 	blt.w	80041b2 <quorem+0x116>
 80040ac:	3c01      	subs	r4, #1
 80040ae:	f100 0514 	add.w	r5, r0, #20
 80040b2:	f101 0814 	add.w	r8, r1, #20
 80040b6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80040ba:	9301      	str	r3, [sp, #4]
 80040bc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80040c0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80040c4:	3301      	adds	r3, #1
 80040c6:	429a      	cmp	r2, r3
 80040c8:	fbb2 f6f3 	udiv	r6, r2, r3
 80040cc:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80040d0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80040d4:	d332      	bcc.n	800413c <quorem+0xa0>
 80040d6:	f04f 0e00 	mov.w	lr, #0
 80040da:	4640      	mov	r0, r8
 80040dc:	46ac      	mov	ip, r5
 80040de:	46f2      	mov	sl, lr
 80040e0:	f850 2b04 	ldr.w	r2, [r0], #4
 80040e4:	b293      	uxth	r3, r2
 80040e6:	fb06 e303 	mla	r3, r6, r3, lr
 80040ea:	0c12      	lsrs	r2, r2, #16
 80040ec:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80040f0:	fb06 e202 	mla	r2, r6, r2, lr
 80040f4:	b29b      	uxth	r3, r3
 80040f6:	ebaa 0303 	sub.w	r3, sl, r3
 80040fa:	f8dc a000 	ldr.w	sl, [ip]
 80040fe:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004102:	fa1f fa8a 	uxth.w	sl, sl
 8004106:	4453      	add	r3, sl
 8004108:	fa1f fa82 	uxth.w	sl, r2
 800410c:	f8dc 2000 	ldr.w	r2, [ip]
 8004110:	4581      	cmp	r9, r0
 8004112:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8004116:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800411a:	b29b      	uxth	r3, r3
 800411c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004120:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8004124:	f84c 3b04 	str.w	r3, [ip], #4
 8004128:	d2da      	bcs.n	80040e0 <quorem+0x44>
 800412a:	f855 300b 	ldr.w	r3, [r5, fp]
 800412e:	b92b      	cbnz	r3, 800413c <quorem+0xa0>
 8004130:	9b01      	ldr	r3, [sp, #4]
 8004132:	3b04      	subs	r3, #4
 8004134:	429d      	cmp	r5, r3
 8004136:	461a      	mov	r2, r3
 8004138:	d32f      	bcc.n	800419a <quorem+0xfe>
 800413a:	613c      	str	r4, [r7, #16]
 800413c:	4638      	mov	r0, r7
 800413e:	f001 fc8d 	bl	8005a5c <__mcmp>
 8004142:	2800      	cmp	r0, #0
 8004144:	db25      	blt.n	8004192 <quorem+0xf6>
 8004146:	4628      	mov	r0, r5
 8004148:	f04f 0c00 	mov.w	ip, #0
 800414c:	3601      	adds	r6, #1
 800414e:	f858 1b04 	ldr.w	r1, [r8], #4
 8004152:	f8d0 e000 	ldr.w	lr, [r0]
 8004156:	b28b      	uxth	r3, r1
 8004158:	ebac 0303 	sub.w	r3, ip, r3
 800415c:	fa1f f28e 	uxth.w	r2, lr
 8004160:	4413      	add	r3, r2
 8004162:	0c0a      	lsrs	r2, r1, #16
 8004164:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8004168:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800416c:	b29b      	uxth	r3, r3
 800416e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004172:	45c1      	cmp	r9, r8
 8004174:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004178:	f840 3b04 	str.w	r3, [r0], #4
 800417c:	d2e7      	bcs.n	800414e <quorem+0xb2>
 800417e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004182:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004186:	b922      	cbnz	r2, 8004192 <quorem+0xf6>
 8004188:	3b04      	subs	r3, #4
 800418a:	429d      	cmp	r5, r3
 800418c:	461a      	mov	r2, r3
 800418e:	d30a      	bcc.n	80041a6 <quorem+0x10a>
 8004190:	613c      	str	r4, [r7, #16]
 8004192:	4630      	mov	r0, r6
 8004194:	b003      	add	sp, #12
 8004196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800419a:	6812      	ldr	r2, [r2, #0]
 800419c:	3b04      	subs	r3, #4
 800419e:	2a00      	cmp	r2, #0
 80041a0:	d1cb      	bne.n	800413a <quorem+0x9e>
 80041a2:	3c01      	subs	r4, #1
 80041a4:	e7c6      	b.n	8004134 <quorem+0x98>
 80041a6:	6812      	ldr	r2, [r2, #0]
 80041a8:	3b04      	subs	r3, #4
 80041aa:	2a00      	cmp	r2, #0
 80041ac:	d1f0      	bne.n	8004190 <quorem+0xf4>
 80041ae:	3c01      	subs	r4, #1
 80041b0:	e7eb      	b.n	800418a <quorem+0xee>
 80041b2:	2000      	movs	r0, #0
 80041b4:	e7ee      	b.n	8004194 <quorem+0xf8>
	...

080041b8 <_dtoa_r>:
 80041b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041bc:	4616      	mov	r6, r2
 80041be:	461f      	mov	r7, r3
 80041c0:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80041c2:	b099      	sub	sp, #100	; 0x64
 80041c4:	4605      	mov	r5, r0
 80041c6:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80041ca:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80041ce:	b974      	cbnz	r4, 80041ee <_dtoa_r+0x36>
 80041d0:	2010      	movs	r0, #16
 80041d2:	f001 f949 	bl	8005468 <malloc>
 80041d6:	4602      	mov	r2, r0
 80041d8:	6268      	str	r0, [r5, #36]	; 0x24
 80041da:	b920      	cbnz	r0, 80041e6 <_dtoa_r+0x2e>
 80041dc:	21ea      	movs	r1, #234	; 0xea
 80041de:	4bae      	ldr	r3, [pc, #696]	; (8004498 <_dtoa_r+0x2e0>)
 80041e0:	48ae      	ldr	r0, [pc, #696]	; (800449c <_dtoa_r+0x2e4>)
 80041e2:	f002 f875 	bl	80062d0 <__assert_func>
 80041e6:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80041ea:	6004      	str	r4, [r0, #0]
 80041ec:	60c4      	str	r4, [r0, #12]
 80041ee:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80041f0:	6819      	ldr	r1, [r3, #0]
 80041f2:	b151      	cbz	r1, 800420a <_dtoa_r+0x52>
 80041f4:	685a      	ldr	r2, [r3, #4]
 80041f6:	2301      	movs	r3, #1
 80041f8:	4093      	lsls	r3, r2
 80041fa:	604a      	str	r2, [r1, #4]
 80041fc:	608b      	str	r3, [r1, #8]
 80041fe:	4628      	mov	r0, r5
 8004200:	f001 f9a8 	bl	8005554 <_Bfree>
 8004204:	2200      	movs	r2, #0
 8004206:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004208:	601a      	str	r2, [r3, #0]
 800420a:	1e3b      	subs	r3, r7, #0
 800420c:	bfaf      	iteee	ge
 800420e:	2300      	movge	r3, #0
 8004210:	2201      	movlt	r2, #1
 8004212:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8004216:	9305      	strlt	r3, [sp, #20]
 8004218:	bfa8      	it	ge
 800421a:	f8c8 3000 	strge.w	r3, [r8]
 800421e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8004222:	4b9f      	ldr	r3, [pc, #636]	; (80044a0 <_dtoa_r+0x2e8>)
 8004224:	bfb8      	it	lt
 8004226:	f8c8 2000 	strlt.w	r2, [r8]
 800422a:	ea33 0309 	bics.w	r3, r3, r9
 800422e:	d119      	bne.n	8004264 <_dtoa_r+0xac>
 8004230:	f242 730f 	movw	r3, #9999	; 0x270f
 8004234:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004236:	6013      	str	r3, [r2, #0]
 8004238:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800423c:	4333      	orrs	r3, r6
 800423e:	f000 8580 	beq.w	8004d42 <_dtoa_r+0xb8a>
 8004242:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004244:	b953      	cbnz	r3, 800425c <_dtoa_r+0xa4>
 8004246:	4b97      	ldr	r3, [pc, #604]	; (80044a4 <_dtoa_r+0x2ec>)
 8004248:	e022      	b.n	8004290 <_dtoa_r+0xd8>
 800424a:	4b97      	ldr	r3, [pc, #604]	; (80044a8 <_dtoa_r+0x2f0>)
 800424c:	9308      	str	r3, [sp, #32]
 800424e:	3308      	adds	r3, #8
 8004250:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004252:	6013      	str	r3, [r2, #0]
 8004254:	9808      	ldr	r0, [sp, #32]
 8004256:	b019      	add	sp, #100	; 0x64
 8004258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800425c:	4b91      	ldr	r3, [pc, #580]	; (80044a4 <_dtoa_r+0x2ec>)
 800425e:	9308      	str	r3, [sp, #32]
 8004260:	3303      	adds	r3, #3
 8004262:	e7f5      	b.n	8004250 <_dtoa_r+0x98>
 8004264:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8004268:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800426c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004270:	2200      	movs	r2, #0
 8004272:	2300      	movs	r3, #0
 8004274:	f7fc fba8 	bl	80009c8 <__aeabi_dcmpeq>
 8004278:	4680      	mov	r8, r0
 800427a:	b158      	cbz	r0, 8004294 <_dtoa_r+0xdc>
 800427c:	2301      	movs	r3, #1
 800427e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004280:	6013      	str	r3, [r2, #0]
 8004282:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004284:	2b00      	cmp	r3, #0
 8004286:	f000 8559 	beq.w	8004d3c <_dtoa_r+0xb84>
 800428a:	4888      	ldr	r0, [pc, #544]	; (80044ac <_dtoa_r+0x2f4>)
 800428c:	6018      	str	r0, [r3, #0]
 800428e:	1e43      	subs	r3, r0, #1
 8004290:	9308      	str	r3, [sp, #32]
 8004292:	e7df      	b.n	8004254 <_dtoa_r+0x9c>
 8004294:	ab16      	add	r3, sp, #88	; 0x58
 8004296:	9301      	str	r3, [sp, #4]
 8004298:	ab17      	add	r3, sp, #92	; 0x5c
 800429a:	9300      	str	r3, [sp, #0]
 800429c:	4628      	mov	r0, r5
 800429e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80042a2:	f001 fd01 	bl	8005ca8 <__d2b>
 80042a6:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80042aa:	4682      	mov	sl, r0
 80042ac:	2c00      	cmp	r4, #0
 80042ae:	d07e      	beq.n	80043ae <_dtoa_r+0x1f6>
 80042b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80042b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80042b6:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80042ba:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80042be:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 80042c2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 80042c6:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80042ca:	2200      	movs	r2, #0
 80042cc:	4b78      	ldr	r3, [pc, #480]	; (80044b0 <_dtoa_r+0x2f8>)
 80042ce:	f7fb ff5b 	bl	8000188 <__aeabi_dsub>
 80042d2:	a36b      	add	r3, pc, #428	; (adr r3, 8004480 <_dtoa_r+0x2c8>)
 80042d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042d8:	f7fc f90e 	bl	80004f8 <__aeabi_dmul>
 80042dc:	a36a      	add	r3, pc, #424	; (adr r3, 8004488 <_dtoa_r+0x2d0>)
 80042de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042e2:	f7fb ff53 	bl	800018c <__adddf3>
 80042e6:	4606      	mov	r6, r0
 80042e8:	4620      	mov	r0, r4
 80042ea:	460f      	mov	r7, r1
 80042ec:	f7fc f89a 	bl	8000424 <__aeabi_i2d>
 80042f0:	a367      	add	r3, pc, #412	; (adr r3, 8004490 <_dtoa_r+0x2d8>)
 80042f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042f6:	f7fc f8ff 	bl	80004f8 <__aeabi_dmul>
 80042fa:	4602      	mov	r2, r0
 80042fc:	460b      	mov	r3, r1
 80042fe:	4630      	mov	r0, r6
 8004300:	4639      	mov	r1, r7
 8004302:	f7fb ff43 	bl	800018c <__adddf3>
 8004306:	4606      	mov	r6, r0
 8004308:	460f      	mov	r7, r1
 800430a:	f7fc fba5 	bl	8000a58 <__aeabi_d2iz>
 800430e:	2200      	movs	r2, #0
 8004310:	4681      	mov	r9, r0
 8004312:	2300      	movs	r3, #0
 8004314:	4630      	mov	r0, r6
 8004316:	4639      	mov	r1, r7
 8004318:	f7fc fb60 	bl	80009dc <__aeabi_dcmplt>
 800431c:	b148      	cbz	r0, 8004332 <_dtoa_r+0x17a>
 800431e:	4648      	mov	r0, r9
 8004320:	f7fc f880 	bl	8000424 <__aeabi_i2d>
 8004324:	4632      	mov	r2, r6
 8004326:	463b      	mov	r3, r7
 8004328:	f7fc fb4e 	bl	80009c8 <__aeabi_dcmpeq>
 800432c:	b908      	cbnz	r0, 8004332 <_dtoa_r+0x17a>
 800432e:	f109 39ff 	add.w	r9, r9, #4294967295
 8004332:	f1b9 0f16 	cmp.w	r9, #22
 8004336:	d857      	bhi.n	80043e8 <_dtoa_r+0x230>
 8004338:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800433c:	4b5d      	ldr	r3, [pc, #372]	; (80044b4 <_dtoa_r+0x2fc>)
 800433e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8004342:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004346:	f7fc fb49 	bl	80009dc <__aeabi_dcmplt>
 800434a:	2800      	cmp	r0, #0
 800434c:	d04e      	beq.n	80043ec <_dtoa_r+0x234>
 800434e:	2300      	movs	r3, #0
 8004350:	f109 39ff 	add.w	r9, r9, #4294967295
 8004354:	930f      	str	r3, [sp, #60]	; 0x3c
 8004356:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004358:	1b1c      	subs	r4, r3, r4
 800435a:	1e63      	subs	r3, r4, #1
 800435c:	9309      	str	r3, [sp, #36]	; 0x24
 800435e:	bf49      	itett	mi
 8004360:	f1c4 0301 	rsbmi	r3, r4, #1
 8004364:	2300      	movpl	r3, #0
 8004366:	9306      	strmi	r3, [sp, #24]
 8004368:	2300      	movmi	r3, #0
 800436a:	bf54      	ite	pl
 800436c:	9306      	strpl	r3, [sp, #24]
 800436e:	9309      	strmi	r3, [sp, #36]	; 0x24
 8004370:	f1b9 0f00 	cmp.w	r9, #0
 8004374:	db3c      	blt.n	80043f0 <_dtoa_r+0x238>
 8004376:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004378:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800437c:	444b      	add	r3, r9
 800437e:	9309      	str	r3, [sp, #36]	; 0x24
 8004380:	2300      	movs	r3, #0
 8004382:	930a      	str	r3, [sp, #40]	; 0x28
 8004384:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004386:	2b09      	cmp	r3, #9
 8004388:	d86c      	bhi.n	8004464 <_dtoa_r+0x2ac>
 800438a:	2b05      	cmp	r3, #5
 800438c:	bfc4      	itt	gt
 800438e:	3b04      	subgt	r3, #4
 8004390:	9322      	strgt	r3, [sp, #136]	; 0x88
 8004392:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004394:	bfc8      	it	gt
 8004396:	2400      	movgt	r4, #0
 8004398:	f1a3 0302 	sub.w	r3, r3, #2
 800439c:	bfd8      	it	le
 800439e:	2401      	movle	r4, #1
 80043a0:	2b03      	cmp	r3, #3
 80043a2:	f200 808b 	bhi.w	80044bc <_dtoa_r+0x304>
 80043a6:	e8df f003 	tbb	[pc, r3]
 80043aa:	4f2d      	.short	0x4f2d
 80043ac:	5b4d      	.short	0x5b4d
 80043ae:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80043b2:	441c      	add	r4, r3
 80043b4:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80043b8:	2b20      	cmp	r3, #32
 80043ba:	bfc3      	ittte	gt
 80043bc:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80043c0:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 80043c4:	fa09 f303 	lslgt.w	r3, r9, r3
 80043c8:	f1c3 0320 	rsble	r3, r3, #32
 80043cc:	bfc6      	itte	gt
 80043ce:	fa26 f000 	lsrgt.w	r0, r6, r0
 80043d2:	4318      	orrgt	r0, r3
 80043d4:	fa06 f003 	lslle.w	r0, r6, r3
 80043d8:	f7fc f814 	bl	8000404 <__aeabi_ui2d>
 80043dc:	2301      	movs	r3, #1
 80043de:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 80043e2:	3c01      	subs	r4, #1
 80043e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80043e6:	e770      	b.n	80042ca <_dtoa_r+0x112>
 80043e8:	2301      	movs	r3, #1
 80043ea:	e7b3      	b.n	8004354 <_dtoa_r+0x19c>
 80043ec:	900f      	str	r0, [sp, #60]	; 0x3c
 80043ee:	e7b2      	b.n	8004356 <_dtoa_r+0x19e>
 80043f0:	9b06      	ldr	r3, [sp, #24]
 80043f2:	eba3 0309 	sub.w	r3, r3, r9
 80043f6:	9306      	str	r3, [sp, #24]
 80043f8:	f1c9 0300 	rsb	r3, r9, #0
 80043fc:	930a      	str	r3, [sp, #40]	; 0x28
 80043fe:	2300      	movs	r3, #0
 8004400:	930e      	str	r3, [sp, #56]	; 0x38
 8004402:	e7bf      	b.n	8004384 <_dtoa_r+0x1cc>
 8004404:	2300      	movs	r3, #0
 8004406:	930b      	str	r3, [sp, #44]	; 0x2c
 8004408:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800440a:	2b00      	cmp	r3, #0
 800440c:	dc59      	bgt.n	80044c2 <_dtoa_r+0x30a>
 800440e:	f04f 0b01 	mov.w	fp, #1
 8004412:	465b      	mov	r3, fp
 8004414:	f8cd b008 	str.w	fp, [sp, #8]
 8004418:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800441c:	2200      	movs	r2, #0
 800441e:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8004420:	6042      	str	r2, [r0, #4]
 8004422:	2204      	movs	r2, #4
 8004424:	f102 0614 	add.w	r6, r2, #20
 8004428:	429e      	cmp	r6, r3
 800442a:	6841      	ldr	r1, [r0, #4]
 800442c:	d94f      	bls.n	80044ce <_dtoa_r+0x316>
 800442e:	4628      	mov	r0, r5
 8004430:	f001 f850 	bl	80054d4 <_Balloc>
 8004434:	9008      	str	r0, [sp, #32]
 8004436:	2800      	cmp	r0, #0
 8004438:	d14d      	bne.n	80044d6 <_dtoa_r+0x31e>
 800443a:	4602      	mov	r2, r0
 800443c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8004440:	4b1d      	ldr	r3, [pc, #116]	; (80044b8 <_dtoa_r+0x300>)
 8004442:	e6cd      	b.n	80041e0 <_dtoa_r+0x28>
 8004444:	2301      	movs	r3, #1
 8004446:	e7de      	b.n	8004406 <_dtoa_r+0x24e>
 8004448:	2300      	movs	r3, #0
 800444a:	930b      	str	r3, [sp, #44]	; 0x2c
 800444c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800444e:	eb09 0b03 	add.w	fp, r9, r3
 8004452:	f10b 0301 	add.w	r3, fp, #1
 8004456:	2b01      	cmp	r3, #1
 8004458:	9302      	str	r3, [sp, #8]
 800445a:	bfb8      	it	lt
 800445c:	2301      	movlt	r3, #1
 800445e:	e7dd      	b.n	800441c <_dtoa_r+0x264>
 8004460:	2301      	movs	r3, #1
 8004462:	e7f2      	b.n	800444a <_dtoa_r+0x292>
 8004464:	2401      	movs	r4, #1
 8004466:	2300      	movs	r3, #0
 8004468:	940b      	str	r4, [sp, #44]	; 0x2c
 800446a:	9322      	str	r3, [sp, #136]	; 0x88
 800446c:	f04f 3bff 	mov.w	fp, #4294967295
 8004470:	2200      	movs	r2, #0
 8004472:	2312      	movs	r3, #18
 8004474:	f8cd b008 	str.w	fp, [sp, #8]
 8004478:	9223      	str	r2, [sp, #140]	; 0x8c
 800447a:	e7cf      	b.n	800441c <_dtoa_r+0x264>
 800447c:	f3af 8000 	nop.w
 8004480:	636f4361 	.word	0x636f4361
 8004484:	3fd287a7 	.word	0x3fd287a7
 8004488:	8b60c8b3 	.word	0x8b60c8b3
 800448c:	3fc68a28 	.word	0x3fc68a28
 8004490:	509f79fb 	.word	0x509f79fb
 8004494:	3fd34413 	.word	0x3fd34413
 8004498:	080070ce 	.word	0x080070ce
 800449c:	080070e5 	.word	0x080070e5
 80044a0:	7ff00000 	.word	0x7ff00000
 80044a4:	080070ca 	.word	0x080070ca
 80044a8:	080070c1 	.word	0x080070c1
 80044ac:	08006f45 	.word	0x08006f45
 80044b0:	3ff80000 	.word	0x3ff80000
 80044b4:	08007260 	.word	0x08007260
 80044b8:	08007144 	.word	0x08007144
 80044bc:	2301      	movs	r3, #1
 80044be:	930b      	str	r3, [sp, #44]	; 0x2c
 80044c0:	e7d4      	b.n	800446c <_dtoa_r+0x2b4>
 80044c2:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80044c6:	465b      	mov	r3, fp
 80044c8:	f8cd b008 	str.w	fp, [sp, #8]
 80044cc:	e7a6      	b.n	800441c <_dtoa_r+0x264>
 80044ce:	3101      	adds	r1, #1
 80044d0:	6041      	str	r1, [r0, #4]
 80044d2:	0052      	lsls	r2, r2, #1
 80044d4:	e7a6      	b.n	8004424 <_dtoa_r+0x26c>
 80044d6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80044d8:	9a08      	ldr	r2, [sp, #32]
 80044da:	601a      	str	r2, [r3, #0]
 80044dc:	9b02      	ldr	r3, [sp, #8]
 80044de:	2b0e      	cmp	r3, #14
 80044e0:	f200 80a8 	bhi.w	8004634 <_dtoa_r+0x47c>
 80044e4:	2c00      	cmp	r4, #0
 80044e6:	f000 80a5 	beq.w	8004634 <_dtoa_r+0x47c>
 80044ea:	f1b9 0f00 	cmp.w	r9, #0
 80044ee:	dd34      	ble.n	800455a <_dtoa_r+0x3a2>
 80044f0:	4a9a      	ldr	r2, [pc, #616]	; (800475c <_dtoa_r+0x5a4>)
 80044f2:	f009 030f 	and.w	r3, r9, #15
 80044f6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80044fa:	f419 7f80 	tst.w	r9, #256	; 0x100
 80044fe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004502:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004506:	ea4f 1429 	mov.w	r4, r9, asr #4
 800450a:	d016      	beq.n	800453a <_dtoa_r+0x382>
 800450c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004510:	4b93      	ldr	r3, [pc, #588]	; (8004760 <_dtoa_r+0x5a8>)
 8004512:	2703      	movs	r7, #3
 8004514:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004518:	f7fc f918 	bl	800074c <__aeabi_ddiv>
 800451c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004520:	f004 040f 	and.w	r4, r4, #15
 8004524:	4e8e      	ldr	r6, [pc, #568]	; (8004760 <_dtoa_r+0x5a8>)
 8004526:	b954      	cbnz	r4, 800453e <_dtoa_r+0x386>
 8004528:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800452c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004530:	f7fc f90c 	bl	800074c <__aeabi_ddiv>
 8004534:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004538:	e029      	b.n	800458e <_dtoa_r+0x3d6>
 800453a:	2702      	movs	r7, #2
 800453c:	e7f2      	b.n	8004524 <_dtoa_r+0x36c>
 800453e:	07e1      	lsls	r1, r4, #31
 8004540:	d508      	bpl.n	8004554 <_dtoa_r+0x39c>
 8004542:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004546:	e9d6 2300 	ldrd	r2, r3, [r6]
 800454a:	f7fb ffd5 	bl	80004f8 <__aeabi_dmul>
 800454e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004552:	3701      	adds	r7, #1
 8004554:	1064      	asrs	r4, r4, #1
 8004556:	3608      	adds	r6, #8
 8004558:	e7e5      	b.n	8004526 <_dtoa_r+0x36e>
 800455a:	f000 80a5 	beq.w	80046a8 <_dtoa_r+0x4f0>
 800455e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004562:	f1c9 0400 	rsb	r4, r9, #0
 8004566:	4b7d      	ldr	r3, [pc, #500]	; (800475c <_dtoa_r+0x5a4>)
 8004568:	f004 020f 	and.w	r2, r4, #15
 800456c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004570:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004574:	f7fb ffc0 	bl	80004f8 <__aeabi_dmul>
 8004578:	2702      	movs	r7, #2
 800457a:	2300      	movs	r3, #0
 800457c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004580:	4e77      	ldr	r6, [pc, #476]	; (8004760 <_dtoa_r+0x5a8>)
 8004582:	1124      	asrs	r4, r4, #4
 8004584:	2c00      	cmp	r4, #0
 8004586:	f040 8084 	bne.w	8004692 <_dtoa_r+0x4da>
 800458a:	2b00      	cmp	r3, #0
 800458c:	d1d2      	bne.n	8004534 <_dtoa_r+0x37c>
 800458e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004590:	2b00      	cmp	r3, #0
 8004592:	f000 808b 	beq.w	80046ac <_dtoa_r+0x4f4>
 8004596:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800459a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800459e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80045a2:	2200      	movs	r2, #0
 80045a4:	4b6f      	ldr	r3, [pc, #444]	; (8004764 <_dtoa_r+0x5ac>)
 80045a6:	f7fc fa19 	bl	80009dc <__aeabi_dcmplt>
 80045aa:	2800      	cmp	r0, #0
 80045ac:	d07e      	beq.n	80046ac <_dtoa_r+0x4f4>
 80045ae:	9b02      	ldr	r3, [sp, #8]
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	d07b      	beq.n	80046ac <_dtoa_r+0x4f4>
 80045b4:	f1bb 0f00 	cmp.w	fp, #0
 80045b8:	dd38      	ble.n	800462c <_dtoa_r+0x474>
 80045ba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80045be:	2200      	movs	r2, #0
 80045c0:	4b69      	ldr	r3, [pc, #420]	; (8004768 <_dtoa_r+0x5b0>)
 80045c2:	f7fb ff99 	bl	80004f8 <__aeabi_dmul>
 80045c6:	465c      	mov	r4, fp
 80045c8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80045cc:	f109 38ff 	add.w	r8, r9, #4294967295
 80045d0:	3701      	adds	r7, #1
 80045d2:	4638      	mov	r0, r7
 80045d4:	f7fb ff26 	bl	8000424 <__aeabi_i2d>
 80045d8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80045dc:	f7fb ff8c 	bl	80004f8 <__aeabi_dmul>
 80045e0:	2200      	movs	r2, #0
 80045e2:	4b62      	ldr	r3, [pc, #392]	; (800476c <_dtoa_r+0x5b4>)
 80045e4:	f7fb fdd2 	bl	800018c <__adddf3>
 80045e8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80045ec:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80045f0:	9611      	str	r6, [sp, #68]	; 0x44
 80045f2:	2c00      	cmp	r4, #0
 80045f4:	d15d      	bne.n	80046b2 <_dtoa_r+0x4fa>
 80045f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80045fa:	2200      	movs	r2, #0
 80045fc:	4b5c      	ldr	r3, [pc, #368]	; (8004770 <_dtoa_r+0x5b8>)
 80045fe:	f7fb fdc3 	bl	8000188 <__aeabi_dsub>
 8004602:	4602      	mov	r2, r0
 8004604:	460b      	mov	r3, r1
 8004606:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800460a:	4633      	mov	r3, r6
 800460c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800460e:	f7fc fa03 	bl	8000a18 <__aeabi_dcmpgt>
 8004612:	2800      	cmp	r0, #0
 8004614:	f040 829e 	bne.w	8004b54 <_dtoa_r+0x99c>
 8004618:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800461c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800461e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8004622:	f7fc f9db 	bl	80009dc <__aeabi_dcmplt>
 8004626:	2800      	cmp	r0, #0
 8004628:	f040 8292 	bne.w	8004b50 <_dtoa_r+0x998>
 800462c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004630:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004634:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004636:	2b00      	cmp	r3, #0
 8004638:	f2c0 8153 	blt.w	80048e2 <_dtoa_r+0x72a>
 800463c:	f1b9 0f0e 	cmp.w	r9, #14
 8004640:	f300 814f 	bgt.w	80048e2 <_dtoa_r+0x72a>
 8004644:	4b45      	ldr	r3, [pc, #276]	; (800475c <_dtoa_r+0x5a4>)
 8004646:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 800464a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800464e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004652:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004654:	2b00      	cmp	r3, #0
 8004656:	f280 80db 	bge.w	8004810 <_dtoa_r+0x658>
 800465a:	9b02      	ldr	r3, [sp, #8]
 800465c:	2b00      	cmp	r3, #0
 800465e:	f300 80d7 	bgt.w	8004810 <_dtoa_r+0x658>
 8004662:	f040 8274 	bne.w	8004b4e <_dtoa_r+0x996>
 8004666:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800466a:	2200      	movs	r2, #0
 800466c:	4b40      	ldr	r3, [pc, #256]	; (8004770 <_dtoa_r+0x5b8>)
 800466e:	f7fb ff43 	bl	80004f8 <__aeabi_dmul>
 8004672:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004676:	f7fc f9c5 	bl	8000a04 <__aeabi_dcmpge>
 800467a:	9c02      	ldr	r4, [sp, #8]
 800467c:	4626      	mov	r6, r4
 800467e:	2800      	cmp	r0, #0
 8004680:	f040 824a 	bne.w	8004b18 <_dtoa_r+0x960>
 8004684:	2331      	movs	r3, #49	; 0x31
 8004686:	9f08      	ldr	r7, [sp, #32]
 8004688:	f109 0901 	add.w	r9, r9, #1
 800468c:	f807 3b01 	strb.w	r3, [r7], #1
 8004690:	e246      	b.n	8004b20 <_dtoa_r+0x968>
 8004692:	07e2      	lsls	r2, r4, #31
 8004694:	d505      	bpl.n	80046a2 <_dtoa_r+0x4ea>
 8004696:	e9d6 2300 	ldrd	r2, r3, [r6]
 800469a:	f7fb ff2d 	bl	80004f8 <__aeabi_dmul>
 800469e:	2301      	movs	r3, #1
 80046a0:	3701      	adds	r7, #1
 80046a2:	1064      	asrs	r4, r4, #1
 80046a4:	3608      	adds	r6, #8
 80046a6:	e76d      	b.n	8004584 <_dtoa_r+0x3cc>
 80046a8:	2702      	movs	r7, #2
 80046aa:	e770      	b.n	800458e <_dtoa_r+0x3d6>
 80046ac:	46c8      	mov	r8, r9
 80046ae:	9c02      	ldr	r4, [sp, #8]
 80046b0:	e78f      	b.n	80045d2 <_dtoa_r+0x41a>
 80046b2:	9908      	ldr	r1, [sp, #32]
 80046b4:	4b29      	ldr	r3, [pc, #164]	; (800475c <_dtoa_r+0x5a4>)
 80046b6:	4421      	add	r1, r4
 80046b8:	9112      	str	r1, [sp, #72]	; 0x48
 80046ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80046bc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80046c0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80046c4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80046c8:	2900      	cmp	r1, #0
 80046ca:	d055      	beq.n	8004778 <_dtoa_r+0x5c0>
 80046cc:	2000      	movs	r0, #0
 80046ce:	4929      	ldr	r1, [pc, #164]	; (8004774 <_dtoa_r+0x5bc>)
 80046d0:	f7fc f83c 	bl	800074c <__aeabi_ddiv>
 80046d4:	463b      	mov	r3, r7
 80046d6:	4632      	mov	r2, r6
 80046d8:	f7fb fd56 	bl	8000188 <__aeabi_dsub>
 80046dc:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80046e0:	9f08      	ldr	r7, [sp, #32]
 80046e2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80046e6:	f7fc f9b7 	bl	8000a58 <__aeabi_d2iz>
 80046ea:	4604      	mov	r4, r0
 80046ec:	f7fb fe9a 	bl	8000424 <__aeabi_i2d>
 80046f0:	4602      	mov	r2, r0
 80046f2:	460b      	mov	r3, r1
 80046f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80046f8:	f7fb fd46 	bl	8000188 <__aeabi_dsub>
 80046fc:	4602      	mov	r2, r0
 80046fe:	460b      	mov	r3, r1
 8004700:	3430      	adds	r4, #48	; 0x30
 8004702:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004706:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800470a:	f807 4b01 	strb.w	r4, [r7], #1
 800470e:	f7fc f965 	bl	80009dc <__aeabi_dcmplt>
 8004712:	2800      	cmp	r0, #0
 8004714:	d174      	bne.n	8004800 <_dtoa_r+0x648>
 8004716:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800471a:	2000      	movs	r0, #0
 800471c:	4911      	ldr	r1, [pc, #68]	; (8004764 <_dtoa_r+0x5ac>)
 800471e:	f7fb fd33 	bl	8000188 <__aeabi_dsub>
 8004722:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004726:	f7fc f959 	bl	80009dc <__aeabi_dcmplt>
 800472a:	2800      	cmp	r0, #0
 800472c:	f040 80b6 	bne.w	800489c <_dtoa_r+0x6e4>
 8004730:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004732:	429f      	cmp	r7, r3
 8004734:	f43f af7a 	beq.w	800462c <_dtoa_r+0x474>
 8004738:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800473c:	2200      	movs	r2, #0
 800473e:	4b0a      	ldr	r3, [pc, #40]	; (8004768 <_dtoa_r+0x5b0>)
 8004740:	f7fb feda 	bl	80004f8 <__aeabi_dmul>
 8004744:	2200      	movs	r2, #0
 8004746:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800474a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800474e:	4b06      	ldr	r3, [pc, #24]	; (8004768 <_dtoa_r+0x5b0>)
 8004750:	f7fb fed2 	bl	80004f8 <__aeabi_dmul>
 8004754:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004758:	e7c3      	b.n	80046e2 <_dtoa_r+0x52a>
 800475a:	bf00      	nop
 800475c:	08007260 	.word	0x08007260
 8004760:	08007238 	.word	0x08007238
 8004764:	3ff00000 	.word	0x3ff00000
 8004768:	40240000 	.word	0x40240000
 800476c:	401c0000 	.word	0x401c0000
 8004770:	40140000 	.word	0x40140000
 8004774:	3fe00000 	.word	0x3fe00000
 8004778:	4630      	mov	r0, r6
 800477a:	4639      	mov	r1, r7
 800477c:	f7fb febc 	bl	80004f8 <__aeabi_dmul>
 8004780:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004782:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004786:	9c08      	ldr	r4, [sp, #32]
 8004788:	9314      	str	r3, [sp, #80]	; 0x50
 800478a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800478e:	f7fc f963 	bl	8000a58 <__aeabi_d2iz>
 8004792:	9015      	str	r0, [sp, #84]	; 0x54
 8004794:	f7fb fe46 	bl	8000424 <__aeabi_i2d>
 8004798:	4602      	mov	r2, r0
 800479a:	460b      	mov	r3, r1
 800479c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80047a0:	f7fb fcf2 	bl	8000188 <__aeabi_dsub>
 80047a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80047a6:	4606      	mov	r6, r0
 80047a8:	3330      	adds	r3, #48	; 0x30
 80047aa:	f804 3b01 	strb.w	r3, [r4], #1
 80047ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80047b0:	460f      	mov	r7, r1
 80047b2:	429c      	cmp	r4, r3
 80047b4:	f04f 0200 	mov.w	r2, #0
 80047b8:	d124      	bne.n	8004804 <_dtoa_r+0x64c>
 80047ba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80047be:	4bb3      	ldr	r3, [pc, #716]	; (8004a8c <_dtoa_r+0x8d4>)
 80047c0:	f7fb fce4 	bl	800018c <__adddf3>
 80047c4:	4602      	mov	r2, r0
 80047c6:	460b      	mov	r3, r1
 80047c8:	4630      	mov	r0, r6
 80047ca:	4639      	mov	r1, r7
 80047cc:	f7fc f924 	bl	8000a18 <__aeabi_dcmpgt>
 80047d0:	2800      	cmp	r0, #0
 80047d2:	d162      	bne.n	800489a <_dtoa_r+0x6e2>
 80047d4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80047d8:	2000      	movs	r0, #0
 80047da:	49ac      	ldr	r1, [pc, #688]	; (8004a8c <_dtoa_r+0x8d4>)
 80047dc:	f7fb fcd4 	bl	8000188 <__aeabi_dsub>
 80047e0:	4602      	mov	r2, r0
 80047e2:	460b      	mov	r3, r1
 80047e4:	4630      	mov	r0, r6
 80047e6:	4639      	mov	r1, r7
 80047e8:	f7fc f8f8 	bl	80009dc <__aeabi_dcmplt>
 80047ec:	2800      	cmp	r0, #0
 80047ee:	f43f af1d 	beq.w	800462c <_dtoa_r+0x474>
 80047f2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80047f4:	1e7b      	subs	r3, r7, #1
 80047f6:	9314      	str	r3, [sp, #80]	; 0x50
 80047f8:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80047fc:	2b30      	cmp	r3, #48	; 0x30
 80047fe:	d0f8      	beq.n	80047f2 <_dtoa_r+0x63a>
 8004800:	46c1      	mov	r9, r8
 8004802:	e03a      	b.n	800487a <_dtoa_r+0x6c2>
 8004804:	4ba2      	ldr	r3, [pc, #648]	; (8004a90 <_dtoa_r+0x8d8>)
 8004806:	f7fb fe77 	bl	80004f8 <__aeabi_dmul>
 800480a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800480e:	e7bc      	b.n	800478a <_dtoa_r+0x5d2>
 8004810:	9f08      	ldr	r7, [sp, #32]
 8004812:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004816:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800481a:	f7fb ff97 	bl	800074c <__aeabi_ddiv>
 800481e:	f7fc f91b 	bl	8000a58 <__aeabi_d2iz>
 8004822:	4604      	mov	r4, r0
 8004824:	f7fb fdfe 	bl	8000424 <__aeabi_i2d>
 8004828:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800482c:	f7fb fe64 	bl	80004f8 <__aeabi_dmul>
 8004830:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8004834:	460b      	mov	r3, r1
 8004836:	4602      	mov	r2, r0
 8004838:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800483c:	f7fb fca4 	bl	8000188 <__aeabi_dsub>
 8004840:	f807 6b01 	strb.w	r6, [r7], #1
 8004844:	9e08      	ldr	r6, [sp, #32]
 8004846:	9b02      	ldr	r3, [sp, #8]
 8004848:	1bbe      	subs	r6, r7, r6
 800484a:	42b3      	cmp	r3, r6
 800484c:	d13a      	bne.n	80048c4 <_dtoa_r+0x70c>
 800484e:	4602      	mov	r2, r0
 8004850:	460b      	mov	r3, r1
 8004852:	f7fb fc9b 	bl	800018c <__adddf3>
 8004856:	4602      	mov	r2, r0
 8004858:	460b      	mov	r3, r1
 800485a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800485e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004862:	f7fc f8d9 	bl	8000a18 <__aeabi_dcmpgt>
 8004866:	bb58      	cbnz	r0, 80048c0 <_dtoa_r+0x708>
 8004868:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800486c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004870:	f7fc f8aa 	bl	80009c8 <__aeabi_dcmpeq>
 8004874:	b108      	cbz	r0, 800487a <_dtoa_r+0x6c2>
 8004876:	07e1      	lsls	r1, r4, #31
 8004878:	d422      	bmi.n	80048c0 <_dtoa_r+0x708>
 800487a:	4628      	mov	r0, r5
 800487c:	4651      	mov	r1, sl
 800487e:	f000 fe69 	bl	8005554 <_Bfree>
 8004882:	2300      	movs	r3, #0
 8004884:	703b      	strb	r3, [r7, #0]
 8004886:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004888:	f109 0001 	add.w	r0, r9, #1
 800488c:	6018      	str	r0, [r3, #0]
 800488e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004890:	2b00      	cmp	r3, #0
 8004892:	f43f acdf 	beq.w	8004254 <_dtoa_r+0x9c>
 8004896:	601f      	str	r7, [r3, #0]
 8004898:	e4dc      	b.n	8004254 <_dtoa_r+0x9c>
 800489a:	4627      	mov	r7, r4
 800489c:	463b      	mov	r3, r7
 800489e:	461f      	mov	r7, r3
 80048a0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80048a4:	2a39      	cmp	r2, #57	; 0x39
 80048a6:	d107      	bne.n	80048b8 <_dtoa_r+0x700>
 80048a8:	9a08      	ldr	r2, [sp, #32]
 80048aa:	429a      	cmp	r2, r3
 80048ac:	d1f7      	bne.n	800489e <_dtoa_r+0x6e6>
 80048ae:	2230      	movs	r2, #48	; 0x30
 80048b0:	9908      	ldr	r1, [sp, #32]
 80048b2:	f108 0801 	add.w	r8, r8, #1
 80048b6:	700a      	strb	r2, [r1, #0]
 80048b8:	781a      	ldrb	r2, [r3, #0]
 80048ba:	3201      	adds	r2, #1
 80048bc:	701a      	strb	r2, [r3, #0]
 80048be:	e79f      	b.n	8004800 <_dtoa_r+0x648>
 80048c0:	46c8      	mov	r8, r9
 80048c2:	e7eb      	b.n	800489c <_dtoa_r+0x6e4>
 80048c4:	2200      	movs	r2, #0
 80048c6:	4b72      	ldr	r3, [pc, #456]	; (8004a90 <_dtoa_r+0x8d8>)
 80048c8:	f7fb fe16 	bl	80004f8 <__aeabi_dmul>
 80048cc:	4602      	mov	r2, r0
 80048ce:	460b      	mov	r3, r1
 80048d0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80048d4:	2200      	movs	r2, #0
 80048d6:	2300      	movs	r3, #0
 80048d8:	f7fc f876 	bl	80009c8 <__aeabi_dcmpeq>
 80048dc:	2800      	cmp	r0, #0
 80048de:	d098      	beq.n	8004812 <_dtoa_r+0x65a>
 80048e0:	e7cb      	b.n	800487a <_dtoa_r+0x6c2>
 80048e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80048e4:	2a00      	cmp	r2, #0
 80048e6:	f000 80cd 	beq.w	8004a84 <_dtoa_r+0x8cc>
 80048ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80048ec:	2a01      	cmp	r2, #1
 80048ee:	f300 80af 	bgt.w	8004a50 <_dtoa_r+0x898>
 80048f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80048f4:	2a00      	cmp	r2, #0
 80048f6:	f000 80a7 	beq.w	8004a48 <_dtoa_r+0x890>
 80048fa:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80048fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004900:	9f06      	ldr	r7, [sp, #24]
 8004902:	9a06      	ldr	r2, [sp, #24]
 8004904:	2101      	movs	r1, #1
 8004906:	441a      	add	r2, r3
 8004908:	9206      	str	r2, [sp, #24]
 800490a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800490c:	4628      	mov	r0, r5
 800490e:	441a      	add	r2, r3
 8004910:	9209      	str	r2, [sp, #36]	; 0x24
 8004912:	f000 ff23 	bl	800575c <__i2b>
 8004916:	4606      	mov	r6, r0
 8004918:	2f00      	cmp	r7, #0
 800491a:	dd0c      	ble.n	8004936 <_dtoa_r+0x77e>
 800491c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800491e:	2b00      	cmp	r3, #0
 8004920:	dd09      	ble.n	8004936 <_dtoa_r+0x77e>
 8004922:	42bb      	cmp	r3, r7
 8004924:	bfa8      	it	ge
 8004926:	463b      	movge	r3, r7
 8004928:	9a06      	ldr	r2, [sp, #24]
 800492a:	1aff      	subs	r7, r7, r3
 800492c:	1ad2      	subs	r2, r2, r3
 800492e:	9206      	str	r2, [sp, #24]
 8004930:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004932:	1ad3      	subs	r3, r2, r3
 8004934:	9309      	str	r3, [sp, #36]	; 0x24
 8004936:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004938:	b1f3      	cbz	r3, 8004978 <_dtoa_r+0x7c0>
 800493a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800493c:	2b00      	cmp	r3, #0
 800493e:	f000 80a9 	beq.w	8004a94 <_dtoa_r+0x8dc>
 8004942:	2c00      	cmp	r4, #0
 8004944:	dd10      	ble.n	8004968 <_dtoa_r+0x7b0>
 8004946:	4631      	mov	r1, r6
 8004948:	4622      	mov	r2, r4
 800494a:	4628      	mov	r0, r5
 800494c:	f000 ffc0 	bl	80058d0 <__pow5mult>
 8004950:	4652      	mov	r2, sl
 8004952:	4601      	mov	r1, r0
 8004954:	4606      	mov	r6, r0
 8004956:	4628      	mov	r0, r5
 8004958:	f000 ff16 	bl	8005788 <__multiply>
 800495c:	4680      	mov	r8, r0
 800495e:	4651      	mov	r1, sl
 8004960:	4628      	mov	r0, r5
 8004962:	f000 fdf7 	bl	8005554 <_Bfree>
 8004966:	46c2      	mov	sl, r8
 8004968:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800496a:	1b1a      	subs	r2, r3, r4
 800496c:	d004      	beq.n	8004978 <_dtoa_r+0x7c0>
 800496e:	4651      	mov	r1, sl
 8004970:	4628      	mov	r0, r5
 8004972:	f000 ffad 	bl	80058d0 <__pow5mult>
 8004976:	4682      	mov	sl, r0
 8004978:	2101      	movs	r1, #1
 800497a:	4628      	mov	r0, r5
 800497c:	f000 feee 	bl	800575c <__i2b>
 8004980:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004982:	4604      	mov	r4, r0
 8004984:	2b00      	cmp	r3, #0
 8004986:	f340 8087 	ble.w	8004a98 <_dtoa_r+0x8e0>
 800498a:	461a      	mov	r2, r3
 800498c:	4601      	mov	r1, r0
 800498e:	4628      	mov	r0, r5
 8004990:	f000 ff9e 	bl	80058d0 <__pow5mult>
 8004994:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004996:	4604      	mov	r4, r0
 8004998:	2b01      	cmp	r3, #1
 800499a:	f340 8080 	ble.w	8004a9e <_dtoa_r+0x8e6>
 800499e:	f04f 0800 	mov.w	r8, #0
 80049a2:	6923      	ldr	r3, [r4, #16]
 80049a4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80049a8:	6918      	ldr	r0, [r3, #16]
 80049aa:	f000 fe89 	bl	80056c0 <__hi0bits>
 80049ae:	f1c0 0020 	rsb	r0, r0, #32
 80049b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049b4:	4418      	add	r0, r3
 80049b6:	f010 001f 	ands.w	r0, r0, #31
 80049ba:	f000 8092 	beq.w	8004ae2 <_dtoa_r+0x92a>
 80049be:	f1c0 0320 	rsb	r3, r0, #32
 80049c2:	2b04      	cmp	r3, #4
 80049c4:	f340 808a 	ble.w	8004adc <_dtoa_r+0x924>
 80049c8:	f1c0 001c 	rsb	r0, r0, #28
 80049cc:	9b06      	ldr	r3, [sp, #24]
 80049ce:	4407      	add	r7, r0
 80049d0:	4403      	add	r3, r0
 80049d2:	9306      	str	r3, [sp, #24]
 80049d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049d6:	4403      	add	r3, r0
 80049d8:	9309      	str	r3, [sp, #36]	; 0x24
 80049da:	9b06      	ldr	r3, [sp, #24]
 80049dc:	2b00      	cmp	r3, #0
 80049de:	dd05      	ble.n	80049ec <_dtoa_r+0x834>
 80049e0:	4651      	mov	r1, sl
 80049e2:	461a      	mov	r2, r3
 80049e4:	4628      	mov	r0, r5
 80049e6:	f000 ffcd 	bl	8005984 <__lshift>
 80049ea:	4682      	mov	sl, r0
 80049ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	dd05      	ble.n	80049fe <_dtoa_r+0x846>
 80049f2:	4621      	mov	r1, r4
 80049f4:	461a      	mov	r2, r3
 80049f6:	4628      	mov	r0, r5
 80049f8:	f000 ffc4 	bl	8005984 <__lshift>
 80049fc:	4604      	mov	r4, r0
 80049fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d070      	beq.n	8004ae6 <_dtoa_r+0x92e>
 8004a04:	4621      	mov	r1, r4
 8004a06:	4650      	mov	r0, sl
 8004a08:	f001 f828 	bl	8005a5c <__mcmp>
 8004a0c:	2800      	cmp	r0, #0
 8004a0e:	da6a      	bge.n	8004ae6 <_dtoa_r+0x92e>
 8004a10:	2300      	movs	r3, #0
 8004a12:	4651      	mov	r1, sl
 8004a14:	220a      	movs	r2, #10
 8004a16:	4628      	mov	r0, r5
 8004a18:	f000 fdbe 	bl	8005598 <__multadd>
 8004a1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a1e:	4682      	mov	sl, r0
 8004a20:	f109 39ff 	add.w	r9, r9, #4294967295
 8004a24:	2b00      	cmp	r3, #0
 8004a26:	f000 8193 	beq.w	8004d50 <_dtoa_r+0xb98>
 8004a2a:	4631      	mov	r1, r6
 8004a2c:	2300      	movs	r3, #0
 8004a2e:	220a      	movs	r2, #10
 8004a30:	4628      	mov	r0, r5
 8004a32:	f000 fdb1 	bl	8005598 <__multadd>
 8004a36:	f1bb 0f00 	cmp.w	fp, #0
 8004a3a:	4606      	mov	r6, r0
 8004a3c:	f300 8093 	bgt.w	8004b66 <_dtoa_r+0x9ae>
 8004a40:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a42:	2b02      	cmp	r3, #2
 8004a44:	dc57      	bgt.n	8004af6 <_dtoa_r+0x93e>
 8004a46:	e08e      	b.n	8004b66 <_dtoa_r+0x9ae>
 8004a48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004a4a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004a4e:	e756      	b.n	80048fe <_dtoa_r+0x746>
 8004a50:	9b02      	ldr	r3, [sp, #8]
 8004a52:	1e5c      	subs	r4, r3, #1
 8004a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a56:	42a3      	cmp	r3, r4
 8004a58:	bfb7      	itett	lt
 8004a5a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004a5c:	1b1c      	subge	r4, r3, r4
 8004a5e:	1ae2      	sublt	r2, r4, r3
 8004a60:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004a62:	bfbe      	ittt	lt
 8004a64:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004a66:	189b      	addlt	r3, r3, r2
 8004a68:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004a6a:	9b02      	ldr	r3, [sp, #8]
 8004a6c:	bfb8      	it	lt
 8004a6e:	2400      	movlt	r4, #0
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	bfbb      	ittet	lt
 8004a74:	9b06      	ldrlt	r3, [sp, #24]
 8004a76:	9a02      	ldrlt	r2, [sp, #8]
 8004a78:	9f06      	ldrge	r7, [sp, #24]
 8004a7a:	1a9f      	sublt	r7, r3, r2
 8004a7c:	bfac      	ite	ge
 8004a7e:	9b02      	ldrge	r3, [sp, #8]
 8004a80:	2300      	movlt	r3, #0
 8004a82:	e73e      	b.n	8004902 <_dtoa_r+0x74a>
 8004a84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a86:	9f06      	ldr	r7, [sp, #24]
 8004a88:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004a8a:	e745      	b.n	8004918 <_dtoa_r+0x760>
 8004a8c:	3fe00000 	.word	0x3fe00000
 8004a90:	40240000 	.word	0x40240000
 8004a94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a96:	e76a      	b.n	800496e <_dtoa_r+0x7b6>
 8004a98:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a9a:	2b01      	cmp	r3, #1
 8004a9c:	dc19      	bgt.n	8004ad2 <_dtoa_r+0x91a>
 8004a9e:	9b04      	ldr	r3, [sp, #16]
 8004aa0:	b9bb      	cbnz	r3, 8004ad2 <_dtoa_r+0x91a>
 8004aa2:	9b05      	ldr	r3, [sp, #20]
 8004aa4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004aa8:	b99b      	cbnz	r3, 8004ad2 <_dtoa_r+0x91a>
 8004aaa:	9b05      	ldr	r3, [sp, #20]
 8004aac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004ab0:	0d1b      	lsrs	r3, r3, #20
 8004ab2:	051b      	lsls	r3, r3, #20
 8004ab4:	b183      	cbz	r3, 8004ad8 <_dtoa_r+0x920>
 8004ab6:	f04f 0801 	mov.w	r8, #1
 8004aba:	9b06      	ldr	r3, [sp, #24]
 8004abc:	3301      	adds	r3, #1
 8004abe:	9306      	str	r3, [sp, #24]
 8004ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ac2:	3301      	adds	r3, #1
 8004ac4:	9309      	str	r3, [sp, #36]	; 0x24
 8004ac6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	f47f af6a 	bne.w	80049a2 <_dtoa_r+0x7ea>
 8004ace:	2001      	movs	r0, #1
 8004ad0:	e76f      	b.n	80049b2 <_dtoa_r+0x7fa>
 8004ad2:	f04f 0800 	mov.w	r8, #0
 8004ad6:	e7f6      	b.n	8004ac6 <_dtoa_r+0x90e>
 8004ad8:	4698      	mov	r8, r3
 8004ada:	e7f4      	b.n	8004ac6 <_dtoa_r+0x90e>
 8004adc:	f43f af7d 	beq.w	80049da <_dtoa_r+0x822>
 8004ae0:	4618      	mov	r0, r3
 8004ae2:	301c      	adds	r0, #28
 8004ae4:	e772      	b.n	80049cc <_dtoa_r+0x814>
 8004ae6:	9b02      	ldr	r3, [sp, #8]
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	dc36      	bgt.n	8004b5a <_dtoa_r+0x9a2>
 8004aec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004aee:	2b02      	cmp	r3, #2
 8004af0:	dd33      	ble.n	8004b5a <_dtoa_r+0x9a2>
 8004af2:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004af6:	f1bb 0f00 	cmp.w	fp, #0
 8004afa:	d10d      	bne.n	8004b18 <_dtoa_r+0x960>
 8004afc:	4621      	mov	r1, r4
 8004afe:	465b      	mov	r3, fp
 8004b00:	2205      	movs	r2, #5
 8004b02:	4628      	mov	r0, r5
 8004b04:	f000 fd48 	bl	8005598 <__multadd>
 8004b08:	4601      	mov	r1, r0
 8004b0a:	4604      	mov	r4, r0
 8004b0c:	4650      	mov	r0, sl
 8004b0e:	f000 ffa5 	bl	8005a5c <__mcmp>
 8004b12:	2800      	cmp	r0, #0
 8004b14:	f73f adb6 	bgt.w	8004684 <_dtoa_r+0x4cc>
 8004b18:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004b1a:	9f08      	ldr	r7, [sp, #32]
 8004b1c:	ea6f 0903 	mvn.w	r9, r3
 8004b20:	f04f 0800 	mov.w	r8, #0
 8004b24:	4621      	mov	r1, r4
 8004b26:	4628      	mov	r0, r5
 8004b28:	f000 fd14 	bl	8005554 <_Bfree>
 8004b2c:	2e00      	cmp	r6, #0
 8004b2e:	f43f aea4 	beq.w	800487a <_dtoa_r+0x6c2>
 8004b32:	f1b8 0f00 	cmp.w	r8, #0
 8004b36:	d005      	beq.n	8004b44 <_dtoa_r+0x98c>
 8004b38:	45b0      	cmp	r8, r6
 8004b3a:	d003      	beq.n	8004b44 <_dtoa_r+0x98c>
 8004b3c:	4641      	mov	r1, r8
 8004b3e:	4628      	mov	r0, r5
 8004b40:	f000 fd08 	bl	8005554 <_Bfree>
 8004b44:	4631      	mov	r1, r6
 8004b46:	4628      	mov	r0, r5
 8004b48:	f000 fd04 	bl	8005554 <_Bfree>
 8004b4c:	e695      	b.n	800487a <_dtoa_r+0x6c2>
 8004b4e:	2400      	movs	r4, #0
 8004b50:	4626      	mov	r6, r4
 8004b52:	e7e1      	b.n	8004b18 <_dtoa_r+0x960>
 8004b54:	46c1      	mov	r9, r8
 8004b56:	4626      	mov	r6, r4
 8004b58:	e594      	b.n	8004684 <_dtoa_r+0x4cc>
 8004b5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b5c:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	f000 80fc 	beq.w	8004d5e <_dtoa_r+0xba6>
 8004b66:	2f00      	cmp	r7, #0
 8004b68:	dd05      	ble.n	8004b76 <_dtoa_r+0x9be>
 8004b6a:	4631      	mov	r1, r6
 8004b6c:	463a      	mov	r2, r7
 8004b6e:	4628      	mov	r0, r5
 8004b70:	f000 ff08 	bl	8005984 <__lshift>
 8004b74:	4606      	mov	r6, r0
 8004b76:	f1b8 0f00 	cmp.w	r8, #0
 8004b7a:	d05c      	beq.n	8004c36 <_dtoa_r+0xa7e>
 8004b7c:	4628      	mov	r0, r5
 8004b7e:	6871      	ldr	r1, [r6, #4]
 8004b80:	f000 fca8 	bl	80054d4 <_Balloc>
 8004b84:	4607      	mov	r7, r0
 8004b86:	b928      	cbnz	r0, 8004b94 <_dtoa_r+0x9dc>
 8004b88:	4602      	mov	r2, r0
 8004b8a:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004b8e:	4b7e      	ldr	r3, [pc, #504]	; (8004d88 <_dtoa_r+0xbd0>)
 8004b90:	f7ff bb26 	b.w	80041e0 <_dtoa_r+0x28>
 8004b94:	6932      	ldr	r2, [r6, #16]
 8004b96:	f106 010c 	add.w	r1, r6, #12
 8004b9a:	3202      	adds	r2, #2
 8004b9c:	0092      	lsls	r2, r2, #2
 8004b9e:	300c      	adds	r0, #12
 8004ba0:	f000 fc8a 	bl	80054b8 <memcpy>
 8004ba4:	2201      	movs	r2, #1
 8004ba6:	4639      	mov	r1, r7
 8004ba8:	4628      	mov	r0, r5
 8004baa:	f000 feeb 	bl	8005984 <__lshift>
 8004bae:	46b0      	mov	r8, r6
 8004bb0:	4606      	mov	r6, r0
 8004bb2:	9b08      	ldr	r3, [sp, #32]
 8004bb4:	3301      	adds	r3, #1
 8004bb6:	9302      	str	r3, [sp, #8]
 8004bb8:	9b08      	ldr	r3, [sp, #32]
 8004bba:	445b      	add	r3, fp
 8004bbc:	930a      	str	r3, [sp, #40]	; 0x28
 8004bbe:	9b04      	ldr	r3, [sp, #16]
 8004bc0:	f003 0301 	and.w	r3, r3, #1
 8004bc4:	9309      	str	r3, [sp, #36]	; 0x24
 8004bc6:	9b02      	ldr	r3, [sp, #8]
 8004bc8:	4621      	mov	r1, r4
 8004bca:	4650      	mov	r0, sl
 8004bcc:	f103 3bff 	add.w	fp, r3, #4294967295
 8004bd0:	f7ff fa64 	bl	800409c <quorem>
 8004bd4:	4603      	mov	r3, r0
 8004bd6:	4641      	mov	r1, r8
 8004bd8:	3330      	adds	r3, #48	; 0x30
 8004bda:	9004      	str	r0, [sp, #16]
 8004bdc:	4650      	mov	r0, sl
 8004bde:	930b      	str	r3, [sp, #44]	; 0x2c
 8004be0:	f000 ff3c 	bl	8005a5c <__mcmp>
 8004be4:	4632      	mov	r2, r6
 8004be6:	9006      	str	r0, [sp, #24]
 8004be8:	4621      	mov	r1, r4
 8004bea:	4628      	mov	r0, r5
 8004bec:	f000 ff52 	bl	8005a94 <__mdiff>
 8004bf0:	68c2      	ldr	r2, [r0, #12]
 8004bf2:	4607      	mov	r7, r0
 8004bf4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bf6:	bb02      	cbnz	r2, 8004c3a <_dtoa_r+0xa82>
 8004bf8:	4601      	mov	r1, r0
 8004bfa:	4650      	mov	r0, sl
 8004bfc:	f000 ff2e 	bl	8005a5c <__mcmp>
 8004c00:	4602      	mov	r2, r0
 8004c02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c04:	4639      	mov	r1, r7
 8004c06:	4628      	mov	r0, r5
 8004c08:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8004c0c:	f000 fca2 	bl	8005554 <_Bfree>
 8004c10:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004c12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004c14:	9f02      	ldr	r7, [sp, #8]
 8004c16:	ea43 0102 	orr.w	r1, r3, r2
 8004c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c1c:	430b      	orrs	r3, r1
 8004c1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c20:	d10d      	bne.n	8004c3e <_dtoa_r+0xa86>
 8004c22:	2b39      	cmp	r3, #57	; 0x39
 8004c24:	d027      	beq.n	8004c76 <_dtoa_r+0xabe>
 8004c26:	9a06      	ldr	r2, [sp, #24]
 8004c28:	2a00      	cmp	r2, #0
 8004c2a:	dd01      	ble.n	8004c30 <_dtoa_r+0xa78>
 8004c2c:	9b04      	ldr	r3, [sp, #16]
 8004c2e:	3331      	adds	r3, #49	; 0x31
 8004c30:	f88b 3000 	strb.w	r3, [fp]
 8004c34:	e776      	b.n	8004b24 <_dtoa_r+0x96c>
 8004c36:	4630      	mov	r0, r6
 8004c38:	e7b9      	b.n	8004bae <_dtoa_r+0x9f6>
 8004c3a:	2201      	movs	r2, #1
 8004c3c:	e7e2      	b.n	8004c04 <_dtoa_r+0xa4c>
 8004c3e:	9906      	ldr	r1, [sp, #24]
 8004c40:	2900      	cmp	r1, #0
 8004c42:	db04      	blt.n	8004c4e <_dtoa_r+0xa96>
 8004c44:	9822      	ldr	r0, [sp, #136]	; 0x88
 8004c46:	4301      	orrs	r1, r0
 8004c48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c4a:	4301      	orrs	r1, r0
 8004c4c:	d120      	bne.n	8004c90 <_dtoa_r+0xad8>
 8004c4e:	2a00      	cmp	r2, #0
 8004c50:	ddee      	ble.n	8004c30 <_dtoa_r+0xa78>
 8004c52:	4651      	mov	r1, sl
 8004c54:	2201      	movs	r2, #1
 8004c56:	4628      	mov	r0, r5
 8004c58:	9302      	str	r3, [sp, #8]
 8004c5a:	f000 fe93 	bl	8005984 <__lshift>
 8004c5e:	4621      	mov	r1, r4
 8004c60:	4682      	mov	sl, r0
 8004c62:	f000 fefb 	bl	8005a5c <__mcmp>
 8004c66:	2800      	cmp	r0, #0
 8004c68:	9b02      	ldr	r3, [sp, #8]
 8004c6a:	dc02      	bgt.n	8004c72 <_dtoa_r+0xaba>
 8004c6c:	d1e0      	bne.n	8004c30 <_dtoa_r+0xa78>
 8004c6e:	07da      	lsls	r2, r3, #31
 8004c70:	d5de      	bpl.n	8004c30 <_dtoa_r+0xa78>
 8004c72:	2b39      	cmp	r3, #57	; 0x39
 8004c74:	d1da      	bne.n	8004c2c <_dtoa_r+0xa74>
 8004c76:	2339      	movs	r3, #57	; 0x39
 8004c78:	f88b 3000 	strb.w	r3, [fp]
 8004c7c:	463b      	mov	r3, r7
 8004c7e:	461f      	mov	r7, r3
 8004c80:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8004c84:	3b01      	subs	r3, #1
 8004c86:	2a39      	cmp	r2, #57	; 0x39
 8004c88:	d050      	beq.n	8004d2c <_dtoa_r+0xb74>
 8004c8a:	3201      	adds	r2, #1
 8004c8c:	701a      	strb	r2, [r3, #0]
 8004c8e:	e749      	b.n	8004b24 <_dtoa_r+0x96c>
 8004c90:	2a00      	cmp	r2, #0
 8004c92:	dd03      	ble.n	8004c9c <_dtoa_r+0xae4>
 8004c94:	2b39      	cmp	r3, #57	; 0x39
 8004c96:	d0ee      	beq.n	8004c76 <_dtoa_r+0xabe>
 8004c98:	3301      	adds	r3, #1
 8004c9a:	e7c9      	b.n	8004c30 <_dtoa_r+0xa78>
 8004c9c:	9a02      	ldr	r2, [sp, #8]
 8004c9e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004ca0:	f802 3c01 	strb.w	r3, [r2, #-1]
 8004ca4:	428a      	cmp	r2, r1
 8004ca6:	d02a      	beq.n	8004cfe <_dtoa_r+0xb46>
 8004ca8:	4651      	mov	r1, sl
 8004caa:	2300      	movs	r3, #0
 8004cac:	220a      	movs	r2, #10
 8004cae:	4628      	mov	r0, r5
 8004cb0:	f000 fc72 	bl	8005598 <__multadd>
 8004cb4:	45b0      	cmp	r8, r6
 8004cb6:	4682      	mov	sl, r0
 8004cb8:	f04f 0300 	mov.w	r3, #0
 8004cbc:	f04f 020a 	mov.w	r2, #10
 8004cc0:	4641      	mov	r1, r8
 8004cc2:	4628      	mov	r0, r5
 8004cc4:	d107      	bne.n	8004cd6 <_dtoa_r+0xb1e>
 8004cc6:	f000 fc67 	bl	8005598 <__multadd>
 8004cca:	4680      	mov	r8, r0
 8004ccc:	4606      	mov	r6, r0
 8004cce:	9b02      	ldr	r3, [sp, #8]
 8004cd0:	3301      	adds	r3, #1
 8004cd2:	9302      	str	r3, [sp, #8]
 8004cd4:	e777      	b.n	8004bc6 <_dtoa_r+0xa0e>
 8004cd6:	f000 fc5f 	bl	8005598 <__multadd>
 8004cda:	4631      	mov	r1, r6
 8004cdc:	4680      	mov	r8, r0
 8004cde:	2300      	movs	r3, #0
 8004ce0:	220a      	movs	r2, #10
 8004ce2:	4628      	mov	r0, r5
 8004ce4:	f000 fc58 	bl	8005598 <__multadd>
 8004ce8:	4606      	mov	r6, r0
 8004cea:	e7f0      	b.n	8004cce <_dtoa_r+0xb16>
 8004cec:	f1bb 0f00 	cmp.w	fp, #0
 8004cf0:	bfcc      	ite	gt
 8004cf2:	465f      	movgt	r7, fp
 8004cf4:	2701      	movle	r7, #1
 8004cf6:	f04f 0800 	mov.w	r8, #0
 8004cfa:	9a08      	ldr	r2, [sp, #32]
 8004cfc:	4417      	add	r7, r2
 8004cfe:	4651      	mov	r1, sl
 8004d00:	2201      	movs	r2, #1
 8004d02:	4628      	mov	r0, r5
 8004d04:	9302      	str	r3, [sp, #8]
 8004d06:	f000 fe3d 	bl	8005984 <__lshift>
 8004d0a:	4621      	mov	r1, r4
 8004d0c:	4682      	mov	sl, r0
 8004d0e:	f000 fea5 	bl	8005a5c <__mcmp>
 8004d12:	2800      	cmp	r0, #0
 8004d14:	dcb2      	bgt.n	8004c7c <_dtoa_r+0xac4>
 8004d16:	d102      	bne.n	8004d1e <_dtoa_r+0xb66>
 8004d18:	9b02      	ldr	r3, [sp, #8]
 8004d1a:	07db      	lsls	r3, r3, #31
 8004d1c:	d4ae      	bmi.n	8004c7c <_dtoa_r+0xac4>
 8004d1e:	463b      	mov	r3, r7
 8004d20:	461f      	mov	r7, r3
 8004d22:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004d26:	2a30      	cmp	r2, #48	; 0x30
 8004d28:	d0fa      	beq.n	8004d20 <_dtoa_r+0xb68>
 8004d2a:	e6fb      	b.n	8004b24 <_dtoa_r+0x96c>
 8004d2c:	9a08      	ldr	r2, [sp, #32]
 8004d2e:	429a      	cmp	r2, r3
 8004d30:	d1a5      	bne.n	8004c7e <_dtoa_r+0xac6>
 8004d32:	2331      	movs	r3, #49	; 0x31
 8004d34:	f109 0901 	add.w	r9, r9, #1
 8004d38:	7013      	strb	r3, [r2, #0]
 8004d3a:	e6f3      	b.n	8004b24 <_dtoa_r+0x96c>
 8004d3c:	4b13      	ldr	r3, [pc, #76]	; (8004d8c <_dtoa_r+0xbd4>)
 8004d3e:	f7ff baa7 	b.w	8004290 <_dtoa_r+0xd8>
 8004d42:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	f47f aa80 	bne.w	800424a <_dtoa_r+0x92>
 8004d4a:	4b11      	ldr	r3, [pc, #68]	; (8004d90 <_dtoa_r+0xbd8>)
 8004d4c:	f7ff baa0 	b.w	8004290 <_dtoa_r+0xd8>
 8004d50:	f1bb 0f00 	cmp.w	fp, #0
 8004d54:	dc03      	bgt.n	8004d5e <_dtoa_r+0xba6>
 8004d56:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d58:	2b02      	cmp	r3, #2
 8004d5a:	f73f aecc 	bgt.w	8004af6 <_dtoa_r+0x93e>
 8004d5e:	9f08      	ldr	r7, [sp, #32]
 8004d60:	4621      	mov	r1, r4
 8004d62:	4650      	mov	r0, sl
 8004d64:	f7ff f99a 	bl	800409c <quorem>
 8004d68:	9a08      	ldr	r2, [sp, #32]
 8004d6a:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8004d6e:	f807 3b01 	strb.w	r3, [r7], #1
 8004d72:	1aba      	subs	r2, r7, r2
 8004d74:	4593      	cmp	fp, r2
 8004d76:	ddb9      	ble.n	8004cec <_dtoa_r+0xb34>
 8004d78:	4651      	mov	r1, sl
 8004d7a:	2300      	movs	r3, #0
 8004d7c:	220a      	movs	r2, #10
 8004d7e:	4628      	mov	r0, r5
 8004d80:	f000 fc0a 	bl	8005598 <__multadd>
 8004d84:	4682      	mov	sl, r0
 8004d86:	e7eb      	b.n	8004d60 <_dtoa_r+0xba8>
 8004d88:	08007144 	.word	0x08007144
 8004d8c:	08006f44 	.word	0x08006f44
 8004d90:	080070c1 	.word	0x080070c1

08004d94 <rshift>:
 8004d94:	6903      	ldr	r3, [r0, #16]
 8004d96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004d9a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8004d9e:	f100 0414 	add.w	r4, r0, #20
 8004da2:	ea4f 1261 	mov.w	r2, r1, asr #5
 8004da6:	dd46      	ble.n	8004e36 <rshift+0xa2>
 8004da8:	f011 011f 	ands.w	r1, r1, #31
 8004dac:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8004db0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8004db4:	d10c      	bne.n	8004dd0 <rshift+0x3c>
 8004db6:	4629      	mov	r1, r5
 8004db8:	f100 0710 	add.w	r7, r0, #16
 8004dbc:	42b1      	cmp	r1, r6
 8004dbe:	d335      	bcc.n	8004e2c <rshift+0x98>
 8004dc0:	1a9b      	subs	r3, r3, r2
 8004dc2:	009b      	lsls	r3, r3, #2
 8004dc4:	1eea      	subs	r2, r5, #3
 8004dc6:	4296      	cmp	r6, r2
 8004dc8:	bf38      	it	cc
 8004dca:	2300      	movcc	r3, #0
 8004dcc:	4423      	add	r3, r4
 8004dce:	e015      	b.n	8004dfc <rshift+0x68>
 8004dd0:	46a1      	mov	r9, r4
 8004dd2:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8004dd6:	f1c1 0820 	rsb	r8, r1, #32
 8004dda:	40cf      	lsrs	r7, r1
 8004ddc:	f105 0e04 	add.w	lr, r5, #4
 8004de0:	4576      	cmp	r6, lr
 8004de2:	46f4      	mov	ip, lr
 8004de4:	d816      	bhi.n	8004e14 <rshift+0x80>
 8004de6:	1a9b      	subs	r3, r3, r2
 8004de8:	009a      	lsls	r2, r3, #2
 8004dea:	3a04      	subs	r2, #4
 8004dec:	3501      	adds	r5, #1
 8004dee:	42ae      	cmp	r6, r5
 8004df0:	bf38      	it	cc
 8004df2:	2200      	movcc	r2, #0
 8004df4:	18a3      	adds	r3, r4, r2
 8004df6:	50a7      	str	r7, [r4, r2]
 8004df8:	b107      	cbz	r7, 8004dfc <rshift+0x68>
 8004dfa:	3304      	adds	r3, #4
 8004dfc:	42a3      	cmp	r3, r4
 8004dfe:	eba3 0204 	sub.w	r2, r3, r4
 8004e02:	bf08      	it	eq
 8004e04:	2300      	moveq	r3, #0
 8004e06:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8004e0a:	6102      	str	r2, [r0, #16]
 8004e0c:	bf08      	it	eq
 8004e0e:	6143      	streq	r3, [r0, #20]
 8004e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004e14:	f8dc c000 	ldr.w	ip, [ip]
 8004e18:	fa0c fc08 	lsl.w	ip, ip, r8
 8004e1c:	ea4c 0707 	orr.w	r7, ip, r7
 8004e20:	f849 7b04 	str.w	r7, [r9], #4
 8004e24:	f85e 7b04 	ldr.w	r7, [lr], #4
 8004e28:	40cf      	lsrs	r7, r1
 8004e2a:	e7d9      	b.n	8004de0 <rshift+0x4c>
 8004e2c:	f851 cb04 	ldr.w	ip, [r1], #4
 8004e30:	f847 cf04 	str.w	ip, [r7, #4]!
 8004e34:	e7c2      	b.n	8004dbc <rshift+0x28>
 8004e36:	4623      	mov	r3, r4
 8004e38:	e7e0      	b.n	8004dfc <rshift+0x68>

08004e3a <__hexdig_fun>:
 8004e3a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8004e3e:	2b09      	cmp	r3, #9
 8004e40:	d802      	bhi.n	8004e48 <__hexdig_fun+0xe>
 8004e42:	3820      	subs	r0, #32
 8004e44:	b2c0      	uxtb	r0, r0
 8004e46:	4770      	bx	lr
 8004e48:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8004e4c:	2b05      	cmp	r3, #5
 8004e4e:	d801      	bhi.n	8004e54 <__hexdig_fun+0x1a>
 8004e50:	3847      	subs	r0, #71	; 0x47
 8004e52:	e7f7      	b.n	8004e44 <__hexdig_fun+0xa>
 8004e54:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8004e58:	2b05      	cmp	r3, #5
 8004e5a:	d801      	bhi.n	8004e60 <__hexdig_fun+0x26>
 8004e5c:	3827      	subs	r0, #39	; 0x27
 8004e5e:	e7f1      	b.n	8004e44 <__hexdig_fun+0xa>
 8004e60:	2000      	movs	r0, #0
 8004e62:	4770      	bx	lr

08004e64 <__gethex>:
 8004e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e68:	b08b      	sub	sp, #44	; 0x2c
 8004e6a:	9306      	str	r3, [sp, #24]
 8004e6c:	4bb9      	ldr	r3, [pc, #740]	; (8005154 <__gethex+0x2f0>)
 8004e6e:	9002      	str	r0, [sp, #8]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	468b      	mov	fp, r1
 8004e74:	4618      	mov	r0, r3
 8004e76:	4690      	mov	r8, r2
 8004e78:	9303      	str	r3, [sp, #12]
 8004e7a:	f7fb f979 	bl	8000170 <strlen>
 8004e7e:	4682      	mov	sl, r0
 8004e80:	9b03      	ldr	r3, [sp, #12]
 8004e82:	f8db 2000 	ldr.w	r2, [fp]
 8004e86:	4403      	add	r3, r0
 8004e88:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004e8c:	9307      	str	r3, [sp, #28]
 8004e8e:	1c93      	adds	r3, r2, #2
 8004e90:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8004e94:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8004e98:	32fe      	adds	r2, #254	; 0xfe
 8004e9a:	18d1      	adds	r1, r2, r3
 8004e9c:	461f      	mov	r7, r3
 8004e9e:	f813 0b01 	ldrb.w	r0, [r3], #1
 8004ea2:	9101      	str	r1, [sp, #4]
 8004ea4:	2830      	cmp	r0, #48	; 0x30
 8004ea6:	d0f8      	beq.n	8004e9a <__gethex+0x36>
 8004ea8:	f7ff ffc7 	bl	8004e3a <__hexdig_fun>
 8004eac:	4604      	mov	r4, r0
 8004eae:	2800      	cmp	r0, #0
 8004eb0:	d13a      	bne.n	8004f28 <__gethex+0xc4>
 8004eb2:	4652      	mov	r2, sl
 8004eb4:	4638      	mov	r0, r7
 8004eb6:	9903      	ldr	r1, [sp, #12]
 8004eb8:	f001 f9ea 	bl	8006290 <strncmp>
 8004ebc:	4605      	mov	r5, r0
 8004ebe:	2800      	cmp	r0, #0
 8004ec0:	d166      	bne.n	8004f90 <__gethex+0x12c>
 8004ec2:	f817 000a 	ldrb.w	r0, [r7, sl]
 8004ec6:	eb07 060a 	add.w	r6, r7, sl
 8004eca:	f7ff ffb6 	bl	8004e3a <__hexdig_fun>
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d060      	beq.n	8004f94 <__gethex+0x130>
 8004ed2:	4633      	mov	r3, r6
 8004ed4:	7818      	ldrb	r0, [r3, #0]
 8004ed6:	461f      	mov	r7, r3
 8004ed8:	2830      	cmp	r0, #48	; 0x30
 8004eda:	f103 0301 	add.w	r3, r3, #1
 8004ede:	d0f9      	beq.n	8004ed4 <__gethex+0x70>
 8004ee0:	f7ff ffab 	bl	8004e3a <__hexdig_fun>
 8004ee4:	2301      	movs	r3, #1
 8004ee6:	fab0 f480 	clz	r4, r0
 8004eea:	4635      	mov	r5, r6
 8004eec:	0964      	lsrs	r4, r4, #5
 8004eee:	9301      	str	r3, [sp, #4]
 8004ef0:	463a      	mov	r2, r7
 8004ef2:	4616      	mov	r6, r2
 8004ef4:	7830      	ldrb	r0, [r6, #0]
 8004ef6:	3201      	adds	r2, #1
 8004ef8:	f7ff ff9f 	bl	8004e3a <__hexdig_fun>
 8004efc:	2800      	cmp	r0, #0
 8004efe:	d1f8      	bne.n	8004ef2 <__gethex+0x8e>
 8004f00:	4652      	mov	r2, sl
 8004f02:	4630      	mov	r0, r6
 8004f04:	9903      	ldr	r1, [sp, #12]
 8004f06:	f001 f9c3 	bl	8006290 <strncmp>
 8004f0a:	b980      	cbnz	r0, 8004f2e <__gethex+0xca>
 8004f0c:	b94d      	cbnz	r5, 8004f22 <__gethex+0xbe>
 8004f0e:	eb06 050a 	add.w	r5, r6, sl
 8004f12:	462a      	mov	r2, r5
 8004f14:	4616      	mov	r6, r2
 8004f16:	7830      	ldrb	r0, [r6, #0]
 8004f18:	3201      	adds	r2, #1
 8004f1a:	f7ff ff8e 	bl	8004e3a <__hexdig_fun>
 8004f1e:	2800      	cmp	r0, #0
 8004f20:	d1f8      	bne.n	8004f14 <__gethex+0xb0>
 8004f22:	1bad      	subs	r5, r5, r6
 8004f24:	00ad      	lsls	r5, r5, #2
 8004f26:	e004      	b.n	8004f32 <__gethex+0xce>
 8004f28:	2400      	movs	r4, #0
 8004f2a:	4625      	mov	r5, r4
 8004f2c:	e7e0      	b.n	8004ef0 <__gethex+0x8c>
 8004f2e:	2d00      	cmp	r5, #0
 8004f30:	d1f7      	bne.n	8004f22 <__gethex+0xbe>
 8004f32:	7833      	ldrb	r3, [r6, #0]
 8004f34:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8004f38:	2b50      	cmp	r3, #80	; 0x50
 8004f3a:	d139      	bne.n	8004fb0 <__gethex+0x14c>
 8004f3c:	7873      	ldrb	r3, [r6, #1]
 8004f3e:	2b2b      	cmp	r3, #43	; 0x2b
 8004f40:	d02a      	beq.n	8004f98 <__gethex+0x134>
 8004f42:	2b2d      	cmp	r3, #45	; 0x2d
 8004f44:	d02c      	beq.n	8004fa0 <__gethex+0x13c>
 8004f46:	f04f 0900 	mov.w	r9, #0
 8004f4a:	1c71      	adds	r1, r6, #1
 8004f4c:	7808      	ldrb	r0, [r1, #0]
 8004f4e:	f7ff ff74 	bl	8004e3a <__hexdig_fun>
 8004f52:	1e43      	subs	r3, r0, #1
 8004f54:	b2db      	uxtb	r3, r3
 8004f56:	2b18      	cmp	r3, #24
 8004f58:	d82a      	bhi.n	8004fb0 <__gethex+0x14c>
 8004f5a:	f1a0 0210 	sub.w	r2, r0, #16
 8004f5e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8004f62:	f7ff ff6a 	bl	8004e3a <__hexdig_fun>
 8004f66:	1e43      	subs	r3, r0, #1
 8004f68:	b2db      	uxtb	r3, r3
 8004f6a:	2b18      	cmp	r3, #24
 8004f6c:	d91b      	bls.n	8004fa6 <__gethex+0x142>
 8004f6e:	f1b9 0f00 	cmp.w	r9, #0
 8004f72:	d000      	beq.n	8004f76 <__gethex+0x112>
 8004f74:	4252      	negs	r2, r2
 8004f76:	4415      	add	r5, r2
 8004f78:	f8cb 1000 	str.w	r1, [fp]
 8004f7c:	b1d4      	cbz	r4, 8004fb4 <__gethex+0x150>
 8004f7e:	9b01      	ldr	r3, [sp, #4]
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	bf14      	ite	ne
 8004f84:	2700      	movne	r7, #0
 8004f86:	2706      	moveq	r7, #6
 8004f88:	4638      	mov	r0, r7
 8004f8a:	b00b      	add	sp, #44	; 0x2c
 8004f8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f90:	463e      	mov	r6, r7
 8004f92:	4625      	mov	r5, r4
 8004f94:	2401      	movs	r4, #1
 8004f96:	e7cc      	b.n	8004f32 <__gethex+0xce>
 8004f98:	f04f 0900 	mov.w	r9, #0
 8004f9c:	1cb1      	adds	r1, r6, #2
 8004f9e:	e7d5      	b.n	8004f4c <__gethex+0xe8>
 8004fa0:	f04f 0901 	mov.w	r9, #1
 8004fa4:	e7fa      	b.n	8004f9c <__gethex+0x138>
 8004fa6:	230a      	movs	r3, #10
 8004fa8:	fb03 0202 	mla	r2, r3, r2, r0
 8004fac:	3a10      	subs	r2, #16
 8004fae:	e7d6      	b.n	8004f5e <__gethex+0xfa>
 8004fb0:	4631      	mov	r1, r6
 8004fb2:	e7e1      	b.n	8004f78 <__gethex+0x114>
 8004fb4:	4621      	mov	r1, r4
 8004fb6:	1bf3      	subs	r3, r6, r7
 8004fb8:	3b01      	subs	r3, #1
 8004fba:	2b07      	cmp	r3, #7
 8004fbc:	dc0a      	bgt.n	8004fd4 <__gethex+0x170>
 8004fbe:	9802      	ldr	r0, [sp, #8]
 8004fc0:	f000 fa88 	bl	80054d4 <_Balloc>
 8004fc4:	4604      	mov	r4, r0
 8004fc6:	b940      	cbnz	r0, 8004fda <__gethex+0x176>
 8004fc8:	4602      	mov	r2, r0
 8004fca:	21de      	movs	r1, #222	; 0xde
 8004fcc:	4b62      	ldr	r3, [pc, #392]	; (8005158 <__gethex+0x2f4>)
 8004fce:	4863      	ldr	r0, [pc, #396]	; (800515c <__gethex+0x2f8>)
 8004fd0:	f001 f97e 	bl	80062d0 <__assert_func>
 8004fd4:	3101      	adds	r1, #1
 8004fd6:	105b      	asrs	r3, r3, #1
 8004fd8:	e7ef      	b.n	8004fba <__gethex+0x156>
 8004fda:	f04f 0b00 	mov.w	fp, #0
 8004fde:	f100 0914 	add.w	r9, r0, #20
 8004fe2:	f1ca 0301 	rsb	r3, sl, #1
 8004fe6:	f8cd 9010 	str.w	r9, [sp, #16]
 8004fea:	f8cd b004 	str.w	fp, [sp, #4]
 8004fee:	9308      	str	r3, [sp, #32]
 8004ff0:	42b7      	cmp	r7, r6
 8004ff2:	d33f      	bcc.n	8005074 <__gethex+0x210>
 8004ff4:	9f04      	ldr	r7, [sp, #16]
 8004ff6:	9b01      	ldr	r3, [sp, #4]
 8004ff8:	f847 3b04 	str.w	r3, [r7], #4
 8004ffc:	eba7 0709 	sub.w	r7, r7, r9
 8005000:	10bf      	asrs	r7, r7, #2
 8005002:	6127      	str	r7, [r4, #16]
 8005004:	4618      	mov	r0, r3
 8005006:	f000 fb5b 	bl	80056c0 <__hi0bits>
 800500a:	017f      	lsls	r7, r7, #5
 800500c:	f8d8 6000 	ldr.w	r6, [r8]
 8005010:	1a3f      	subs	r7, r7, r0
 8005012:	42b7      	cmp	r7, r6
 8005014:	dd62      	ble.n	80050dc <__gethex+0x278>
 8005016:	1bbf      	subs	r7, r7, r6
 8005018:	4639      	mov	r1, r7
 800501a:	4620      	mov	r0, r4
 800501c:	f000 fef1 	bl	8005e02 <__any_on>
 8005020:	4682      	mov	sl, r0
 8005022:	b1a8      	cbz	r0, 8005050 <__gethex+0x1ec>
 8005024:	f04f 0a01 	mov.w	sl, #1
 8005028:	1e7b      	subs	r3, r7, #1
 800502a:	1159      	asrs	r1, r3, #5
 800502c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005030:	f003 021f 	and.w	r2, r3, #31
 8005034:	fa0a f202 	lsl.w	r2, sl, r2
 8005038:	420a      	tst	r2, r1
 800503a:	d009      	beq.n	8005050 <__gethex+0x1ec>
 800503c:	4553      	cmp	r3, sl
 800503e:	dd05      	ble.n	800504c <__gethex+0x1e8>
 8005040:	4620      	mov	r0, r4
 8005042:	1eb9      	subs	r1, r7, #2
 8005044:	f000 fedd 	bl	8005e02 <__any_on>
 8005048:	2800      	cmp	r0, #0
 800504a:	d144      	bne.n	80050d6 <__gethex+0x272>
 800504c:	f04f 0a02 	mov.w	sl, #2
 8005050:	4639      	mov	r1, r7
 8005052:	4620      	mov	r0, r4
 8005054:	f7ff fe9e 	bl	8004d94 <rshift>
 8005058:	443d      	add	r5, r7
 800505a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800505e:	42ab      	cmp	r3, r5
 8005060:	da4a      	bge.n	80050f8 <__gethex+0x294>
 8005062:	4621      	mov	r1, r4
 8005064:	9802      	ldr	r0, [sp, #8]
 8005066:	f000 fa75 	bl	8005554 <_Bfree>
 800506a:	2300      	movs	r3, #0
 800506c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800506e:	27a3      	movs	r7, #163	; 0xa3
 8005070:	6013      	str	r3, [r2, #0]
 8005072:	e789      	b.n	8004f88 <__gethex+0x124>
 8005074:	1e73      	subs	r3, r6, #1
 8005076:	9a07      	ldr	r2, [sp, #28]
 8005078:	9305      	str	r3, [sp, #20]
 800507a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800507e:	4293      	cmp	r3, r2
 8005080:	d019      	beq.n	80050b6 <__gethex+0x252>
 8005082:	f1bb 0f20 	cmp.w	fp, #32
 8005086:	d107      	bne.n	8005098 <__gethex+0x234>
 8005088:	9b04      	ldr	r3, [sp, #16]
 800508a:	9a01      	ldr	r2, [sp, #4]
 800508c:	f843 2b04 	str.w	r2, [r3], #4
 8005090:	9304      	str	r3, [sp, #16]
 8005092:	2300      	movs	r3, #0
 8005094:	469b      	mov	fp, r3
 8005096:	9301      	str	r3, [sp, #4]
 8005098:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800509c:	f7ff fecd 	bl	8004e3a <__hexdig_fun>
 80050a0:	9b01      	ldr	r3, [sp, #4]
 80050a2:	f000 000f 	and.w	r0, r0, #15
 80050a6:	fa00 f00b 	lsl.w	r0, r0, fp
 80050aa:	4303      	orrs	r3, r0
 80050ac:	9301      	str	r3, [sp, #4]
 80050ae:	f10b 0b04 	add.w	fp, fp, #4
 80050b2:	9b05      	ldr	r3, [sp, #20]
 80050b4:	e00d      	b.n	80050d2 <__gethex+0x26e>
 80050b6:	9b05      	ldr	r3, [sp, #20]
 80050b8:	9a08      	ldr	r2, [sp, #32]
 80050ba:	4413      	add	r3, r2
 80050bc:	42bb      	cmp	r3, r7
 80050be:	d3e0      	bcc.n	8005082 <__gethex+0x21e>
 80050c0:	4618      	mov	r0, r3
 80050c2:	4652      	mov	r2, sl
 80050c4:	9903      	ldr	r1, [sp, #12]
 80050c6:	9309      	str	r3, [sp, #36]	; 0x24
 80050c8:	f001 f8e2 	bl	8006290 <strncmp>
 80050cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050ce:	2800      	cmp	r0, #0
 80050d0:	d1d7      	bne.n	8005082 <__gethex+0x21e>
 80050d2:	461e      	mov	r6, r3
 80050d4:	e78c      	b.n	8004ff0 <__gethex+0x18c>
 80050d6:	f04f 0a03 	mov.w	sl, #3
 80050da:	e7b9      	b.n	8005050 <__gethex+0x1ec>
 80050dc:	da09      	bge.n	80050f2 <__gethex+0x28e>
 80050de:	1bf7      	subs	r7, r6, r7
 80050e0:	4621      	mov	r1, r4
 80050e2:	463a      	mov	r2, r7
 80050e4:	9802      	ldr	r0, [sp, #8]
 80050e6:	f000 fc4d 	bl	8005984 <__lshift>
 80050ea:	4604      	mov	r4, r0
 80050ec:	1bed      	subs	r5, r5, r7
 80050ee:	f100 0914 	add.w	r9, r0, #20
 80050f2:	f04f 0a00 	mov.w	sl, #0
 80050f6:	e7b0      	b.n	800505a <__gethex+0x1f6>
 80050f8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80050fc:	42a8      	cmp	r0, r5
 80050fe:	dd71      	ble.n	80051e4 <__gethex+0x380>
 8005100:	1b45      	subs	r5, r0, r5
 8005102:	42ae      	cmp	r6, r5
 8005104:	dc34      	bgt.n	8005170 <__gethex+0x30c>
 8005106:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800510a:	2b02      	cmp	r3, #2
 800510c:	d028      	beq.n	8005160 <__gethex+0x2fc>
 800510e:	2b03      	cmp	r3, #3
 8005110:	d02a      	beq.n	8005168 <__gethex+0x304>
 8005112:	2b01      	cmp	r3, #1
 8005114:	d115      	bne.n	8005142 <__gethex+0x2de>
 8005116:	42ae      	cmp	r6, r5
 8005118:	d113      	bne.n	8005142 <__gethex+0x2de>
 800511a:	2e01      	cmp	r6, #1
 800511c:	d10b      	bne.n	8005136 <__gethex+0x2d2>
 800511e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005122:	9a06      	ldr	r2, [sp, #24]
 8005124:	2762      	movs	r7, #98	; 0x62
 8005126:	6013      	str	r3, [r2, #0]
 8005128:	2301      	movs	r3, #1
 800512a:	6123      	str	r3, [r4, #16]
 800512c:	f8c9 3000 	str.w	r3, [r9]
 8005130:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005132:	601c      	str	r4, [r3, #0]
 8005134:	e728      	b.n	8004f88 <__gethex+0x124>
 8005136:	4620      	mov	r0, r4
 8005138:	1e71      	subs	r1, r6, #1
 800513a:	f000 fe62 	bl	8005e02 <__any_on>
 800513e:	2800      	cmp	r0, #0
 8005140:	d1ed      	bne.n	800511e <__gethex+0x2ba>
 8005142:	4621      	mov	r1, r4
 8005144:	9802      	ldr	r0, [sp, #8]
 8005146:	f000 fa05 	bl	8005554 <_Bfree>
 800514a:	2300      	movs	r3, #0
 800514c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800514e:	2750      	movs	r7, #80	; 0x50
 8005150:	6013      	str	r3, [r2, #0]
 8005152:	e719      	b.n	8004f88 <__gethex+0x124>
 8005154:	080071c0 	.word	0x080071c0
 8005158:	08007144 	.word	0x08007144
 800515c:	08007155 	.word	0x08007155
 8005160:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005162:	2b00      	cmp	r3, #0
 8005164:	d1ed      	bne.n	8005142 <__gethex+0x2de>
 8005166:	e7da      	b.n	800511e <__gethex+0x2ba>
 8005168:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800516a:	2b00      	cmp	r3, #0
 800516c:	d1d7      	bne.n	800511e <__gethex+0x2ba>
 800516e:	e7e8      	b.n	8005142 <__gethex+0x2de>
 8005170:	1e6f      	subs	r7, r5, #1
 8005172:	f1ba 0f00 	cmp.w	sl, #0
 8005176:	d132      	bne.n	80051de <__gethex+0x37a>
 8005178:	b127      	cbz	r7, 8005184 <__gethex+0x320>
 800517a:	4639      	mov	r1, r7
 800517c:	4620      	mov	r0, r4
 800517e:	f000 fe40 	bl	8005e02 <__any_on>
 8005182:	4682      	mov	sl, r0
 8005184:	2101      	movs	r1, #1
 8005186:	117b      	asrs	r3, r7, #5
 8005188:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800518c:	f007 071f 	and.w	r7, r7, #31
 8005190:	fa01 f707 	lsl.w	r7, r1, r7
 8005194:	421f      	tst	r7, r3
 8005196:	f04f 0702 	mov.w	r7, #2
 800519a:	4629      	mov	r1, r5
 800519c:	4620      	mov	r0, r4
 800519e:	bf18      	it	ne
 80051a0:	f04a 0a02 	orrne.w	sl, sl, #2
 80051a4:	1b76      	subs	r6, r6, r5
 80051a6:	f7ff fdf5 	bl	8004d94 <rshift>
 80051aa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80051ae:	f1ba 0f00 	cmp.w	sl, #0
 80051b2:	d048      	beq.n	8005246 <__gethex+0x3e2>
 80051b4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80051b8:	2b02      	cmp	r3, #2
 80051ba:	d015      	beq.n	80051e8 <__gethex+0x384>
 80051bc:	2b03      	cmp	r3, #3
 80051be:	d017      	beq.n	80051f0 <__gethex+0x38c>
 80051c0:	2b01      	cmp	r3, #1
 80051c2:	d109      	bne.n	80051d8 <__gethex+0x374>
 80051c4:	f01a 0f02 	tst.w	sl, #2
 80051c8:	d006      	beq.n	80051d8 <__gethex+0x374>
 80051ca:	f8d9 0000 	ldr.w	r0, [r9]
 80051ce:	ea4a 0a00 	orr.w	sl, sl, r0
 80051d2:	f01a 0f01 	tst.w	sl, #1
 80051d6:	d10e      	bne.n	80051f6 <__gethex+0x392>
 80051d8:	f047 0710 	orr.w	r7, r7, #16
 80051dc:	e033      	b.n	8005246 <__gethex+0x3e2>
 80051de:	f04f 0a01 	mov.w	sl, #1
 80051e2:	e7cf      	b.n	8005184 <__gethex+0x320>
 80051e4:	2701      	movs	r7, #1
 80051e6:	e7e2      	b.n	80051ae <__gethex+0x34a>
 80051e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80051ea:	f1c3 0301 	rsb	r3, r3, #1
 80051ee:	9315      	str	r3, [sp, #84]	; 0x54
 80051f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d0f0      	beq.n	80051d8 <__gethex+0x374>
 80051f6:	f04f 0c00 	mov.w	ip, #0
 80051fa:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80051fe:	f104 0314 	add.w	r3, r4, #20
 8005202:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8005206:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800520a:	4618      	mov	r0, r3
 800520c:	f853 2b04 	ldr.w	r2, [r3], #4
 8005210:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005214:	d01c      	beq.n	8005250 <__gethex+0x3ec>
 8005216:	3201      	adds	r2, #1
 8005218:	6002      	str	r2, [r0, #0]
 800521a:	2f02      	cmp	r7, #2
 800521c:	f104 0314 	add.w	r3, r4, #20
 8005220:	d13d      	bne.n	800529e <__gethex+0x43a>
 8005222:	f8d8 2000 	ldr.w	r2, [r8]
 8005226:	3a01      	subs	r2, #1
 8005228:	42b2      	cmp	r2, r6
 800522a:	d10a      	bne.n	8005242 <__gethex+0x3de>
 800522c:	2201      	movs	r2, #1
 800522e:	1171      	asrs	r1, r6, #5
 8005230:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005234:	f006 061f 	and.w	r6, r6, #31
 8005238:	fa02 f606 	lsl.w	r6, r2, r6
 800523c:	421e      	tst	r6, r3
 800523e:	bf18      	it	ne
 8005240:	4617      	movne	r7, r2
 8005242:	f047 0720 	orr.w	r7, r7, #32
 8005246:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005248:	601c      	str	r4, [r3, #0]
 800524a:	9b06      	ldr	r3, [sp, #24]
 800524c:	601d      	str	r5, [r3, #0]
 800524e:	e69b      	b.n	8004f88 <__gethex+0x124>
 8005250:	4299      	cmp	r1, r3
 8005252:	f843 cc04 	str.w	ip, [r3, #-4]
 8005256:	d8d8      	bhi.n	800520a <__gethex+0x3a6>
 8005258:	68a3      	ldr	r3, [r4, #8]
 800525a:	459b      	cmp	fp, r3
 800525c:	db17      	blt.n	800528e <__gethex+0x42a>
 800525e:	6861      	ldr	r1, [r4, #4]
 8005260:	9802      	ldr	r0, [sp, #8]
 8005262:	3101      	adds	r1, #1
 8005264:	f000 f936 	bl	80054d4 <_Balloc>
 8005268:	4681      	mov	r9, r0
 800526a:	b918      	cbnz	r0, 8005274 <__gethex+0x410>
 800526c:	4602      	mov	r2, r0
 800526e:	2184      	movs	r1, #132	; 0x84
 8005270:	4b19      	ldr	r3, [pc, #100]	; (80052d8 <__gethex+0x474>)
 8005272:	e6ac      	b.n	8004fce <__gethex+0x16a>
 8005274:	6922      	ldr	r2, [r4, #16]
 8005276:	f104 010c 	add.w	r1, r4, #12
 800527a:	3202      	adds	r2, #2
 800527c:	0092      	lsls	r2, r2, #2
 800527e:	300c      	adds	r0, #12
 8005280:	f000 f91a 	bl	80054b8 <memcpy>
 8005284:	4621      	mov	r1, r4
 8005286:	9802      	ldr	r0, [sp, #8]
 8005288:	f000 f964 	bl	8005554 <_Bfree>
 800528c:	464c      	mov	r4, r9
 800528e:	6923      	ldr	r3, [r4, #16]
 8005290:	1c5a      	adds	r2, r3, #1
 8005292:	6122      	str	r2, [r4, #16]
 8005294:	2201      	movs	r2, #1
 8005296:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800529a:	615a      	str	r2, [r3, #20]
 800529c:	e7bd      	b.n	800521a <__gethex+0x3b6>
 800529e:	6922      	ldr	r2, [r4, #16]
 80052a0:	455a      	cmp	r2, fp
 80052a2:	dd0b      	ble.n	80052bc <__gethex+0x458>
 80052a4:	2101      	movs	r1, #1
 80052a6:	4620      	mov	r0, r4
 80052a8:	f7ff fd74 	bl	8004d94 <rshift>
 80052ac:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80052b0:	3501      	adds	r5, #1
 80052b2:	42ab      	cmp	r3, r5
 80052b4:	f6ff aed5 	blt.w	8005062 <__gethex+0x1fe>
 80052b8:	2701      	movs	r7, #1
 80052ba:	e7c2      	b.n	8005242 <__gethex+0x3de>
 80052bc:	f016 061f 	ands.w	r6, r6, #31
 80052c0:	d0fa      	beq.n	80052b8 <__gethex+0x454>
 80052c2:	449a      	add	sl, r3
 80052c4:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80052c8:	f000 f9fa 	bl	80056c0 <__hi0bits>
 80052cc:	f1c6 0620 	rsb	r6, r6, #32
 80052d0:	42b0      	cmp	r0, r6
 80052d2:	dbe7      	blt.n	80052a4 <__gethex+0x440>
 80052d4:	e7f0      	b.n	80052b8 <__gethex+0x454>
 80052d6:	bf00      	nop
 80052d8:	08007144 	.word	0x08007144

080052dc <L_shift>:
 80052dc:	f1c2 0208 	rsb	r2, r2, #8
 80052e0:	0092      	lsls	r2, r2, #2
 80052e2:	b570      	push	{r4, r5, r6, lr}
 80052e4:	f1c2 0620 	rsb	r6, r2, #32
 80052e8:	6843      	ldr	r3, [r0, #4]
 80052ea:	6804      	ldr	r4, [r0, #0]
 80052ec:	fa03 f506 	lsl.w	r5, r3, r6
 80052f0:	432c      	orrs	r4, r5
 80052f2:	40d3      	lsrs	r3, r2
 80052f4:	6004      	str	r4, [r0, #0]
 80052f6:	f840 3f04 	str.w	r3, [r0, #4]!
 80052fa:	4288      	cmp	r0, r1
 80052fc:	d3f4      	bcc.n	80052e8 <L_shift+0xc>
 80052fe:	bd70      	pop	{r4, r5, r6, pc}

08005300 <__match>:
 8005300:	b530      	push	{r4, r5, lr}
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	3301      	adds	r3, #1
 8005306:	f811 4b01 	ldrb.w	r4, [r1], #1
 800530a:	b914      	cbnz	r4, 8005312 <__match+0x12>
 800530c:	6003      	str	r3, [r0, #0]
 800530e:	2001      	movs	r0, #1
 8005310:	bd30      	pop	{r4, r5, pc}
 8005312:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005316:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800531a:	2d19      	cmp	r5, #25
 800531c:	bf98      	it	ls
 800531e:	3220      	addls	r2, #32
 8005320:	42a2      	cmp	r2, r4
 8005322:	d0f0      	beq.n	8005306 <__match+0x6>
 8005324:	2000      	movs	r0, #0
 8005326:	e7f3      	b.n	8005310 <__match+0x10>

08005328 <__hexnan>:
 8005328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800532c:	2500      	movs	r5, #0
 800532e:	680b      	ldr	r3, [r1, #0]
 8005330:	4682      	mov	sl, r0
 8005332:	115e      	asrs	r6, r3, #5
 8005334:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005338:	f013 031f 	ands.w	r3, r3, #31
 800533c:	bf18      	it	ne
 800533e:	3604      	addne	r6, #4
 8005340:	1f37      	subs	r7, r6, #4
 8005342:	4690      	mov	r8, r2
 8005344:	46b9      	mov	r9, r7
 8005346:	463c      	mov	r4, r7
 8005348:	46ab      	mov	fp, r5
 800534a:	b087      	sub	sp, #28
 800534c:	6801      	ldr	r1, [r0, #0]
 800534e:	9301      	str	r3, [sp, #4]
 8005350:	f846 5c04 	str.w	r5, [r6, #-4]
 8005354:	9502      	str	r5, [sp, #8]
 8005356:	784a      	ldrb	r2, [r1, #1]
 8005358:	1c4b      	adds	r3, r1, #1
 800535a:	9303      	str	r3, [sp, #12]
 800535c:	b342      	cbz	r2, 80053b0 <__hexnan+0x88>
 800535e:	4610      	mov	r0, r2
 8005360:	9105      	str	r1, [sp, #20]
 8005362:	9204      	str	r2, [sp, #16]
 8005364:	f7ff fd69 	bl	8004e3a <__hexdig_fun>
 8005368:	2800      	cmp	r0, #0
 800536a:	d14f      	bne.n	800540c <__hexnan+0xe4>
 800536c:	9a04      	ldr	r2, [sp, #16]
 800536e:	9905      	ldr	r1, [sp, #20]
 8005370:	2a20      	cmp	r2, #32
 8005372:	d818      	bhi.n	80053a6 <__hexnan+0x7e>
 8005374:	9b02      	ldr	r3, [sp, #8]
 8005376:	459b      	cmp	fp, r3
 8005378:	dd13      	ble.n	80053a2 <__hexnan+0x7a>
 800537a:	454c      	cmp	r4, r9
 800537c:	d206      	bcs.n	800538c <__hexnan+0x64>
 800537e:	2d07      	cmp	r5, #7
 8005380:	dc04      	bgt.n	800538c <__hexnan+0x64>
 8005382:	462a      	mov	r2, r5
 8005384:	4649      	mov	r1, r9
 8005386:	4620      	mov	r0, r4
 8005388:	f7ff ffa8 	bl	80052dc <L_shift>
 800538c:	4544      	cmp	r4, r8
 800538e:	d950      	bls.n	8005432 <__hexnan+0x10a>
 8005390:	2300      	movs	r3, #0
 8005392:	f1a4 0904 	sub.w	r9, r4, #4
 8005396:	f844 3c04 	str.w	r3, [r4, #-4]
 800539a:	461d      	mov	r5, r3
 800539c:	464c      	mov	r4, r9
 800539e:	f8cd b008 	str.w	fp, [sp, #8]
 80053a2:	9903      	ldr	r1, [sp, #12]
 80053a4:	e7d7      	b.n	8005356 <__hexnan+0x2e>
 80053a6:	2a29      	cmp	r2, #41	; 0x29
 80053a8:	d156      	bne.n	8005458 <__hexnan+0x130>
 80053aa:	3102      	adds	r1, #2
 80053ac:	f8ca 1000 	str.w	r1, [sl]
 80053b0:	f1bb 0f00 	cmp.w	fp, #0
 80053b4:	d050      	beq.n	8005458 <__hexnan+0x130>
 80053b6:	454c      	cmp	r4, r9
 80053b8:	d206      	bcs.n	80053c8 <__hexnan+0xa0>
 80053ba:	2d07      	cmp	r5, #7
 80053bc:	dc04      	bgt.n	80053c8 <__hexnan+0xa0>
 80053be:	462a      	mov	r2, r5
 80053c0:	4649      	mov	r1, r9
 80053c2:	4620      	mov	r0, r4
 80053c4:	f7ff ff8a 	bl	80052dc <L_shift>
 80053c8:	4544      	cmp	r4, r8
 80053ca:	d934      	bls.n	8005436 <__hexnan+0x10e>
 80053cc:	4623      	mov	r3, r4
 80053ce:	f1a8 0204 	sub.w	r2, r8, #4
 80053d2:	f853 1b04 	ldr.w	r1, [r3], #4
 80053d6:	429f      	cmp	r7, r3
 80053d8:	f842 1f04 	str.w	r1, [r2, #4]!
 80053dc:	d2f9      	bcs.n	80053d2 <__hexnan+0xaa>
 80053de:	1b3b      	subs	r3, r7, r4
 80053e0:	f023 0303 	bic.w	r3, r3, #3
 80053e4:	3304      	adds	r3, #4
 80053e6:	3401      	adds	r4, #1
 80053e8:	3e03      	subs	r6, #3
 80053ea:	42b4      	cmp	r4, r6
 80053ec:	bf88      	it	hi
 80053ee:	2304      	movhi	r3, #4
 80053f0:	2200      	movs	r2, #0
 80053f2:	4443      	add	r3, r8
 80053f4:	f843 2b04 	str.w	r2, [r3], #4
 80053f8:	429f      	cmp	r7, r3
 80053fa:	d2fb      	bcs.n	80053f4 <__hexnan+0xcc>
 80053fc:	683b      	ldr	r3, [r7, #0]
 80053fe:	b91b      	cbnz	r3, 8005408 <__hexnan+0xe0>
 8005400:	4547      	cmp	r7, r8
 8005402:	d127      	bne.n	8005454 <__hexnan+0x12c>
 8005404:	2301      	movs	r3, #1
 8005406:	603b      	str	r3, [r7, #0]
 8005408:	2005      	movs	r0, #5
 800540a:	e026      	b.n	800545a <__hexnan+0x132>
 800540c:	3501      	adds	r5, #1
 800540e:	2d08      	cmp	r5, #8
 8005410:	f10b 0b01 	add.w	fp, fp, #1
 8005414:	dd06      	ble.n	8005424 <__hexnan+0xfc>
 8005416:	4544      	cmp	r4, r8
 8005418:	d9c3      	bls.n	80053a2 <__hexnan+0x7a>
 800541a:	2300      	movs	r3, #0
 800541c:	2501      	movs	r5, #1
 800541e:	f844 3c04 	str.w	r3, [r4, #-4]
 8005422:	3c04      	subs	r4, #4
 8005424:	6822      	ldr	r2, [r4, #0]
 8005426:	f000 000f 	and.w	r0, r0, #15
 800542a:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800542e:	6022      	str	r2, [r4, #0]
 8005430:	e7b7      	b.n	80053a2 <__hexnan+0x7a>
 8005432:	2508      	movs	r5, #8
 8005434:	e7b5      	b.n	80053a2 <__hexnan+0x7a>
 8005436:	9b01      	ldr	r3, [sp, #4]
 8005438:	2b00      	cmp	r3, #0
 800543a:	d0df      	beq.n	80053fc <__hexnan+0xd4>
 800543c:	f04f 32ff 	mov.w	r2, #4294967295
 8005440:	f1c3 0320 	rsb	r3, r3, #32
 8005444:	fa22 f303 	lsr.w	r3, r2, r3
 8005448:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800544c:	401a      	ands	r2, r3
 800544e:	f846 2c04 	str.w	r2, [r6, #-4]
 8005452:	e7d3      	b.n	80053fc <__hexnan+0xd4>
 8005454:	3f04      	subs	r7, #4
 8005456:	e7d1      	b.n	80053fc <__hexnan+0xd4>
 8005458:	2004      	movs	r0, #4
 800545a:	b007      	add	sp, #28
 800545c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005460 <_localeconv_r>:
 8005460:	4800      	ldr	r0, [pc, #0]	; (8005464 <_localeconv_r+0x4>)
 8005462:	4770      	bx	lr
 8005464:	20000168 	.word	0x20000168

08005468 <malloc>:
 8005468:	4b02      	ldr	r3, [pc, #8]	; (8005474 <malloc+0xc>)
 800546a:	4601      	mov	r1, r0
 800546c:	6818      	ldr	r0, [r3, #0]
 800546e:	f000 bd43 	b.w	8005ef8 <_malloc_r>
 8005472:	bf00      	nop
 8005474:	20000010 	.word	0x20000010

08005478 <__ascii_mbtowc>:
 8005478:	b082      	sub	sp, #8
 800547a:	b901      	cbnz	r1, 800547e <__ascii_mbtowc+0x6>
 800547c:	a901      	add	r1, sp, #4
 800547e:	b142      	cbz	r2, 8005492 <__ascii_mbtowc+0x1a>
 8005480:	b14b      	cbz	r3, 8005496 <__ascii_mbtowc+0x1e>
 8005482:	7813      	ldrb	r3, [r2, #0]
 8005484:	600b      	str	r3, [r1, #0]
 8005486:	7812      	ldrb	r2, [r2, #0]
 8005488:	1e10      	subs	r0, r2, #0
 800548a:	bf18      	it	ne
 800548c:	2001      	movne	r0, #1
 800548e:	b002      	add	sp, #8
 8005490:	4770      	bx	lr
 8005492:	4610      	mov	r0, r2
 8005494:	e7fb      	b.n	800548e <__ascii_mbtowc+0x16>
 8005496:	f06f 0001 	mvn.w	r0, #1
 800549a:	e7f8      	b.n	800548e <__ascii_mbtowc+0x16>

0800549c <memchr>:
 800549c:	4603      	mov	r3, r0
 800549e:	b510      	push	{r4, lr}
 80054a0:	b2c9      	uxtb	r1, r1
 80054a2:	4402      	add	r2, r0
 80054a4:	4293      	cmp	r3, r2
 80054a6:	4618      	mov	r0, r3
 80054a8:	d101      	bne.n	80054ae <memchr+0x12>
 80054aa:	2000      	movs	r0, #0
 80054ac:	e003      	b.n	80054b6 <memchr+0x1a>
 80054ae:	7804      	ldrb	r4, [r0, #0]
 80054b0:	3301      	adds	r3, #1
 80054b2:	428c      	cmp	r4, r1
 80054b4:	d1f6      	bne.n	80054a4 <memchr+0x8>
 80054b6:	bd10      	pop	{r4, pc}

080054b8 <memcpy>:
 80054b8:	440a      	add	r2, r1
 80054ba:	4291      	cmp	r1, r2
 80054bc:	f100 33ff 	add.w	r3, r0, #4294967295
 80054c0:	d100      	bne.n	80054c4 <memcpy+0xc>
 80054c2:	4770      	bx	lr
 80054c4:	b510      	push	{r4, lr}
 80054c6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80054ca:	4291      	cmp	r1, r2
 80054cc:	f803 4f01 	strb.w	r4, [r3, #1]!
 80054d0:	d1f9      	bne.n	80054c6 <memcpy+0xe>
 80054d2:	bd10      	pop	{r4, pc}

080054d4 <_Balloc>:
 80054d4:	b570      	push	{r4, r5, r6, lr}
 80054d6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80054d8:	4604      	mov	r4, r0
 80054da:	460d      	mov	r5, r1
 80054dc:	b976      	cbnz	r6, 80054fc <_Balloc+0x28>
 80054de:	2010      	movs	r0, #16
 80054e0:	f7ff ffc2 	bl	8005468 <malloc>
 80054e4:	4602      	mov	r2, r0
 80054e6:	6260      	str	r0, [r4, #36]	; 0x24
 80054e8:	b920      	cbnz	r0, 80054f4 <_Balloc+0x20>
 80054ea:	2166      	movs	r1, #102	; 0x66
 80054ec:	4b17      	ldr	r3, [pc, #92]	; (800554c <_Balloc+0x78>)
 80054ee:	4818      	ldr	r0, [pc, #96]	; (8005550 <_Balloc+0x7c>)
 80054f0:	f000 feee 	bl	80062d0 <__assert_func>
 80054f4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80054f8:	6006      	str	r6, [r0, #0]
 80054fa:	60c6      	str	r6, [r0, #12]
 80054fc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80054fe:	68f3      	ldr	r3, [r6, #12]
 8005500:	b183      	cbz	r3, 8005524 <_Balloc+0x50>
 8005502:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005504:	68db      	ldr	r3, [r3, #12]
 8005506:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800550a:	b9b8      	cbnz	r0, 800553c <_Balloc+0x68>
 800550c:	2101      	movs	r1, #1
 800550e:	fa01 f605 	lsl.w	r6, r1, r5
 8005512:	1d72      	adds	r2, r6, #5
 8005514:	4620      	mov	r0, r4
 8005516:	0092      	lsls	r2, r2, #2
 8005518:	f000 fc94 	bl	8005e44 <_calloc_r>
 800551c:	b160      	cbz	r0, 8005538 <_Balloc+0x64>
 800551e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005522:	e00e      	b.n	8005542 <_Balloc+0x6e>
 8005524:	2221      	movs	r2, #33	; 0x21
 8005526:	2104      	movs	r1, #4
 8005528:	4620      	mov	r0, r4
 800552a:	f000 fc8b 	bl	8005e44 <_calloc_r>
 800552e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005530:	60f0      	str	r0, [r6, #12]
 8005532:	68db      	ldr	r3, [r3, #12]
 8005534:	2b00      	cmp	r3, #0
 8005536:	d1e4      	bne.n	8005502 <_Balloc+0x2e>
 8005538:	2000      	movs	r0, #0
 800553a:	bd70      	pop	{r4, r5, r6, pc}
 800553c:	6802      	ldr	r2, [r0, #0]
 800553e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005542:	2300      	movs	r3, #0
 8005544:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005548:	e7f7      	b.n	800553a <_Balloc+0x66>
 800554a:	bf00      	nop
 800554c:	080070ce 	.word	0x080070ce
 8005550:	080071d4 	.word	0x080071d4

08005554 <_Bfree>:
 8005554:	b570      	push	{r4, r5, r6, lr}
 8005556:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005558:	4605      	mov	r5, r0
 800555a:	460c      	mov	r4, r1
 800555c:	b976      	cbnz	r6, 800557c <_Bfree+0x28>
 800555e:	2010      	movs	r0, #16
 8005560:	f7ff ff82 	bl	8005468 <malloc>
 8005564:	4602      	mov	r2, r0
 8005566:	6268      	str	r0, [r5, #36]	; 0x24
 8005568:	b920      	cbnz	r0, 8005574 <_Bfree+0x20>
 800556a:	218a      	movs	r1, #138	; 0x8a
 800556c:	4b08      	ldr	r3, [pc, #32]	; (8005590 <_Bfree+0x3c>)
 800556e:	4809      	ldr	r0, [pc, #36]	; (8005594 <_Bfree+0x40>)
 8005570:	f000 feae 	bl	80062d0 <__assert_func>
 8005574:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005578:	6006      	str	r6, [r0, #0]
 800557a:	60c6      	str	r6, [r0, #12]
 800557c:	b13c      	cbz	r4, 800558e <_Bfree+0x3a>
 800557e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005580:	6862      	ldr	r2, [r4, #4]
 8005582:	68db      	ldr	r3, [r3, #12]
 8005584:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005588:	6021      	str	r1, [r4, #0]
 800558a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800558e:	bd70      	pop	{r4, r5, r6, pc}
 8005590:	080070ce 	.word	0x080070ce
 8005594:	080071d4 	.word	0x080071d4

08005598 <__multadd>:
 8005598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800559c:	4698      	mov	r8, r3
 800559e:	460c      	mov	r4, r1
 80055a0:	2300      	movs	r3, #0
 80055a2:	690e      	ldr	r6, [r1, #16]
 80055a4:	4607      	mov	r7, r0
 80055a6:	f101 0014 	add.w	r0, r1, #20
 80055aa:	6805      	ldr	r5, [r0, #0]
 80055ac:	3301      	adds	r3, #1
 80055ae:	b2a9      	uxth	r1, r5
 80055b0:	fb02 8101 	mla	r1, r2, r1, r8
 80055b4:	0c2d      	lsrs	r5, r5, #16
 80055b6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 80055ba:	fb02 c505 	mla	r5, r2, r5, ip
 80055be:	b289      	uxth	r1, r1
 80055c0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80055c4:	429e      	cmp	r6, r3
 80055c6:	ea4f 4815 	mov.w	r8, r5, lsr #16
 80055ca:	f840 1b04 	str.w	r1, [r0], #4
 80055ce:	dcec      	bgt.n	80055aa <__multadd+0x12>
 80055d0:	f1b8 0f00 	cmp.w	r8, #0
 80055d4:	d022      	beq.n	800561c <__multadd+0x84>
 80055d6:	68a3      	ldr	r3, [r4, #8]
 80055d8:	42b3      	cmp	r3, r6
 80055da:	dc19      	bgt.n	8005610 <__multadd+0x78>
 80055dc:	6861      	ldr	r1, [r4, #4]
 80055de:	4638      	mov	r0, r7
 80055e0:	3101      	adds	r1, #1
 80055e2:	f7ff ff77 	bl	80054d4 <_Balloc>
 80055e6:	4605      	mov	r5, r0
 80055e8:	b928      	cbnz	r0, 80055f6 <__multadd+0x5e>
 80055ea:	4602      	mov	r2, r0
 80055ec:	21b5      	movs	r1, #181	; 0xb5
 80055ee:	4b0d      	ldr	r3, [pc, #52]	; (8005624 <__multadd+0x8c>)
 80055f0:	480d      	ldr	r0, [pc, #52]	; (8005628 <__multadd+0x90>)
 80055f2:	f000 fe6d 	bl	80062d0 <__assert_func>
 80055f6:	6922      	ldr	r2, [r4, #16]
 80055f8:	f104 010c 	add.w	r1, r4, #12
 80055fc:	3202      	adds	r2, #2
 80055fe:	0092      	lsls	r2, r2, #2
 8005600:	300c      	adds	r0, #12
 8005602:	f7ff ff59 	bl	80054b8 <memcpy>
 8005606:	4621      	mov	r1, r4
 8005608:	4638      	mov	r0, r7
 800560a:	f7ff ffa3 	bl	8005554 <_Bfree>
 800560e:	462c      	mov	r4, r5
 8005610:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8005614:	3601      	adds	r6, #1
 8005616:	f8c3 8014 	str.w	r8, [r3, #20]
 800561a:	6126      	str	r6, [r4, #16]
 800561c:	4620      	mov	r0, r4
 800561e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005622:	bf00      	nop
 8005624:	08007144 	.word	0x08007144
 8005628:	080071d4 	.word	0x080071d4

0800562c <__s2b>:
 800562c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005630:	4615      	mov	r5, r2
 8005632:	2209      	movs	r2, #9
 8005634:	461f      	mov	r7, r3
 8005636:	3308      	adds	r3, #8
 8005638:	460c      	mov	r4, r1
 800563a:	fb93 f3f2 	sdiv	r3, r3, r2
 800563e:	4606      	mov	r6, r0
 8005640:	2201      	movs	r2, #1
 8005642:	2100      	movs	r1, #0
 8005644:	429a      	cmp	r2, r3
 8005646:	db09      	blt.n	800565c <__s2b+0x30>
 8005648:	4630      	mov	r0, r6
 800564a:	f7ff ff43 	bl	80054d4 <_Balloc>
 800564e:	b940      	cbnz	r0, 8005662 <__s2b+0x36>
 8005650:	4602      	mov	r2, r0
 8005652:	21ce      	movs	r1, #206	; 0xce
 8005654:	4b18      	ldr	r3, [pc, #96]	; (80056b8 <__s2b+0x8c>)
 8005656:	4819      	ldr	r0, [pc, #100]	; (80056bc <__s2b+0x90>)
 8005658:	f000 fe3a 	bl	80062d0 <__assert_func>
 800565c:	0052      	lsls	r2, r2, #1
 800565e:	3101      	adds	r1, #1
 8005660:	e7f0      	b.n	8005644 <__s2b+0x18>
 8005662:	9b08      	ldr	r3, [sp, #32]
 8005664:	2d09      	cmp	r5, #9
 8005666:	6143      	str	r3, [r0, #20]
 8005668:	f04f 0301 	mov.w	r3, #1
 800566c:	6103      	str	r3, [r0, #16]
 800566e:	dd16      	ble.n	800569e <__s2b+0x72>
 8005670:	f104 0909 	add.w	r9, r4, #9
 8005674:	46c8      	mov	r8, r9
 8005676:	442c      	add	r4, r5
 8005678:	f818 3b01 	ldrb.w	r3, [r8], #1
 800567c:	4601      	mov	r1, r0
 800567e:	220a      	movs	r2, #10
 8005680:	4630      	mov	r0, r6
 8005682:	3b30      	subs	r3, #48	; 0x30
 8005684:	f7ff ff88 	bl	8005598 <__multadd>
 8005688:	45a0      	cmp	r8, r4
 800568a:	d1f5      	bne.n	8005678 <__s2b+0x4c>
 800568c:	f1a5 0408 	sub.w	r4, r5, #8
 8005690:	444c      	add	r4, r9
 8005692:	1b2d      	subs	r5, r5, r4
 8005694:	1963      	adds	r3, r4, r5
 8005696:	42bb      	cmp	r3, r7
 8005698:	db04      	blt.n	80056a4 <__s2b+0x78>
 800569a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800569e:	2509      	movs	r5, #9
 80056a0:	340a      	adds	r4, #10
 80056a2:	e7f6      	b.n	8005692 <__s2b+0x66>
 80056a4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80056a8:	4601      	mov	r1, r0
 80056aa:	220a      	movs	r2, #10
 80056ac:	4630      	mov	r0, r6
 80056ae:	3b30      	subs	r3, #48	; 0x30
 80056b0:	f7ff ff72 	bl	8005598 <__multadd>
 80056b4:	e7ee      	b.n	8005694 <__s2b+0x68>
 80056b6:	bf00      	nop
 80056b8:	08007144 	.word	0x08007144
 80056bc:	080071d4 	.word	0x080071d4

080056c0 <__hi0bits>:
 80056c0:	0c02      	lsrs	r2, r0, #16
 80056c2:	0412      	lsls	r2, r2, #16
 80056c4:	4603      	mov	r3, r0
 80056c6:	b9ca      	cbnz	r2, 80056fc <__hi0bits+0x3c>
 80056c8:	0403      	lsls	r3, r0, #16
 80056ca:	2010      	movs	r0, #16
 80056cc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80056d0:	bf04      	itt	eq
 80056d2:	021b      	lsleq	r3, r3, #8
 80056d4:	3008      	addeq	r0, #8
 80056d6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80056da:	bf04      	itt	eq
 80056dc:	011b      	lsleq	r3, r3, #4
 80056de:	3004      	addeq	r0, #4
 80056e0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80056e4:	bf04      	itt	eq
 80056e6:	009b      	lsleq	r3, r3, #2
 80056e8:	3002      	addeq	r0, #2
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	db05      	blt.n	80056fa <__hi0bits+0x3a>
 80056ee:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80056f2:	f100 0001 	add.w	r0, r0, #1
 80056f6:	bf08      	it	eq
 80056f8:	2020      	moveq	r0, #32
 80056fa:	4770      	bx	lr
 80056fc:	2000      	movs	r0, #0
 80056fe:	e7e5      	b.n	80056cc <__hi0bits+0xc>

08005700 <__lo0bits>:
 8005700:	6803      	ldr	r3, [r0, #0]
 8005702:	4602      	mov	r2, r0
 8005704:	f013 0007 	ands.w	r0, r3, #7
 8005708:	d00b      	beq.n	8005722 <__lo0bits+0x22>
 800570a:	07d9      	lsls	r1, r3, #31
 800570c:	d422      	bmi.n	8005754 <__lo0bits+0x54>
 800570e:	0798      	lsls	r0, r3, #30
 8005710:	bf49      	itett	mi
 8005712:	085b      	lsrmi	r3, r3, #1
 8005714:	089b      	lsrpl	r3, r3, #2
 8005716:	2001      	movmi	r0, #1
 8005718:	6013      	strmi	r3, [r2, #0]
 800571a:	bf5c      	itt	pl
 800571c:	2002      	movpl	r0, #2
 800571e:	6013      	strpl	r3, [r2, #0]
 8005720:	4770      	bx	lr
 8005722:	b299      	uxth	r1, r3
 8005724:	b909      	cbnz	r1, 800572a <__lo0bits+0x2a>
 8005726:	2010      	movs	r0, #16
 8005728:	0c1b      	lsrs	r3, r3, #16
 800572a:	f013 0fff 	tst.w	r3, #255	; 0xff
 800572e:	bf04      	itt	eq
 8005730:	0a1b      	lsreq	r3, r3, #8
 8005732:	3008      	addeq	r0, #8
 8005734:	0719      	lsls	r1, r3, #28
 8005736:	bf04      	itt	eq
 8005738:	091b      	lsreq	r3, r3, #4
 800573a:	3004      	addeq	r0, #4
 800573c:	0799      	lsls	r1, r3, #30
 800573e:	bf04      	itt	eq
 8005740:	089b      	lsreq	r3, r3, #2
 8005742:	3002      	addeq	r0, #2
 8005744:	07d9      	lsls	r1, r3, #31
 8005746:	d403      	bmi.n	8005750 <__lo0bits+0x50>
 8005748:	085b      	lsrs	r3, r3, #1
 800574a:	f100 0001 	add.w	r0, r0, #1
 800574e:	d003      	beq.n	8005758 <__lo0bits+0x58>
 8005750:	6013      	str	r3, [r2, #0]
 8005752:	4770      	bx	lr
 8005754:	2000      	movs	r0, #0
 8005756:	4770      	bx	lr
 8005758:	2020      	movs	r0, #32
 800575a:	4770      	bx	lr

0800575c <__i2b>:
 800575c:	b510      	push	{r4, lr}
 800575e:	460c      	mov	r4, r1
 8005760:	2101      	movs	r1, #1
 8005762:	f7ff feb7 	bl	80054d4 <_Balloc>
 8005766:	4602      	mov	r2, r0
 8005768:	b928      	cbnz	r0, 8005776 <__i2b+0x1a>
 800576a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800576e:	4b04      	ldr	r3, [pc, #16]	; (8005780 <__i2b+0x24>)
 8005770:	4804      	ldr	r0, [pc, #16]	; (8005784 <__i2b+0x28>)
 8005772:	f000 fdad 	bl	80062d0 <__assert_func>
 8005776:	2301      	movs	r3, #1
 8005778:	6144      	str	r4, [r0, #20]
 800577a:	6103      	str	r3, [r0, #16]
 800577c:	bd10      	pop	{r4, pc}
 800577e:	bf00      	nop
 8005780:	08007144 	.word	0x08007144
 8005784:	080071d4 	.word	0x080071d4

08005788 <__multiply>:
 8005788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800578c:	4614      	mov	r4, r2
 800578e:	690a      	ldr	r2, [r1, #16]
 8005790:	6923      	ldr	r3, [r4, #16]
 8005792:	460d      	mov	r5, r1
 8005794:	429a      	cmp	r2, r3
 8005796:	bfbe      	ittt	lt
 8005798:	460b      	movlt	r3, r1
 800579a:	4625      	movlt	r5, r4
 800579c:	461c      	movlt	r4, r3
 800579e:	f8d5 a010 	ldr.w	sl, [r5, #16]
 80057a2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80057a6:	68ab      	ldr	r3, [r5, #8]
 80057a8:	6869      	ldr	r1, [r5, #4]
 80057aa:	eb0a 0709 	add.w	r7, sl, r9
 80057ae:	42bb      	cmp	r3, r7
 80057b0:	b085      	sub	sp, #20
 80057b2:	bfb8      	it	lt
 80057b4:	3101      	addlt	r1, #1
 80057b6:	f7ff fe8d 	bl	80054d4 <_Balloc>
 80057ba:	b930      	cbnz	r0, 80057ca <__multiply+0x42>
 80057bc:	4602      	mov	r2, r0
 80057be:	f240 115d 	movw	r1, #349	; 0x15d
 80057c2:	4b41      	ldr	r3, [pc, #260]	; (80058c8 <__multiply+0x140>)
 80057c4:	4841      	ldr	r0, [pc, #260]	; (80058cc <__multiply+0x144>)
 80057c6:	f000 fd83 	bl	80062d0 <__assert_func>
 80057ca:	f100 0614 	add.w	r6, r0, #20
 80057ce:	4633      	mov	r3, r6
 80057d0:	2200      	movs	r2, #0
 80057d2:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 80057d6:	4543      	cmp	r3, r8
 80057d8:	d31e      	bcc.n	8005818 <__multiply+0x90>
 80057da:	f105 0c14 	add.w	ip, r5, #20
 80057de:	f104 0314 	add.w	r3, r4, #20
 80057e2:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 80057e6:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 80057ea:	9202      	str	r2, [sp, #8]
 80057ec:	ebac 0205 	sub.w	r2, ip, r5
 80057f0:	3a15      	subs	r2, #21
 80057f2:	f022 0203 	bic.w	r2, r2, #3
 80057f6:	3204      	adds	r2, #4
 80057f8:	f105 0115 	add.w	r1, r5, #21
 80057fc:	458c      	cmp	ip, r1
 80057fe:	bf38      	it	cc
 8005800:	2204      	movcc	r2, #4
 8005802:	9201      	str	r2, [sp, #4]
 8005804:	9a02      	ldr	r2, [sp, #8]
 8005806:	9303      	str	r3, [sp, #12]
 8005808:	429a      	cmp	r2, r3
 800580a:	d808      	bhi.n	800581e <__multiply+0x96>
 800580c:	2f00      	cmp	r7, #0
 800580e:	dc55      	bgt.n	80058bc <__multiply+0x134>
 8005810:	6107      	str	r7, [r0, #16]
 8005812:	b005      	add	sp, #20
 8005814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005818:	f843 2b04 	str.w	r2, [r3], #4
 800581c:	e7db      	b.n	80057d6 <__multiply+0x4e>
 800581e:	f8b3 a000 	ldrh.w	sl, [r3]
 8005822:	f1ba 0f00 	cmp.w	sl, #0
 8005826:	d020      	beq.n	800586a <__multiply+0xe2>
 8005828:	46b1      	mov	r9, r6
 800582a:	2200      	movs	r2, #0
 800582c:	f105 0e14 	add.w	lr, r5, #20
 8005830:	f85e 4b04 	ldr.w	r4, [lr], #4
 8005834:	f8d9 b000 	ldr.w	fp, [r9]
 8005838:	b2a1      	uxth	r1, r4
 800583a:	fa1f fb8b 	uxth.w	fp, fp
 800583e:	fb0a b101 	mla	r1, sl, r1, fp
 8005842:	4411      	add	r1, r2
 8005844:	f8d9 2000 	ldr.w	r2, [r9]
 8005848:	0c24      	lsrs	r4, r4, #16
 800584a:	0c12      	lsrs	r2, r2, #16
 800584c:	fb0a 2404 	mla	r4, sl, r4, r2
 8005850:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8005854:	b289      	uxth	r1, r1
 8005856:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800585a:	45f4      	cmp	ip, lr
 800585c:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8005860:	f849 1b04 	str.w	r1, [r9], #4
 8005864:	d8e4      	bhi.n	8005830 <__multiply+0xa8>
 8005866:	9901      	ldr	r1, [sp, #4]
 8005868:	5072      	str	r2, [r6, r1]
 800586a:	9a03      	ldr	r2, [sp, #12]
 800586c:	3304      	adds	r3, #4
 800586e:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005872:	f1b9 0f00 	cmp.w	r9, #0
 8005876:	d01f      	beq.n	80058b8 <__multiply+0x130>
 8005878:	46b6      	mov	lr, r6
 800587a:	f04f 0a00 	mov.w	sl, #0
 800587e:	6834      	ldr	r4, [r6, #0]
 8005880:	f105 0114 	add.w	r1, r5, #20
 8005884:	880a      	ldrh	r2, [r1, #0]
 8005886:	f8be b002 	ldrh.w	fp, [lr, #2]
 800588a:	b2a4      	uxth	r4, r4
 800588c:	fb09 b202 	mla	r2, r9, r2, fp
 8005890:	4492      	add	sl, r2
 8005892:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8005896:	f84e 4b04 	str.w	r4, [lr], #4
 800589a:	f851 4b04 	ldr.w	r4, [r1], #4
 800589e:	f8be 2000 	ldrh.w	r2, [lr]
 80058a2:	0c24      	lsrs	r4, r4, #16
 80058a4:	fb09 2404 	mla	r4, r9, r4, r2
 80058a8:	458c      	cmp	ip, r1
 80058aa:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 80058ae:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 80058b2:	d8e7      	bhi.n	8005884 <__multiply+0xfc>
 80058b4:	9a01      	ldr	r2, [sp, #4]
 80058b6:	50b4      	str	r4, [r6, r2]
 80058b8:	3604      	adds	r6, #4
 80058ba:	e7a3      	b.n	8005804 <__multiply+0x7c>
 80058bc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d1a5      	bne.n	8005810 <__multiply+0x88>
 80058c4:	3f01      	subs	r7, #1
 80058c6:	e7a1      	b.n	800580c <__multiply+0x84>
 80058c8:	08007144 	.word	0x08007144
 80058cc:	080071d4 	.word	0x080071d4

080058d0 <__pow5mult>:
 80058d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058d4:	4615      	mov	r5, r2
 80058d6:	f012 0203 	ands.w	r2, r2, #3
 80058da:	4606      	mov	r6, r0
 80058dc:	460f      	mov	r7, r1
 80058de:	d007      	beq.n	80058f0 <__pow5mult+0x20>
 80058e0:	4c25      	ldr	r4, [pc, #148]	; (8005978 <__pow5mult+0xa8>)
 80058e2:	3a01      	subs	r2, #1
 80058e4:	2300      	movs	r3, #0
 80058e6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80058ea:	f7ff fe55 	bl	8005598 <__multadd>
 80058ee:	4607      	mov	r7, r0
 80058f0:	10ad      	asrs	r5, r5, #2
 80058f2:	d03d      	beq.n	8005970 <__pow5mult+0xa0>
 80058f4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80058f6:	b97c      	cbnz	r4, 8005918 <__pow5mult+0x48>
 80058f8:	2010      	movs	r0, #16
 80058fa:	f7ff fdb5 	bl	8005468 <malloc>
 80058fe:	4602      	mov	r2, r0
 8005900:	6270      	str	r0, [r6, #36]	; 0x24
 8005902:	b928      	cbnz	r0, 8005910 <__pow5mult+0x40>
 8005904:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8005908:	4b1c      	ldr	r3, [pc, #112]	; (800597c <__pow5mult+0xac>)
 800590a:	481d      	ldr	r0, [pc, #116]	; (8005980 <__pow5mult+0xb0>)
 800590c:	f000 fce0 	bl	80062d0 <__assert_func>
 8005910:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005914:	6004      	str	r4, [r0, #0]
 8005916:	60c4      	str	r4, [r0, #12]
 8005918:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800591c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005920:	b94c      	cbnz	r4, 8005936 <__pow5mult+0x66>
 8005922:	f240 2171 	movw	r1, #625	; 0x271
 8005926:	4630      	mov	r0, r6
 8005928:	f7ff ff18 	bl	800575c <__i2b>
 800592c:	2300      	movs	r3, #0
 800592e:	4604      	mov	r4, r0
 8005930:	f8c8 0008 	str.w	r0, [r8, #8]
 8005934:	6003      	str	r3, [r0, #0]
 8005936:	f04f 0900 	mov.w	r9, #0
 800593a:	07eb      	lsls	r3, r5, #31
 800593c:	d50a      	bpl.n	8005954 <__pow5mult+0x84>
 800593e:	4639      	mov	r1, r7
 8005940:	4622      	mov	r2, r4
 8005942:	4630      	mov	r0, r6
 8005944:	f7ff ff20 	bl	8005788 <__multiply>
 8005948:	4680      	mov	r8, r0
 800594a:	4639      	mov	r1, r7
 800594c:	4630      	mov	r0, r6
 800594e:	f7ff fe01 	bl	8005554 <_Bfree>
 8005952:	4647      	mov	r7, r8
 8005954:	106d      	asrs	r5, r5, #1
 8005956:	d00b      	beq.n	8005970 <__pow5mult+0xa0>
 8005958:	6820      	ldr	r0, [r4, #0]
 800595a:	b938      	cbnz	r0, 800596c <__pow5mult+0x9c>
 800595c:	4622      	mov	r2, r4
 800595e:	4621      	mov	r1, r4
 8005960:	4630      	mov	r0, r6
 8005962:	f7ff ff11 	bl	8005788 <__multiply>
 8005966:	6020      	str	r0, [r4, #0]
 8005968:	f8c0 9000 	str.w	r9, [r0]
 800596c:	4604      	mov	r4, r0
 800596e:	e7e4      	b.n	800593a <__pow5mult+0x6a>
 8005970:	4638      	mov	r0, r7
 8005972:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005976:	bf00      	nop
 8005978:	08007328 	.word	0x08007328
 800597c:	080070ce 	.word	0x080070ce
 8005980:	080071d4 	.word	0x080071d4

08005984 <__lshift>:
 8005984:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005988:	460c      	mov	r4, r1
 800598a:	4607      	mov	r7, r0
 800598c:	4691      	mov	r9, r2
 800598e:	6923      	ldr	r3, [r4, #16]
 8005990:	6849      	ldr	r1, [r1, #4]
 8005992:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8005996:	68a3      	ldr	r3, [r4, #8]
 8005998:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800599c:	f108 0601 	add.w	r6, r8, #1
 80059a0:	42b3      	cmp	r3, r6
 80059a2:	db0b      	blt.n	80059bc <__lshift+0x38>
 80059a4:	4638      	mov	r0, r7
 80059a6:	f7ff fd95 	bl	80054d4 <_Balloc>
 80059aa:	4605      	mov	r5, r0
 80059ac:	b948      	cbnz	r0, 80059c2 <__lshift+0x3e>
 80059ae:	4602      	mov	r2, r0
 80059b0:	f240 11d9 	movw	r1, #473	; 0x1d9
 80059b4:	4b27      	ldr	r3, [pc, #156]	; (8005a54 <__lshift+0xd0>)
 80059b6:	4828      	ldr	r0, [pc, #160]	; (8005a58 <__lshift+0xd4>)
 80059b8:	f000 fc8a 	bl	80062d0 <__assert_func>
 80059bc:	3101      	adds	r1, #1
 80059be:	005b      	lsls	r3, r3, #1
 80059c0:	e7ee      	b.n	80059a0 <__lshift+0x1c>
 80059c2:	2300      	movs	r3, #0
 80059c4:	f100 0114 	add.w	r1, r0, #20
 80059c8:	f100 0210 	add.w	r2, r0, #16
 80059cc:	4618      	mov	r0, r3
 80059ce:	4553      	cmp	r3, sl
 80059d0:	db33      	blt.n	8005a3a <__lshift+0xb6>
 80059d2:	6920      	ldr	r0, [r4, #16]
 80059d4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80059d8:	f104 0314 	add.w	r3, r4, #20
 80059dc:	f019 091f 	ands.w	r9, r9, #31
 80059e0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80059e4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80059e8:	d02b      	beq.n	8005a42 <__lshift+0xbe>
 80059ea:	468a      	mov	sl, r1
 80059ec:	2200      	movs	r2, #0
 80059ee:	f1c9 0e20 	rsb	lr, r9, #32
 80059f2:	6818      	ldr	r0, [r3, #0]
 80059f4:	fa00 f009 	lsl.w	r0, r0, r9
 80059f8:	4302      	orrs	r2, r0
 80059fa:	f84a 2b04 	str.w	r2, [sl], #4
 80059fe:	f853 2b04 	ldr.w	r2, [r3], #4
 8005a02:	459c      	cmp	ip, r3
 8005a04:	fa22 f20e 	lsr.w	r2, r2, lr
 8005a08:	d8f3      	bhi.n	80059f2 <__lshift+0x6e>
 8005a0a:	ebac 0304 	sub.w	r3, ip, r4
 8005a0e:	3b15      	subs	r3, #21
 8005a10:	f023 0303 	bic.w	r3, r3, #3
 8005a14:	3304      	adds	r3, #4
 8005a16:	f104 0015 	add.w	r0, r4, #21
 8005a1a:	4584      	cmp	ip, r0
 8005a1c:	bf38      	it	cc
 8005a1e:	2304      	movcc	r3, #4
 8005a20:	50ca      	str	r2, [r1, r3]
 8005a22:	b10a      	cbz	r2, 8005a28 <__lshift+0xa4>
 8005a24:	f108 0602 	add.w	r6, r8, #2
 8005a28:	3e01      	subs	r6, #1
 8005a2a:	4638      	mov	r0, r7
 8005a2c:	4621      	mov	r1, r4
 8005a2e:	612e      	str	r6, [r5, #16]
 8005a30:	f7ff fd90 	bl	8005554 <_Bfree>
 8005a34:	4628      	mov	r0, r5
 8005a36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a3a:	f842 0f04 	str.w	r0, [r2, #4]!
 8005a3e:	3301      	adds	r3, #1
 8005a40:	e7c5      	b.n	80059ce <__lshift+0x4a>
 8005a42:	3904      	subs	r1, #4
 8005a44:	f853 2b04 	ldr.w	r2, [r3], #4
 8005a48:	459c      	cmp	ip, r3
 8005a4a:	f841 2f04 	str.w	r2, [r1, #4]!
 8005a4e:	d8f9      	bhi.n	8005a44 <__lshift+0xc0>
 8005a50:	e7ea      	b.n	8005a28 <__lshift+0xa4>
 8005a52:	bf00      	nop
 8005a54:	08007144 	.word	0x08007144
 8005a58:	080071d4 	.word	0x080071d4

08005a5c <__mcmp>:
 8005a5c:	4603      	mov	r3, r0
 8005a5e:	690a      	ldr	r2, [r1, #16]
 8005a60:	6900      	ldr	r0, [r0, #16]
 8005a62:	b530      	push	{r4, r5, lr}
 8005a64:	1a80      	subs	r0, r0, r2
 8005a66:	d10d      	bne.n	8005a84 <__mcmp+0x28>
 8005a68:	3314      	adds	r3, #20
 8005a6a:	3114      	adds	r1, #20
 8005a6c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005a70:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005a74:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005a78:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005a7c:	4295      	cmp	r5, r2
 8005a7e:	d002      	beq.n	8005a86 <__mcmp+0x2a>
 8005a80:	d304      	bcc.n	8005a8c <__mcmp+0x30>
 8005a82:	2001      	movs	r0, #1
 8005a84:	bd30      	pop	{r4, r5, pc}
 8005a86:	42a3      	cmp	r3, r4
 8005a88:	d3f4      	bcc.n	8005a74 <__mcmp+0x18>
 8005a8a:	e7fb      	b.n	8005a84 <__mcmp+0x28>
 8005a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8005a90:	e7f8      	b.n	8005a84 <__mcmp+0x28>
	...

08005a94 <__mdiff>:
 8005a94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a98:	460c      	mov	r4, r1
 8005a9a:	4606      	mov	r6, r0
 8005a9c:	4611      	mov	r1, r2
 8005a9e:	4620      	mov	r0, r4
 8005aa0:	4692      	mov	sl, r2
 8005aa2:	f7ff ffdb 	bl	8005a5c <__mcmp>
 8005aa6:	1e05      	subs	r5, r0, #0
 8005aa8:	d111      	bne.n	8005ace <__mdiff+0x3a>
 8005aaa:	4629      	mov	r1, r5
 8005aac:	4630      	mov	r0, r6
 8005aae:	f7ff fd11 	bl	80054d4 <_Balloc>
 8005ab2:	4602      	mov	r2, r0
 8005ab4:	b928      	cbnz	r0, 8005ac2 <__mdiff+0x2e>
 8005ab6:	f240 2132 	movw	r1, #562	; 0x232
 8005aba:	4b3c      	ldr	r3, [pc, #240]	; (8005bac <__mdiff+0x118>)
 8005abc:	483c      	ldr	r0, [pc, #240]	; (8005bb0 <__mdiff+0x11c>)
 8005abe:	f000 fc07 	bl	80062d0 <__assert_func>
 8005ac2:	2301      	movs	r3, #1
 8005ac4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8005ac8:	4610      	mov	r0, r2
 8005aca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ace:	bfa4      	itt	ge
 8005ad0:	4653      	movge	r3, sl
 8005ad2:	46a2      	movge	sl, r4
 8005ad4:	4630      	mov	r0, r6
 8005ad6:	f8da 1004 	ldr.w	r1, [sl, #4]
 8005ada:	bfa6      	itte	ge
 8005adc:	461c      	movge	r4, r3
 8005ade:	2500      	movge	r5, #0
 8005ae0:	2501      	movlt	r5, #1
 8005ae2:	f7ff fcf7 	bl	80054d4 <_Balloc>
 8005ae6:	4602      	mov	r2, r0
 8005ae8:	b918      	cbnz	r0, 8005af2 <__mdiff+0x5e>
 8005aea:	f44f 7110 	mov.w	r1, #576	; 0x240
 8005aee:	4b2f      	ldr	r3, [pc, #188]	; (8005bac <__mdiff+0x118>)
 8005af0:	e7e4      	b.n	8005abc <__mdiff+0x28>
 8005af2:	f100 0814 	add.w	r8, r0, #20
 8005af6:	f8da 7010 	ldr.w	r7, [sl, #16]
 8005afa:	60c5      	str	r5, [r0, #12]
 8005afc:	f04f 0c00 	mov.w	ip, #0
 8005b00:	f10a 0514 	add.w	r5, sl, #20
 8005b04:	f10a 0010 	add.w	r0, sl, #16
 8005b08:	46c2      	mov	sl, r8
 8005b0a:	6926      	ldr	r6, [r4, #16]
 8005b0c:	f104 0914 	add.w	r9, r4, #20
 8005b10:	eb05 0e87 	add.w	lr, r5, r7, lsl #2
 8005b14:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8005b18:	f850 bf04 	ldr.w	fp, [r0, #4]!
 8005b1c:	f859 3b04 	ldr.w	r3, [r9], #4
 8005b20:	fa1f f18b 	uxth.w	r1, fp
 8005b24:	4461      	add	r1, ip
 8005b26:	fa1f fc83 	uxth.w	ip, r3
 8005b2a:	0c1b      	lsrs	r3, r3, #16
 8005b2c:	eba1 010c 	sub.w	r1, r1, ip
 8005b30:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8005b34:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8005b38:	b289      	uxth	r1, r1
 8005b3a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8005b3e:	454e      	cmp	r6, r9
 8005b40:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8005b44:	f84a 3b04 	str.w	r3, [sl], #4
 8005b48:	d8e6      	bhi.n	8005b18 <__mdiff+0x84>
 8005b4a:	1b33      	subs	r3, r6, r4
 8005b4c:	3b15      	subs	r3, #21
 8005b4e:	f023 0303 	bic.w	r3, r3, #3
 8005b52:	3415      	adds	r4, #21
 8005b54:	3304      	adds	r3, #4
 8005b56:	42a6      	cmp	r6, r4
 8005b58:	bf38      	it	cc
 8005b5a:	2304      	movcc	r3, #4
 8005b5c:	441d      	add	r5, r3
 8005b5e:	4443      	add	r3, r8
 8005b60:	461e      	mov	r6, r3
 8005b62:	462c      	mov	r4, r5
 8005b64:	4574      	cmp	r4, lr
 8005b66:	d30e      	bcc.n	8005b86 <__mdiff+0xf2>
 8005b68:	f10e 0103 	add.w	r1, lr, #3
 8005b6c:	1b49      	subs	r1, r1, r5
 8005b6e:	f021 0103 	bic.w	r1, r1, #3
 8005b72:	3d03      	subs	r5, #3
 8005b74:	45ae      	cmp	lr, r5
 8005b76:	bf38      	it	cc
 8005b78:	2100      	movcc	r1, #0
 8005b7a:	4419      	add	r1, r3
 8005b7c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005b80:	b18b      	cbz	r3, 8005ba6 <__mdiff+0x112>
 8005b82:	6117      	str	r7, [r2, #16]
 8005b84:	e7a0      	b.n	8005ac8 <__mdiff+0x34>
 8005b86:	f854 8b04 	ldr.w	r8, [r4], #4
 8005b8a:	fa1f f188 	uxth.w	r1, r8
 8005b8e:	4461      	add	r1, ip
 8005b90:	1408      	asrs	r0, r1, #16
 8005b92:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 8005b96:	b289      	uxth	r1, r1
 8005b98:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8005b9c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8005ba0:	f846 1b04 	str.w	r1, [r6], #4
 8005ba4:	e7de      	b.n	8005b64 <__mdiff+0xd0>
 8005ba6:	3f01      	subs	r7, #1
 8005ba8:	e7e8      	b.n	8005b7c <__mdiff+0xe8>
 8005baa:	bf00      	nop
 8005bac:	08007144 	.word	0x08007144
 8005bb0:	080071d4 	.word	0x080071d4

08005bb4 <__ulp>:
 8005bb4:	4b11      	ldr	r3, [pc, #68]	; (8005bfc <__ulp+0x48>)
 8005bb6:	400b      	ands	r3, r1
 8005bb8:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	dd02      	ble.n	8005bc6 <__ulp+0x12>
 8005bc0:	2000      	movs	r0, #0
 8005bc2:	4619      	mov	r1, r3
 8005bc4:	4770      	bx	lr
 8005bc6:	425b      	negs	r3, r3
 8005bc8:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8005bcc:	f04f 0000 	mov.w	r0, #0
 8005bd0:	f04f 0100 	mov.w	r1, #0
 8005bd4:	ea4f 5223 	mov.w	r2, r3, asr #20
 8005bd8:	da04      	bge.n	8005be4 <__ulp+0x30>
 8005bda:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8005bde:	fa43 f102 	asr.w	r1, r3, r2
 8005be2:	4770      	bx	lr
 8005be4:	f1a2 0314 	sub.w	r3, r2, #20
 8005be8:	2b1e      	cmp	r3, #30
 8005bea:	bfd6      	itet	le
 8005bec:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8005bf0:	2301      	movgt	r3, #1
 8005bf2:	fa22 f303 	lsrle.w	r3, r2, r3
 8005bf6:	4618      	mov	r0, r3
 8005bf8:	4770      	bx	lr
 8005bfa:	bf00      	nop
 8005bfc:	7ff00000 	.word	0x7ff00000

08005c00 <__b2d>:
 8005c00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005c04:	6907      	ldr	r7, [r0, #16]
 8005c06:	f100 0914 	add.w	r9, r0, #20
 8005c0a:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8005c0e:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8005c12:	f1a7 0804 	sub.w	r8, r7, #4
 8005c16:	4630      	mov	r0, r6
 8005c18:	f7ff fd52 	bl	80056c0 <__hi0bits>
 8005c1c:	f1c0 0320 	rsb	r3, r0, #32
 8005c20:	280a      	cmp	r0, #10
 8005c22:	600b      	str	r3, [r1, #0]
 8005c24:	491f      	ldr	r1, [pc, #124]	; (8005ca4 <__b2d+0xa4>)
 8005c26:	dc17      	bgt.n	8005c58 <__b2d+0x58>
 8005c28:	45c1      	cmp	r9, r8
 8005c2a:	bf28      	it	cs
 8005c2c:	2200      	movcs	r2, #0
 8005c2e:	f1c0 0c0b 	rsb	ip, r0, #11
 8005c32:	fa26 f30c 	lsr.w	r3, r6, ip
 8005c36:	bf38      	it	cc
 8005c38:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005c3c:	ea43 0501 	orr.w	r5, r3, r1
 8005c40:	f100 0315 	add.w	r3, r0, #21
 8005c44:	fa06 f303 	lsl.w	r3, r6, r3
 8005c48:	fa22 f20c 	lsr.w	r2, r2, ip
 8005c4c:	ea43 0402 	orr.w	r4, r3, r2
 8005c50:	4620      	mov	r0, r4
 8005c52:	4629      	mov	r1, r5
 8005c54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005c58:	45c1      	cmp	r9, r8
 8005c5a:	bf2e      	itee	cs
 8005c5c:	2200      	movcs	r2, #0
 8005c5e:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005c62:	f1a7 0808 	subcc.w	r8, r7, #8
 8005c66:	f1b0 030b 	subs.w	r3, r0, #11
 8005c6a:	d016      	beq.n	8005c9a <__b2d+0x9a>
 8005c6c:	f1c3 0720 	rsb	r7, r3, #32
 8005c70:	fa22 f107 	lsr.w	r1, r2, r7
 8005c74:	45c8      	cmp	r8, r9
 8005c76:	fa06 f603 	lsl.w	r6, r6, r3
 8005c7a:	ea46 0601 	orr.w	r6, r6, r1
 8005c7e:	bf94      	ite	ls
 8005c80:	2100      	movls	r1, #0
 8005c82:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8005c86:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 8005c8a:	fa02 f003 	lsl.w	r0, r2, r3
 8005c8e:	40f9      	lsrs	r1, r7
 8005c90:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8005c94:	ea40 0401 	orr.w	r4, r0, r1
 8005c98:	e7da      	b.n	8005c50 <__b2d+0x50>
 8005c9a:	4614      	mov	r4, r2
 8005c9c:	ea46 0501 	orr.w	r5, r6, r1
 8005ca0:	e7d6      	b.n	8005c50 <__b2d+0x50>
 8005ca2:	bf00      	nop
 8005ca4:	3ff00000 	.word	0x3ff00000

08005ca8 <__d2b>:
 8005ca8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005cac:	2101      	movs	r1, #1
 8005cae:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8005cb2:	4690      	mov	r8, r2
 8005cb4:	461d      	mov	r5, r3
 8005cb6:	f7ff fc0d 	bl	80054d4 <_Balloc>
 8005cba:	4604      	mov	r4, r0
 8005cbc:	b930      	cbnz	r0, 8005ccc <__d2b+0x24>
 8005cbe:	4602      	mov	r2, r0
 8005cc0:	f240 310a 	movw	r1, #778	; 0x30a
 8005cc4:	4b24      	ldr	r3, [pc, #144]	; (8005d58 <__d2b+0xb0>)
 8005cc6:	4825      	ldr	r0, [pc, #148]	; (8005d5c <__d2b+0xb4>)
 8005cc8:	f000 fb02 	bl	80062d0 <__assert_func>
 8005ccc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8005cd0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8005cd4:	bb2d      	cbnz	r5, 8005d22 <__d2b+0x7a>
 8005cd6:	9301      	str	r3, [sp, #4]
 8005cd8:	f1b8 0300 	subs.w	r3, r8, #0
 8005cdc:	d026      	beq.n	8005d2c <__d2b+0x84>
 8005cde:	4668      	mov	r0, sp
 8005ce0:	9300      	str	r3, [sp, #0]
 8005ce2:	f7ff fd0d 	bl	8005700 <__lo0bits>
 8005ce6:	9900      	ldr	r1, [sp, #0]
 8005ce8:	b1f0      	cbz	r0, 8005d28 <__d2b+0x80>
 8005cea:	9a01      	ldr	r2, [sp, #4]
 8005cec:	f1c0 0320 	rsb	r3, r0, #32
 8005cf0:	fa02 f303 	lsl.w	r3, r2, r3
 8005cf4:	430b      	orrs	r3, r1
 8005cf6:	40c2      	lsrs	r2, r0
 8005cf8:	6163      	str	r3, [r4, #20]
 8005cfa:	9201      	str	r2, [sp, #4]
 8005cfc:	9b01      	ldr	r3, [sp, #4]
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	bf14      	ite	ne
 8005d02:	2102      	movne	r1, #2
 8005d04:	2101      	moveq	r1, #1
 8005d06:	61a3      	str	r3, [r4, #24]
 8005d08:	6121      	str	r1, [r4, #16]
 8005d0a:	b1c5      	cbz	r5, 8005d3e <__d2b+0x96>
 8005d0c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8005d10:	4405      	add	r5, r0
 8005d12:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005d16:	603d      	str	r5, [r7, #0]
 8005d18:	6030      	str	r0, [r6, #0]
 8005d1a:	4620      	mov	r0, r4
 8005d1c:	b002      	add	sp, #8
 8005d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d22:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005d26:	e7d6      	b.n	8005cd6 <__d2b+0x2e>
 8005d28:	6161      	str	r1, [r4, #20]
 8005d2a:	e7e7      	b.n	8005cfc <__d2b+0x54>
 8005d2c:	a801      	add	r0, sp, #4
 8005d2e:	f7ff fce7 	bl	8005700 <__lo0bits>
 8005d32:	2101      	movs	r1, #1
 8005d34:	9b01      	ldr	r3, [sp, #4]
 8005d36:	6121      	str	r1, [r4, #16]
 8005d38:	6163      	str	r3, [r4, #20]
 8005d3a:	3020      	adds	r0, #32
 8005d3c:	e7e5      	b.n	8005d0a <__d2b+0x62>
 8005d3e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8005d42:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005d46:	6038      	str	r0, [r7, #0]
 8005d48:	6918      	ldr	r0, [r3, #16]
 8005d4a:	f7ff fcb9 	bl	80056c0 <__hi0bits>
 8005d4e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8005d52:	6031      	str	r1, [r6, #0]
 8005d54:	e7e1      	b.n	8005d1a <__d2b+0x72>
 8005d56:	bf00      	nop
 8005d58:	08007144 	.word	0x08007144
 8005d5c:	080071d4 	.word	0x080071d4

08005d60 <__ratio>:
 8005d60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d64:	4688      	mov	r8, r1
 8005d66:	4669      	mov	r1, sp
 8005d68:	4681      	mov	r9, r0
 8005d6a:	f7ff ff49 	bl	8005c00 <__b2d>
 8005d6e:	460f      	mov	r7, r1
 8005d70:	4604      	mov	r4, r0
 8005d72:	460d      	mov	r5, r1
 8005d74:	4640      	mov	r0, r8
 8005d76:	a901      	add	r1, sp, #4
 8005d78:	f7ff ff42 	bl	8005c00 <__b2d>
 8005d7c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005d80:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005d84:	468b      	mov	fp, r1
 8005d86:	eba3 0c02 	sub.w	ip, r3, r2
 8005d8a:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005d8e:	1a9b      	subs	r3, r3, r2
 8005d90:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8005d94:	2b00      	cmp	r3, #0
 8005d96:	bfd5      	itete	le
 8005d98:	460a      	movle	r2, r1
 8005d9a:	462a      	movgt	r2, r5
 8005d9c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005da0:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8005da4:	bfd8      	it	le
 8005da6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8005daa:	465b      	mov	r3, fp
 8005dac:	4602      	mov	r2, r0
 8005dae:	4639      	mov	r1, r7
 8005db0:	4620      	mov	r0, r4
 8005db2:	f7fa fccb 	bl	800074c <__aeabi_ddiv>
 8005db6:	b003      	add	sp, #12
 8005db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005dbc <__copybits>:
 8005dbc:	3901      	subs	r1, #1
 8005dbe:	b570      	push	{r4, r5, r6, lr}
 8005dc0:	1149      	asrs	r1, r1, #5
 8005dc2:	6914      	ldr	r4, [r2, #16]
 8005dc4:	3101      	adds	r1, #1
 8005dc6:	f102 0314 	add.w	r3, r2, #20
 8005dca:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005dce:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8005dd2:	1f05      	subs	r5, r0, #4
 8005dd4:	42a3      	cmp	r3, r4
 8005dd6:	d30c      	bcc.n	8005df2 <__copybits+0x36>
 8005dd8:	1aa3      	subs	r3, r4, r2
 8005dda:	3b11      	subs	r3, #17
 8005ddc:	f023 0303 	bic.w	r3, r3, #3
 8005de0:	3211      	adds	r2, #17
 8005de2:	42a2      	cmp	r2, r4
 8005de4:	bf88      	it	hi
 8005de6:	2300      	movhi	r3, #0
 8005de8:	4418      	add	r0, r3
 8005dea:	2300      	movs	r3, #0
 8005dec:	4288      	cmp	r0, r1
 8005dee:	d305      	bcc.n	8005dfc <__copybits+0x40>
 8005df0:	bd70      	pop	{r4, r5, r6, pc}
 8005df2:	f853 6b04 	ldr.w	r6, [r3], #4
 8005df6:	f845 6f04 	str.w	r6, [r5, #4]!
 8005dfa:	e7eb      	b.n	8005dd4 <__copybits+0x18>
 8005dfc:	f840 3b04 	str.w	r3, [r0], #4
 8005e00:	e7f4      	b.n	8005dec <__copybits+0x30>

08005e02 <__any_on>:
 8005e02:	f100 0214 	add.w	r2, r0, #20
 8005e06:	6900      	ldr	r0, [r0, #16]
 8005e08:	114b      	asrs	r3, r1, #5
 8005e0a:	4298      	cmp	r0, r3
 8005e0c:	b510      	push	{r4, lr}
 8005e0e:	db11      	blt.n	8005e34 <__any_on+0x32>
 8005e10:	dd0a      	ble.n	8005e28 <__any_on+0x26>
 8005e12:	f011 011f 	ands.w	r1, r1, #31
 8005e16:	d007      	beq.n	8005e28 <__any_on+0x26>
 8005e18:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8005e1c:	fa24 f001 	lsr.w	r0, r4, r1
 8005e20:	fa00 f101 	lsl.w	r1, r0, r1
 8005e24:	428c      	cmp	r4, r1
 8005e26:	d10b      	bne.n	8005e40 <__any_on+0x3e>
 8005e28:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005e2c:	4293      	cmp	r3, r2
 8005e2e:	d803      	bhi.n	8005e38 <__any_on+0x36>
 8005e30:	2000      	movs	r0, #0
 8005e32:	bd10      	pop	{r4, pc}
 8005e34:	4603      	mov	r3, r0
 8005e36:	e7f7      	b.n	8005e28 <__any_on+0x26>
 8005e38:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8005e3c:	2900      	cmp	r1, #0
 8005e3e:	d0f5      	beq.n	8005e2c <__any_on+0x2a>
 8005e40:	2001      	movs	r0, #1
 8005e42:	e7f6      	b.n	8005e32 <__any_on+0x30>

08005e44 <_calloc_r>:
 8005e44:	b538      	push	{r3, r4, r5, lr}
 8005e46:	fb02 f501 	mul.w	r5, r2, r1
 8005e4a:	4629      	mov	r1, r5
 8005e4c:	f000 f854 	bl	8005ef8 <_malloc_r>
 8005e50:	4604      	mov	r4, r0
 8005e52:	b118      	cbz	r0, 8005e5c <_calloc_r+0x18>
 8005e54:	462a      	mov	r2, r5
 8005e56:	2100      	movs	r1, #0
 8005e58:	f7fc fbdc 	bl	8002614 <memset>
 8005e5c:	4620      	mov	r0, r4
 8005e5e:	bd38      	pop	{r3, r4, r5, pc}

08005e60 <_free_r>:
 8005e60:	b538      	push	{r3, r4, r5, lr}
 8005e62:	4605      	mov	r5, r0
 8005e64:	2900      	cmp	r1, #0
 8005e66:	d043      	beq.n	8005ef0 <_free_r+0x90>
 8005e68:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005e6c:	1f0c      	subs	r4, r1, #4
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	bfb8      	it	lt
 8005e72:	18e4      	addlt	r4, r4, r3
 8005e74:	f000 fa76 	bl	8006364 <__malloc_lock>
 8005e78:	4a1e      	ldr	r2, [pc, #120]	; (8005ef4 <_free_r+0x94>)
 8005e7a:	6813      	ldr	r3, [r2, #0]
 8005e7c:	4610      	mov	r0, r2
 8005e7e:	b933      	cbnz	r3, 8005e8e <_free_r+0x2e>
 8005e80:	6063      	str	r3, [r4, #4]
 8005e82:	6014      	str	r4, [r2, #0]
 8005e84:	4628      	mov	r0, r5
 8005e86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005e8a:	f000 ba71 	b.w	8006370 <__malloc_unlock>
 8005e8e:	42a3      	cmp	r3, r4
 8005e90:	d90a      	bls.n	8005ea8 <_free_r+0x48>
 8005e92:	6821      	ldr	r1, [r4, #0]
 8005e94:	1862      	adds	r2, r4, r1
 8005e96:	4293      	cmp	r3, r2
 8005e98:	bf01      	itttt	eq
 8005e9a:	681a      	ldreq	r2, [r3, #0]
 8005e9c:	685b      	ldreq	r3, [r3, #4]
 8005e9e:	1852      	addeq	r2, r2, r1
 8005ea0:	6022      	streq	r2, [r4, #0]
 8005ea2:	6063      	str	r3, [r4, #4]
 8005ea4:	6004      	str	r4, [r0, #0]
 8005ea6:	e7ed      	b.n	8005e84 <_free_r+0x24>
 8005ea8:	461a      	mov	r2, r3
 8005eaa:	685b      	ldr	r3, [r3, #4]
 8005eac:	b10b      	cbz	r3, 8005eb2 <_free_r+0x52>
 8005eae:	42a3      	cmp	r3, r4
 8005eb0:	d9fa      	bls.n	8005ea8 <_free_r+0x48>
 8005eb2:	6811      	ldr	r1, [r2, #0]
 8005eb4:	1850      	adds	r0, r2, r1
 8005eb6:	42a0      	cmp	r0, r4
 8005eb8:	d10b      	bne.n	8005ed2 <_free_r+0x72>
 8005eba:	6820      	ldr	r0, [r4, #0]
 8005ebc:	4401      	add	r1, r0
 8005ebe:	1850      	adds	r0, r2, r1
 8005ec0:	4283      	cmp	r3, r0
 8005ec2:	6011      	str	r1, [r2, #0]
 8005ec4:	d1de      	bne.n	8005e84 <_free_r+0x24>
 8005ec6:	6818      	ldr	r0, [r3, #0]
 8005ec8:	685b      	ldr	r3, [r3, #4]
 8005eca:	4401      	add	r1, r0
 8005ecc:	6011      	str	r1, [r2, #0]
 8005ece:	6053      	str	r3, [r2, #4]
 8005ed0:	e7d8      	b.n	8005e84 <_free_r+0x24>
 8005ed2:	d902      	bls.n	8005eda <_free_r+0x7a>
 8005ed4:	230c      	movs	r3, #12
 8005ed6:	602b      	str	r3, [r5, #0]
 8005ed8:	e7d4      	b.n	8005e84 <_free_r+0x24>
 8005eda:	6820      	ldr	r0, [r4, #0]
 8005edc:	1821      	adds	r1, r4, r0
 8005ede:	428b      	cmp	r3, r1
 8005ee0:	bf01      	itttt	eq
 8005ee2:	6819      	ldreq	r1, [r3, #0]
 8005ee4:	685b      	ldreq	r3, [r3, #4]
 8005ee6:	1809      	addeq	r1, r1, r0
 8005ee8:	6021      	streq	r1, [r4, #0]
 8005eea:	6063      	str	r3, [r4, #4]
 8005eec:	6054      	str	r4, [r2, #4]
 8005eee:	e7c9      	b.n	8005e84 <_free_r+0x24>
 8005ef0:	bd38      	pop	{r3, r4, r5, pc}
 8005ef2:	bf00      	nop
 8005ef4:	20000244 	.word	0x20000244

08005ef8 <_malloc_r>:
 8005ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005efa:	1ccd      	adds	r5, r1, #3
 8005efc:	f025 0503 	bic.w	r5, r5, #3
 8005f00:	3508      	adds	r5, #8
 8005f02:	2d0c      	cmp	r5, #12
 8005f04:	bf38      	it	cc
 8005f06:	250c      	movcc	r5, #12
 8005f08:	2d00      	cmp	r5, #0
 8005f0a:	4606      	mov	r6, r0
 8005f0c:	db01      	blt.n	8005f12 <_malloc_r+0x1a>
 8005f0e:	42a9      	cmp	r1, r5
 8005f10:	d903      	bls.n	8005f1a <_malloc_r+0x22>
 8005f12:	230c      	movs	r3, #12
 8005f14:	6033      	str	r3, [r6, #0]
 8005f16:	2000      	movs	r0, #0
 8005f18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f1a:	f000 fa23 	bl	8006364 <__malloc_lock>
 8005f1e:	4921      	ldr	r1, [pc, #132]	; (8005fa4 <_malloc_r+0xac>)
 8005f20:	680a      	ldr	r2, [r1, #0]
 8005f22:	4614      	mov	r4, r2
 8005f24:	b99c      	cbnz	r4, 8005f4e <_malloc_r+0x56>
 8005f26:	4f20      	ldr	r7, [pc, #128]	; (8005fa8 <_malloc_r+0xb0>)
 8005f28:	683b      	ldr	r3, [r7, #0]
 8005f2a:	b923      	cbnz	r3, 8005f36 <_malloc_r+0x3e>
 8005f2c:	4621      	mov	r1, r4
 8005f2e:	4630      	mov	r0, r6
 8005f30:	f000 f99e 	bl	8006270 <_sbrk_r>
 8005f34:	6038      	str	r0, [r7, #0]
 8005f36:	4629      	mov	r1, r5
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f000 f999 	bl	8006270 <_sbrk_r>
 8005f3e:	1c43      	adds	r3, r0, #1
 8005f40:	d123      	bne.n	8005f8a <_malloc_r+0x92>
 8005f42:	230c      	movs	r3, #12
 8005f44:	4630      	mov	r0, r6
 8005f46:	6033      	str	r3, [r6, #0]
 8005f48:	f000 fa12 	bl	8006370 <__malloc_unlock>
 8005f4c:	e7e3      	b.n	8005f16 <_malloc_r+0x1e>
 8005f4e:	6823      	ldr	r3, [r4, #0]
 8005f50:	1b5b      	subs	r3, r3, r5
 8005f52:	d417      	bmi.n	8005f84 <_malloc_r+0x8c>
 8005f54:	2b0b      	cmp	r3, #11
 8005f56:	d903      	bls.n	8005f60 <_malloc_r+0x68>
 8005f58:	6023      	str	r3, [r4, #0]
 8005f5a:	441c      	add	r4, r3
 8005f5c:	6025      	str	r5, [r4, #0]
 8005f5e:	e004      	b.n	8005f6a <_malloc_r+0x72>
 8005f60:	6863      	ldr	r3, [r4, #4]
 8005f62:	42a2      	cmp	r2, r4
 8005f64:	bf0c      	ite	eq
 8005f66:	600b      	streq	r3, [r1, #0]
 8005f68:	6053      	strne	r3, [r2, #4]
 8005f6a:	4630      	mov	r0, r6
 8005f6c:	f000 fa00 	bl	8006370 <__malloc_unlock>
 8005f70:	f104 000b 	add.w	r0, r4, #11
 8005f74:	1d23      	adds	r3, r4, #4
 8005f76:	f020 0007 	bic.w	r0, r0, #7
 8005f7a:	1ac2      	subs	r2, r0, r3
 8005f7c:	d0cc      	beq.n	8005f18 <_malloc_r+0x20>
 8005f7e:	1a1b      	subs	r3, r3, r0
 8005f80:	50a3      	str	r3, [r4, r2]
 8005f82:	e7c9      	b.n	8005f18 <_malloc_r+0x20>
 8005f84:	4622      	mov	r2, r4
 8005f86:	6864      	ldr	r4, [r4, #4]
 8005f88:	e7cc      	b.n	8005f24 <_malloc_r+0x2c>
 8005f8a:	1cc4      	adds	r4, r0, #3
 8005f8c:	f024 0403 	bic.w	r4, r4, #3
 8005f90:	42a0      	cmp	r0, r4
 8005f92:	d0e3      	beq.n	8005f5c <_malloc_r+0x64>
 8005f94:	1a21      	subs	r1, r4, r0
 8005f96:	4630      	mov	r0, r6
 8005f98:	f000 f96a 	bl	8006270 <_sbrk_r>
 8005f9c:	3001      	adds	r0, #1
 8005f9e:	d1dd      	bne.n	8005f5c <_malloc_r+0x64>
 8005fa0:	e7cf      	b.n	8005f42 <_malloc_r+0x4a>
 8005fa2:	bf00      	nop
 8005fa4:	20000244 	.word	0x20000244
 8005fa8:	20000248 	.word	0x20000248

08005fac <__ssputs_r>:
 8005fac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005fb0:	688e      	ldr	r6, [r1, #8]
 8005fb2:	4682      	mov	sl, r0
 8005fb4:	429e      	cmp	r6, r3
 8005fb6:	460c      	mov	r4, r1
 8005fb8:	4690      	mov	r8, r2
 8005fba:	461f      	mov	r7, r3
 8005fbc:	d838      	bhi.n	8006030 <__ssputs_r+0x84>
 8005fbe:	898a      	ldrh	r2, [r1, #12]
 8005fc0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005fc4:	d032      	beq.n	800602c <__ssputs_r+0x80>
 8005fc6:	6825      	ldr	r5, [r4, #0]
 8005fc8:	6909      	ldr	r1, [r1, #16]
 8005fca:	3301      	adds	r3, #1
 8005fcc:	eba5 0901 	sub.w	r9, r5, r1
 8005fd0:	6965      	ldr	r5, [r4, #20]
 8005fd2:	444b      	add	r3, r9
 8005fd4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005fd8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005fdc:	106d      	asrs	r5, r5, #1
 8005fde:	429d      	cmp	r5, r3
 8005fe0:	bf38      	it	cc
 8005fe2:	461d      	movcc	r5, r3
 8005fe4:	0553      	lsls	r3, r2, #21
 8005fe6:	d531      	bpl.n	800604c <__ssputs_r+0xa0>
 8005fe8:	4629      	mov	r1, r5
 8005fea:	f7ff ff85 	bl	8005ef8 <_malloc_r>
 8005fee:	4606      	mov	r6, r0
 8005ff0:	b950      	cbnz	r0, 8006008 <__ssputs_r+0x5c>
 8005ff2:	230c      	movs	r3, #12
 8005ff4:	f04f 30ff 	mov.w	r0, #4294967295
 8005ff8:	f8ca 3000 	str.w	r3, [sl]
 8005ffc:	89a3      	ldrh	r3, [r4, #12]
 8005ffe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006002:	81a3      	strh	r3, [r4, #12]
 8006004:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006008:	464a      	mov	r2, r9
 800600a:	6921      	ldr	r1, [r4, #16]
 800600c:	f7ff fa54 	bl	80054b8 <memcpy>
 8006010:	89a3      	ldrh	r3, [r4, #12]
 8006012:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006016:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800601a:	81a3      	strh	r3, [r4, #12]
 800601c:	6126      	str	r6, [r4, #16]
 800601e:	444e      	add	r6, r9
 8006020:	6026      	str	r6, [r4, #0]
 8006022:	463e      	mov	r6, r7
 8006024:	6165      	str	r5, [r4, #20]
 8006026:	eba5 0509 	sub.w	r5, r5, r9
 800602a:	60a5      	str	r5, [r4, #8]
 800602c:	42be      	cmp	r6, r7
 800602e:	d900      	bls.n	8006032 <__ssputs_r+0x86>
 8006030:	463e      	mov	r6, r7
 8006032:	4632      	mov	r2, r6
 8006034:	4641      	mov	r1, r8
 8006036:	6820      	ldr	r0, [r4, #0]
 8006038:	f000 f97a 	bl	8006330 <memmove>
 800603c:	68a3      	ldr	r3, [r4, #8]
 800603e:	6822      	ldr	r2, [r4, #0]
 8006040:	1b9b      	subs	r3, r3, r6
 8006042:	4432      	add	r2, r6
 8006044:	2000      	movs	r0, #0
 8006046:	60a3      	str	r3, [r4, #8]
 8006048:	6022      	str	r2, [r4, #0]
 800604a:	e7db      	b.n	8006004 <__ssputs_r+0x58>
 800604c:	462a      	mov	r2, r5
 800604e:	f000 f995 	bl	800637c <_realloc_r>
 8006052:	4606      	mov	r6, r0
 8006054:	2800      	cmp	r0, #0
 8006056:	d1e1      	bne.n	800601c <__ssputs_r+0x70>
 8006058:	4650      	mov	r0, sl
 800605a:	6921      	ldr	r1, [r4, #16]
 800605c:	f7ff ff00 	bl	8005e60 <_free_r>
 8006060:	e7c7      	b.n	8005ff2 <__ssputs_r+0x46>
	...

08006064 <_svfiprintf_r>:
 8006064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006068:	4698      	mov	r8, r3
 800606a:	898b      	ldrh	r3, [r1, #12]
 800606c:	4607      	mov	r7, r0
 800606e:	061b      	lsls	r3, r3, #24
 8006070:	460d      	mov	r5, r1
 8006072:	4614      	mov	r4, r2
 8006074:	b09d      	sub	sp, #116	; 0x74
 8006076:	d50e      	bpl.n	8006096 <_svfiprintf_r+0x32>
 8006078:	690b      	ldr	r3, [r1, #16]
 800607a:	b963      	cbnz	r3, 8006096 <_svfiprintf_r+0x32>
 800607c:	2140      	movs	r1, #64	; 0x40
 800607e:	f7ff ff3b 	bl	8005ef8 <_malloc_r>
 8006082:	6028      	str	r0, [r5, #0]
 8006084:	6128      	str	r0, [r5, #16]
 8006086:	b920      	cbnz	r0, 8006092 <_svfiprintf_r+0x2e>
 8006088:	230c      	movs	r3, #12
 800608a:	603b      	str	r3, [r7, #0]
 800608c:	f04f 30ff 	mov.w	r0, #4294967295
 8006090:	e0d1      	b.n	8006236 <_svfiprintf_r+0x1d2>
 8006092:	2340      	movs	r3, #64	; 0x40
 8006094:	616b      	str	r3, [r5, #20]
 8006096:	2300      	movs	r3, #0
 8006098:	9309      	str	r3, [sp, #36]	; 0x24
 800609a:	2320      	movs	r3, #32
 800609c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80060a0:	2330      	movs	r3, #48	; 0x30
 80060a2:	f04f 0901 	mov.w	r9, #1
 80060a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80060aa:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8006250 <_svfiprintf_r+0x1ec>
 80060ae:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80060b2:	4623      	mov	r3, r4
 80060b4:	469a      	mov	sl, r3
 80060b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80060ba:	b10a      	cbz	r2, 80060c0 <_svfiprintf_r+0x5c>
 80060bc:	2a25      	cmp	r2, #37	; 0x25
 80060be:	d1f9      	bne.n	80060b4 <_svfiprintf_r+0x50>
 80060c0:	ebba 0b04 	subs.w	fp, sl, r4
 80060c4:	d00b      	beq.n	80060de <_svfiprintf_r+0x7a>
 80060c6:	465b      	mov	r3, fp
 80060c8:	4622      	mov	r2, r4
 80060ca:	4629      	mov	r1, r5
 80060cc:	4638      	mov	r0, r7
 80060ce:	f7ff ff6d 	bl	8005fac <__ssputs_r>
 80060d2:	3001      	adds	r0, #1
 80060d4:	f000 80aa 	beq.w	800622c <_svfiprintf_r+0x1c8>
 80060d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80060da:	445a      	add	r2, fp
 80060dc:	9209      	str	r2, [sp, #36]	; 0x24
 80060de:	f89a 3000 	ldrb.w	r3, [sl]
 80060e2:	2b00      	cmp	r3, #0
 80060e4:	f000 80a2 	beq.w	800622c <_svfiprintf_r+0x1c8>
 80060e8:	2300      	movs	r3, #0
 80060ea:	f04f 32ff 	mov.w	r2, #4294967295
 80060ee:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80060f2:	f10a 0a01 	add.w	sl, sl, #1
 80060f6:	9304      	str	r3, [sp, #16]
 80060f8:	9307      	str	r3, [sp, #28]
 80060fa:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80060fe:	931a      	str	r3, [sp, #104]	; 0x68
 8006100:	4654      	mov	r4, sl
 8006102:	2205      	movs	r2, #5
 8006104:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006108:	4851      	ldr	r0, [pc, #324]	; (8006250 <_svfiprintf_r+0x1ec>)
 800610a:	f7ff f9c7 	bl	800549c <memchr>
 800610e:	9a04      	ldr	r2, [sp, #16]
 8006110:	b9d8      	cbnz	r0, 800614a <_svfiprintf_r+0xe6>
 8006112:	06d0      	lsls	r0, r2, #27
 8006114:	bf44      	itt	mi
 8006116:	2320      	movmi	r3, #32
 8006118:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800611c:	0711      	lsls	r1, r2, #28
 800611e:	bf44      	itt	mi
 8006120:	232b      	movmi	r3, #43	; 0x2b
 8006122:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006126:	f89a 3000 	ldrb.w	r3, [sl]
 800612a:	2b2a      	cmp	r3, #42	; 0x2a
 800612c:	d015      	beq.n	800615a <_svfiprintf_r+0xf6>
 800612e:	4654      	mov	r4, sl
 8006130:	2000      	movs	r0, #0
 8006132:	f04f 0c0a 	mov.w	ip, #10
 8006136:	9a07      	ldr	r2, [sp, #28]
 8006138:	4621      	mov	r1, r4
 800613a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800613e:	3b30      	subs	r3, #48	; 0x30
 8006140:	2b09      	cmp	r3, #9
 8006142:	d94e      	bls.n	80061e2 <_svfiprintf_r+0x17e>
 8006144:	b1b0      	cbz	r0, 8006174 <_svfiprintf_r+0x110>
 8006146:	9207      	str	r2, [sp, #28]
 8006148:	e014      	b.n	8006174 <_svfiprintf_r+0x110>
 800614a:	eba0 0308 	sub.w	r3, r0, r8
 800614e:	fa09 f303 	lsl.w	r3, r9, r3
 8006152:	4313      	orrs	r3, r2
 8006154:	46a2      	mov	sl, r4
 8006156:	9304      	str	r3, [sp, #16]
 8006158:	e7d2      	b.n	8006100 <_svfiprintf_r+0x9c>
 800615a:	9b03      	ldr	r3, [sp, #12]
 800615c:	1d19      	adds	r1, r3, #4
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	9103      	str	r1, [sp, #12]
 8006162:	2b00      	cmp	r3, #0
 8006164:	bfbb      	ittet	lt
 8006166:	425b      	neglt	r3, r3
 8006168:	f042 0202 	orrlt.w	r2, r2, #2
 800616c:	9307      	strge	r3, [sp, #28]
 800616e:	9307      	strlt	r3, [sp, #28]
 8006170:	bfb8      	it	lt
 8006172:	9204      	strlt	r2, [sp, #16]
 8006174:	7823      	ldrb	r3, [r4, #0]
 8006176:	2b2e      	cmp	r3, #46	; 0x2e
 8006178:	d10c      	bne.n	8006194 <_svfiprintf_r+0x130>
 800617a:	7863      	ldrb	r3, [r4, #1]
 800617c:	2b2a      	cmp	r3, #42	; 0x2a
 800617e:	d135      	bne.n	80061ec <_svfiprintf_r+0x188>
 8006180:	9b03      	ldr	r3, [sp, #12]
 8006182:	3402      	adds	r4, #2
 8006184:	1d1a      	adds	r2, r3, #4
 8006186:	681b      	ldr	r3, [r3, #0]
 8006188:	9203      	str	r2, [sp, #12]
 800618a:	2b00      	cmp	r3, #0
 800618c:	bfb8      	it	lt
 800618e:	f04f 33ff 	movlt.w	r3, #4294967295
 8006192:	9305      	str	r3, [sp, #20]
 8006194:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8006260 <_svfiprintf_r+0x1fc>
 8006198:	2203      	movs	r2, #3
 800619a:	4650      	mov	r0, sl
 800619c:	7821      	ldrb	r1, [r4, #0]
 800619e:	f7ff f97d 	bl	800549c <memchr>
 80061a2:	b140      	cbz	r0, 80061b6 <_svfiprintf_r+0x152>
 80061a4:	2340      	movs	r3, #64	; 0x40
 80061a6:	eba0 000a 	sub.w	r0, r0, sl
 80061aa:	fa03 f000 	lsl.w	r0, r3, r0
 80061ae:	9b04      	ldr	r3, [sp, #16]
 80061b0:	3401      	adds	r4, #1
 80061b2:	4303      	orrs	r3, r0
 80061b4:	9304      	str	r3, [sp, #16]
 80061b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80061ba:	2206      	movs	r2, #6
 80061bc:	4825      	ldr	r0, [pc, #148]	; (8006254 <_svfiprintf_r+0x1f0>)
 80061be:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80061c2:	f7ff f96b 	bl	800549c <memchr>
 80061c6:	2800      	cmp	r0, #0
 80061c8:	d038      	beq.n	800623c <_svfiprintf_r+0x1d8>
 80061ca:	4b23      	ldr	r3, [pc, #140]	; (8006258 <_svfiprintf_r+0x1f4>)
 80061cc:	bb1b      	cbnz	r3, 8006216 <_svfiprintf_r+0x1b2>
 80061ce:	9b03      	ldr	r3, [sp, #12]
 80061d0:	3307      	adds	r3, #7
 80061d2:	f023 0307 	bic.w	r3, r3, #7
 80061d6:	3308      	adds	r3, #8
 80061d8:	9303      	str	r3, [sp, #12]
 80061da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061dc:	4433      	add	r3, r6
 80061de:	9309      	str	r3, [sp, #36]	; 0x24
 80061e0:	e767      	b.n	80060b2 <_svfiprintf_r+0x4e>
 80061e2:	460c      	mov	r4, r1
 80061e4:	2001      	movs	r0, #1
 80061e6:	fb0c 3202 	mla	r2, ip, r2, r3
 80061ea:	e7a5      	b.n	8006138 <_svfiprintf_r+0xd4>
 80061ec:	2300      	movs	r3, #0
 80061ee:	f04f 0c0a 	mov.w	ip, #10
 80061f2:	4619      	mov	r1, r3
 80061f4:	3401      	adds	r4, #1
 80061f6:	9305      	str	r3, [sp, #20]
 80061f8:	4620      	mov	r0, r4
 80061fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80061fe:	3a30      	subs	r2, #48	; 0x30
 8006200:	2a09      	cmp	r2, #9
 8006202:	d903      	bls.n	800620c <_svfiprintf_r+0x1a8>
 8006204:	2b00      	cmp	r3, #0
 8006206:	d0c5      	beq.n	8006194 <_svfiprintf_r+0x130>
 8006208:	9105      	str	r1, [sp, #20]
 800620a:	e7c3      	b.n	8006194 <_svfiprintf_r+0x130>
 800620c:	4604      	mov	r4, r0
 800620e:	2301      	movs	r3, #1
 8006210:	fb0c 2101 	mla	r1, ip, r1, r2
 8006214:	e7f0      	b.n	80061f8 <_svfiprintf_r+0x194>
 8006216:	ab03      	add	r3, sp, #12
 8006218:	9300      	str	r3, [sp, #0]
 800621a:	462a      	mov	r2, r5
 800621c:	4638      	mov	r0, r7
 800621e:	4b0f      	ldr	r3, [pc, #60]	; (800625c <_svfiprintf_r+0x1f8>)
 8006220:	a904      	add	r1, sp, #16
 8006222:	f7fc fa9d 	bl	8002760 <_printf_float>
 8006226:	1c42      	adds	r2, r0, #1
 8006228:	4606      	mov	r6, r0
 800622a:	d1d6      	bne.n	80061da <_svfiprintf_r+0x176>
 800622c:	89ab      	ldrh	r3, [r5, #12]
 800622e:	065b      	lsls	r3, r3, #25
 8006230:	f53f af2c 	bmi.w	800608c <_svfiprintf_r+0x28>
 8006234:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006236:	b01d      	add	sp, #116	; 0x74
 8006238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800623c:	ab03      	add	r3, sp, #12
 800623e:	9300      	str	r3, [sp, #0]
 8006240:	462a      	mov	r2, r5
 8006242:	4638      	mov	r0, r7
 8006244:	4b05      	ldr	r3, [pc, #20]	; (800625c <_svfiprintf_r+0x1f8>)
 8006246:	a904      	add	r1, sp, #16
 8006248:	f7fc fd26 	bl	8002c98 <_printf_i>
 800624c:	e7eb      	b.n	8006226 <_svfiprintf_r+0x1c2>
 800624e:	bf00      	nop
 8006250:	08007334 	.word	0x08007334
 8006254:	0800733e 	.word	0x0800733e
 8006258:	08002761 	.word	0x08002761
 800625c:	08005fad 	.word	0x08005fad
 8006260:	0800733a 	.word	0x0800733a

08006264 <nan>:
 8006264:	2000      	movs	r0, #0
 8006266:	4901      	ldr	r1, [pc, #4]	; (800626c <nan+0x8>)
 8006268:	4770      	bx	lr
 800626a:	bf00      	nop
 800626c:	7ff80000 	.word	0x7ff80000

08006270 <_sbrk_r>:
 8006270:	b538      	push	{r3, r4, r5, lr}
 8006272:	2300      	movs	r3, #0
 8006274:	4d05      	ldr	r5, [pc, #20]	; (800628c <_sbrk_r+0x1c>)
 8006276:	4604      	mov	r4, r0
 8006278:	4608      	mov	r0, r1
 800627a:	602b      	str	r3, [r5, #0]
 800627c:	f7fc f93a 	bl	80024f4 <_sbrk>
 8006280:	1c43      	adds	r3, r0, #1
 8006282:	d102      	bne.n	800628a <_sbrk_r+0x1a>
 8006284:	682b      	ldr	r3, [r5, #0]
 8006286:	b103      	cbz	r3, 800628a <_sbrk_r+0x1a>
 8006288:	6023      	str	r3, [r4, #0]
 800628a:	bd38      	pop	{r3, r4, r5, pc}
 800628c:	20000268 	.word	0x20000268

08006290 <strncmp>:
 8006290:	b510      	push	{r4, lr}
 8006292:	b16a      	cbz	r2, 80062b0 <strncmp+0x20>
 8006294:	3901      	subs	r1, #1
 8006296:	1884      	adds	r4, r0, r2
 8006298:	f810 3b01 	ldrb.w	r3, [r0], #1
 800629c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80062a0:	4293      	cmp	r3, r2
 80062a2:	d103      	bne.n	80062ac <strncmp+0x1c>
 80062a4:	42a0      	cmp	r0, r4
 80062a6:	d001      	beq.n	80062ac <strncmp+0x1c>
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d1f5      	bne.n	8006298 <strncmp+0x8>
 80062ac:	1a98      	subs	r0, r3, r2
 80062ae:	bd10      	pop	{r4, pc}
 80062b0:	4610      	mov	r0, r2
 80062b2:	e7fc      	b.n	80062ae <strncmp+0x1e>

080062b4 <__ascii_wctomb>:
 80062b4:	4603      	mov	r3, r0
 80062b6:	4608      	mov	r0, r1
 80062b8:	b141      	cbz	r1, 80062cc <__ascii_wctomb+0x18>
 80062ba:	2aff      	cmp	r2, #255	; 0xff
 80062bc:	d904      	bls.n	80062c8 <__ascii_wctomb+0x14>
 80062be:	228a      	movs	r2, #138	; 0x8a
 80062c0:	f04f 30ff 	mov.w	r0, #4294967295
 80062c4:	601a      	str	r2, [r3, #0]
 80062c6:	4770      	bx	lr
 80062c8:	2001      	movs	r0, #1
 80062ca:	700a      	strb	r2, [r1, #0]
 80062cc:	4770      	bx	lr
	...

080062d0 <__assert_func>:
 80062d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80062d2:	4614      	mov	r4, r2
 80062d4:	461a      	mov	r2, r3
 80062d6:	4b09      	ldr	r3, [pc, #36]	; (80062fc <__assert_func+0x2c>)
 80062d8:	4605      	mov	r5, r0
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	68d8      	ldr	r0, [r3, #12]
 80062de:	b14c      	cbz	r4, 80062f4 <__assert_func+0x24>
 80062e0:	4b07      	ldr	r3, [pc, #28]	; (8006300 <__assert_func+0x30>)
 80062e2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80062e6:	9100      	str	r1, [sp, #0]
 80062e8:	462b      	mov	r3, r5
 80062ea:	4906      	ldr	r1, [pc, #24]	; (8006304 <__assert_func+0x34>)
 80062ec:	f000 f80e 	bl	800630c <fiprintf>
 80062f0:	f000 fa82 	bl	80067f8 <abort>
 80062f4:	4b04      	ldr	r3, [pc, #16]	; (8006308 <__assert_func+0x38>)
 80062f6:	461c      	mov	r4, r3
 80062f8:	e7f3      	b.n	80062e2 <__assert_func+0x12>
 80062fa:	bf00      	nop
 80062fc:	20000010 	.word	0x20000010
 8006300:	08007345 	.word	0x08007345
 8006304:	08007352 	.word	0x08007352
 8006308:	08007380 	.word	0x08007380

0800630c <fiprintf>:
 800630c:	b40e      	push	{r1, r2, r3}
 800630e:	b503      	push	{r0, r1, lr}
 8006310:	4601      	mov	r1, r0
 8006312:	ab03      	add	r3, sp, #12
 8006314:	4805      	ldr	r0, [pc, #20]	; (800632c <fiprintf+0x20>)
 8006316:	f853 2b04 	ldr.w	r2, [r3], #4
 800631a:	6800      	ldr	r0, [r0, #0]
 800631c:	9301      	str	r3, [sp, #4]
 800631e:	f000 f87b 	bl	8006418 <_vfiprintf_r>
 8006322:	b002      	add	sp, #8
 8006324:	f85d eb04 	ldr.w	lr, [sp], #4
 8006328:	b003      	add	sp, #12
 800632a:	4770      	bx	lr
 800632c:	20000010 	.word	0x20000010

08006330 <memmove>:
 8006330:	4288      	cmp	r0, r1
 8006332:	b510      	push	{r4, lr}
 8006334:	eb01 0402 	add.w	r4, r1, r2
 8006338:	d902      	bls.n	8006340 <memmove+0x10>
 800633a:	4284      	cmp	r4, r0
 800633c:	4623      	mov	r3, r4
 800633e:	d807      	bhi.n	8006350 <memmove+0x20>
 8006340:	1e43      	subs	r3, r0, #1
 8006342:	42a1      	cmp	r1, r4
 8006344:	d008      	beq.n	8006358 <memmove+0x28>
 8006346:	f811 2b01 	ldrb.w	r2, [r1], #1
 800634a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800634e:	e7f8      	b.n	8006342 <memmove+0x12>
 8006350:	4601      	mov	r1, r0
 8006352:	4402      	add	r2, r0
 8006354:	428a      	cmp	r2, r1
 8006356:	d100      	bne.n	800635a <memmove+0x2a>
 8006358:	bd10      	pop	{r4, pc}
 800635a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800635e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006362:	e7f7      	b.n	8006354 <memmove+0x24>

08006364 <__malloc_lock>:
 8006364:	4801      	ldr	r0, [pc, #4]	; (800636c <__malloc_lock+0x8>)
 8006366:	f000 bc07 	b.w	8006b78 <__retarget_lock_acquire_recursive>
 800636a:	bf00      	nop
 800636c:	20000270 	.word	0x20000270

08006370 <__malloc_unlock>:
 8006370:	4801      	ldr	r0, [pc, #4]	; (8006378 <__malloc_unlock+0x8>)
 8006372:	f000 bc02 	b.w	8006b7a <__retarget_lock_release_recursive>
 8006376:	bf00      	nop
 8006378:	20000270 	.word	0x20000270

0800637c <_realloc_r>:
 800637c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800637e:	4607      	mov	r7, r0
 8006380:	4614      	mov	r4, r2
 8006382:	460e      	mov	r6, r1
 8006384:	b921      	cbnz	r1, 8006390 <_realloc_r+0x14>
 8006386:	4611      	mov	r1, r2
 8006388:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800638c:	f7ff bdb4 	b.w	8005ef8 <_malloc_r>
 8006390:	b922      	cbnz	r2, 800639c <_realloc_r+0x20>
 8006392:	f7ff fd65 	bl	8005e60 <_free_r>
 8006396:	4625      	mov	r5, r4
 8006398:	4628      	mov	r0, r5
 800639a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800639c:	f000 fc52 	bl	8006c44 <_malloc_usable_size_r>
 80063a0:	42a0      	cmp	r0, r4
 80063a2:	d20f      	bcs.n	80063c4 <_realloc_r+0x48>
 80063a4:	4621      	mov	r1, r4
 80063a6:	4638      	mov	r0, r7
 80063a8:	f7ff fda6 	bl	8005ef8 <_malloc_r>
 80063ac:	4605      	mov	r5, r0
 80063ae:	2800      	cmp	r0, #0
 80063b0:	d0f2      	beq.n	8006398 <_realloc_r+0x1c>
 80063b2:	4631      	mov	r1, r6
 80063b4:	4622      	mov	r2, r4
 80063b6:	f7ff f87f 	bl	80054b8 <memcpy>
 80063ba:	4631      	mov	r1, r6
 80063bc:	4638      	mov	r0, r7
 80063be:	f7ff fd4f 	bl	8005e60 <_free_r>
 80063c2:	e7e9      	b.n	8006398 <_realloc_r+0x1c>
 80063c4:	4635      	mov	r5, r6
 80063c6:	e7e7      	b.n	8006398 <_realloc_r+0x1c>

080063c8 <__sfputc_r>:
 80063c8:	6893      	ldr	r3, [r2, #8]
 80063ca:	b410      	push	{r4}
 80063cc:	3b01      	subs	r3, #1
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	6093      	str	r3, [r2, #8]
 80063d2:	da07      	bge.n	80063e4 <__sfputc_r+0x1c>
 80063d4:	6994      	ldr	r4, [r2, #24]
 80063d6:	42a3      	cmp	r3, r4
 80063d8:	db01      	blt.n	80063de <__sfputc_r+0x16>
 80063da:	290a      	cmp	r1, #10
 80063dc:	d102      	bne.n	80063e4 <__sfputc_r+0x1c>
 80063de:	bc10      	pop	{r4}
 80063e0:	f000 b94a 	b.w	8006678 <__swbuf_r>
 80063e4:	6813      	ldr	r3, [r2, #0]
 80063e6:	1c58      	adds	r0, r3, #1
 80063e8:	6010      	str	r0, [r2, #0]
 80063ea:	7019      	strb	r1, [r3, #0]
 80063ec:	4608      	mov	r0, r1
 80063ee:	bc10      	pop	{r4}
 80063f0:	4770      	bx	lr

080063f2 <__sfputs_r>:
 80063f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063f4:	4606      	mov	r6, r0
 80063f6:	460f      	mov	r7, r1
 80063f8:	4614      	mov	r4, r2
 80063fa:	18d5      	adds	r5, r2, r3
 80063fc:	42ac      	cmp	r4, r5
 80063fe:	d101      	bne.n	8006404 <__sfputs_r+0x12>
 8006400:	2000      	movs	r0, #0
 8006402:	e007      	b.n	8006414 <__sfputs_r+0x22>
 8006404:	463a      	mov	r2, r7
 8006406:	4630      	mov	r0, r6
 8006408:	f814 1b01 	ldrb.w	r1, [r4], #1
 800640c:	f7ff ffdc 	bl	80063c8 <__sfputc_r>
 8006410:	1c43      	adds	r3, r0, #1
 8006412:	d1f3      	bne.n	80063fc <__sfputs_r+0xa>
 8006414:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006418 <_vfiprintf_r>:
 8006418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800641c:	460d      	mov	r5, r1
 800641e:	4614      	mov	r4, r2
 8006420:	4698      	mov	r8, r3
 8006422:	4606      	mov	r6, r0
 8006424:	b09d      	sub	sp, #116	; 0x74
 8006426:	b118      	cbz	r0, 8006430 <_vfiprintf_r+0x18>
 8006428:	6983      	ldr	r3, [r0, #24]
 800642a:	b90b      	cbnz	r3, 8006430 <_vfiprintf_r+0x18>
 800642c:	f000 fb06 	bl	8006a3c <__sinit>
 8006430:	4b89      	ldr	r3, [pc, #548]	; (8006658 <_vfiprintf_r+0x240>)
 8006432:	429d      	cmp	r5, r3
 8006434:	d11b      	bne.n	800646e <_vfiprintf_r+0x56>
 8006436:	6875      	ldr	r5, [r6, #4]
 8006438:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800643a:	07d9      	lsls	r1, r3, #31
 800643c:	d405      	bmi.n	800644a <_vfiprintf_r+0x32>
 800643e:	89ab      	ldrh	r3, [r5, #12]
 8006440:	059a      	lsls	r2, r3, #22
 8006442:	d402      	bmi.n	800644a <_vfiprintf_r+0x32>
 8006444:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006446:	f000 fb97 	bl	8006b78 <__retarget_lock_acquire_recursive>
 800644a:	89ab      	ldrh	r3, [r5, #12]
 800644c:	071b      	lsls	r3, r3, #28
 800644e:	d501      	bpl.n	8006454 <_vfiprintf_r+0x3c>
 8006450:	692b      	ldr	r3, [r5, #16]
 8006452:	b9eb      	cbnz	r3, 8006490 <_vfiprintf_r+0x78>
 8006454:	4629      	mov	r1, r5
 8006456:	4630      	mov	r0, r6
 8006458:	f000 f960 	bl	800671c <__swsetup_r>
 800645c:	b1c0      	cbz	r0, 8006490 <_vfiprintf_r+0x78>
 800645e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006460:	07dc      	lsls	r4, r3, #31
 8006462:	d50e      	bpl.n	8006482 <_vfiprintf_r+0x6a>
 8006464:	f04f 30ff 	mov.w	r0, #4294967295
 8006468:	b01d      	add	sp, #116	; 0x74
 800646a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800646e:	4b7b      	ldr	r3, [pc, #492]	; (800665c <_vfiprintf_r+0x244>)
 8006470:	429d      	cmp	r5, r3
 8006472:	d101      	bne.n	8006478 <_vfiprintf_r+0x60>
 8006474:	68b5      	ldr	r5, [r6, #8]
 8006476:	e7df      	b.n	8006438 <_vfiprintf_r+0x20>
 8006478:	4b79      	ldr	r3, [pc, #484]	; (8006660 <_vfiprintf_r+0x248>)
 800647a:	429d      	cmp	r5, r3
 800647c:	bf08      	it	eq
 800647e:	68f5      	ldreq	r5, [r6, #12]
 8006480:	e7da      	b.n	8006438 <_vfiprintf_r+0x20>
 8006482:	89ab      	ldrh	r3, [r5, #12]
 8006484:	0598      	lsls	r0, r3, #22
 8006486:	d4ed      	bmi.n	8006464 <_vfiprintf_r+0x4c>
 8006488:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800648a:	f000 fb76 	bl	8006b7a <__retarget_lock_release_recursive>
 800648e:	e7e9      	b.n	8006464 <_vfiprintf_r+0x4c>
 8006490:	2300      	movs	r3, #0
 8006492:	9309      	str	r3, [sp, #36]	; 0x24
 8006494:	2320      	movs	r3, #32
 8006496:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800649a:	2330      	movs	r3, #48	; 0x30
 800649c:	f04f 0901 	mov.w	r9, #1
 80064a0:	f8cd 800c 	str.w	r8, [sp, #12]
 80064a4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8006664 <_vfiprintf_r+0x24c>
 80064a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80064ac:	4623      	mov	r3, r4
 80064ae:	469a      	mov	sl, r3
 80064b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80064b4:	b10a      	cbz	r2, 80064ba <_vfiprintf_r+0xa2>
 80064b6:	2a25      	cmp	r2, #37	; 0x25
 80064b8:	d1f9      	bne.n	80064ae <_vfiprintf_r+0x96>
 80064ba:	ebba 0b04 	subs.w	fp, sl, r4
 80064be:	d00b      	beq.n	80064d8 <_vfiprintf_r+0xc0>
 80064c0:	465b      	mov	r3, fp
 80064c2:	4622      	mov	r2, r4
 80064c4:	4629      	mov	r1, r5
 80064c6:	4630      	mov	r0, r6
 80064c8:	f7ff ff93 	bl	80063f2 <__sfputs_r>
 80064cc:	3001      	adds	r0, #1
 80064ce:	f000 80aa 	beq.w	8006626 <_vfiprintf_r+0x20e>
 80064d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80064d4:	445a      	add	r2, fp
 80064d6:	9209      	str	r2, [sp, #36]	; 0x24
 80064d8:	f89a 3000 	ldrb.w	r3, [sl]
 80064dc:	2b00      	cmp	r3, #0
 80064de:	f000 80a2 	beq.w	8006626 <_vfiprintf_r+0x20e>
 80064e2:	2300      	movs	r3, #0
 80064e4:	f04f 32ff 	mov.w	r2, #4294967295
 80064e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80064ec:	f10a 0a01 	add.w	sl, sl, #1
 80064f0:	9304      	str	r3, [sp, #16]
 80064f2:	9307      	str	r3, [sp, #28]
 80064f4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80064f8:	931a      	str	r3, [sp, #104]	; 0x68
 80064fa:	4654      	mov	r4, sl
 80064fc:	2205      	movs	r2, #5
 80064fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006502:	4858      	ldr	r0, [pc, #352]	; (8006664 <_vfiprintf_r+0x24c>)
 8006504:	f7fe ffca 	bl	800549c <memchr>
 8006508:	9a04      	ldr	r2, [sp, #16]
 800650a:	b9d8      	cbnz	r0, 8006544 <_vfiprintf_r+0x12c>
 800650c:	06d1      	lsls	r1, r2, #27
 800650e:	bf44      	itt	mi
 8006510:	2320      	movmi	r3, #32
 8006512:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006516:	0713      	lsls	r3, r2, #28
 8006518:	bf44      	itt	mi
 800651a:	232b      	movmi	r3, #43	; 0x2b
 800651c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006520:	f89a 3000 	ldrb.w	r3, [sl]
 8006524:	2b2a      	cmp	r3, #42	; 0x2a
 8006526:	d015      	beq.n	8006554 <_vfiprintf_r+0x13c>
 8006528:	4654      	mov	r4, sl
 800652a:	2000      	movs	r0, #0
 800652c:	f04f 0c0a 	mov.w	ip, #10
 8006530:	9a07      	ldr	r2, [sp, #28]
 8006532:	4621      	mov	r1, r4
 8006534:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006538:	3b30      	subs	r3, #48	; 0x30
 800653a:	2b09      	cmp	r3, #9
 800653c:	d94e      	bls.n	80065dc <_vfiprintf_r+0x1c4>
 800653e:	b1b0      	cbz	r0, 800656e <_vfiprintf_r+0x156>
 8006540:	9207      	str	r2, [sp, #28]
 8006542:	e014      	b.n	800656e <_vfiprintf_r+0x156>
 8006544:	eba0 0308 	sub.w	r3, r0, r8
 8006548:	fa09 f303 	lsl.w	r3, r9, r3
 800654c:	4313      	orrs	r3, r2
 800654e:	46a2      	mov	sl, r4
 8006550:	9304      	str	r3, [sp, #16]
 8006552:	e7d2      	b.n	80064fa <_vfiprintf_r+0xe2>
 8006554:	9b03      	ldr	r3, [sp, #12]
 8006556:	1d19      	adds	r1, r3, #4
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	9103      	str	r1, [sp, #12]
 800655c:	2b00      	cmp	r3, #0
 800655e:	bfbb      	ittet	lt
 8006560:	425b      	neglt	r3, r3
 8006562:	f042 0202 	orrlt.w	r2, r2, #2
 8006566:	9307      	strge	r3, [sp, #28]
 8006568:	9307      	strlt	r3, [sp, #28]
 800656a:	bfb8      	it	lt
 800656c:	9204      	strlt	r2, [sp, #16]
 800656e:	7823      	ldrb	r3, [r4, #0]
 8006570:	2b2e      	cmp	r3, #46	; 0x2e
 8006572:	d10c      	bne.n	800658e <_vfiprintf_r+0x176>
 8006574:	7863      	ldrb	r3, [r4, #1]
 8006576:	2b2a      	cmp	r3, #42	; 0x2a
 8006578:	d135      	bne.n	80065e6 <_vfiprintf_r+0x1ce>
 800657a:	9b03      	ldr	r3, [sp, #12]
 800657c:	3402      	adds	r4, #2
 800657e:	1d1a      	adds	r2, r3, #4
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	9203      	str	r2, [sp, #12]
 8006584:	2b00      	cmp	r3, #0
 8006586:	bfb8      	it	lt
 8006588:	f04f 33ff 	movlt.w	r3, #4294967295
 800658c:	9305      	str	r3, [sp, #20]
 800658e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006674 <_vfiprintf_r+0x25c>
 8006592:	2203      	movs	r2, #3
 8006594:	4650      	mov	r0, sl
 8006596:	7821      	ldrb	r1, [r4, #0]
 8006598:	f7fe ff80 	bl	800549c <memchr>
 800659c:	b140      	cbz	r0, 80065b0 <_vfiprintf_r+0x198>
 800659e:	2340      	movs	r3, #64	; 0x40
 80065a0:	eba0 000a 	sub.w	r0, r0, sl
 80065a4:	fa03 f000 	lsl.w	r0, r3, r0
 80065a8:	9b04      	ldr	r3, [sp, #16]
 80065aa:	3401      	adds	r4, #1
 80065ac:	4303      	orrs	r3, r0
 80065ae:	9304      	str	r3, [sp, #16]
 80065b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80065b4:	2206      	movs	r2, #6
 80065b6:	482c      	ldr	r0, [pc, #176]	; (8006668 <_vfiprintf_r+0x250>)
 80065b8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80065bc:	f7fe ff6e 	bl	800549c <memchr>
 80065c0:	2800      	cmp	r0, #0
 80065c2:	d03f      	beq.n	8006644 <_vfiprintf_r+0x22c>
 80065c4:	4b29      	ldr	r3, [pc, #164]	; (800666c <_vfiprintf_r+0x254>)
 80065c6:	bb1b      	cbnz	r3, 8006610 <_vfiprintf_r+0x1f8>
 80065c8:	9b03      	ldr	r3, [sp, #12]
 80065ca:	3307      	adds	r3, #7
 80065cc:	f023 0307 	bic.w	r3, r3, #7
 80065d0:	3308      	adds	r3, #8
 80065d2:	9303      	str	r3, [sp, #12]
 80065d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80065d6:	443b      	add	r3, r7
 80065d8:	9309      	str	r3, [sp, #36]	; 0x24
 80065da:	e767      	b.n	80064ac <_vfiprintf_r+0x94>
 80065dc:	460c      	mov	r4, r1
 80065de:	2001      	movs	r0, #1
 80065e0:	fb0c 3202 	mla	r2, ip, r2, r3
 80065e4:	e7a5      	b.n	8006532 <_vfiprintf_r+0x11a>
 80065e6:	2300      	movs	r3, #0
 80065e8:	f04f 0c0a 	mov.w	ip, #10
 80065ec:	4619      	mov	r1, r3
 80065ee:	3401      	adds	r4, #1
 80065f0:	9305      	str	r3, [sp, #20]
 80065f2:	4620      	mov	r0, r4
 80065f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80065f8:	3a30      	subs	r2, #48	; 0x30
 80065fa:	2a09      	cmp	r2, #9
 80065fc:	d903      	bls.n	8006606 <_vfiprintf_r+0x1ee>
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d0c5      	beq.n	800658e <_vfiprintf_r+0x176>
 8006602:	9105      	str	r1, [sp, #20]
 8006604:	e7c3      	b.n	800658e <_vfiprintf_r+0x176>
 8006606:	4604      	mov	r4, r0
 8006608:	2301      	movs	r3, #1
 800660a:	fb0c 2101 	mla	r1, ip, r1, r2
 800660e:	e7f0      	b.n	80065f2 <_vfiprintf_r+0x1da>
 8006610:	ab03      	add	r3, sp, #12
 8006612:	9300      	str	r3, [sp, #0]
 8006614:	462a      	mov	r2, r5
 8006616:	4630      	mov	r0, r6
 8006618:	4b15      	ldr	r3, [pc, #84]	; (8006670 <_vfiprintf_r+0x258>)
 800661a:	a904      	add	r1, sp, #16
 800661c:	f7fc f8a0 	bl	8002760 <_printf_float>
 8006620:	4607      	mov	r7, r0
 8006622:	1c78      	adds	r0, r7, #1
 8006624:	d1d6      	bne.n	80065d4 <_vfiprintf_r+0x1bc>
 8006626:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006628:	07d9      	lsls	r1, r3, #31
 800662a:	d405      	bmi.n	8006638 <_vfiprintf_r+0x220>
 800662c:	89ab      	ldrh	r3, [r5, #12]
 800662e:	059a      	lsls	r2, r3, #22
 8006630:	d402      	bmi.n	8006638 <_vfiprintf_r+0x220>
 8006632:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006634:	f000 faa1 	bl	8006b7a <__retarget_lock_release_recursive>
 8006638:	89ab      	ldrh	r3, [r5, #12]
 800663a:	065b      	lsls	r3, r3, #25
 800663c:	f53f af12 	bmi.w	8006464 <_vfiprintf_r+0x4c>
 8006640:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006642:	e711      	b.n	8006468 <_vfiprintf_r+0x50>
 8006644:	ab03      	add	r3, sp, #12
 8006646:	9300      	str	r3, [sp, #0]
 8006648:	462a      	mov	r2, r5
 800664a:	4630      	mov	r0, r6
 800664c:	4b08      	ldr	r3, [pc, #32]	; (8006670 <_vfiprintf_r+0x258>)
 800664e:	a904      	add	r1, sp, #16
 8006650:	f7fc fb22 	bl	8002c98 <_printf_i>
 8006654:	e7e4      	b.n	8006620 <_vfiprintf_r+0x208>
 8006656:	bf00      	nop
 8006658:	080073a4 	.word	0x080073a4
 800665c:	080073c4 	.word	0x080073c4
 8006660:	08007384 	.word	0x08007384
 8006664:	08007334 	.word	0x08007334
 8006668:	0800733e 	.word	0x0800733e
 800666c:	08002761 	.word	0x08002761
 8006670:	080063f3 	.word	0x080063f3
 8006674:	0800733a 	.word	0x0800733a

08006678 <__swbuf_r>:
 8006678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800667a:	460e      	mov	r6, r1
 800667c:	4614      	mov	r4, r2
 800667e:	4605      	mov	r5, r0
 8006680:	b118      	cbz	r0, 800668a <__swbuf_r+0x12>
 8006682:	6983      	ldr	r3, [r0, #24]
 8006684:	b90b      	cbnz	r3, 800668a <__swbuf_r+0x12>
 8006686:	f000 f9d9 	bl	8006a3c <__sinit>
 800668a:	4b21      	ldr	r3, [pc, #132]	; (8006710 <__swbuf_r+0x98>)
 800668c:	429c      	cmp	r4, r3
 800668e:	d12b      	bne.n	80066e8 <__swbuf_r+0x70>
 8006690:	686c      	ldr	r4, [r5, #4]
 8006692:	69a3      	ldr	r3, [r4, #24]
 8006694:	60a3      	str	r3, [r4, #8]
 8006696:	89a3      	ldrh	r3, [r4, #12]
 8006698:	071a      	lsls	r2, r3, #28
 800669a:	d52f      	bpl.n	80066fc <__swbuf_r+0x84>
 800669c:	6923      	ldr	r3, [r4, #16]
 800669e:	b36b      	cbz	r3, 80066fc <__swbuf_r+0x84>
 80066a0:	6923      	ldr	r3, [r4, #16]
 80066a2:	6820      	ldr	r0, [r4, #0]
 80066a4:	b2f6      	uxtb	r6, r6
 80066a6:	1ac0      	subs	r0, r0, r3
 80066a8:	6963      	ldr	r3, [r4, #20]
 80066aa:	4637      	mov	r7, r6
 80066ac:	4283      	cmp	r3, r0
 80066ae:	dc04      	bgt.n	80066ba <__swbuf_r+0x42>
 80066b0:	4621      	mov	r1, r4
 80066b2:	4628      	mov	r0, r5
 80066b4:	f000 f92e 	bl	8006914 <_fflush_r>
 80066b8:	bb30      	cbnz	r0, 8006708 <__swbuf_r+0x90>
 80066ba:	68a3      	ldr	r3, [r4, #8]
 80066bc:	3001      	adds	r0, #1
 80066be:	3b01      	subs	r3, #1
 80066c0:	60a3      	str	r3, [r4, #8]
 80066c2:	6823      	ldr	r3, [r4, #0]
 80066c4:	1c5a      	adds	r2, r3, #1
 80066c6:	6022      	str	r2, [r4, #0]
 80066c8:	701e      	strb	r6, [r3, #0]
 80066ca:	6963      	ldr	r3, [r4, #20]
 80066cc:	4283      	cmp	r3, r0
 80066ce:	d004      	beq.n	80066da <__swbuf_r+0x62>
 80066d0:	89a3      	ldrh	r3, [r4, #12]
 80066d2:	07db      	lsls	r3, r3, #31
 80066d4:	d506      	bpl.n	80066e4 <__swbuf_r+0x6c>
 80066d6:	2e0a      	cmp	r6, #10
 80066d8:	d104      	bne.n	80066e4 <__swbuf_r+0x6c>
 80066da:	4621      	mov	r1, r4
 80066dc:	4628      	mov	r0, r5
 80066de:	f000 f919 	bl	8006914 <_fflush_r>
 80066e2:	b988      	cbnz	r0, 8006708 <__swbuf_r+0x90>
 80066e4:	4638      	mov	r0, r7
 80066e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80066e8:	4b0a      	ldr	r3, [pc, #40]	; (8006714 <__swbuf_r+0x9c>)
 80066ea:	429c      	cmp	r4, r3
 80066ec:	d101      	bne.n	80066f2 <__swbuf_r+0x7a>
 80066ee:	68ac      	ldr	r4, [r5, #8]
 80066f0:	e7cf      	b.n	8006692 <__swbuf_r+0x1a>
 80066f2:	4b09      	ldr	r3, [pc, #36]	; (8006718 <__swbuf_r+0xa0>)
 80066f4:	429c      	cmp	r4, r3
 80066f6:	bf08      	it	eq
 80066f8:	68ec      	ldreq	r4, [r5, #12]
 80066fa:	e7ca      	b.n	8006692 <__swbuf_r+0x1a>
 80066fc:	4621      	mov	r1, r4
 80066fe:	4628      	mov	r0, r5
 8006700:	f000 f80c 	bl	800671c <__swsetup_r>
 8006704:	2800      	cmp	r0, #0
 8006706:	d0cb      	beq.n	80066a0 <__swbuf_r+0x28>
 8006708:	f04f 37ff 	mov.w	r7, #4294967295
 800670c:	e7ea      	b.n	80066e4 <__swbuf_r+0x6c>
 800670e:	bf00      	nop
 8006710:	080073a4 	.word	0x080073a4
 8006714:	080073c4 	.word	0x080073c4
 8006718:	08007384 	.word	0x08007384

0800671c <__swsetup_r>:
 800671c:	4b32      	ldr	r3, [pc, #200]	; (80067e8 <__swsetup_r+0xcc>)
 800671e:	b570      	push	{r4, r5, r6, lr}
 8006720:	681d      	ldr	r5, [r3, #0]
 8006722:	4606      	mov	r6, r0
 8006724:	460c      	mov	r4, r1
 8006726:	b125      	cbz	r5, 8006732 <__swsetup_r+0x16>
 8006728:	69ab      	ldr	r3, [r5, #24]
 800672a:	b913      	cbnz	r3, 8006732 <__swsetup_r+0x16>
 800672c:	4628      	mov	r0, r5
 800672e:	f000 f985 	bl	8006a3c <__sinit>
 8006732:	4b2e      	ldr	r3, [pc, #184]	; (80067ec <__swsetup_r+0xd0>)
 8006734:	429c      	cmp	r4, r3
 8006736:	d10f      	bne.n	8006758 <__swsetup_r+0x3c>
 8006738:	686c      	ldr	r4, [r5, #4]
 800673a:	89a3      	ldrh	r3, [r4, #12]
 800673c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006740:	0719      	lsls	r1, r3, #28
 8006742:	d42c      	bmi.n	800679e <__swsetup_r+0x82>
 8006744:	06dd      	lsls	r5, r3, #27
 8006746:	d411      	bmi.n	800676c <__swsetup_r+0x50>
 8006748:	2309      	movs	r3, #9
 800674a:	6033      	str	r3, [r6, #0]
 800674c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006750:	f04f 30ff 	mov.w	r0, #4294967295
 8006754:	81a3      	strh	r3, [r4, #12]
 8006756:	e03e      	b.n	80067d6 <__swsetup_r+0xba>
 8006758:	4b25      	ldr	r3, [pc, #148]	; (80067f0 <__swsetup_r+0xd4>)
 800675a:	429c      	cmp	r4, r3
 800675c:	d101      	bne.n	8006762 <__swsetup_r+0x46>
 800675e:	68ac      	ldr	r4, [r5, #8]
 8006760:	e7eb      	b.n	800673a <__swsetup_r+0x1e>
 8006762:	4b24      	ldr	r3, [pc, #144]	; (80067f4 <__swsetup_r+0xd8>)
 8006764:	429c      	cmp	r4, r3
 8006766:	bf08      	it	eq
 8006768:	68ec      	ldreq	r4, [r5, #12]
 800676a:	e7e6      	b.n	800673a <__swsetup_r+0x1e>
 800676c:	0758      	lsls	r0, r3, #29
 800676e:	d512      	bpl.n	8006796 <__swsetup_r+0x7a>
 8006770:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006772:	b141      	cbz	r1, 8006786 <__swsetup_r+0x6a>
 8006774:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006778:	4299      	cmp	r1, r3
 800677a:	d002      	beq.n	8006782 <__swsetup_r+0x66>
 800677c:	4630      	mov	r0, r6
 800677e:	f7ff fb6f 	bl	8005e60 <_free_r>
 8006782:	2300      	movs	r3, #0
 8006784:	6363      	str	r3, [r4, #52]	; 0x34
 8006786:	89a3      	ldrh	r3, [r4, #12]
 8006788:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800678c:	81a3      	strh	r3, [r4, #12]
 800678e:	2300      	movs	r3, #0
 8006790:	6063      	str	r3, [r4, #4]
 8006792:	6923      	ldr	r3, [r4, #16]
 8006794:	6023      	str	r3, [r4, #0]
 8006796:	89a3      	ldrh	r3, [r4, #12]
 8006798:	f043 0308 	orr.w	r3, r3, #8
 800679c:	81a3      	strh	r3, [r4, #12]
 800679e:	6923      	ldr	r3, [r4, #16]
 80067a0:	b94b      	cbnz	r3, 80067b6 <__swsetup_r+0x9a>
 80067a2:	89a3      	ldrh	r3, [r4, #12]
 80067a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80067a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80067ac:	d003      	beq.n	80067b6 <__swsetup_r+0x9a>
 80067ae:	4621      	mov	r1, r4
 80067b0:	4630      	mov	r0, r6
 80067b2:	f000 fa07 	bl	8006bc4 <__smakebuf_r>
 80067b6:	89a0      	ldrh	r0, [r4, #12]
 80067b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80067bc:	f010 0301 	ands.w	r3, r0, #1
 80067c0:	d00a      	beq.n	80067d8 <__swsetup_r+0xbc>
 80067c2:	2300      	movs	r3, #0
 80067c4:	60a3      	str	r3, [r4, #8]
 80067c6:	6963      	ldr	r3, [r4, #20]
 80067c8:	425b      	negs	r3, r3
 80067ca:	61a3      	str	r3, [r4, #24]
 80067cc:	6923      	ldr	r3, [r4, #16]
 80067ce:	b943      	cbnz	r3, 80067e2 <__swsetup_r+0xc6>
 80067d0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80067d4:	d1ba      	bne.n	800674c <__swsetup_r+0x30>
 80067d6:	bd70      	pop	{r4, r5, r6, pc}
 80067d8:	0781      	lsls	r1, r0, #30
 80067da:	bf58      	it	pl
 80067dc:	6963      	ldrpl	r3, [r4, #20]
 80067de:	60a3      	str	r3, [r4, #8]
 80067e0:	e7f4      	b.n	80067cc <__swsetup_r+0xb0>
 80067e2:	2000      	movs	r0, #0
 80067e4:	e7f7      	b.n	80067d6 <__swsetup_r+0xba>
 80067e6:	bf00      	nop
 80067e8:	20000010 	.word	0x20000010
 80067ec:	080073a4 	.word	0x080073a4
 80067f0:	080073c4 	.word	0x080073c4
 80067f4:	08007384 	.word	0x08007384

080067f8 <abort>:
 80067f8:	2006      	movs	r0, #6
 80067fa:	b508      	push	{r3, lr}
 80067fc:	f000 fa52 	bl	8006ca4 <raise>
 8006800:	2001      	movs	r0, #1
 8006802:	f7fb fe20 	bl	8002446 <_exit>
	...

08006808 <__sflush_r>:
 8006808:	898a      	ldrh	r2, [r1, #12]
 800680a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800680e:	4605      	mov	r5, r0
 8006810:	0710      	lsls	r0, r2, #28
 8006812:	460c      	mov	r4, r1
 8006814:	d458      	bmi.n	80068c8 <__sflush_r+0xc0>
 8006816:	684b      	ldr	r3, [r1, #4]
 8006818:	2b00      	cmp	r3, #0
 800681a:	dc05      	bgt.n	8006828 <__sflush_r+0x20>
 800681c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800681e:	2b00      	cmp	r3, #0
 8006820:	dc02      	bgt.n	8006828 <__sflush_r+0x20>
 8006822:	2000      	movs	r0, #0
 8006824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006828:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800682a:	2e00      	cmp	r6, #0
 800682c:	d0f9      	beq.n	8006822 <__sflush_r+0x1a>
 800682e:	2300      	movs	r3, #0
 8006830:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006834:	682f      	ldr	r7, [r5, #0]
 8006836:	602b      	str	r3, [r5, #0]
 8006838:	d032      	beq.n	80068a0 <__sflush_r+0x98>
 800683a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800683c:	89a3      	ldrh	r3, [r4, #12]
 800683e:	075a      	lsls	r2, r3, #29
 8006840:	d505      	bpl.n	800684e <__sflush_r+0x46>
 8006842:	6863      	ldr	r3, [r4, #4]
 8006844:	1ac0      	subs	r0, r0, r3
 8006846:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006848:	b10b      	cbz	r3, 800684e <__sflush_r+0x46>
 800684a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800684c:	1ac0      	subs	r0, r0, r3
 800684e:	2300      	movs	r3, #0
 8006850:	4602      	mov	r2, r0
 8006852:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006854:	4628      	mov	r0, r5
 8006856:	6a21      	ldr	r1, [r4, #32]
 8006858:	47b0      	blx	r6
 800685a:	1c43      	adds	r3, r0, #1
 800685c:	89a3      	ldrh	r3, [r4, #12]
 800685e:	d106      	bne.n	800686e <__sflush_r+0x66>
 8006860:	6829      	ldr	r1, [r5, #0]
 8006862:	291d      	cmp	r1, #29
 8006864:	d82c      	bhi.n	80068c0 <__sflush_r+0xb8>
 8006866:	4a2a      	ldr	r2, [pc, #168]	; (8006910 <__sflush_r+0x108>)
 8006868:	40ca      	lsrs	r2, r1
 800686a:	07d6      	lsls	r6, r2, #31
 800686c:	d528      	bpl.n	80068c0 <__sflush_r+0xb8>
 800686e:	2200      	movs	r2, #0
 8006870:	6062      	str	r2, [r4, #4]
 8006872:	6922      	ldr	r2, [r4, #16]
 8006874:	04d9      	lsls	r1, r3, #19
 8006876:	6022      	str	r2, [r4, #0]
 8006878:	d504      	bpl.n	8006884 <__sflush_r+0x7c>
 800687a:	1c42      	adds	r2, r0, #1
 800687c:	d101      	bne.n	8006882 <__sflush_r+0x7a>
 800687e:	682b      	ldr	r3, [r5, #0]
 8006880:	b903      	cbnz	r3, 8006884 <__sflush_r+0x7c>
 8006882:	6560      	str	r0, [r4, #84]	; 0x54
 8006884:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006886:	602f      	str	r7, [r5, #0]
 8006888:	2900      	cmp	r1, #0
 800688a:	d0ca      	beq.n	8006822 <__sflush_r+0x1a>
 800688c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006890:	4299      	cmp	r1, r3
 8006892:	d002      	beq.n	800689a <__sflush_r+0x92>
 8006894:	4628      	mov	r0, r5
 8006896:	f7ff fae3 	bl	8005e60 <_free_r>
 800689a:	2000      	movs	r0, #0
 800689c:	6360      	str	r0, [r4, #52]	; 0x34
 800689e:	e7c1      	b.n	8006824 <__sflush_r+0x1c>
 80068a0:	6a21      	ldr	r1, [r4, #32]
 80068a2:	2301      	movs	r3, #1
 80068a4:	4628      	mov	r0, r5
 80068a6:	47b0      	blx	r6
 80068a8:	1c41      	adds	r1, r0, #1
 80068aa:	d1c7      	bne.n	800683c <__sflush_r+0x34>
 80068ac:	682b      	ldr	r3, [r5, #0]
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d0c4      	beq.n	800683c <__sflush_r+0x34>
 80068b2:	2b1d      	cmp	r3, #29
 80068b4:	d001      	beq.n	80068ba <__sflush_r+0xb2>
 80068b6:	2b16      	cmp	r3, #22
 80068b8:	d101      	bne.n	80068be <__sflush_r+0xb6>
 80068ba:	602f      	str	r7, [r5, #0]
 80068bc:	e7b1      	b.n	8006822 <__sflush_r+0x1a>
 80068be:	89a3      	ldrh	r3, [r4, #12]
 80068c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80068c4:	81a3      	strh	r3, [r4, #12]
 80068c6:	e7ad      	b.n	8006824 <__sflush_r+0x1c>
 80068c8:	690f      	ldr	r7, [r1, #16]
 80068ca:	2f00      	cmp	r7, #0
 80068cc:	d0a9      	beq.n	8006822 <__sflush_r+0x1a>
 80068ce:	0793      	lsls	r3, r2, #30
 80068d0:	bf18      	it	ne
 80068d2:	2300      	movne	r3, #0
 80068d4:	680e      	ldr	r6, [r1, #0]
 80068d6:	bf08      	it	eq
 80068d8:	694b      	ldreq	r3, [r1, #20]
 80068da:	eba6 0807 	sub.w	r8, r6, r7
 80068de:	600f      	str	r7, [r1, #0]
 80068e0:	608b      	str	r3, [r1, #8]
 80068e2:	f1b8 0f00 	cmp.w	r8, #0
 80068e6:	dd9c      	ble.n	8006822 <__sflush_r+0x1a>
 80068e8:	4643      	mov	r3, r8
 80068ea:	463a      	mov	r2, r7
 80068ec:	4628      	mov	r0, r5
 80068ee:	6a21      	ldr	r1, [r4, #32]
 80068f0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80068f2:	47b0      	blx	r6
 80068f4:	2800      	cmp	r0, #0
 80068f6:	dc06      	bgt.n	8006906 <__sflush_r+0xfe>
 80068f8:	89a3      	ldrh	r3, [r4, #12]
 80068fa:	f04f 30ff 	mov.w	r0, #4294967295
 80068fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006902:	81a3      	strh	r3, [r4, #12]
 8006904:	e78e      	b.n	8006824 <__sflush_r+0x1c>
 8006906:	4407      	add	r7, r0
 8006908:	eba8 0800 	sub.w	r8, r8, r0
 800690c:	e7e9      	b.n	80068e2 <__sflush_r+0xda>
 800690e:	bf00      	nop
 8006910:	20400001 	.word	0x20400001

08006914 <_fflush_r>:
 8006914:	b538      	push	{r3, r4, r5, lr}
 8006916:	690b      	ldr	r3, [r1, #16]
 8006918:	4605      	mov	r5, r0
 800691a:	460c      	mov	r4, r1
 800691c:	b913      	cbnz	r3, 8006924 <_fflush_r+0x10>
 800691e:	2500      	movs	r5, #0
 8006920:	4628      	mov	r0, r5
 8006922:	bd38      	pop	{r3, r4, r5, pc}
 8006924:	b118      	cbz	r0, 800692e <_fflush_r+0x1a>
 8006926:	6983      	ldr	r3, [r0, #24]
 8006928:	b90b      	cbnz	r3, 800692e <_fflush_r+0x1a>
 800692a:	f000 f887 	bl	8006a3c <__sinit>
 800692e:	4b14      	ldr	r3, [pc, #80]	; (8006980 <_fflush_r+0x6c>)
 8006930:	429c      	cmp	r4, r3
 8006932:	d11b      	bne.n	800696c <_fflush_r+0x58>
 8006934:	686c      	ldr	r4, [r5, #4]
 8006936:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800693a:	2b00      	cmp	r3, #0
 800693c:	d0ef      	beq.n	800691e <_fflush_r+0xa>
 800693e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006940:	07d0      	lsls	r0, r2, #31
 8006942:	d404      	bmi.n	800694e <_fflush_r+0x3a>
 8006944:	0599      	lsls	r1, r3, #22
 8006946:	d402      	bmi.n	800694e <_fflush_r+0x3a>
 8006948:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800694a:	f000 f915 	bl	8006b78 <__retarget_lock_acquire_recursive>
 800694e:	4628      	mov	r0, r5
 8006950:	4621      	mov	r1, r4
 8006952:	f7ff ff59 	bl	8006808 <__sflush_r>
 8006956:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006958:	4605      	mov	r5, r0
 800695a:	07da      	lsls	r2, r3, #31
 800695c:	d4e0      	bmi.n	8006920 <_fflush_r+0xc>
 800695e:	89a3      	ldrh	r3, [r4, #12]
 8006960:	059b      	lsls	r3, r3, #22
 8006962:	d4dd      	bmi.n	8006920 <_fflush_r+0xc>
 8006964:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006966:	f000 f908 	bl	8006b7a <__retarget_lock_release_recursive>
 800696a:	e7d9      	b.n	8006920 <_fflush_r+0xc>
 800696c:	4b05      	ldr	r3, [pc, #20]	; (8006984 <_fflush_r+0x70>)
 800696e:	429c      	cmp	r4, r3
 8006970:	d101      	bne.n	8006976 <_fflush_r+0x62>
 8006972:	68ac      	ldr	r4, [r5, #8]
 8006974:	e7df      	b.n	8006936 <_fflush_r+0x22>
 8006976:	4b04      	ldr	r3, [pc, #16]	; (8006988 <_fflush_r+0x74>)
 8006978:	429c      	cmp	r4, r3
 800697a:	bf08      	it	eq
 800697c:	68ec      	ldreq	r4, [r5, #12]
 800697e:	e7da      	b.n	8006936 <_fflush_r+0x22>
 8006980:	080073a4 	.word	0x080073a4
 8006984:	080073c4 	.word	0x080073c4
 8006988:	08007384 	.word	0x08007384

0800698c <std>:
 800698c:	2300      	movs	r3, #0
 800698e:	b510      	push	{r4, lr}
 8006990:	4604      	mov	r4, r0
 8006992:	e9c0 3300 	strd	r3, r3, [r0]
 8006996:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800699a:	6083      	str	r3, [r0, #8]
 800699c:	8181      	strh	r1, [r0, #12]
 800699e:	6643      	str	r3, [r0, #100]	; 0x64
 80069a0:	81c2      	strh	r2, [r0, #14]
 80069a2:	6183      	str	r3, [r0, #24]
 80069a4:	4619      	mov	r1, r3
 80069a6:	2208      	movs	r2, #8
 80069a8:	305c      	adds	r0, #92	; 0x5c
 80069aa:	f7fb fe33 	bl	8002614 <memset>
 80069ae:	4b05      	ldr	r3, [pc, #20]	; (80069c4 <std+0x38>)
 80069b0:	6224      	str	r4, [r4, #32]
 80069b2:	6263      	str	r3, [r4, #36]	; 0x24
 80069b4:	4b04      	ldr	r3, [pc, #16]	; (80069c8 <std+0x3c>)
 80069b6:	62a3      	str	r3, [r4, #40]	; 0x28
 80069b8:	4b04      	ldr	r3, [pc, #16]	; (80069cc <std+0x40>)
 80069ba:	62e3      	str	r3, [r4, #44]	; 0x2c
 80069bc:	4b04      	ldr	r3, [pc, #16]	; (80069d0 <std+0x44>)
 80069be:	6323      	str	r3, [r4, #48]	; 0x30
 80069c0:	bd10      	pop	{r4, pc}
 80069c2:	bf00      	nop
 80069c4:	08006cdd 	.word	0x08006cdd
 80069c8:	08006cff 	.word	0x08006cff
 80069cc:	08006d37 	.word	0x08006d37
 80069d0:	08006d5b 	.word	0x08006d5b

080069d4 <_cleanup_r>:
 80069d4:	4901      	ldr	r1, [pc, #4]	; (80069dc <_cleanup_r+0x8>)
 80069d6:	f000 b8af 	b.w	8006b38 <_fwalk_reent>
 80069da:	bf00      	nop
 80069dc:	08006915 	.word	0x08006915

080069e0 <__sfmoreglue>:
 80069e0:	b570      	push	{r4, r5, r6, lr}
 80069e2:	2568      	movs	r5, #104	; 0x68
 80069e4:	1e4a      	subs	r2, r1, #1
 80069e6:	4355      	muls	r5, r2
 80069e8:	460e      	mov	r6, r1
 80069ea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80069ee:	f7ff fa83 	bl	8005ef8 <_malloc_r>
 80069f2:	4604      	mov	r4, r0
 80069f4:	b140      	cbz	r0, 8006a08 <__sfmoreglue+0x28>
 80069f6:	2100      	movs	r1, #0
 80069f8:	e9c0 1600 	strd	r1, r6, [r0]
 80069fc:	300c      	adds	r0, #12
 80069fe:	60a0      	str	r0, [r4, #8]
 8006a00:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006a04:	f7fb fe06 	bl	8002614 <memset>
 8006a08:	4620      	mov	r0, r4
 8006a0a:	bd70      	pop	{r4, r5, r6, pc}

08006a0c <__sfp_lock_acquire>:
 8006a0c:	4801      	ldr	r0, [pc, #4]	; (8006a14 <__sfp_lock_acquire+0x8>)
 8006a0e:	f000 b8b3 	b.w	8006b78 <__retarget_lock_acquire_recursive>
 8006a12:	bf00      	nop
 8006a14:	20000274 	.word	0x20000274

08006a18 <__sfp_lock_release>:
 8006a18:	4801      	ldr	r0, [pc, #4]	; (8006a20 <__sfp_lock_release+0x8>)
 8006a1a:	f000 b8ae 	b.w	8006b7a <__retarget_lock_release_recursive>
 8006a1e:	bf00      	nop
 8006a20:	20000274 	.word	0x20000274

08006a24 <__sinit_lock_acquire>:
 8006a24:	4801      	ldr	r0, [pc, #4]	; (8006a2c <__sinit_lock_acquire+0x8>)
 8006a26:	f000 b8a7 	b.w	8006b78 <__retarget_lock_acquire_recursive>
 8006a2a:	bf00      	nop
 8006a2c:	2000026f 	.word	0x2000026f

08006a30 <__sinit_lock_release>:
 8006a30:	4801      	ldr	r0, [pc, #4]	; (8006a38 <__sinit_lock_release+0x8>)
 8006a32:	f000 b8a2 	b.w	8006b7a <__retarget_lock_release_recursive>
 8006a36:	bf00      	nop
 8006a38:	2000026f 	.word	0x2000026f

08006a3c <__sinit>:
 8006a3c:	b510      	push	{r4, lr}
 8006a3e:	4604      	mov	r4, r0
 8006a40:	f7ff fff0 	bl	8006a24 <__sinit_lock_acquire>
 8006a44:	69a3      	ldr	r3, [r4, #24]
 8006a46:	b11b      	cbz	r3, 8006a50 <__sinit+0x14>
 8006a48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006a4c:	f7ff bff0 	b.w	8006a30 <__sinit_lock_release>
 8006a50:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8006a54:	6523      	str	r3, [r4, #80]	; 0x50
 8006a56:	4b13      	ldr	r3, [pc, #76]	; (8006aa4 <__sinit+0x68>)
 8006a58:	4a13      	ldr	r2, [pc, #76]	; (8006aa8 <__sinit+0x6c>)
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	62a2      	str	r2, [r4, #40]	; 0x28
 8006a5e:	42a3      	cmp	r3, r4
 8006a60:	bf08      	it	eq
 8006a62:	2301      	moveq	r3, #1
 8006a64:	4620      	mov	r0, r4
 8006a66:	bf08      	it	eq
 8006a68:	61a3      	streq	r3, [r4, #24]
 8006a6a:	f000 f81f 	bl	8006aac <__sfp>
 8006a6e:	6060      	str	r0, [r4, #4]
 8006a70:	4620      	mov	r0, r4
 8006a72:	f000 f81b 	bl	8006aac <__sfp>
 8006a76:	60a0      	str	r0, [r4, #8]
 8006a78:	4620      	mov	r0, r4
 8006a7a:	f000 f817 	bl	8006aac <__sfp>
 8006a7e:	2200      	movs	r2, #0
 8006a80:	2104      	movs	r1, #4
 8006a82:	60e0      	str	r0, [r4, #12]
 8006a84:	6860      	ldr	r0, [r4, #4]
 8006a86:	f7ff ff81 	bl	800698c <std>
 8006a8a:	2201      	movs	r2, #1
 8006a8c:	2109      	movs	r1, #9
 8006a8e:	68a0      	ldr	r0, [r4, #8]
 8006a90:	f7ff ff7c 	bl	800698c <std>
 8006a94:	2202      	movs	r2, #2
 8006a96:	2112      	movs	r1, #18
 8006a98:	68e0      	ldr	r0, [r4, #12]
 8006a9a:	f7ff ff77 	bl	800698c <std>
 8006a9e:	2301      	movs	r3, #1
 8006aa0:	61a3      	str	r3, [r4, #24]
 8006aa2:	e7d1      	b.n	8006a48 <__sinit+0xc>
 8006aa4:	08006f30 	.word	0x08006f30
 8006aa8:	080069d5 	.word	0x080069d5

08006aac <__sfp>:
 8006aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006aae:	4607      	mov	r7, r0
 8006ab0:	f7ff ffac 	bl	8006a0c <__sfp_lock_acquire>
 8006ab4:	4b1e      	ldr	r3, [pc, #120]	; (8006b30 <__sfp+0x84>)
 8006ab6:	681e      	ldr	r6, [r3, #0]
 8006ab8:	69b3      	ldr	r3, [r6, #24]
 8006aba:	b913      	cbnz	r3, 8006ac2 <__sfp+0x16>
 8006abc:	4630      	mov	r0, r6
 8006abe:	f7ff ffbd 	bl	8006a3c <__sinit>
 8006ac2:	3648      	adds	r6, #72	; 0x48
 8006ac4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006ac8:	3b01      	subs	r3, #1
 8006aca:	d503      	bpl.n	8006ad4 <__sfp+0x28>
 8006acc:	6833      	ldr	r3, [r6, #0]
 8006ace:	b30b      	cbz	r3, 8006b14 <__sfp+0x68>
 8006ad0:	6836      	ldr	r6, [r6, #0]
 8006ad2:	e7f7      	b.n	8006ac4 <__sfp+0x18>
 8006ad4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006ad8:	b9d5      	cbnz	r5, 8006b10 <__sfp+0x64>
 8006ada:	4b16      	ldr	r3, [pc, #88]	; (8006b34 <__sfp+0x88>)
 8006adc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006ae0:	60e3      	str	r3, [r4, #12]
 8006ae2:	6665      	str	r5, [r4, #100]	; 0x64
 8006ae4:	f000 f847 	bl	8006b76 <__retarget_lock_init_recursive>
 8006ae8:	f7ff ff96 	bl	8006a18 <__sfp_lock_release>
 8006aec:	2208      	movs	r2, #8
 8006aee:	4629      	mov	r1, r5
 8006af0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006af4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006af8:	6025      	str	r5, [r4, #0]
 8006afa:	61a5      	str	r5, [r4, #24]
 8006afc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006b00:	f7fb fd88 	bl	8002614 <memset>
 8006b04:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006b08:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006b0c:	4620      	mov	r0, r4
 8006b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b10:	3468      	adds	r4, #104	; 0x68
 8006b12:	e7d9      	b.n	8006ac8 <__sfp+0x1c>
 8006b14:	2104      	movs	r1, #4
 8006b16:	4638      	mov	r0, r7
 8006b18:	f7ff ff62 	bl	80069e0 <__sfmoreglue>
 8006b1c:	4604      	mov	r4, r0
 8006b1e:	6030      	str	r0, [r6, #0]
 8006b20:	2800      	cmp	r0, #0
 8006b22:	d1d5      	bne.n	8006ad0 <__sfp+0x24>
 8006b24:	f7ff ff78 	bl	8006a18 <__sfp_lock_release>
 8006b28:	230c      	movs	r3, #12
 8006b2a:	603b      	str	r3, [r7, #0]
 8006b2c:	e7ee      	b.n	8006b0c <__sfp+0x60>
 8006b2e:	bf00      	nop
 8006b30:	08006f30 	.word	0x08006f30
 8006b34:	ffff0001 	.word	0xffff0001

08006b38 <_fwalk_reent>:
 8006b38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b3c:	4606      	mov	r6, r0
 8006b3e:	4688      	mov	r8, r1
 8006b40:	2700      	movs	r7, #0
 8006b42:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006b46:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006b4a:	f1b9 0901 	subs.w	r9, r9, #1
 8006b4e:	d505      	bpl.n	8006b5c <_fwalk_reent+0x24>
 8006b50:	6824      	ldr	r4, [r4, #0]
 8006b52:	2c00      	cmp	r4, #0
 8006b54:	d1f7      	bne.n	8006b46 <_fwalk_reent+0xe>
 8006b56:	4638      	mov	r0, r7
 8006b58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006b5c:	89ab      	ldrh	r3, [r5, #12]
 8006b5e:	2b01      	cmp	r3, #1
 8006b60:	d907      	bls.n	8006b72 <_fwalk_reent+0x3a>
 8006b62:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006b66:	3301      	adds	r3, #1
 8006b68:	d003      	beq.n	8006b72 <_fwalk_reent+0x3a>
 8006b6a:	4629      	mov	r1, r5
 8006b6c:	4630      	mov	r0, r6
 8006b6e:	47c0      	blx	r8
 8006b70:	4307      	orrs	r7, r0
 8006b72:	3568      	adds	r5, #104	; 0x68
 8006b74:	e7e9      	b.n	8006b4a <_fwalk_reent+0x12>

08006b76 <__retarget_lock_init_recursive>:
 8006b76:	4770      	bx	lr

08006b78 <__retarget_lock_acquire_recursive>:
 8006b78:	4770      	bx	lr

08006b7a <__retarget_lock_release_recursive>:
 8006b7a:	4770      	bx	lr

08006b7c <__swhatbuf_r>:
 8006b7c:	b570      	push	{r4, r5, r6, lr}
 8006b7e:	460e      	mov	r6, r1
 8006b80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006b84:	4614      	mov	r4, r2
 8006b86:	2900      	cmp	r1, #0
 8006b88:	461d      	mov	r5, r3
 8006b8a:	b096      	sub	sp, #88	; 0x58
 8006b8c:	da07      	bge.n	8006b9e <__swhatbuf_r+0x22>
 8006b8e:	2300      	movs	r3, #0
 8006b90:	602b      	str	r3, [r5, #0]
 8006b92:	89b3      	ldrh	r3, [r6, #12]
 8006b94:	061a      	lsls	r2, r3, #24
 8006b96:	d410      	bmi.n	8006bba <__swhatbuf_r+0x3e>
 8006b98:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006b9c:	e00e      	b.n	8006bbc <__swhatbuf_r+0x40>
 8006b9e:	466a      	mov	r2, sp
 8006ba0:	f000 f902 	bl	8006da8 <_fstat_r>
 8006ba4:	2800      	cmp	r0, #0
 8006ba6:	dbf2      	blt.n	8006b8e <__swhatbuf_r+0x12>
 8006ba8:	9a01      	ldr	r2, [sp, #4]
 8006baa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8006bae:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8006bb2:	425a      	negs	r2, r3
 8006bb4:	415a      	adcs	r2, r3
 8006bb6:	602a      	str	r2, [r5, #0]
 8006bb8:	e7ee      	b.n	8006b98 <__swhatbuf_r+0x1c>
 8006bba:	2340      	movs	r3, #64	; 0x40
 8006bbc:	2000      	movs	r0, #0
 8006bbe:	6023      	str	r3, [r4, #0]
 8006bc0:	b016      	add	sp, #88	; 0x58
 8006bc2:	bd70      	pop	{r4, r5, r6, pc}

08006bc4 <__smakebuf_r>:
 8006bc4:	898b      	ldrh	r3, [r1, #12]
 8006bc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006bc8:	079d      	lsls	r5, r3, #30
 8006bca:	4606      	mov	r6, r0
 8006bcc:	460c      	mov	r4, r1
 8006bce:	d507      	bpl.n	8006be0 <__smakebuf_r+0x1c>
 8006bd0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006bd4:	6023      	str	r3, [r4, #0]
 8006bd6:	6123      	str	r3, [r4, #16]
 8006bd8:	2301      	movs	r3, #1
 8006bda:	6163      	str	r3, [r4, #20]
 8006bdc:	b002      	add	sp, #8
 8006bde:	bd70      	pop	{r4, r5, r6, pc}
 8006be0:	466a      	mov	r2, sp
 8006be2:	ab01      	add	r3, sp, #4
 8006be4:	f7ff ffca 	bl	8006b7c <__swhatbuf_r>
 8006be8:	9900      	ldr	r1, [sp, #0]
 8006bea:	4605      	mov	r5, r0
 8006bec:	4630      	mov	r0, r6
 8006bee:	f7ff f983 	bl	8005ef8 <_malloc_r>
 8006bf2:	b948      	cbnz	r0, 8006c08 <__smakebuf_r+0x44>
 8006bf4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006bf8:	059a      	lsls	r2, r3, #22
 8006bfa:	d4ef      	bmi.n	8006bdc <__smakebuf_r+0x18>
 8006bfc:	f023 0303 	bic.w	r3, r3, #3
 8006c00:	f043 0302 	orr.w	r3, r3, #2
 8006c04:	81a3      	strh	r3, [r4, #12]
 8006c06:	e7e3      	b.n	8006bd0 <__smakebuf_r+0xc>
 8006c08:	4b0d      	ldr	r3, [pc, #52]	; (8006c40 <__smakebuf_r+0x7c>)
 8006c0a:	62b3      	str	r3, [r6, #40]	; 0x28
 8006c0c:	89a3      	ldrh	r3, [r4, #12]
 8006c0e:	6020      	str	r0, [r4, #0]
 8006c10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006c14:	81a3      	strh	r3, [r4, #12]
 8006c16:	9b00      	ldr	r3, [sp, #0]
 8006c18:	6120      	str	r0, [r4, #16]
 8006c1a:	6163      	str	r3, [r4, #20]
 8006c1c:	9b01      	ldr	r3, [sp, #4]
 8006c1e:	b15b      	cbz	r3, 8006c38 <__smakebuf_r+0x74>
 8006c20:	4630      	mov	r0, r6
 8006c22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006c26:	f000 f8d1 	bl	8006dcc <_isatty_r>
 8006c2a:	b128      	cbz	r0, 8006c38 <__smakebuf_r+0x74>
 8006c2c:	89a3      	ldrh	r3, [r4, #12]
 8006c2e:	f023 0303 	bic.w	r3, r3, #3
 8006c32:	f043 0301 	orr.w	r3, r3, #1
 8006c36:	81a3      	strh	r3, [r4, #12]
 8006c38:	89a0      	ldrh	r0, [r4, #12]
 8006c3a:	4305      	orrs	r5, r0
 8006c3c:	81a5      	strh	r5, [r4, #12]
 8006c3e:	e7cd      	b.n	8006bdc <__smakebuf_r+0x18>
 8006c40:	080069d5 	.word	0x080069d5

08006c44 <_malloc_usable_size_r>:
 8006c44:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006c48:	1f18      	subs	r0, r3, #4
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	bfbc      	itt	lt
 8006c4e:	580b      	ldrlt	r3, [r1, r0]
 8006c50:	18c0      	addlt	r0, r0, r3
 8006c52:	4770      	bx	lr

08006c54 <_raise_r>:
 8006c54:	291f      	cmp	r1, #31
 8006c56:	b538      	push	{r3, r4, r5, lr}
 8006c58:	4604      	mov	r4, r0
 8006c5a:	460d      	mov	r5, r1
 8006c5c:	d904      	bls.n	8006c68 <_raise_r+0x14>
 8006c5e:	2316      	movs	r3, #22
 8006c60:	6003      	str	r3, [r0, #0]
 8006c62:	f04f 30ff 	mov.w	r0, #4294967295
 8006c66:	bd38      	pop	{r3, r4, r5, pc}
 8006c68:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8006c6a:	b112      	cbz	r2, 8006c72 <_raise_r+0x1e>
 8006c6c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006c70:	b94b      	cbnz	r3, 8006c86 <_raise_r+0x32>
 8006c72:	4620      	mov	r0, r4
 8006c74:	f000 f830 	bl	8006cd8 <_getpid_r>
 8006c78:	462a      	mov	r2, r5
 8006c7a:	4601      	mov	r1, r0
 8006c7c:	4620      	mov	r0, r4
 8006c7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006c82:	f000 b817 	b.w	8006cb4 <_kill_r>
 8006c86:	2b01      	cmp	r3, #1
 8006c88:	d00a      	beq.n	8006ca0 <_raise_r+0x4c>
 8006c8a:	1c59      	adds	r1, r3, #1
 8006c8c:	d103      	bne.n	8006c96 <_raise_r+0x42>
 8006c8e:	2316      	movs	r3, #22
 8006c90:	6003      	str	r3, [r0, #0]
 8006c92:	2001      	movs	r0, #1
 8006c94:	e7e7      	b.n	8006c66 <_raise_r+0x12>
 8006c96:	2400      	movs	r4, #0
 8006c98:	4628      	mov	r0, r5
 8006c9a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006c9e:	4798      	blx	r3
 8006ca0:	2000      	movs	r0, #0
 8006ca2:	e7e0      	b.n	8006c66 <_raise_r+0x12>

08006ca4 <raise>:
 8006ca4:	4b02      	ldr	r3, [pc, #8]	; (8006cb0 <raise+0xc>)
 8006ca6:	4601      	mov	r1, r0
 8006ca8:	6818      	ldr	r0, [r3, #0]
 8006caa:	f7ff bfd3 	b.w	8006c54 <_raise_r>
 8006cae:	bf00      	nop
 8006cb0:	20000010 	.word	0x20000010

08006cb4 <_kill_r>:
 8006cb4:	b538      	push	{r3, r4, r5, lr}
 8006cb6:	2300      	movs	r3, #0
 8006cb8:	4d06      	ldr	r5, [pc, #24]	; (8006cd4 <_kill_r+0x20>)
 8006cba:	4604      	mov	r4, r0
 8006cbc:	4608      	mov	r0, r1
 8006cbe:	4611      	mov	r1, r2
 8006cc0:	602b      	str	r3, [r5, #0]
 8006cc2:	f7fb fbb0 	bl	8002426 <_kill>
 8006cc6:	1c43      	adds	r3, r0, #1
 8006cc8:	d102      	bne.n	8006cd0 <_kill_r+0x1c>
 8006cca:	682b      	ldr	r3, [r5, #0]
 8006ccc:	b103      	cbz	r3, 8006cd0 <_kill_r+0x1c>
 8006cce:	6023      	str	r3, [r4, #0]
 8006cd0:	bd38      	pop	{r3, r4, r5, pc}
 8006cd2:	bf00      	nop
 8006cd4:	20000268 	.word	0x20000268

08006cd8 <_getpid_r>:
 8006cd8:	f7fb bb9e 	b.w	8002418 <_getpid>

08006cdc <__sread>:
 8006cdc:	b510      	push	{r4, lr}
 8006cde:	460c      	mov	r4, r1
 8006ce0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ce4:	f000 f894 	bl	8006e10 <_read_r>
 8006ce8:	2800      	cmp	r0, #0
 8006cea:	bfab      	itete	ge
 8006cec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006cee:	89a3      	ldrhlt	r3, [r4, #12]
 8006cf0:	181b      	addge	r3, r3, r0
 8006cf2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006cf6:	bfac      	ite	ge
 8006cf8:	6563      	strge	r3, [r4, #84]	; 0x54
 8006cfa:	81a3      	strhlt	r3, [r4, #12]
 8006cfc:	bd10      	pop	{r4, pc}

08006cfe <__swrite>:
 8006cfe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d02:	461f      	mov	r7, r3
 8006d04:	898b      	ldrh	r3, [r1, #12]
 8006d06:	4605      	mov	r5, r0
 8006d08:	05db      	lsls	r3, r3, #23
 8006d0a:	460c      	mov	r4, r1
 8006d0c:	4616      	mov	r6, r2
 8006d0e:	d505      	bpl.n	8006d1c <__swrite+0x1e>
 8006d10:	2302      	movs	r3, #2
 8006d12:	2200      	movs	r2, #0
 8006d14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d18:	f000 f868 	bl	8006dec <_lseek_r>
 8006d1c:	89a3      	ldrh	r3, [r4, #12]
 8006d1e:	4632      	mov	r2, r6
 8006d20:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d24:	81a3      	strh	r3, [r4, #12]
 8006d26:	4628      	mov	r0, r5
 8006d28:	463b      	mov	r3, r7
 8006d2a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006d2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006d32:	f000 b817 	b.w	8006d64 <_write_r>

08006d36 <__sseek>:
 8006d36:	b510      	push	{r4, lr}
 8006d38:	460c      	mov	r4, r1
 8006d3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d3e:	f000 f855 	bl	8006dec <_lseek_r>
 8006d42:	1c43      	adds	r3, r0, #1
 8006d44:	89a3      	ldrh	r3, [r4, #12]
 8006d46:	bf15      	itete	ne
 8006d48:	6560      	strne	r0, [r4, #84]	; 0x54
 8006d4a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006d4e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006d52:	81a3      	strheq	r3, [r4, #12]
 8006d54:	bf18      	it	ne
 8006d56:	81a3      	strhne	r3, [r4, #12]
 8006d58:	bd10      	pop	{r4, pc}

08006d5a <__sclose>:
 8006d5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d5e:	f000 b813 	b.w	8006d88 <_close_r>
	...

08006d64 <_write_r>:
 8006d64:	b538      	push	{r3, r4, r5, lr}
 8006d66:	4604      	mov	r4, r0
 8006d68:	4608      	mov	r0, r1
 8006d6a:	4611      	mov	r1, r2
 8006d6c:	2200      	movs	r2, #0
 8006d6e:	4d05      	ldr	r5, [pc, #20]	; (8006d84 <_write_r+0x20>)
 8006d70:	602a      	str	r2, [r5, #0]
 8006d72:	461a      	mov	r2, r3
 8006d74:	f7fb fa8c 	bl	8002290 <_write>
 8006d78:	1c43      	adds	r3, r0, #1
 8006d7a:	d102      	bne.n	8006d82 <_write_r+0x1e>
 8006d7c:	682b      	ldr	r3, [r5, #0]
 8006d7e:	b103      	cbz	r3, 8006d82 <_write_r+0x1e>
 8006d80:	6023      	str	r3, [r4, #0]
 8006d82:	bd38      	pop	{r3, r4, r5, pc}
 8006d84:	20000268 	.word	0x20000268

08006d88 <_close_r>:
 8006d88:	b538      	push	{r3, r4, r5, lr}
 8006d8a:	2300      	movs	r3, #0
 8006d8c:	4d05      	ldr	r5, [pc, #20]	; (8006da4 <_close_r+0x1c>)
 8006d8e:	4604      	mov	r4, r0
 8006d90:	4608      	mov	r0, r1
 8006d92:	602b      	str	r3, [r5, #0]
 8006d94:	f7fb fb7e 	bl	8002494 <_close>
 8006d98:	1c43      	adds	r3, r0, #1
 8006d9a:	d102      	bne.n	8006da2 <_close_r+0x1a>
 8006d9c:	682b      	ldr	r3, [r5, #0]
 8006d9e:	b103      	cbz	r3, 8006da2 <_close_r+0x1a>
 8006da0:	6023      	str	r3, [r4, #0]
 8006da2:	bd38      	pop	{r3, r4, r5, pc}
 8006da4:	20000268 	.word	0x20000268

08006da8 <_fstat_r>:
 8006da8:	b538      	push	{r3, r4, r5, lr}
 8006daa:	2300      	movs	r3, #0
 8006dac:	4d06      	ldr	r5, [pc, #24]	; (8006dc8 <_fstat_r+0x20>)
 8006dae:	4604      	mov	r4, r0
 8006db0:	4608      	mov	r0, r1
 8006db2:	4611      	mov	r1, r2
 8006db4:	602b      	str	r3, [r5, #0]
 8006db6:	f7fb fb78 	bl	80024aa <_fstat>
 8006dba:	1c43      	adds	r3, r0, #1
 8006dbc:	d102      	bne.n	8006dc4 <_fstat_r+0x1c>
 8006dbe:	682b      	ldr	r3, [r5, #0]
 8006dc0:	b103      	cbz	r3, 8006dc4 <_fstat_r+0x1c>
 8006dc2:	6023      	str	r3, [r4, #0]
 8006dc4:	bd38      	pop	{r3, r4, r5, pc}
 8006dc6:	bf00      	nop
 8006dc8:	20000268 	.word	0x20000268

08006dcc <_isatty_r>:
 8006dcc:	b538      	push	{r3, r4, r5, lr}
 8006dce:	2300      	movs	r3, #0
 8006dd0:	4d05      	ldr	r5, [pc, #20]	; (8006de8 <_isatty_r+0x1c>)
 8006dd2:	4604      	mov	r4, r0
 8006dd4:	4608      	mov	r0, r1
 8006dd6:	602b      	str	r3, [r5, #0]
 8006dd8:	f7fb fb76 	bl	80024c8 <_isatty>
 8006ddc:	1c43      	adds	r3, r0, #1
 8006dde:	d102      	bne.n	8006de6 <_isatty_r+0x1a>
 8006de0:	682b      	ldr	r3, [r5, #0]
 8006de2:	b103      	cbz	r3, 8006de6 <_isatty_r+0x1a>
 8006de4:	6023      	str	r3, [r4, #0]
 8006de6:	bd38      	pop	{r3, r4, r5, pc}
 8006de8:	20000268 	.word	0x20000268

08006dec <_lseek_r>:
 8006dec:	b538      	push	{r3, r4, r5, lr}
 8006dee:	4604      	mov	r4, r0
 8006df0:	4608      	mov	r0, r1
 8006df2:	4611      	mov	r1, r2
 8006df4:	2200      	movs	r2, #0
 8006df6:	4d05      	ldr	r5, [pc, #20]	; (8006e0c <_lseek_r+0x20>)
 8006df8:	602a      	str	r2, [r5, #0]
 8006dfa:	461a      	mov	r2, r3
 8006dfc:	f7fb fb6e 	bl	80024dc <_lseek>
 8006e00:	1c43      	adds	r3, r0, #1
 8006e02:	d102      	bne.n	8006e0a <_lseek_r+0x1e>
 8006e04:	682b      	ldr	r3, [r5, #0]
 8006e06:	b103      	cbz	r3, 8006e0a <_lseek_r+0x1e>
 8006e08:	6023      	str	r3, [r4, #0]
 8006e0a:	bd38      	pop	{r3, r4, r5, pc}
 8006e0c:	20000268 	.word	0x20000268

08006e10 <_read_r>:
 8006e10:	b538      	push	{r3, r4, r5, lr}
 8006e12:	4604      	mov	r4, r0
 8006e14:	4608      	mov	r0, r1
 8006e16:	4611      	mov	r1, r2
 8006e18:	2200      	movs	r2, #0
 8006e1a:	4d05      	ldr	r5, [pc, #20]	; (8006e30 <_read_r+0x20>)
 8006e1c:	602a      	str	r2, [r5, #0]
 8006e1e:	461a      	mov	r2, r3
 8006e20:	f7fb fb1b 	bl	800245a <_read>
 8006e24:	1c43      	adds	r3, r0, #1
 8006e26:	d102      	bne.n	8006e2e <_read_r+0x1e>
 8006e28:	682b      	ldr	r3, [r5, #0]
 8006e2a:	b103      	cbz	r3, 8006e2e <_read_r+0x1e>
 8006e2c:	6023      	str	r3, [r4, #0]
 8006e2e:	bd38      	pop	{r3, r4, r5, pc}
 8006e30:	20000268 	.word	0x20000268

08006e34 <_init>:
 8006e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e36:	bf00      	nop
 8006e38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e3a:	bc08      	pop	{r3}
 8006e3c:	469e      	mov	lr, r3
 8006e3e:	4770      	bx	lr

08006e40 <_fini>:
 8006e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e42:	bf00      	nop
 8006e44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e46:	bc08      	pop	{r3}
 8006e48:	469e      	mov	lr, r3
 8006e4a:	4770      	bx	lr
